diff --git a/Kconfig b/Kconfig
index 1263d0b..a759e4d 100644
--- a/Kconfig
+++ b/Kconfig
@@ -291,33 +291,6 @@ config FIT_IMAGE_POST_PROCESS
 	  injected into the FIT creation (i.e. the blobs would have been pre-
 	  processed before being added to the FIT image).
 
-config SPL_DFU_SUPPORT
-	bool "Enable SPL with DFU to load binaries to memory device"
-	depends on USB
-	help
-	  Currently the SPL does not have capability to load the
-	  binaries or boot images to boot devices like ram,eMMC,SPI,etc.
-	  This feature enables the DFU (Device Firmware Upgarde) in SPL with
-	  RAM memory device support. The ROM code will load and execute
-	  the SPL built with dfu. The user can load binaries (u-boot/kernel) to
-	  selected device partition from host-pc using dfu-utils.
-		This feature will be useful to flash the binaries to factory
-	  or bare-metal boards using USB interface.
-
-choice
-	bool "DFU device selection"
-	depends on SPL_DFU_SUPPORT
-
-config SPL_DFU_RAM
-	bool "RAM device"
-	depends on SPL_DFU_SUPPORT
-	help
-	 select RAM/DDR memory device for loading binary images
-	 (u-boot/kernel) to the selected device partition using
-	 DFU and execute the u-boot/kernel from RAM.
-
-endchoice
-
 config SYS_CLK_FREQ
 	depends on ARC || ARCH_SUNXI
 	int "CPU clock frequency"
diff --git a/Makefile b/Makefile
index 8ca1db5..e12c1cf 100644
--- a/Makefile
+++ b/Makefile
@@ -852,6 +852,9 @@ endif
 %.vyb: %.imx
 	$(Q)$(MAKE) $(build)=arch/arm/cpu/armv7/vf610 $@
 
+u-boot-nand.imx: u-boot.bin
+	$(Q)$(MAKE) $(build)=arch/arm/imx-common $@
+
 quiet_cmd_copy = COPY    $@
       cmd_copy = cp $< $@
 
diff --git a/arch/arm/config.mk b/arch/arm/config.mk
index 542b897..a973a0e 100644
--- a/arch/arm/config.mk
+++ b/arch/arm/config.mk
@@ -138,13 +138,17 @@ ifndef CONFIG_SPL_BUILD
 ALL-y += SPL
 endif
 else
+ifeq ($(CONFIG_IMX_NAND),y)
+ALL-y += u-boot-nand.imx
+else
 ifeq ($(CONFIG_OF_SEPARATE),y)
 ALL-y += u-boot-dtb.imx
 else
 ALL-y += u-boot.imx
 endif
 endif
-ifneq ($(CONFIG_VF610),)
+endif
+ifneq ($(CONFIG_TARGET_PCM052),)
 ALL-y += u-boot.vyb
 endif
 endif
diff --git a/arch/arm/cpu/armv7/mx6/Kconfig b/arch/arm/cpu/armv7/mx6/Kconfig
index 762a581..bbeec37 100644
--- a/arch/arm/cpu/armv7/mx6/Kconfig
+++ b/arch/arm/cpu/armv7/mx6/Kconfig
@@ -43,6 +43,13 @@ config TARGET_ADVANTECH_DMS_BA16
 	bool "Advantech dms-ba16"
 	select MX6Q
 
+config TARGET_APALIS_IMX6
+	bool "Toradex Apalis iMX6 board"
+	select SUPPORT_SPL
+	select DM
+	select DM_SERIAL
+	select DM_THERMAL
+
 config TARGET_ARISTAINETOS
 	bool "aristainetos"
 
@@ -65,6 +72,13 @@ config TARGET_CM_FX6
 	select DM_SERIAL
 	select DM_GPIO
 
+config TARGET_COLIBRI_IMX6
+	bool "Toradex Colibri iMX6 board"
+	select SUPPORT_SPL
+	select DM
+	select DM_SERIAL
+	select DM_THERMAL
+
 config TARGET_EMBESTMX6BOARDS
 	bool "embestmx6boards"
 
@@ -252,6 +266,8 @@ source "board/solidrun/mx6cuboxi/Kconfig"
 source "board/technexion/pico-imx6ul/Kconfig"
 source "board/tbs/tbs2910/Kconfig"
 source "board/tqc/tqma6/Kconfig"
+source "board/toradex/apalis_imx6/Kconfig"
+source "board/toradex/colibri_imx6/Kconfig"
 source "board/udoo/Kconfig"
 source "board/wandboard/Kconfig"
 source "board/warp/Kconfig"
diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 836a8c4..b698421 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -55,6 +55,7 @@ dtb-$(CONFIG_TEGRA) += tegra20-harmony.dtb \
 	tegra30-colibri.dtb \
 	tegra30-tec-ng.dtb \
 	tegra114-dalmore.dtb \
+	tegra124-apalis.dtb \
 	tegra124-jetson-tk1.dtb \
 	tegra124-nyan-big.dtb \
 	tegra124-cei-tk1-som.dtb \
diff --git a/arch/arm/dts/tegra124-apalis.dts b/arch/arm/dts/tegra124-apalis.dts
new file mode 100644
index 0000000..3853a28
--- /dev/null
+++ b/arch/arm/dts/tegra124-apalis.dts
@@ -0,0 +1,2203 @@
+/*
+ * Copyright 2016 Toradex AG
+ *
+ * This file is dual-licensed: you can use it either under the terms
+ * of the GPL or the X11 license, at your option. Note that this dual
+ * licensing only applies to this file, and not this project as a
+ * whole.
+ *
+ *  a) This file is free software; you can redistribute it and/or
+ *     modify it under the terms of the GNU General Public License
+ *     version 2 as published by the Free Software Foundation.
+ *
+ *     This file is distributed in the hope that it will be useful
+ *     but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *     GNU General Public License for more details.
+ *
+ * Or, alternatively
+ *
+ *  b) Permission is hereby granted, free of charge, to any person
+ *     obtaining a copy of this software and associated documentation
+ *     files (the "Software"), to deal in the Software without
+ *     restriction, including without limitation the rights to use
+ *     copy, modify, merge, publish, distribute, sublicense, and/or
+ *     sell copies of the Software, and to permit persons to whom the
+ *     Software is furnished to do so, subject to the following
+ *     conditions:
+ *
+ *     The above copyright notice and this permission notice shall be
+ *     included in all copies or substantial portions of the Software.
+ *
+ *     THE SOFTWARE IS PROVIDED , WITHOUT WARRANTY OF ANY KIND
+ *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+ *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY
+ *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ *     OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+/dts-v1/;
+
+#include <dt-bindings/input/input.h>
+#include "tegra124.dtsi"
+
+/ {
+	model = "Toradex Apalis TK1 on Apalis Evaluation Board";
+	compatible = "toradex,apalis-tk1-eval", "toradex,apalis-tk1",
+		     "nvidia,tegra124";
+
+	aliases {
+		i2c0 = "/i2c@7000d000";
+		i2c1 = "/i2c@7000c000";
+		i2c2 = "/i2c@7000c400";
+		i2c3 = "/i2c@7000c500";
+		mmc0 = "/sdhci@700b0600";
+		mmc1 = "/sdhci@700b0000";
+		mmc2 = "/sdhci@700b0400";
+		rtc0 = "/i2c@7000c000/rtc@68";
+		rtc1 = "/i2c@7000d000/pmic@40";
+		rtc2 = "/rtc@7000e000";
+		serial0 = &uarta;
+		serial1 = &uartb;
+		serial2 = &uartc;
+		serial3 = &uartd;
+		usb0 = "/usb@7d000000";
+		usb1 = "/usb@7d004000";
+		usb2 = "/usb@7d008000";
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	memory {
+		reg = <0x0 0x80000000 0x0 0x80000000>;
+	};
+
+	pcie-controller@01003000 {
+		status = "okay";
+		avddio-pex-supply = <&vdd_1v05>;
+		avdd-pex-pll-supply = <&vdd_1v05>;
+		avdd-pll-erefe-supply = <&avdd_1v05>;
+		dvddio-pex-supply = <&vdd_1v05>;
+		hvdd-pex-pll-e-supply = <&reg_3v3>;
+		hvdd-pex-supply = <&reg_3v3>;
+		vddio-pex-ctl-supply = <&reg_3v3>;
+
+		/* Apalis PCIe (additional lane Apalis type specific) */
+		pci@1,0 {
+			/* PCIE1_RX/TX and TS_DIFF1/2 left disabled */
+		};
+
+		/* I210 Gigabit Ethernet Controller (On-module) */
+		pci@2,0 {
+			status = "okay";
+		};
+	};
+
+	host1x@50000000 {
+		hdmi@54280000 {
+			pll-supply = <&reg_1v05_avdd_hdmi_pll>;
+			vdd-supply = <&reg_3v3_avdd_hdmi>;
+			nvidia,ddc-i2c-bus = <&hdmi_ddc>;
+			nvidia,hpd-gpio =
+				<&gpio TEGRA_GPIO(N, 7) GPIO_ACTIVE_HIGH>;
+			status = "okay";
+		};
+	};
+
+	gpu@0,57000000 {
+		/*
+		 * Node left disabled on purpose - the bootloader will enable
+		 * it after having set the VPR up
+		 */
+		vdd-supply = <&vdd_gpu>;
+	};
+
+	pinmux: pinmux@70000868 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&state_default>;
+
+		state_default: pinmux {
+			/* Analogue Audio (On-module) */
+			dap3_fs_pp0 {
+				nvidia,pins = "dap3_fs_pp0";
+				nvidia,function = "i2s2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dap3_din_pp1 {
+				nvidia,pins = "dap3_din_pp1";
+				nvidia,function = "i2s2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			dap3_dout_pp2 {
+				nvidia,pins = "dap3_dout_pp2";
+				nvidia,function = "i2s2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dap3_sclk_pp3 {
+				nvidia,pins = "dap3_sclk_pp3";
+				nvidia,function = "i2s2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dap_mclk1_pw4 {
+				nvidia,pins = "dap_mclk1_pw4";
+				nvidia,function = "extperiph1";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis BKL1_ON */
+			pbb5 {
+				nvidia,pins = "pbb5";
+				nvidia,function = "vgp5";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis BKL1_PWM */
+			pu6 {
+				nvidia,pins = "pu6";
+				nvidia,function = "pwm3";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis CAM1_MCLK */
+			cam_mclk_pcc0 {
+				nvidia,pins = "cam_mclk_pcc0";
+				nvidia,function = "vi_alt3";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis Digital Audio */
+			dap2_fs_pa2 {
+				nvidia,pins = "dap2_fs_pa2";
+				nvidia,function = "hda";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			dap2_sclk_pa3 {
+				nvidia,pins = "dap2_sclk_pa3";
+				nvidia,function = "hda";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			dap2_din_pa4 {
+				nvidia,pins = "dap2_din_pa4";
+				nvidia,function = "hda";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			dap2_dout_pa5 {
+				nvidia,pins = "dap2_dout_pa5";
+				nvidia,function = "hda";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pbb3 { /* DAP1_RESET */
+				nvidia,pins = "pbb3";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			clk3_out_pee0 {
+				nvidia,pins = "clk3_out_pee0";
+				nvidia,function = "extperiph3";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis GPIO */
+			ddc_scl_pv4 {
+				nvidia,pins = "ddc_scl_pv4";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			ddc_sda_pv5 {
+				nvidia,pins = "ddc_sda_pv5";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			pex_l0_rst_n_pdd1 {
+				nvidia,pins = "pex_l0_rst_n_pdd1";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			pex_l0_clkreq_n_pdd2 {
+				nvidia,pins = "pex_l0_clkreq_n_pdd2";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			pex_l1_rst_n_pdd5 {
+				nvidia,pins = "pex_l1_rst_n_pdd5";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			pex_l1_clkreq_n_pdd6 {
+				nvidia,pins = "pex_l1_clkreq_n_pdd6";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			dp_hpd_pff0 {
+				nvidia,pins = "dp_hpd_pff0";
+				nvidia,function = "dp";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			pff2 {
+				nvidia,pins = "pff2";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			owr { /* PEX_L1_CLKREQ_N multiplexed GPIO6 */
+				nvidia,pins = "owr";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+				nvidia,rcv-sel = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis HDMI1_CEC */
+			hdmi_cec_pee3 {
+				nvidia,pins = "hdmi_cec_pee3";
+				nvidia,function = "cec";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+				nvidia,open-drain = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis HDMI1_HPD */
+			hdmi_int_pn7 {
+				nvidia,pins = "hdmi_int_pn7";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+				nvidia,rcv-sel = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis I2C1 */
+			gen1_i2c_scl_pc4 {
+				nvidia,pins = "gen1_i2c_scl_pc4";
+				nvidia,function = "i2c1";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+				nvidia,open-drain = <TEGRA_PIN_ENABLE>;
+			};
+			gen1_i2c_sda_pc5 {
+				nvidia,pins = "gen1_i2c_sda_pc5";
+				nvidia,function = "i2c1";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+				nvidia,open-drain = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* Apalis I2C2 (DDC) */
+			gen2_i2c_scl_pt5 {
+				nvidia,pins = "gen2_i2c_scl_pt5";
+				nvidia,function = "i2c2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+				nvidia,open-drain = <TEGRA_PIN_ENABLE>;
+			};
+			gen2_i2c_sda_pt6 {
+				nvidia,pins = "gen2_i2c_sda_pt6";
+				nvidia,function = "i2c2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+				nvidia,open-drain = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* Apalis I2C3 (CAM) */
+			cam_i2c_scl_pbb1 {
+				nvidia,pins = "cam_i2c_scl_pbb1";
+				nvidia,function = "i2c3";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+				nvidia,open-drain = <TEGRA_PIN_ENABLE>;
+			};
+			cam_i2c_sda_pbb2 {
+				nvidia,pins = "cam_i2c_sda_pbb2";
+				nvidia,function = "i2c3";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+				nvidia,open-drain = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* Apalis MMC1 */
+			sdmmc1_cd_n_pv3 { /* CD# GPIO */
+				nvidia,pins = "sdmmc1_wp_n_pv3";
+				nvidia,function = "sdmmc1";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			clk2_out_pw5 { /* D5 GPIO */
+				nvidia,pins = "clk2_out_pw5";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc1_dat3_py4 {
+				nvidia,pins = "sdmmc1_dat3_py4";
+				nvidia,function = "sdmmc1";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc1_dat2_py5 {
+				nvidia,pins = "sdmmc1_dat2_py5";
+				nvidia,function = "sdmmc1";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc1_dat1_py6 {
+				nvidia,pins = "sdmmc1_dat1_py6";
+				nvidia,function = "sdmmc1";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc1_dat0_py7 {
+				nvidia,pins = "sdmmc1_dat0_py7";
+				nvidia,function = "sdmmc1";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc1_clk_pz0 {
+				nvidia,pins = "sdmmc1_clk_pz0";
+				nvidia,function = "sdmmc1";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc1_cmd_pz1 {
+				nvidia,pins = "sdmmc1_cmd_pz1";
+				nvidia,function = "sdmmc1";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			clk2_req_pcc5 { /* D4 GPIO */
+				nvidia,pins = "clk2_req_pcc5";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc3_clk_lb_in_pee5 { /* D6 GPIO */
+				nvidia,pins = "sdmmc3_clk_lb_in_pee5";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			usb_vbus_en2_pff1 { /* D7 GPIO */
+				nvidia,pins = "usb_vbus_en2_pff1";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* Apalis PWM */
+			ph0 {
+				nvidia,pins = "ph0";
+				nvidia,function = "pwm0";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ph1 {
+				nvidia,pins = "ph1";
+				nvidia,function = "pwm1";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ph2 {
+				nvidia,pins = "ph2";
+				nvidia,function = "pwm2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			/* PWM3 active on pu6 being Apalis BKL1_PWM */
+			ph3 {
+				nvidia,pins = "ph3";
+				nvidia,function = "gmi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis SATA1_ACT# */
+			dap1_dout_pn2 {
+				nvidia,pins = "dap1_dout_pn2";
+				nvidia,function = "gmi";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis SD1 */
+			sdmmc3_clk_pa6 {
+				nvidia,pins = "sdmmc3_clk_pa6";
+				nvidia,function = "sdmmc3";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc3_cmd_pa7 {
+				nvidia,pins = "sdmmc3_cmd_pa7";
+				nvidia,function = "sdmmc3";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc3_dat3_pb4 {
+				nvidia,pins = "sdmmc3_dat3_pb4";
+				nvidia,function = "sdmmc3";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc3_dat2_pb5 {
+				nvidia,pins = "sdmmc3_dat2_pb5";
+				nvidia,function = "sdmmc3";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc3_dat1_pb6 {
+				nvidia,pins = "sdmmc3_dat1_pb6";
+				nvidia,function = "sdmmc3";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc3_dat0_pb7 {
+				nvidia,pins = "sdmmc3_dat0_pb7";
+				nvidia,function = "sdmmc3";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc3_cd_n_pv2 { /* CD# GPIO */
+				nvidia,pins = "sdmmc3_cd_n_pv2";
+				nvidia,function = "rsvd3";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* Apalis SPDIF */
+			spdif_out_pk5 {
+				nvidia,pins = "spdif_out_pk5";
+				nvidia,function = "spdif";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			spdif_in_pk6 {
+				nvidia,pins = "spdif_in_pk6";
+				nvidia,function = "spdif";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* Apalis SPI1 */
+			ulpi_clk_py0 {
+				nvidia,pins = "ulpi_clk_py0";
+				nvidia,function = "spi1";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ulpi_dir_py1 {
+				nvidia,pins = "ulpi_dir_py1";
+				nvidia,function = "spi1";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			ulpi_nxt_py2 {
+				nvidia,pins = "ulpi_nxt_py2";
+				nvidia,function = "spi1";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ulpi_stp_py3 {
+				nvidia,pins = "ulpi_stp_py3";
+				nvidia,function = "spi1";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis SPI2 */
+			pg5 {
+				nvidia,pins = "pg5";
+				nvidia,function = "spi4";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pg6 {
+				nvidia,pins = "pg6";
+				nvidia,function = "spi4";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pg7 {
+				nvidia,pins = "pg7";
+				nvidia,function = "spi4";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			pi3 {
+				nvidia,pins = "pi3";
+				nvidia,function = "spi4";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis UART1 */
+			pb1 { /* DCD GPIO */
+				nvidia,pins = "pb1";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			pk7 { /* RI GPIO */
+				nvidia,pins = "pk7";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			uart1_txd_pu0 {
+				nvidia,pins = "pu0";
+				nvidia,function = "uarta";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			uart1_rxd_pu1 {
+				nvidia,pins = "pu1";
+				nvidia,function = "uarta";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			uart1_cts_n_pu2 {
+				nvidia,pins = "pu2";
+				nvidia,function = "uarta";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			uart1_rts_n_pu3 {
+				nvidia,pins = "pu3";
+				nvidia,function = "uarta";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			uart3_cts_n_pa1 { /* DSR GPIO */
+				nvidia,pins = "uart3_cts_n_pa1";
+				nvidia,function = "gmi";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			uart3_rts_n_pc0 { /* DTR GPIO */
+				nvidia,pins = "uart3_rts_n_pc0";
+				nvidia,function = "gmi";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis UART2 */
+			uart2_txd_pc2 {
+				nvidia,pins = "uart2_txd_pc2";
+				nvidia,function = "irda";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			uart2_rxd_pc3 {
+				nvidia,pins = "uart2_rxd_pc3";
+				nvidia,function = "irda";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			uart2_cts_n_pj5 {
+				nvidia,pins = "uart2_cts_n_pj5";
+				nvidia,function = "uartb";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			uart2_rts_n_pj6 {
+				nvidia,pins = "uart2_rts_n_pj6";
+				nvidia,function = "uartb";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis UART3 */
+			uart3_txd_pw6 {
+				nvidia,pins = "uart3_txd_pw6";
+				nvidia,function = "uartc";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			uart3_rxd_pw7 {
+				nvidia,pins = "uart3_rxd_pw7";
+				nvidia,function = "uartc";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* Apalis UART4 */
+			uart4_rxd_pb0 {
+				nvidia,pins = "pb0";
+				nvidia,function = "uartd";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			uart4_txd_pj7 {
+				nvidia,pins = "pj7";
+				nvidia,function = "uartd";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis USBH_EN */
+			usb_vbus_en1_pn5 {
+				nvidia,pins = "usb_vbus_en1_pn5";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+				nvidia,open-drain = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis USBH_OC# */
+			pbb0 {
+				nvidia,pins = "pbb0";
+				nvidia,function = "vgp6";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* Apalis USBO1_EN */
+			usb_vbus_en0_pn4 {
+				nvidia,pins = "usb_vbus_en0_pn4";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+				nvidia,open-drain = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Apalis USBO1_OC# */
+			pbb4 {
+				nvidia,pins = "pbb4";
+				nvidia,function = "vgp4";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* Apalis WAKE1_MICO */
+			pex_wake_n_pdd3 {
+				nvidia,pins = "pex_wake_n_pdd3";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* CORE_PWR_REQ */
+			core_pwr_req {
+				nvidia,pins = "core_pwr_req";
+				nvidia,function = "pwron";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* CPU_PWR_REQ */
+			cpu_pwr_req {
+				nvidia,pins = "cpu_pwr_req";
+				nvidia,function = "cpu";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* DVFS */
+			dvfs_pwm_px0 {
+				nvidia,pins = "dvfs_pwm_px0";
+				nvidia,function = "cldvfs";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dvfs_clk_px2 {
+				nvidia,pins = "dvfs_clk_px2";
+				nvidia,function = "cldvfs";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* eMMC */
+			sdmmc4_dat0_paa0 {
+				nvidia,pins = "sdmmc4_dat0_paa0";
+				nvidia,function = "sdmmc4";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc4_dat1_paa1 {
+				nvidia,pins = "sdmmc4_dat1_paa1";
+				nvidia,function = "sdmmc4";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc4_dat2_paa2 {
+				nvidia,pins = "sdmmc4_dat2_paa2";
+				nvidia,function = "sdmmc4";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc4_dat3_paa3 {
+				nvidia,pins = "sdmmc4_dat3_paa3";
+				nvidia,function = "sdmmc4";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc4_dat4_paa4 {
+				nvidia,pins = "sdmmc4_dat4_paa4";
+				nvidia,function = "sdmmc4";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc4_dat5_paa5 {
+				nvidia,pins = "sdmmc4_dat5_paa5";
+				nvidia,function = "sdmmc4";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc4_dat6_paa6 {
+				nvidia,pins = "sdmmc4_dat6_paa6";
+				nvidia,function = "sdmmc4";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc4_dat7_paa7 {
+				nvidia,pins = "sdmmc4_dat7_paa7";
+				nvidia,function = "sdmmc4";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc4_clk_pcc4 {
+				nvidia,pins = "sdmmc4_clk_pcc4";
+				nvidia,function = "sdmmc4";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			sdmmc4_cmd_pt7 {
+				nvidia,pins = "sdmmc4_cmd_pt7";
+				nvidia,function = "sdmmc4";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* JTAG_RTCK */
+			jtag_rtck {
+				nvidia,pins = "jtag_rtck";
+				nvidia,function = "rtck";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* LAN_DEV_OFF# */
+			ulpi_data5_po6 {
+				nvidia,pins = "ulpi_data5_po6";
+				nvidia,function = "ulpi";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* LAN_RESET# */
+			kb_row10_ps2 {
+				nvidia,pins = "kb_row10_ps2";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* LAN_WAKE# */
+			ulpi_data4_po5 {
+				nvidia,pins = "ulpi_data4_po5";
+				nvidia,function = "ulpi";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* MCU_INT1# */
+			pk2 {
+				nvidia,pins = "pk2";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* MCU_INT2# */
+			pj2 {
+				nvidia,pins = "pj2";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* MCU_INT3# */
+			pi5 {
+				nvidia,pins = "pi5";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* MCU_INT4# */
+			pj0 {
+				nvidia,pins = "pj0";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* MCU_RESET */
+			pbb6 {
+				nvidia,pins = "pbb6";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* MCU SPI */
+			gpio_x4_aud_px4 {
+				nvidia,pins = "gpio_x4_aud_px4";
+				nvidia,function = "spi2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			gpio_x5_aud_px5 {
+				nvidia,pins = "gpio_x5_aud_px5";
+				nvidia,function = "spi2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			gpio_x6_aud_px6 { /* MCU_CS */
+				nvidia,pins = "gpio_x6_aud_px6";
+				nvidia,function = "spi2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			gpio_x7_aud_px7 {
+				nvidia,pins = "gpio_x7_aud_px7";
+				nvidia,function = "spi2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+			gpio_w2_aud_pw2 { /* MCU_CSEZP */
+				nvidia,pins = "gpio_w2_aud_pw2";
+				nvidia,function = "spi2";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* PMIC_CLK_32K */
+			clk_32k_in {
+				nvidia,pins = "clk_32k_in";
+				nvidia,function = "clk";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* PMIC_CPU_OC_INT */
+			clk_32k_out_pa0 {
+				nvidia,pins = "clk_32k_out_pa0";
+				nvidia,function = "soc";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* PWR_I2C */
+			pwr_i2c_scl_pz6 {
+				nvidia,pins = "pwr_i2c_scl_pz6";
+				nvidia,function = "i2cpwr";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+				nvidia,open-drain = <TEGRA_PIN_ENABLE>;
+			};
+			pwr_i2c_sda_pz7 {
+				nvidia,pins = "pwr_i2c_sda_pz7";
+				nvidia,function = "i2cpwr";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+				nvidia,open-drain = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* PWR_INT_N */
+			pwr_int_n {
+				nvidia,pins = "pwr_int_n";
+				nvidia,function = "pmi";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* RESET_MOCI_CTRL */
+			pu4 {
+				nvidia,pins = "pu4";
+				nvidia,function = "gmi";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* RESET_OUT_N */
+			reset_out_n {
+				nvidia,pins = "reset_out_n";
+				nvidia,function = "reset_out_n";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* SHIFT_CTRL_DIR_IN */
+			kb_row0_pr0 {
+				nvidia,pins = "kb_row0_pr0";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row1_pr1 {
+				nvidia,pins = "kb_row1_pr1";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* Configure level-shifter as output for HDA */
+			kb_row11_ps3 {
+				nvidia,pins = "kb_row11_ps3";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* SHIFT_CTRL_DIR_OUT */
+			kb_col5_pq5 {
+				nvidia,pins = "kb_col5_pq5";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_col6_pq6 {
+				nvidia,pins = "kb_col6_pq6";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_col7_pq7 {
+				nvidia,pins = "kb_col7_pq7";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* SHIFT_CTRL_OE */
+			kb_col0_pq0 {
+				nvidia,pins = "kb_col0_pq0";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_col1_pq1 {
+				nvidia,pins = "kb_col1_pq1";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_col2_pq2 {
+				nvidia,pins = "kb_col2_pq2";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_col4_pq4 {
+				nvidia,pins = "kb_col4_pq4";
+				nvidia,function = "kbc";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row2_pr2 {
+				nvidia,pins = "kb_row2_pr2";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+
+			/* GPIO_PI6 aka TMP451 ALERT#/THERM2# */
+			pi6 {
+				nvidia,pins = "pi6";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_UP>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			/* TOUCH_INT */
+			gpio_w3_aud_pw3 {
+				nvidia,pins = "gpio_w3_aud_pw3";
+				nvidia,function = "spi6";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+
+			pc7 { /* NC */
+				nvidia,pins = "pc7";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pg0 { /* NC */
+				nvidia,pins = "pg0";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pg1 { /* NC */
+				nvidia,pins = "pg1";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pg2 { /* NC */
+				nvidia,pins = "pg2";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pg3 { /* NC */
+				nvidia,pins = "pg3";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pg4 { /* NC */
+				nvidia,pins = "pg4";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ph4 { /* NC */
+				nvidia,pins = "ph4";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ph5 { /* NC */
+				nvidia,pins = "ph5";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ph6 { /* NC */
+				nvidia,pins = "ph6";
+				nvidia,function = "gmi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ph7 { /* NC */
+				nvidia,pins = "ph7";
+				nvidia,function = "gmi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pi0 { /* NC */
+				nvidia,pins = "pi0";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pi1 { /* NC */
+				nvidia,pins = "pi1";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pi2 { /* NC */
+				nvidia,pins = "pi2";
+				nvidia,function = "rsvd4";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pi4 { /* NC */
+				nvidia,pins = "pi4";
+				nvidia,function = "gmi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pi7 { /* NC */
+				nvidia,pins = "pi7";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pk0 { /* NC */
+				nvidia,pins = "pk0";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pk1 { /* NC */
+				nvidia,pins = "pk1";
+				nvidia,function = "rsvd4";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pk3 { /* NC */
+				nvidia,pins = "pk3";
+				nvidia,function = "gmi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pk4 { /* NC */
+				nvidia,pins = "pk4";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dap1_fs_pn0 { /* NC */
+				nvidia,pins = "dap1_fs_pn0";
+				nvidia,function = "rsvd4";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dap1_din_pn1 { /* NC */
+				nvidia,pins = "dap1_din_pn1";
+				nvidia,function = "rsvd4";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dap1_sclk_pn3 { /* NC */
+				nvidia,pins = "dap1_sclk_pn3";
+				nvidia,function = "rsvd4";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ulpi_data7_po0 { /* NC */
+				nvidia,pins = "ulpi_data7_po0";
+				nvidia,function = "ulpi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ulpi_data0_po1 { /* NC */
+				nvidia,pins = "ulpi_data0_po1";
+				nvidia,function = "ulpi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ulpi_data1_po2 { /* NC */
+				nvidia,pins = "ulpi_data1_po2";
+				nvidia,function = "ulpi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ulpi_data2_po3 { /* NC */
+				nvidia,pins = "ulpi_data2_po3";
+				nvidia,function = "ulpi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ulpi_data3_po4 { /* NC */
+				nvidia,pins = "ulpi_data3_po4";
+				nvidia,function = "ulpi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			ulpi_data6_po7 { /* NC */
+				nvidia,pins = "ulpi_data6_po7";
+				nvidia,function = "ulpi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dap4_fs_pp4 { /* NC */
+				nvidia,pins = "dap4_fs_pp4";
+				nvidia,function = "rsvd4";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dap4_din_pp5 { /* NC */
+				nvidia,pins = "dap4_din_pp5";
+				nvidia,function = "rsvd3";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dap4_dout_pp6 { /* NC */
+				nvidia,pins = "dap4_dout_pp6";
+				nvidia,function = "rsvd4";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dap4_sclk_pp7 { /* NC */
+				nvidia,pins = "dap4_sclk_pp7";
+				nvidia,function = "rsvd3";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_col3_pq3 { /* NC */
+				nvidia,pins = "kb_col3_pq3";
+				nvidia,function = "kbc";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row3_pr3 { /* NC */
+				nvidia,pins = "kb_row3_pr3";
+				nvidia,function = "kbc";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row4_pr4 { /* NC */
+				nvidia,pins = "kb_row4_pr4";
+				nvidia,function = "rsvd3";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row5_pr5 { /* NC */
+				nvidia,pins = "kb_row5_pr5";
+				nvidia,function = "rsvd3";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row6_pr6 { /* NC */
+				nvidia,pins = "kb_row6_pr6";
+				nvidia,function = "kbc";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row7_pr7 { /* NC */
+				nvidia,pins = "kb_row7_pr7";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row8_ps0 { /* NC */
+				nvidia,pins = "kb_row8_ps0";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row9_ps1 { /* NC */
+				nvidia,pins = "kb_row9_ps1";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row12_ps4 { /* NC */
+				nvidia,pins = "kb_row12_ps4";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row13_ps5 { /* NC */
+				nvidia,pins = "kb_row13_ps5";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row14_ps6 { /* NC */
+				nvidia,pins = "kb_row14_ps6";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row15_ps7 { /* NC */
+				nvidia,pins = "kb_row15_ps7";
+				nvidia,function = "rsvd3";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row16_pt0 { /* NC */
+				nvidia,pins = "kb_row16_pt0";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			kb_row17_pt1 { /* NC */
+				nvidia,pins = "kb_row17_pt1";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pu5 { /* NC */
+				nvidia,pins = "pu5";
+				nvidia,function = "gmi";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pv0 { /* NC */
+				nvidia,pins = "pv0";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pv1 { /* NC */
+				nvidia,pins = "pv1";
+				nvidia,function = "rsvd1";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			gpio_x1_aud_px1 { /* NC */
+				nvidia,pins = "gpio_x1_aud_px1";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			gpio_x3_aud_px3 { /* NC */
+				nvidia,pins = "gpio_x3_aud_px3";
+				nvidia,function = "rsvd4";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pbb7 { /* NC */
+				nvidia,pins = "pbb7";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pcc1 { /* NC */
+				nvidia,pins = "pcc1";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			pcc2 { /* NC */
+				nvidia,pins = "pcc2";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			clk3_req_pee1 { /* NC */
+				nvidia,pins = "clk3_req_pee1";
+				nvidia,function = "rsvd2";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			dap_mclk1_req_pee2 { /* NC */
+				nvidia,pins = "dap_mclk1_req_pee2";
+				nvidia,function = "rsvd4";
+				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
+				nvidia,tristate = <TEGRA_PIN_ENABLE>;
+				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
+			};
+			/*
+			 * Leave SDMMC3_CLK_LB_OUT muxed as SDMMC3 with output
+			 * driver enabled aka not tristated and input driver
+			 * enabled as well as it features some magic properties
+			 * even though the external loopback is disabled and the
+			 * internal loopback used as per
+			 * SDMMC_VENDOR_MISC_CNTRL_0 register's SDMMC_SPARE1
+			 * bits being set to 0xfffd according to the TRM!
+			 */
+			sdmmc3_clk_lb_out_pee4 { /* NC */
+				nvidia,pins = "sdmmc3_clk_lb_out_pee4";
+				nvidia,function = "sdmmc3";
+				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
+				nvidia,tristate = <TEGRA_PIN_DISABLE>;
+				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
+			};
+		};
+	};
+
+	/* Apalis UART1 */
+	serial@70006000 {
+		status = "okay";
+	};
+
+	/* Apalis UART2 */
+	serial@70006040 {
+		compatible = "nvidia,tegra124-hsuart";
+		status = "okay";
+	};
+
+	/* Apalis UART3 */
+	serial@70006200 {
+		compatible = "nvidia,tegra124-hsuart";
+		status = "okay";
+	};
+
+	/* Apalis UART4 */
+	serial@70006300 {
+		compatible = "nvidia,tegra124-hsuart";
+		status = "okay";
+	};
+
+	pwm@7000a000 {
+		status = "okay";
+	};
+
+	hdmi_ddc: i2c@7000c400 {
+		clock-frequency = <100000>;
+	};
+
+	/*
+	 * GEN1_I2C: I2C1_SDA/SCL on MXM3 pin 209/211 (e.g. RTC on carrier
+	 * board)
+	 */
+	i2c@7000c000 {
+		status = "okay";
+		clock-frequency = <100000>;
+
+		pcie-switch@58 {
+			compatible = "plx,pex8605";
+			reg = <0x58>;
+		};
+
+		/* M41T0M6 real time clock on carrier board */
+		rtc@68 {
+			compatible = "st,m41t00";
+			reg = <0x68>;
+		};
+	};
+
+	/*
+	 * GEN2_I2C: I2C2_SDA/SCL (DDC) on MXM3 pin 205/207 (e.g. display EDID)
+	 */
+	hdmi_ddc: i2c@7000c400 {
+		status = "okay";
+		clock-frequency = <100000>;
+	};
+
+	/*
+	 * CAM_I2C: I2C3_SDA/SCL (CAM) on MXM3 pin 201/203 (e.g. camera sensor
+	 * on carrier board)
+	 */
+	i2c@7000c500 {
+		status = "okay";
+		clock-frequency = <100000>;
+	};
+
+	/* I2C4 (DDC): unused */
+
+	/* PWR_I2C: power I2C to audio codec, PMIC and temperature sensor */
+	i2c@7000d000 {
+		status = "okay";
+		clock-frequency = <400000>;
+
+		/* SGTL5000 audio codec */
+		sgtl5000: codec@a {
+			compatible = "fsl,sgtl5000";
+			reg = <0x0a>;
+			VDDA-supply = <&reg_3v3>;
+			VDDIO-supply = <&vddio_1v8>;
+			clocks = <&tegra_car TEGRA124_CLK_EXTERN1>;
+		};
+
+		pmic: pmic@40 {
+			compatible = "ams,as3722";
+			reg = <0x40>;
+			interrupts = <0 86 IRQ_TYPE_LEVEL_HIGH>;
+			ams,system-power-controller;
+			#interrupt-cells = <2>;
+			interrupt-controller;
+			gpio-controller;
+			#gpio-cells = <2>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&as3722_default>;
+
+			as3722_default: pinmux {
+				gpio2_7 {
+					pins = "gpio2", /* PWR_EN_+V3.3 */
+					       "gpio7"; /* +V1.6_LPO */
+					function = "gpio";
+					bias-pull-up;
+				};
+
+				gpio1_3_4_5_6 {
+					pins = "gpio1", "gpio3", "gpio4",
+					       "gpio5", "gpio6";
+					bias-high-impedance;
+				};
+			};
+
+			regulators {
+				vsup-sd2-supply = <&reg_3v3>;
+				vsup-sd3-supply = <&reg_3v3>;
+				vsup-sd4-supply = <&reg_3v3>;
+				vsup-sd5-supply = <&reg_3v3>;
+				vin-ldo0-supply = <&vddio_ddr_1v35>;
+				vin-ldo1-6-supply = <&reg_3v3>;
+				vin-ldo2-5-7-supply = <&vddio_1v8>;
+				vin-ldo3-4-supply = <&reg_3v3>;
+				vin-ldo9-10-supply = <&reg_3v3>;
+				vin-ldo11-supply = <&reg_3v3>;
+
+				vdd_cpu: sd0 {
+					regulator-name = "+VDD_CPU_AP";
+					regulator-min-microvolt = <700000>;
+					regulator-max-microvolt = <1400000>;
+					regulator-min-microamp = <3500000>;
+					regulator-max-microamp = <3500000>;
+					regulator-always-on;
+					regulator-boot-on;
+					ams,ext-control = <2>;
+				};
+
+				sd1 {
+					regulator-name = "+VDD_CORE";
+					regulator-min-microvolt = <700000>;
+					regulator-max-microvolt = <1350000>;
+					regulator-min-microamp = <2500000>;
+					regulator-max-microamp = <4000000>;
+					regulator-always-on;
+					regulator-boot-on;
+					ams,ext-control = <1>;
+				};
+
+				vddio_ddr_1v35: sd2 {
+					regulator-name =
+						"+V1.35_VDDIO_DDR(sd2)";
+					regulator-min-microvolt = <1350000>;
+					regulator-max-microvolt = <1350000>;
+					regulator-always-on;
+					regulator-boot-on;
+				};
+
+				sd3 {
+					regulator-name =
+						"+V1.35_VDDIO_DDR(sd3)";
+					regulator-min-microvolt = <1350000>;
+					regulator-max-microvolt = <1350000>;
+					regulator-always-on;
+					regulator-boot-on;
+				};
+
+				vdd_1v05: sd4 {
+					regulator-name = "+V1.05";
+					regulator-min-microvolt = <1050000>;
+					regulator-max-microvolt = <1050000>;
+				};
+
+				vddio_1v8: sd5 {
+					regulator-name = "+V1.8";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <1800000>;
+					regulator-boot-on;
+					regulator-always-on;
+				};
+
+				vdd_gpu: sd6 {
+					regulator-name = "+VDD_GPU_AP";
+					regulator-min-microvolt = <650000>;
+					regulator-max-microvolt = <1200000>;
+					regulator-min-microamp = <3500000>;
+					regulator-max-microamp = <3500000>;
+					regulator-boot-on;
+					regulator-always-on;
+				};
+
+				avdd_1v05: ldo0 {
+					regulator-name = "+V1.05_AVDD";
+					regulator-min-microvolt = <1050000>;
+					regulator-max-microvolt = <1050000>;
+					regulator-boot-on;
+					regulator-always-on;
+					ams,ext-control = <1>;
+				};
+
+				vddio_sdmmc1: ldo1 {
+					regulator-name = "VDDIO_SDMMC1";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3300000>;
+				};
+
+				ldo2 {
+					regulator-name = "+V1.2";
+					regulator-min-microvolt = <1200000>;
+					regulator-max-microvolt = <1200000>;
+					regulator-boot-on;
+					regulator-always-on;
+				};
+
+				ldo3 {
+					regulator-name = "+V1.05_RTC";
+					regulator-min-microvolt = <1000000>;
+					regulator-max-microvolt = <1000000>;
+					regulator-boot-on;
+					regulator-always-on;
+					ams,enable-tracking;
+				};
+
+				/* 1.8V for LVDS, 3.3V for eDP */
+				ldo4 {
+					regulator-name = "AVDD_LVDS0_PLL";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <1800000>;
+				};
+
+				/* LDO5 not used */
+
+				vddio_sdmmc3: ldo6 {
+					regulator-name = "VDDIO_SDMMC3";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3300000>;
+				};
+
+				/* LDO7 not used */
+
+				ldo9 {
+					regulator-name = "+V3.3_ETH(ldo9)";
+					regulator-min-microvolt = <3300000>;
+					regulator-max-microvolt = <3300000>;
+					regulator-always-on;
+				};
+
+				ldo10 {
+					regulator-name = "+V3.3_ETH(ldo10)";
+					regulator-min-microvolt = <3300000>;
+					regulator-max-microvolt = <3300000>;
+					regulator-always-on;
+				};
+
+				ldo11 {
+					regulator-name = "+V1.8_VPP_FUSE";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <1800000>;
+				};
+			};
+		};
+
+		/*
+		 * TMP451 temperature sensor
+		 * Note: THERM_N directly connected to AS3722 PMIC THERM
+		 */
+		temperature-sensor@4c {
+			compatible = "ti,tmp451";
+			reg = <0x4c>;
+			interrupt-parent = <&gpio>;
+			interrupts = <TEGRA_GPIO(I, 6) IRQ_TYPE_LEVEL_LOW>;
+			#thermal-sensor-cells = <1>;
+		};
+	};
+
+	/* SPI1: Apalis SPI1 */
+	spi@7000d400 {
+		status = "okay";
+		spi-max-frequency = <50000000>;
+
+		spidev0: spidev@0 {
+			compatible = "spidev";
+			reg = <0>;
+			spi-max-frequency = <50000000>;
+		};
+	};
+
+	/* SPI2: MCU SPI */
+	spi@7000d600 {
+		status = "okay";
+		spi-max-frequency = <25000000>;
+	};
+
+	/* SPI4: Apalis SPI2 */
+	spi@7000da00 {
+		status = "okay";
+		spi-max-frequency = <50000000>;
+
+		spidev1: spidev@0 {
+			compatible = "spidev";
+			reg = <0>;
+			spi-max-frequency = <50000000>;
+		};
+	};
+
+	pmc@7000e400 {
+		nvidia,invert-interrupt;
+		nvidia,suspend-mode = <1>;
+		nvidia,cpu-pwr-good-time = <500>;
+		nvidia,cpu-pwr-off-time = <300>;
+		nvidia,core-pwr-good-time = <641 3845>;
+		nvidia,core-pwr-off-time = <61036>;
+		nvidia,core-power-req-active-high;
+		nvidia,sys-clock-req-active-high;
+
+		/* Set power_off bit in ResetControl register of AS3722 PMIC */
+		i2c-thermtrip {
+			nvidia,i2c-controller-id = <4>;
+			nvidia,bus-addr = <0x40>;
+			nvidia,reg-addr = <0x36>;
+			nvidia,reg-data = <0x2>;
+		};
+	};
+
+	/* Apalis Serial ATA */
+	sata@70020000 {
+		avdd-supply = <&vdd_1v05>;
+		hvdd-supply = <&reg_3v3>;
+		vddio-supply = <&vdd_1v05>;
+		status = "okay";
+	};
+
+	hda@70030000 {
+		status = "okay";
+	};
+
+	usb@70090000 {
+		/* USBO1, USBO1 (SS), USBH2, USBH4 and USBH4 (SS) */
+		avddio-pex-supply = <&vdd_1v05>;
+		avdd-pll-erefe-supply = <&avdd_1v05>;
+		avdd-pll-utmip-supply = <&vddio_1v8>;
+		avdd-usb-ss-pll-supply = <&vdd_1v05>;
+		avdd-usb-supply = <&reg_3v3>;
+		dvddio-pex-supply = <&vdd_1v05>;
+		hvdd-usb-ss-pll-e-supply = <&reg_3v3>;
+		hvdd-usb-ss-supply = <&reg_3v3>;
+		status = "okay";
+	};
+
+	padctl@7009f000 {
+		pinctrl-0 = <&padctl_default>;
+		pinctrl-names = "default";
+
+		padctl_default: pinmux {
+			usb3 {
+				nvidia,lanes = "pcie-0", "pcie-1";
+				nvidia,function = "usb3";
+				nvidia,iddq = <0>;
+			};
+
+			pcie {
+				nvidia,lanes = "pcie-2", "pcie-3",
+					       "pcie-4";
+				nvidia,function = "pcie";
+				nvidia,iddq = <0>;
+			};
+
+			sata {
+				nvidia,lanes = "sata-0";
+				nvidia,function = "sata";
+				nvidia,iddq = <0>;
+			};
+		};
+	};
+
+	/* Apalis MMC1 */
+	sdhci@700b0000 {
+		status = "okay";
+		/* MMC1_CD# */
+		cd-gpios = <&gpio TEGRA_GPIO(V, 3) GPIO_ACTIVE_LOW>;
+		bus-width = <4>;
+		vqmmc-supply = <&vddio_sdmmc1>;
+	};
+
+	/* Apalis SD1 */
+	sdhci@700b0400 {
+		status = "okay";
+		/* SD1_CD# */
+		cd-gpios = <&gpio TEGRA_GPIO(V, 2) GPIO_ACTIVE_LOW>;
+		bus-width = <4>;
+		vqmmc-supply = <&vddio_sdmmc3>;
+	};
+
+	/* eMMC */
+	sdhci@700b0600 {
+		status = "okay";
+		bus-width = <8>;
+		non-removable;
+	};
+
+	/* CPU DFLL clock */
+	clock@70110000 {
+		status = "okay";
+		vdd-cpu-supply = <&vdd_cpu>;
+		nvidia,i2c-fs-rate = <400000>;
+	};
+
+	ahub@70300000 {
+		i2s@70301200 {
+			status = "okay";
+		};
+	};
+
+	/* EHCI instance 0: USB1_DP/N -> USBO1_DP/N */
+	usb@7d000000 {
+		status = "okay";
+		dr_mode = "otg";
+	};
+
+	usb-phy@7d000000 {
+		status = "okay";
+		vbus-supply = <&reg_usbo1_vbus>;
+	};
+
+	/* EHCI instance 1: USB2_DP/N -> USBH2_DP/N */
+	usb@7d004000 {
+		status = "okay";
+	};
+
+	usb-phy@7d004000 {
+		status = "okay";
+		vbus-supply = <&reg_usbh_vbus>;
+	};
+
+	/* EHCI instance 2: USB3_DP/N -> USBH4_DP/N */
+	usb@7d008000 {
+		status = "okay";
+	};
+
+	usb-phy@7d008000 {
+		status = "okay";
+		vbus-supply = <&reg_usbh_vbus>;
+	};
+
+	backlight: backlight {
+		compatible = "pwm-backlight";
+		/* BKL1_PWM */
+		pwms = <&pwm 3 5000000>;
+		brightness-levels = <255 231 223 207 191 159 127 0>;
+		default-brightness-level = <6>;
+		/* BKL1_ON */
+		enable-gpios = <&gpio TEGRA_GPIO(BB, 5) GPIO_ACTIVE_HIGH>;
+	};
+
+	clocks {
+		compatible = "simple-bus";
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		clk32k_in: clock@0 {
+			compatible = "fixed-clock";
+			reg = <0>;
+			#clock-cells = <0>;
+			clock-frequency = <32768>;
+		};
+	};
+
+	cpus {
+		cpu@0 {
+			vdd-cpu-supply = <&vdd_cpu>;
+		};
+	};
+
+	gpio-keys {
+		compatible = "gpio-keys";
+
+		wakeup {
+			label = "WAKE1_MICO";
+			gpios = <&gpio TEGRA_GPIO(DD, 3) GPIO_ACTIVE_LOW>;
+			linux,code = <KEY_WAKEUP>;
+			debounce-interval = <10>;
+			wakeup-source;
+		};
+	};
+
+	reg_1v05_avdd_hdmi_pll: regulator-1v05-avdd-hdmi-pll {
+		compatible = "regulator-fixed";
+		regulator-name = "+V1.05_AVDD_HDMI_PLL";
+		regulator-min-microvolt = <1050000>;
+		regulator-max-microvolt = <1050000>;
+		gpio = <&gpio TEGRA_GPIO(H, 7) GPIO_ACTIVE_LOW>;
+		vin-supply = <&vdd_1v05>;
+	};
+
+	reg_3v3_mxm: regulator-3v3-mxm {
+		compatible = "regulator-fixed";
+		regulator-name = "+V3.3_MXM";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+		regulator-boot-on;
+	};
+
+	reg_3v3: regulator-3v3 {
+		compatible = "regulator-fixed";
+		regulator-name = "+V3.3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-always-on;
+		regulator-boot-on;
+		/* PWR_EN_+V3.3 */
+		gpio = <&pmic 2 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		vin-supply = <&reg_3v3_mxm>;
+	};
+
+	reg_3v3_avdd_hdmi: regulator-3v3-avdd-hdmi {
+		compatible = "regulator-fixed";
+		regulator-name = "+V3.3_AVDD_HDMI";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		vin-supply = <&vdd_1v05>;
+	};
+
+	reg_5v0: regulator-5v0 {
+		compatible = "regulator-fixed";
+		regulator-name = "5V_SW";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+	};
+
+	/* USBO1_EN */
+	reg_usbo1_vbus: regulator-usbo1-vbus {
+		compatible = "regulator-fixed";
+		regulator-name = "VCC_USBO1";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		gpio = <&gpio TEGRA_GPIO(N, 4) GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		vin-supply = <&reg_5v0>;
+	};
+
+	/* USBH_EN */
+	reg_usbh_vbus: regulator-usbh-vbus {
+		compatible = "regulator-fixed";
+		regulator-name = "VCC_USBH(2A|2C|2D|3|4)";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		gpio = <&gpio TEGRA_GPIO(N, 5) GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		vin-supply = <&reg_5v0>;
+	};
+
+	sound {
+		compatible = "toradex,tegra-audio-sgtl5000-apalis_tk1",
+			     "nvidia,tegra-audio-sgtl5000";
+		nvidia,model = "Toradex Apalis TK1";
+		nvidia,audio-routing =
+			"Headphone Jack", "HP_OUT",
+			"LINE_IN", "Line In Jack",
+			"MIC_IN", "Mic Jack";
+		nvidia,i2s-controller = <&tegra_i2s2>;
+		nvidia,audio-codec = <&sgtl5000>;
+		clocks = <&tegra_car TEGRA124_CLK_PLL_A>,
+			 <&tegra_car TEGRA124_CLK_PLL_A_OUT0>,
+			 <&tegra_car TEGRA124_CLK_EXTERN1>;
+		clock-names = "pll_a", "pll_a_out0", "mclk";
+	};
+
+	thermal-zones {
+		cpu {
+			trips {
+				trip@0 {
+					temperature = <101000>;
+					hysteresis = <0>;
+					type = "critical";
+				};
+			};
+
+			cooling-maps {
+				/*
+				 * There are currently no cooling maps because
+				 * there are no cooling devices
+				 */
+			};
+		};
+
+		mem {
+			trips {
+				trip@0 {
+					temperature = <101000>;
+					hysteresis = <0>;
+					type = "critical";
+				};
+			};
+
+			cooling-maps {
+				/*
+				 * There are currently no cooling maps because
+				 * there are no cooling devices
+				 */
+			};
+		};
+
+		gpu {
+			trips {
+				trip@0 {
+					temperature = <101000>;
+					hysteresis = <0>;
+					type = "critical";
+				};
+			};
+
+			cooling-maps {
+				/*
+				 * There are currently no cooling maps because
+				 * there are no cooling devices
+				 */
+			};
+		};
+	};
+};
diff --git a/arch/arm/dts/tegra20-colibri.dts b/arch/arm/dts/tegra20-colibri.dts
index 89adfb6..3c10dd6 100644
--- a/arch/arm/dts/tegra20-colibri.dts
+++ b/arch/arm/dts/tegra20-colibri.dts
@@ -16,7 +16,7 @@
 		i2c2 = "/i2c@7000c400";
 		mmc0 = "/sdhci@c8000600";
 		usb0 = "/usb@c5000000";
-		usb1 = "/usb@c5004000"; /* on-module only, for ASIX */
+		usb1 = "/usb@c5004000"; /* On-module only, for ASIX */
 		usb2 = "/usb@c5008000";
 	};
 
@@ -92,8 +92,10 @@
 	/* EHCI instance 1: ULPI -> USB3340 -> AX88772B */
 	usb@c5004000 {
 		status = "okay";
+		/* ULPI_RESET */
+		nvidia,phy-reset-gpio =
+				<&gpio TEGRA_GPIO(V, 1) GPIO_ACTIVE_LOW>;
 		/* VBUS_LAN */
-		nvidia,phy-reset-gpio = <&gpio TEGRA_GPIO(V, 1) GPIO_ACTIVE_HIGH>;
 		nvidia,vbus-gpio = <&gpio TEGRA_GPIO(BB, 1) GPIO_ACTIVE_HIGH>;
 	};
 
diff --git a/arch/arm/dts/tegra30-apalis.dts b/arch/arm/dts/tegra30-apalis.dts
index f83f094..b3eff00 100644
--- a/arch/arm/dts/tegra30-apalis.dts
+++ b/arch/arm/dts/tegra30-apalis.dts
@@ -44,10 +44,12 @@
 		hvdd-pex-supply = <&sys_3v3_reg>;
 
 		pci@1,0 {
+			/* TS_DIFF1/2/3/4 left disabled */
 			nvidia,num-lanes = <4>;
 		};
 
 		pci@2,0 {
+			/* PCIE1_RX/TX left disabled */
 			nvidia,num-lanes = <1>;
 		};
 
@@ -57,6 +59,33 @@
 		};
 	};
 
+	host1x@50000000 {
+		dc@54200000 {
+			rgb {
+				status = "okay";
+				nvidia,panel = <&lcd_panel>;
+				display-timings {
+					timing@0 {
+						/* VESA VGA */
+						clock-frequency = <25175000>;
+						hactive = <640>;
+						vactive = <480>;
+						hback-porch = <48>;
+						hfront-porch = <16>;
+						hsync-len = <96>;
+						vback-porch = <31>;
+						vfront-porch = <11>;
+						vsync-len = <2>;
+					};
+				};
+			};
+		};
+	};
+
+	pwm@7000a000 {
+		status = "okay";
+	};
+
 	/*
 	 * GEN1_I2C: I2C1_SDA/SCL on MXM3 pin 209/211 (e.g. RTC on carrier
 	 * board)
@@ -286,6 +315,18 @@
 		nvidia,vbus-gpio = <&gpio TEGRA_GPIO(DD, 1) GPIO_ACTIVE_HIGH>;
 	};
 
+	backlight: backlight {
+		compatible = "pwm-backlight";
+
+		brightness-levels = <255 128 64 32 16 8 4 0>;
+		default-brightness-level = <6>;
+		/* BKL1_ON */
+		enable-gpios = <&gpio TEGRA_GPIO(V, 2) GPIO_ACTIVE_HIGH>;
+		power-supply = <&sys_3v3_reg>;
+		/* PWM_BKL1 */
+		pwms = <&pwm 0 5000000>;
+	};
+
 	clocks {
 		compatible = "simple-bus";
 		#address-cells = <1>;
@@ -306,6 +347,16 @@
 		};
 	};
 
+	lcd_panel: panel {
+		/*
+		 * edt,et057090dhu: EDT 5.7" LCD TFT
+		 * edt,et070080dh6: EDT 7.0" LCD TFT
+		 */
+		compatible = "edt,et057090dhu", "simple-panel";
+
+		backlight = <&backlight>;
+	};
+
 	regulators {
 		compatible = "simple-bus";
 		#address-cells = <1>;
diff --git a/arch/arm/dts/tegra30-colibri.dts b/arch/arm/dts/tegra30-colibri.dts
index 3cff2f6..35ce865 100644
--- a/arch/arm/dts/tegra30-colibri.dts
+++ b/arch/arm/dts/tegra30-colibri.dts
@@ -27,6 +27,33 @@
 		reg = <0x80000000 0x40000000>;
 	};
 
+	host1x@50000000 {
+		dc@54200000 {
+			rgb {
+				status = "okay";
+				nvidia,panel = <&lcd_panel>;
+				display-timings {
+					timing@0 {
+						/* VESA VGA */
+						clock-frequency = <25175000>;
+						hactive = <640>;
+						vactive = <480>;
+						hback-porch = <48>;
+						hfront-porch = <16>;
+						hsync-len = <96>;
+						vback-porch = <31>;
+						vfront-porch = <11>;
+						vsync-len = <2>;
+					};
+				};
+			};
+		};
+	};
+
+	pwm@7000a000 {
+		status = "okay";
+	};
+
 	/*
 	 * GEN1_I2C: I2C_SDA/SCL on SODIMM pin 194/196 (e.g. RTC on carrier
 	 * board)
@@ -93,6 +120,18 @@
 		nvidia,vbus-gpio = <&gpio TEGRA_GPIO(W, 2) GPIO_ACTIVE_LOW>;
 	};
 
+	backlight: backlight {
+		compatible = "pwm-backlight";
+
+		brightness-levels = <255 128 64 32 16 8 4 0>;
+		default-brightness-level = <6>;
+		/* BL_ON */
+		enable-gpios = <&gpio TEGRA_GPIO(V, 2) GPIO_ACTIVE_HIGH>;
+		power-supply = <&reg_3v3>;
+		/* PWM<A> */
+		pwms = <&pwm 0 5000000>;
+	};
+
 	clocks {
 		compatible = "simple-bus";
 		#address-cells = <1>;
@@ -105,4 +144,29 @@
 			clock-frequency = <32768>;
 		};
 	};
+
+	lcd_panel: panel {
+		/*
+		 * edt,et057090dhu: EDT 5.7" LCD TFT
+		 * edt,et070080dh6: EDT 7.0" LCD TFT
+		 */
+		compatible = "edt,et057090dhu", "simple-panel";
+
+		backlight = <&backlight>;
+	};
+
+	regulators {
+		compatible = "simple-bus";
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		reg_3v3: regulator@0 {
+			compatible = "regulator-fixed";
+			reg = <0>;
+			regulator-name = "+V3.3";
+			regulator-min-microvolt = <3300000>;
+			regulator-max-microvolt = <3300000>;
+			regulator-always-on;
+		};
+	};
 };
diff --git a/arch/arm/dts/tegra30.dtsi b/arch/arm/dts/tegra30.dtsi
index 5030065..f115b11 100644
--- a/arch/arm/dts/tegra30.dtsi
+++ b/arch/arm/dts/tegra30.dtsi
@@ -88,6 +88,7 @@
 	};
 
 	host1x@50000000 {
+		u-boot,dm-pre-reloc;
 		compatible = "nvidia,tegra30-host1x", "simple-bus";
 		reg = <0x50000000 0x00024000>;
 		interrupts = <GIC_SPI 65 IRQ_TYPE_LEVEL_HIGH>, /* syncpt */
@@ -158,6 +159,7 @@
 		};
 
 		dc@54200000 {
+			u-boot,dm-pre-reloc;
 			compatible = "nvidia,tegra30-dc", "nvidia,tegra20-dc";
 			reg = <0x54200000 0x00040000>;
 			interrupts = <GIC_SPI 73 IRQ_TYPE_LEVEL_HIGH>;
diff --git a/arch/arm/dts/vf.dtsi b/arch/arm/dts/vf.dtsi
index 000aff2..477d8de 100644
--- a/arch/arm/dts/vf.dtsi
+++ b/arch/arm/dts/vf.dtsi
@@ -35,6 +35,7 @@
 			compatible = "fsl,aips-bus", "simple-bus";
 			#address-cells = <1>;
 			#size-cells = <1>;
+			reg = <0x40000000 0x00070000>;
 			ranges;
 
 			uart0: serial@40027000 {
@@ -130,6 +131,7 @@
 			compatible = "fsl,aips-bus", "simple-bus";
 			#address-cells = <1>;
 			#size-cells = <1>;
+			reg = <0x40080000 0x0007f000>;
 			ranges;
 
 			uart4: serial@400a9000 {
diff --git a/arch/arm/imx-common/Makefile b/arch/arm/imx-common/Makefile
index 1873185..e592910 100644
--- a/arch/arm/imx-common/Makefile
+++ b/arch/arm/imx-common/Makefile
@@ -37,6 +37,8 @@ endif
 obj-$(CONFIG_CMD_BMODE) += cmd_bmode.o
 obj-$(CONFIG_CMD_HDMIDETECT) += cmd_hdmidet.o
 obj-$(CONFIG_CMD_DEKBLOB) += cmd_dek.o
+obj-$(CONFIG_CMD_WRITEBCB) += cmd_writebcb.o
+obj-$(CONFIG_CMD_WRITEBCB_MX7) += cmd_writebcb_mx7.o
 
 PLUGIN = board/$(BOARDDIR)/plugin
 
@@ -70,6 +72,14 @@ MKIMAGEFLAGS_u-boot.imx = -n $(filter-out $(PLUGIN).bin $< $(PHONY),$^) -T imxim
 u-boot.imx: u-boot.bin $(IMX_CONFIG) $(PLUGIN).bin FORCE
 	$(call if_changed,mkimage)
 
+ifeq ($(CONFIG_IMX_NAND),y)
+cmd_u-boot-nand_imx = (dd bs=1024 count=1 if=/dev/zero 2>/dev/null) | \
+       cat - $< > $@
+
+u-boot-nand.imx: u-boot.imx FORCE
+	$(call if_changed,u-boot-nand_imx)
+endif
+
 ifeq ($(CONFIG_OF_SEPARATE),y)
 MKIMAGEFLAGS_u-boot-dtb.imx = -n $(filter-out $(PLUGIN).bin $< $(PHONY),$^) -T imximage \
 	-e $(CONFIG_SYS_TEXT_BASE)
diff --git a/arch/arm/imx-common/cmd_writebcb.c b/arch/arm/imx-common/cmd_writebcb.c
new file mode 100644
index 0000000..8abf1b0
--- /dev/null
+++ b/arch/arm/imx-common/cmd_writebcb.c
@@ -0,0 +1,187 @@
+/*
+ * Copyright (c) 2013, Toradex AG.  All rights reserved.
+ *
+ * Derived from downstream U-Boot (drivers/mtd/nand/fsl_nfc.c)
+ * and mxsboot
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <nand.h>
+#include <malloc.h>
+
+struct mxs_nand_fcb {
+	uint32_t		checksum;
+	uint32_t		fingerprint;
+	uint32_t		version;
+	struct {
+		uint8_t			data_setup;
+		uint8_t			data_hold;
+		uint8_t			address_setup;
+		uint8_t			dsample_time;
+		uint8_t			nand_timing_state;
+		uint8_t			rea;
+		uint8_t			rloh;
+		uint8_t			rhoh;
+	}			timing;
+	uint32_t		page_data_size;
+	uint32_t		total_page_size;
+	uint32_t		sectors_per_block;
+	uint32_t		number_of_nands;		/* Ignored */
+	uint32_t		total_internal_die;		/* Ignored */
+	uint32_t		cell_type;			/* Ignored */
+	uint32_t		ecc_block_n_ecc_type;
+	uint32_t		ecc_block_0_size;
+	uint32_t		ecc_block_n_size;
+	uint32_t		ecc_block_0_ecc_type;
+	uint32_t		metadata_bytes;
+	uint32_t		num_ecc_blocks_per_page;
+	uint32_t		ecc_block_n_ecc_level_sdk;	/* Ignored */
+	uint32_t		ecc_block_0_size_sdk;		/* Ignored */
+	uint32_t		ecc_block_n_size_sdk;		/* Ignored */
+	uint32_t		ecc_block_0_ecc_level_sdk;	/* Ignored */
+	uint32_t		num_ecc_blocks_per_page_sdk;	/* Ignored */
+	uint32_t		metadata_bytes_sdk;		/* Ignored */
+	uint32_t		erase_threshold;
+	uint32_t		boot_patch;
+	uint32_t		patch_sectors;
+	uint32_t		firmware1_starting_sector;
+	uint32_t		firmware2_starting_sector;
+	uint32_t		sectors_in_firmware1;
+	uint32_t		sectors_in_firmware2;
+	uint32_t		dbbt_search_area_start_address;
+	uint32_t		badblock_marker_byte;
+	uint32_t		badblock_marker_start_bit;
+	uint32_t		bb_marker_physical_offset;
+	uint32_t		reserved1[9];
+	uint32_t		disbbm;
+	uint32_t		reserved2[10];
+	uint32_t		disbbm_search;
+	uint32_t		disbbm_search_limit;
+};
+
+struct mxs_nand_dbbt {
+	uint32_t		checksum;
+	uint32_t		fingerprint;
+	uint32_t		version;
+	uint32_t		number_bb;
+	uint32_t		number_2k_pages_bb;
+};
+
+struct mxs_nand_bbt {
+	uint32_t		nand;
+	uint32_t		number_bb;
+	uint32_t		badblock[510];
+};
+
+static inline uint8_t parity_13_8(const uint8_t b)
+{
+	uint32_t parity = 0, tmp;
+
+	tmp = ((b >> 6) ^ (b >> 5) ^ (b >> 3) ^ (b >> 2)) & 1;
+	parity |= tmp << 0;
+
+	tmp = ((b >> 7) ^ (b >> 5) ^ (b >> 4) ^ (b >> 2) ^ (b >> 1)) & 1;
+	parity |= tmp << 1;
+
+	tmp = ((b >> 7) ^ (b >> 6) ^ (b >> 5) ^ (b >> 1) ^ (b >> 0)) & 1;
+	parity |= tmp << 2;
+
+	tmp = ((b >> 7) ^ (b >> 4) ^ (b >> 3) ^ (b >> 0)) & 1;
+	parity |= tmp << 3;
+
+	tmp = ((b >> 6) ^ (b >> 4) ^ (b >> 3) ^
+		(b >> 2) ^ (b >> 1) ^ (b >> 0)) & 1;
+	parity |= tmp << 4;
+
+	return parity;
+}
+
+static void create_fcb(struct mtd_info *nand, uint8_t *buf,
+		       int fw1_start_address, int fw2_start_address)
+{
+	int i;
+	uint8_t *ecc;
+	struct mxs_nand_fcb *fcb = (struct mxs_nand_fcb *)buf;
+
+	fcb->fingerprint =		0x46434220;
+	fcb->version =			0x00000001;
+
+	fcb->page_data_size =		nand->writesize;
+	fcb->total_page_size =		nand->writesize + nand->oobsize;
+	fcb->sectors_per_block =	nand->erasesize / nand->writesize;
+
+	/* 45 or 60-bytes BCH ECC, also used by Linux/U-Boot */
+#if defined(CONFIG_SYS_NAND_VF610_NFC_45_ECC_BYTES)
+	fcb->ecc_block_0_ecc_type = 6;
+#elif defined(CONFIG_SYS_NAND_VF610_NFC_60_ECC_BYTES)
+	fcb->ecc_block_0_ecc_type = 7;
+#endif
+
+	fcb->firmware1_starting_sector = fw1_start_address / nand->writesize;
+	fcb->firmware2_starting_sector = fw2_start_address / nand->writesize;
+
+	fcb->dbbt_search_area_start_address =	0;
+
+	/* This is typically the first byte of the pages OOB area */
+	fcb->bb_marker_physical_offset = nand->writesize;
+
+	/*
+	 * Enable swapping of bad block marker byte (required for boot ROM in
+	 * order to detect factory marked bad blocks)
+	 */
+	fcb->disbbm = 0;
+
+	fcb->disbbm_search = 0;
+	fcb->disbbm_search_limit = 8;
+
+	ecc = buf + 512;
+
+	for (i = 0; i < sizeof(struct mxs_nand_fcb); i++)
+		ecc[i] = parity_13_8(buf[i]);
+}
+
+static int do_write_bcb(cmd_tbl_t *cmdtp, int flag, int argc,
+		       char * const argv[])
+{
+	int ret;
+	struct mtd_info *nand;
+	int dev = nand_curr_device;
+	ulong off = 0;
+	uint8_t *buf;
+	size_t rwsize, maxsize;
+	ulong fw1_off, fw2_off = 0;
+
+	if (argc < 2)
+		return -1;
+
+	fw1_off = simple_strtoul(argv[1], NULL, 16);
+	if (argc > 2)
+		fw2_off = simple_strtoul(argv[2], NULL, 16);
+
+	nand = nand_info[dev];
+
+	/* Allocate one page, should be enought */
+	rwsize = nand->writesize;
+	buf = malloc(nand->writesize);
+
+	/* Set only the first page empty... */
+	memset(buf, 0, nand->writesize);
+
+	create_fcb(nand, buf, fw1_off, fw2_off);
+
+	puts("Write FCB...\n");
+	rwsize = maxsize = nand->writesize;
+	ret = nand_write(nand, off, &rwsize, (unsigned char *)buf);
+
+	printf("FCB %d bytes written to 0x0: %s\n", rwsize, 
+			ret ? "ERROR" : "OK");
+	return 0;
+}
+
+U_BOOT_CMD(
+	writebcb, 3, 0, do_write_bcb,
+	"Write Boot Control Block (FCB and DBBT)",
+	"fw1-off [fw2-off]"
+);
diff --git a/arch/arm/imx-common/cmd_writebcb_mx7.c b/arch/arm/imx-common/cmd_writebcb_mx7.c
new file mode 100644
index 0000000..9174a03
--- /dev/null
+++ b/arch/arm/imx-common/cmd_writebcb_mx7.c
@@ -0,0 +1,443 @@
+/*
+ * Copyright (c) 2013, Toradex AG.  All rights reserved.
+ *
+ * Derived from downstream U-Boot (drivers/mtd/nand/fsl_nfc.c)
+ * and mxsboot
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+/* NAND LAYOUT
+ *
+ * Content	FCB CFG_BLOCK .. FCB     CFG_BLOCK  DBBT .. DBBT
+ * Block/Page	0/0 0/1       .. 0/(n-1) 1/(n-1)    0/n  .. 0/n + (n-1)
+ *
+ * With n = BOOT_SEARCH_COUNT
+ *
+ * With n = 2 the NAND is used starting at 0 with a length of 0x80000
+ *
+ * Usually one will use fw_start1 at 0x80000 and fw_start2 at 0x200000
+ * allowing for at least 6 bad blocks in either bootloader
+ */
+
+#include <common.h>
+#include <linux/bch.h>
+#include <malloc.h>
+#include <nand.h>
+#include "rand.h"
+
+#define PAGES_PER_STRIDE	64
+#define RAND_16K		(16 * 1024)
+
+#define BOOT_SEARCH_COUNT	2 /* match with BOOT_CFG_FUSES [6:5] */
+
+extern int raw_access(struct mtd_info *info, ulong addr, loff_t off,
+		      ulong count, int read);
+
+struct mxs_nand_fcb {
+	uint32_t		checksum;
+	uint32_t		fingerprint;
+	uint32_t		version;
+	struct {
+		uint8_t			data_setup;
+		uint8_t			data_hold;
+		uint8_t			address_setup;
+		uint8_t			dsample_time;
+		uint8_t			nand_timing_state;
+		uint8_t			rea;
+		uint8_t			rloh;
+		uint8_t			rhoh;
+	}			timing;
+	uint32_t		page_data_size;
+	uint32_t		total_page_size;
+	uint32_t		sectors_per_block;
+	uint32_t		number_of_nands;		/* Ignored */
+	uint32_t		total_internal_die;		/* Ignored */
+	uint32_t		cell_type;			/* Ignored */
+	uint32_t		ecc_block_n_ecc_type;
+	uint32_t		ecc_block_0_size;
+	uint32_t		ecc_block_n_size;
+	uint32_t		ecc_block_0_ecc_type;
+	uint32_t		metadata_bytes;
+	uint32_t		num_ecc_blocks_per_page;
+	uint32_t		ecc_block_n_ecc_level_sdk;	/* Ignored */
+	uint32_t		ecc_block_0_size_sdk;		/* Ignored */
+	uint32_t		ecc_block_n_size_sdk;		/* Ignored */
+	uint32_t		ecc_block_0_ecc_level_sdk;	/* Ignored */
+	uint32_t		num_ecc_blocks_per_page_sdk;	/* Ignored */
+	uint32_t		metadata_bytes_sdk;		/* Ignored */
+	uint32_t		erase_threshold;
+	uint32_t		boot_patch;			/* not iMX7 */
+	uint32_t		patch_sectors;			/* not iMX7 */
+	uint32_t		firmware1_starting_sector;
+	uint32_t		firmware2_starting_sector;
+	uint32_t		sectors_in_firmware1;
+	uint32_t		sectors_in_firmware2;
+	uint32_t		dbbt_search_area_start_address;
+	uint32_t		badblock_marker_byte;
+	uint32_t		badblock_marker_start_bit;
+	uint32_t		bb_marker_physical_offset;
+	uint32_t		bch_type;			/* only iMX7 */
+	uint32_t		tm_timing2_read_latency;	/* only iMX7 */
+	uint32_t		tm_timing2_preambel_delay;	/* only iMX7 */
+	uint32_t		tm_timing2_ce_delay;		/* only iMX7 */
+	uint32_t		tm_timing2_postamble_delay;	/* only iMX7 */
+	uint32_t		tm_timing2_cmd_add_pause;	/* only iMX7 */
+	uint32_t		tm_timing2_data_pause;		/* only iMX7 */
+	uint32_t		tm_speed;			/* only iMX7 */
+	uint32_t		tm_timing1_busy_timeout;	/* only iMX7 */
+	uint32_t		disbbm;
+	uint32_t		bbmark_spare_offset;		/* only iMX7 */
+	uint32_t		onfi_sync_enable;		/* only iMX7 */
+	uint32_t		onfi_sync_speed;		/* only iMX7 */
+	uint32_t		onfi_sync_nand_data;		/* only iMX7 */
+	uint32_t		reserved2[6];
+	uint32_t		disbbm_search;
+	uint32_t		disbbm_search_limit;
+	uint32_t		reserved3[15];			/* only iMX7 */
+	uint32_t		read_retry_enable;		/* only iMX7 */
+	uint32_t		reserved4[1];			/* only iMX7 */
+	uint32_t		fill_to_1024[183];
+};
+
+struct mxs_nand_dbbt {
+	uint32_t		checksum;
+	uint32_t		fingerprint;
+	uint32_t		version;
+	uint32_t		number_bb;
+	uint32_t		number_2k_pages_bb;
+};
+
+struct mxs_nand_bbt {
+	uint32_t		nand;
+	uint32_t		number_bb;
+	uint32_t		badblock[510];
+};
+
+
+#ifdef DEBUG
+#include <linux/ctype.h>
+/* static */
+void dump(const void *data, int size)
+{
+	int i, j;
+	const uint8_t *s;
+
+	s = data;
+	for (i = j = 0; i < size; i += 16) {
+		if (i)
+			printf("\n");
+		printf("[%04x]", i);
+
+		for (j = i; j < i + 16; j++) {
+			if (j < size)
+				printf(" %02x", s[j]);
+			else
+				printf("   ");
+			if (j == i + 7)
+				printf(" ");
+		}
+
+
+		printf(" | ");
+
+		for (j = i; j < i + 16; j ++) {
+			if (j < size)
+				printf("%c", isprint(s[j]) ? s[j] : '.');
+			else
+				printf(" ");
+			if (j == i + 7)
+				printf("-");
+		}
+	}
+	printf("\n");
+}
+#endif
+
+/*
+ * reverse bit for byte
+ */
+static uint8_t reverse_bit(uint8_t in_byte)
+{
+	int i;
+	uint8_t out_byte = 0;
+
+	for (i = 0; i < 8; i++) {
+		if (in_byte & ((0x80) >> i)) {
+			out_byte |= 1 << i;
+		}
+	}
+
+	return out_byte;
+}
+
+int encode_bch_ecc(void *source_block, size_t source_size, void *target_block,
+		   size_t target_size)
+{
+	struct bch_control *bch;
+	unsigned char *ecc_buf;
+	int ecc_buf_size;
+	unsigned char *tmp_buf;
+	int tmp_buf_size;
+	int real_buf_size;
+	int i, j;
+	int ecc_bit_off;
+	int data_ecc_blk_size;
+	int low_byte_off, low_bit_off;
+	int high_byte_off, high_bit_off;
+	unsigned char byte_low, byte_high;
+
+	/* define the variables for bch algorithm*/
+	/* m:  METADATABYTE */
+	/* b0: BLOCK0BYTE */
+	/* e0: BLOCK0ECC */
+	/* bn: BLOCKNBYTE */
+	/* en: BLOCKNECC */
+	/* n : NUMOFBLOCKN */
+	/* gf: FCB_GF */
+	int m, b0, e0, bn, en, n, gf;
+
+	/* 62 bit BCH, for i.MX6SX and i.MX7D */
+	m = 32;
+	b0 = 128;
+	e0 = 62;
+	bn = 128;
+	en = 62;
+	n = 7;
+	gf = 13;
+
+	/* sanity check */
+	/* nand data block must be large enough for FCB structure */
+	if(source_size > b0 + n * bn)
+		return -EINVAL;
+	/* nand page need to be large enough to contain Meta, FCB and ECC */
+	if(target_size < m + b0 + e0 * gf / 8 + n * bn + n * en * gf / 8)
+		return -EINVAL;
+
+	/* init bch, using default polynomial */
+	bch = init_bch(gf, en, 0);
+	if(!bch)
+		return -EINVAL;
+
+	/* buffer for ecc */
+	ecc_buf_size = (gf * en + 7) / 8;
+	ecc_buf = malloc(ecc_buf_size);
+	if(!ecc_buf)
+		return -EINVAL;
+
+	/* temp buffer to store data and ecc */
+	tmp_buf_size = b0 + (e0 * gf + 7) / 8 + (bn + (en * gf + 7) / 8) * n;
+	tmp_buf = malloc(tmp_buf_size);
+	if(!tmp_buf)
+		return -EINVAL;
+	memset(tmp_buf, 0, tmp_buf_size);
+
+	/* generate ecc code for each data block and store in temp buffer */
+
+	for(i = 0; i < n + 1; i++) {
+		memset(ecc_buf, 0, ecc_buf_size);
+		encode_bch(bch, source_block + i * bn, bn, ecc_buf);
+
+		memcpy(tmp_buf + i * (bn + ecc_buf_size), source_block + i * bn,
+				bn);
+
+		/* reverse ecc bit */
+		for(j = 0; j < ecc_buf_size; j++) {
+			ecc_buf[j] = reverse_bit(ecc_buf[j]);
+		}
+
+		memcpy(tmp_buf + (i + 1) * bn + i * ecc_buf_size, ecc_buf,
+				ecc_buf_size);
+	}
+
+	/* store Metadata for taget block with randomizer*/
+	/*memcpy(target_block, RandData, m);*/
+	memset(target_block, 0, m);
+
+	/* shift the bit to combine the source data and ecc */
+	real_buf_size = (b0 * 8 + gf * e0 + (bn * 8 + gf * en) * n) / 8;
+
+	if(!((gf * en) % 8)) {
+		/* ecc data is byte aligned, just copy it. */
+		memcpy(target_block + m, tmp_buf, real_buf_size);
+	} else {
+		/* bit offset for each ecc block */
+		ecc_bit_off = 8 - (gf * en) % 8;
+		/* size of a data block plus ecc block */
+		data_ecc_blk_size = bn + (gf * en + 7) / 8;
+
+		for(i = 0; i < real_buf_size; i++) {
+			low_bit_off = ((i / data_ecc_blk_size) * ecc_bit_off)
+					% 8;
+			low_byte_off = ((i / data_ecc_blk_size) * ecc_bit_off)
+					/ 8;
+			high_bit_off = (((i + 1) / data_ecc_blk_size)
+					* ecc_bit_off) % 8;
+			high_byte_off = (((i + 1) / data_ecc_blk_size)
+					* ecc_bit_off) / 8;
+
+			byte_low = tmp_buf[i + low_byte_off] >> low_bit_off;
+			byte_high = tmp_buf[i + 1 + high_byte_off]
+					<< (8 - high_bit_off);
+
+			*(uint8_t *)(target_block + i + m) = (byte_low
+					| byte_high);
+		}
+	}
+
+	free(ecc_buf);
+	free(tmp_buf);
+	return 0;
+}
+
+static void create_fcb(struct mtd_info *nand, uint8_t *buf,
+		       int fw1_start_address, int fw2_start_address)
+{
+	int i;
+	struct mxs_nand_fcb _fcb;
+	struct mxs_nand_fcb *fcb = &_fcb;
+	memset (fcb, 0, sizeof(struct mxs_nand_fcb));
+
+	fcb->fingerprint =		0x20424346;
+	fcb->version =			0x01000000;
+	fcb->timing.data_setup =	10;
+	fcb->timing.data_hold =		7;
+	fcb->timing.address_setup =	15;
+	fcb->timing.dsample_time =	6;
+	
+	fcb->page_data_size =		nand->writesize;
+	fcb->total_page_size =		nand->writesize + nand->oobsize;
+	fcb->sectors_per_block =	nand->erasesize / nand->writesize;
+
+	fcb->ecc_block_n_ecc_type =	4;
+	fcb->ecc_block_0_size =		512;
+	fcb->ecc_block_n_size =		512;
+	fcb->ecc_block_0_ecc_type =	4;
+	fcb->metadata_bytes =		10;
+	fcb->num_ecc_blocks_per_page =	3;
+
+	fcb->firmware1_starting_sector = fw1_start_address / nand->writesize;
+	fcb->firmware2_starting_sector = fw2_start_address / nand->writesize;
+
+	fcb->dbbt_search_area_start_address =	256;
+	fcb->badblock_marker_byte =	1999;
+
+	/* This is typically the first byte of the pages OOB area */
+	fcb->bb_marker_physical_offset = nand->writesize;
+
+	/* Required for successful factory bad block detection */
+	fcb->disbbm = 0;
+	fcb->disbbm_search = 0;
+
+	/* compute checksum, ~(sum of bytes starting with offset 4) */
+	for (i = 4; i < sizeof(struct mxs_nand_fcb); i++)
+		fcb->checksum += *((char *) fcb + i);
+	fcb->checksum ^= 0xffffffff;
+	encode_bch_ecc(fcb, sizeof(struct mxs_nand_fcb), buf,
+		       fcb->total_page_size);
+#ifdef DEBUG
+	printf("FCB\n"); dump(fcb, sizeof(struct mxs_nand_fcb));
+	printf("Encoded\n"); dump(buf, 512);
+#endif
+}
+
+static void create_dbbt(struct mtd_info *nand, uint8_t *buf)
+{
+	int i;
+	struct mxs_nand_dbbt *dbbt = (struct mxs_nand_dbbt *)buf;
+
+	memset (buf, 0, sizeof(struct mxs_nand_dbbt));
+	dbbt->fingerprint = 0x54424244;
+	dbbt->version = 0x01000000;
+	dbbt->number_bb = 0;
+	dbbt->number_2k_pages_bb = 0;
+
+	/* compute checksum, ~(sum of bytes starting with offset 4) */
+	for (i = 4; i < sizeof(struct mxs_nand_dbbt); i++)
+		dbbt->checksum += *((char *) dbbt + i);
+	dbbt->checksum ^= 0xffffffff;
+
+#ifdef DEBUG
+	printf("DBBT\n"); dump(dbbt, sizeof(struct mxs_nand_dbbt));
+#endif
+}
+
+static int do_write_bcb(cmd_tbl_t *cmdtp, int flag, int argc,
+			char * const argv[])
+{
+	int j, k, ret;
+	uint8_t *buf;
+	size_t rwsize, maxsize;
+	ulong fw1_off, fw2_off;
+	ulong off;
+	struct mtd_info *nand;
+
+	int dev = nand_curr_device;
+
+	if (argc < 2)
+		return -1;
+
+	fw1_off = simple_strtoul(argv[1], NULL, 16);
+	if (argc > 2)
+		fw2_off = simple_strtoul(argv[2], NULL, 16);
+	else
+		fw2_off = 0;
+
+	nand = nand_info[dev];
+
+	/* Allocate one page, should be enought */
+	rwsize = nand->writesize;
+	buf = malloc(nand->writesize + nand->oobsize);
+
+	/* Set only the first page empty... */
+	memset(buf, 0xff, nand->writesize + nand->oobsize);
+
+	create_fcb(nand, buf, fw1_off, fw2_off);
+
+	puts("Write FCB...\n");
+	rwsize = maxsize = nand->writesize;
+
+	off = 0;
+	for(j = 0; j < BOOT_SEARCH_COUNT; j++) {
+		for (k = 0; k < nand->writesize + nand->oobsize; k++) {
+			*(uint8_t *)(buf + k) ^=
+			RandData[k + ((j * PAGES_PER_STRIDE) % 256)
+			/ 64 * RAND_16K];
+		}
+		/* set BBM to good so we don't need nand scrub */
+		*(uint8_t *)(buf + nand->writesize) = 0xff;
+#ifdef DEBUG
+		printf("Randomized\n"); dump(buf, 512);
+#endif
+		ret = raw_access(nand, (ulong) buf, off, 1, 0);
+		/* revert randomizer */
+		for (k = 0; k < nand->writesize + nand->oobsize; k++) {
+			*(uint8_t *)(buf + k) ^=
+			RandData[k + ((j * PAGES_PER_STRIDE) % 256)
+			/ 64 * RAND_16K];
+		}
+
+		printf("FCB %d bytes written to 0x%x: %s\n", rwsize,
+				(unsigned) off, ret ? "ERROR" : "OK");
+		off += nand->erasesize;
+	}
+	memset (buf, 0xff, nand->writesize + nand->oobsize);
+	create_dbbt(nand, buf);
+
+	puts("Write DBBT...\n");
+	off = BOOT_SEARCH_COUNT * nand->erasesize;
+	for(j = 0; j < BOOT_SEARCH_COUNT; j++) {
+		ret = nand_write(nand, off, &rwsize, (unsigned char *)buf);
+		printf("DBBT %d bytes written to 0x%x: %s\n", rwsize,
+				(unsigned) off, ret ? "ERROR" : "OK");
+		off += nand->erasesize;
+	}
+
+	return 0;
+}
+
+U_BOOT_CMD(
+	writebcb, 3, 0, do_write_bcb,
+	"Write Boot Control Block (FCB and DBBT)",
+	"fw1-off [fw2-off]"
+);
diff --git a/arch/arm/imx-common/spl.c b/arch/arm/imx-common/spl.c
index bdcda7d..29f8fb6 100644
--- a/arch/arm/imx-common/spl.c
+++ b/arch/arm/imx-common/spl.c
@@ -28,7 +28,7 @@ u32 spl_boot_device(void)
 	 */
 	if ((((bmode >> 24) & 0x03)  == 0x01) || /* Serial Downloader */
 		(gpr10_boot && (reg == 1)))
-		return BOOT_DEVICE_UART;
+		return BOOT_DEVICE_SDP;
 	/* BOOT_CFG1[7:4] - see IMX6DQRM Table 8-8 */
 	switch ((reg & 0x000000FF) >> 4) {
 	 /* EIM: See 8.5.1, Table 8-9 */
@@ -39,6 +39,9 @@ u32 spl_boot_device(void)
 		else
 			return BOOT_DEVICE_NOR;
 		break;
+	/* Reserved: Used for force Serial Downloader */
+	case 0x1:
+		return BOOT_DEVICE_SDP;
 	/* SATA: See 8.5.4, Table 8-20 */
 	case 0x2:
 		return BOOT_DEVICE_SATA;
diff --git a/arch/arm/imx-common/video.c b/arch/arm/imx-common/video.c
index fdc987f..549bf9d 100644
--- a/arch/arm/imx-common/video.c
+++ b/arch/arm/imx-common/video.c
@@ -34,7 +34,7 @@ int board_video_skip(void)
 	}
 
 	if (i < display_count) {
-		ret = ipuv3_fb_init(&displays[i].mode, 0,
+		ret = ipuv3_fb_init(&displays[i].mode, displays[i].di ? 1 : 0,
 				    displays[i].pixfmt);
 		if (!ret) {
 			if (displays[i].enable)
diff --git a/arch/arm/include/asm/arch-tegra/tegra_mmc.h b/arch/arm/include/asm/arch-tegra/tegra_mmc.h
index 64c848a..c40599a 100644
--- a/arch/arm/include/asm/arch-tegra/tegra_mmc.h
+++ b/arch/arm/include/asm/arch-tegra/tegra_mmc.h
@@ -108,6 +108,8 @@ struct tegra_mmc {
 #define TEGRA_MMC_CLKCON_SDCLK_FREQ_SEL_SHIFT			8
 #define TEGRA_MMC_CLKCON_SDCLK_FREQ_SEL_MASK			(0xff << 8)
 
+#define TEGRA_MMC_MISCON_ENABLE_EXT_LOOPBACK			(1 << 17)
+
 #define TEGRA_MMC_SWRST_SW_RESET_FOR_ALL			(1 << 0)
 #define TEGRA_MMC_SWRST_SW_RESET_FOR_CMD_LINE			(1 << 1)
 #define TEGRA_MMC_SWRST_SW_RESET_FOR_DAT_LINE			(1 << 2)
diff --git a/arch/arm/include/asm/arch-tegra30/display.h b/arch/arm/include/asm/arch-tegra30/display.h
new file mode 100644
index 0000000..ee5a3f6
--- /dev/null
+++ b/arch/arm/include/asm/arch-tegra30/display.h
@@ -0,0 +1,29 @@
+/*
+ *  (C) Copyright 2010
+ *  NVIDIA Corporation <www.nvidia.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __ASM_ARCH_TEGRA_DISPLAY_H
+#define __ASM_ARCH_TEGRA_DISPLAY_H
+
+#include <asm/arch-tegra/dc.h>
+
+/* This holds information about a window which can be displayed */
+struct disp_ctl_win {
+	enum win_color_depth_id fmt;	/* Color depth/format */
+	unsigned	bpp;		/* Bits per pixel */
+	phys_addr_t	phys_addr;	/* Physical address in memory */
+	unsigned	x;		/* Horizontal address offset (bytes) */
+	unsigned	y;		/* Veritical address offset (bytes) */
+	unsigned	w;		/* Width of source window */
+	unsigned	h;		/* Height of source window */
+	unsigned	stride;		/* Number of bytes per line */
+	unsigned	out_x;		/* Left edge of output window (col) */
+	unsigned	out_y;		/* Top edge of output window (row) */
+	unsigned	out_w;		/* Width of output window in pixels */
+	unsigned	out_h;		/* Height of output window in pixels */
+};
+
+#endif /*__ASM_ARCH_TEGRA_DISPLAY_H*/
diff --git a/arch/arm/include/asm/arch-tegra30/pwm.h b/arch/arm/include/asm/arch-tegra30/pwm.h
new file mode 100644
index 0000000..98d24d0
--- /dev/null
+++ b/arch/arm/include/asm/arch-tegra30/pwm.h
@@ -0,0 +1,14 @@
+/*
+ * Tegra pulse width frequency modulator definitions
+ *
+ * Copyright (c) 2011 The Chromium OS Authors.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __ASM_ARCH_TEGRA30_PWM_H
+#define __ASM_ARCH_TEGRA30_PWM_H
+
+#include <asm/arch-tegra/pwm.h>
+
+#endif	/* __ASM_ARCH_TEGRA30_PWM_H */
diff --git a/arch/arm/include/asm/arch-vf610/crm_regs.h b/arch/arm/include/asm/arch-vf610/crm_regs.h
index a46e396..8d37f8f 100644
--- a/arch/arm/include/asm/arch-vf610/crm_regs.h
+++ b/arch/arm/include/asm/arch-vf610/crm_regs.h
@@ -9,6 +9,8 @@
 
 #ifndef __ASSEMBLY__
 
+#include <linux/types.h>
+
 /* Clock Controller Module (CCM) */
 struct ccm_reg {
 	u32 ccr;
@@ -150,6 +152,9 @@ struct anadig_reg {
 #define CCM_CACRR_ARM_CLK_DIV_MASK		0x7
 #define CCM_CACRR_ARM_CLK_DIV(v)		((v) & 0x7)
 
+#define CCM_CSCMR1_DCU1_CLK_SEL			(1 << 29)
+#define CCM_CSCMR1_DCU0_CLK_SEL			(1 << 28)
+
 #define CCM_CSCMR1_QSPI0_CLK_SEL_OFFSET		22
 #define CCM_CSCMR1_QSPI0_CLK_SEL_MASK		(0x3 << 22)
 #define CCM_CSCMR1_QSPI0_CLK_SEL(v)		(((v) & 0x3) << 22)
@@ -174,6 +179,12 @@ struct anadig_reg {
 #define CCM_CSCDR2_ESDHC1_CLK_DIV_MASK		(0xf << 20)
 #define CCM_CSCDR2_ESDHC1_CLK_DIV(v)		(((v) & 0xf) << 20)
 
+#define CCM_CSCDR3_DCU1_EN			(1 << 23)
+#define CCM_CSCDR3_DCU1_DIV_MASK		(0x7 << 20)
+#define CCM_CSCDR3_DCU1_DIV(v)			(((v) & 0x7) << 20)
+#define CCM_CSCDR3_DCU0_EN			(1 << 19)
+#define CCM_CSCDR3_DCU0_DIV_MASK		(0x7 << 16)
+#define CCM_CSCDR3_DCU0_DIV(v)			(((v) & 0x7) << 16)
 #define CCM_CSCDR3_NFC_PRE_DIV_OFFSET		13
 #define CCM_CSCDR3_NFC_PRE_DIV_MASK		(0x7 << 13)
 #define CCM_CSCDR3_NFC_PRE_DIV(v)		(((v) & 0x7) << 13)
@@ -193,6 +204,7 @@ struct anadig_reg {
 #define CCM_CCGR0_DSPI1_CTRL_MASK		(0x3 << 26)
 #define CCM_CCGR1_USBC0_CTRL_MASK       (0x3 << 8)
 #define CCM_CCGR1_PIT_CTRL_MASK			(0x3 << 14)
+#define CCM_CCGR1_TCON0_CTRL_MASK		(0x3 << 26)
 #define CCM_CCGR1_WDOGA5_CTRL_MASK		(0x3 << 28)
 #define CCM_CCGR2_QSPI0_CTRL_MASK		(0x3 << 8)
 #define CCM_CCGR2_IOMUXC_CTRL_MASK		(0x3 << 16)
@@ -203,6 +215,7 @@ struct anadig_reg {
 #define CCM_CCGR2_PORTE_CTRL_MASK		(0x3 << 26)
 #define CCM_CCGR3_ANADIG_CTRL_MASK		0x3
 #define CCM_CCGR3_SCSC_CTRL_MASK        (0x3 << 4)
+#define CCM_CCGR3_DCU0_CTRL_MASK		(0x3 << 16)
 #define CCM_CCGR4_WKUP_CTRL_MASK		(0x3 << 20)
 #define CCM_CCGR4_CCM_CTRL_MASK			(0x3 << 22)
 #define CCM_CCGR4_GPC_CTRL_MASK			(0x3 << 24)
diff --git a/arch/arm/include/asm/arch-vf610/imx-regs.h b/arch/arm/include/asm/arch-vf610/imx-regs.h
index 9758323..c080b2f 100644
--- a/arch/arm/include/asm/arch-vf610/imx-regs.h
+++ b/arch/arm/include/asm/arch-vf610/imx-regs.h
@@ -69,6 +69,7 @@
 #define USB_PHY0_BASE_ADDR  (AIPS0_BASE_ADDR + 0x00050800)
 #define USB_PHY1_BASE_ADDR  (AIPS0_BASE_ADDR + 0x00050C00)
 #define SCSC_BASE_ADDR		(AIPS0_BASE_ADDR + 0x00052000)
+#define DCU0_BASE_ADDR		(AIPS0_BASE_ADDR + 0x00058000)
 #define ASRC_BASE_ADDR		(AIPS0_BASE_ADDR + 0x00060000)
 #define SPDIF_BASE_ADDR		(AIPS0_BASE_ADDR + 0x00061000)
 #define ESAI_BASE_ADDR		(AIPS0_BASE_ADDR + 0x00062000)
@@ -98,6 +99,7 @@
 #define USBC1_BASE_ADDR     (AIPS1_BASE_ADDR + 0x00034000)
 #define ENET_BASE_ADDR		(AIPS1_BASE_ADDR + 0x00050000)
 #define ENET1_BASE_ADDR		(AIPS1_BASE_ADDR + 0x00051000)
+#define DCU1_BASE_ADDR		(AIPS1_BASE_ADDR + 0x00058000)
 #define NFC_BASE_ADDR		(AIPS1_BASE_ADDR + 0x00060000)
 
 #define QSPI0_AMBA_BASE		0x20000000
diff --git a/arch/arm/include/asm/arch-vf610/iomux-vf610.h b/arch/arm/include/asm/arch-vf610/iomux-vf610.h
index a140be0..a8447a0 100644
--- a/arch/arm/include/asm/arch-vf610/iomux-vf610.h
+++ b/arch/arm/include/asm/arch-vf610/iomux-vf610.h
@@ -41,6 +41,9 @@
 #define VF610_DSPI_SIN_PAD_CTRL	(PAD_CTL_IBE_ENABLE | PAD_CTL_DSE_20ohm | \
 				PAD_CTL_PUS_100K_UP | PAD_CTL_SPEED_HIGH)
 
+#define VF610_DCU_PAD_CTRL	(PAD_CTL_SPEED_MED | PAD_CTL_SRE | \
+				PAD_CTL_DSE_37ohm | PAD_CTL_OBE_ENABLE)
+
 enum {
 	VF610_PAD_PTA6__RMII0_CLKIN		= IOMUX_PAD(0x0000, 0x0000, 2, __NA_, 0, VF610_ENET_PAD_CTRL),
 	VF610_PAD_PTA6__RMII0_CLKOUT		= IOMUX_PAD(0x0000, 0x0000, 1, __NA_, 0, VF610_ENET_PAD_CTRL),
@@ -166,6 +169,35 @@ enum {
 
 	VF610_PAD_PTC28__NF_CLE  		= IOMUX_PAD(0x0194, 0x0194, 6, __NA_, 0, VF610_NFC_CN_PAD_CTRL),
 
+	VF610_PAD_PTE0__DCU0_HSYNC		= IOMUX_PAD(0x01a4, 0x01a4, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE1__DCU0_VSYNC		= IOMUX_PAD(0x01a8, 0x01a8, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE2__DCU0_PCLK		= IOMUX_PAD(0x01ac, 0x01ac, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE4__DCU0_DE			= IOMUX_PAD(0x01b4, 0x01b4, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE5__DCU0_R0			= IOMUX_PAD(0x01b8, 0x01b8, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE6__DCU0_R1			= IOMUX_PAD(0x01bc, 0x01bc, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE7__DCU0_R2			= IOMUX_PAD(0x01c0, 0x01c0, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE8__DCU0_R3			= IOMUX_PAD(0x01c4, 0x01c4, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE9__DCU0_R4			= IOMUX_PAD(0x01c8, 0x01c8, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE10__DCU0_R5		= IOMUX_PAD(0x01cc, 0x01cc, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE11__DCU0_R6		= IOMUX_PAD(0x01d0, 0x01d0, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE12__DCU0_R7		= IOMUX_PAD(0x01d4, 0x01d4, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE13__DCU0_G0		= IOMUX_PAD(0x01d8, 0x01d8, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE14__DCU0_G1		= IOMUX_PAD(0x01dc, 0x01dc, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE15__DCU0_G2		= IOMUX_PAD(0x01e0, 0x01e0, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE16__DCU0_G3		= IOMUX_PAD(0x01e4, 0x01e4, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE17__DCU0_G4		= IOMUX_PAD(0x01e8, 0x01e8, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE18__DCU0_G5		= IOMUX_PAD(0x01ec, 0x01ec, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE19__DCU0_G6		= IOMUX_PAD(0x01f0, 0x01f0, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE20__DCU0_G7		= IOMUX_PAD(0x01f4, 0x01f4, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE21__DCU0_B0		= IOMUX_PAD(0x01f8, 0x01f8, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE22__DCU0_B1		= IOMUX_PAD(0x01fc, 0x01fc, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE23__DCU0_B2		= IOMUX_PAD(0x0200, 0x0200, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE24__DCU0_B3		= IOMUX_PAD(0x0204, 0x0204, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE25__DCU0_B4		= IOMUX_PAD(0x0208, 0x0208, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE26__DCU0_B5		= IOMUX_PAD(0x020c, 0x020c, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE27__DCU0_B6		= IOMUX_PAD(0x0210, 0x0210, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+	VF610_PAD_PTE28__DCU0_B7		= IOMUX_PAD(0x0214, 0x0214, 1, __NA_, 0, VF610_DCU_PAD_CTRL),
+
 	VF610_PAD_DDR_RESETB			= IOMUX_PAD(0x021c, 0x021c, 0, __NA_, 0, VF610_DDR_PAD_CTRL),
 	VF610_PAD_DDR_A15__DDR_A_15		= IOMUX_PAD(0x0220, 0x0220, 0, __NA_, 0, VF610_DDR_PAD_CTRL),
 	VF610_PAD_DDR_A14__DDR_A_14		= IOMUX_PAD(0x0224, 0x0224, 0, __NA_, 0, VF610_DDR_PAD_CTRL),
diff --git a/arch/arm/include/asm/imx-common/iomux-v3.h b/arch/arm/include/asm/imx-common/iomux-v3.h
index b3af696..6ba8a25 100644
--- a/arch/arm/include/asm/imx-common/iomux-v3.h
+++ b/arch/arm/include/asm/imx-common/iomux-v3.h
@@ -163,7 +163,10 @@ typedef u64 iomux_v3_cfg_t;
 #define PAD_CTL_ODE		(1 << 10)
 
 #define PAD_CTL_DSE_150ohm	(1 << 6)
+#define PAD_CTL_DSE_75ohm	(2 << 6)
 #define PAD_CTL_DSE_50ohm	(3 << 6)
+#define PAD_CTL_DSE_37ohm	(4 << 6)
+#define PAD_CTL_DSE_30ohm	(5 << 6)
 #define PAD_CTL_DSE_25ohm	(6 << 6)
 #define PAD_CTL_DSE_20ohm	(7 << 6)
 
diff --git a/arch/arm/include/asm/imx-common/regs-bch.h b/arch/arm/include/asm/imx-common/regs-bch.h
index adfbace..9b8598b 100644
--- a/arch/arm/include/asm/imx-common/regs-bch.h
+++ b/arch/arm/include/asm/imx-common/regs-bch.h
@@ -5,7 +5,7 @@
  * on behalf of DENX Software Engineering GmbH
  *
  * Based on code from LTIB:
- * Copyright 2008-2010 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright 2008-2010, 2016 Freescale Semiconductor, Inc. All Rights Reserved.
  *
  * SPDX-License-Identifier:	GPL-2.0+
  */
@@ -41,6 +41,7 @@ struct mxs_bch_regs {
 	mxs_reg_32(hw_bch_dbgahbmread)
 	mxs_reg_32(hw_bch_blockname)
 	mxs_reg_32(hw_bch_version)
+	mxs_reg_32(hw_bch_debug1)
 };
 #endif
 
@@ -76,6 +77,9 @@ struct mxs_bch_regs {
 
 #define	BCH_MODE_ERASE_THRESHOLD_MASK			0xff
 #define	BCH_MODE_ERASE_THRESHOLD_OFFSET			0
+#define BCH_MODE_ERASE_THRESHOLD(v)			\
+	(((v) << BCH_MODE_ERASE_THRESHOLD_OFFSET) &	\
+	 BCH_MODE_ERASE_THRESHOLD_MASK)
 
 #define	BCH_ENCODEPTR_ADDR_MASK				0xffffffff
 #define	BCH_ENCODEPTR_ADDR_OFFSET			0
diff --git a/arch/arm/include/asm/imx-common/sys_proto.h b/arch/arm/include/asm/imx-common/sys_proto.h
index 005435a..59e213a 100644
--- a/arch/arm/include/asm/imx-common/sys_proto.h
+++ b/arch/arm/include/asm/imx-common/sys_proto.h
@@ -50,6 +50,8 @@ void init_aips(void);
 void init_src(void);
 void imx_set_wdog_powerdown(bool enable);
 
+int arch_auxiliary_core_check_up(u32 core_id);
+
 /*
  * Initializes on-chip ethernet controllers.
  * to override, implement board_eth_init()
diff --git a/arch/arm/include/asm/imx-common/video.h b/arch/arm/include/asm/imx-common/video.h
index cad5f86..941a031 100644
--- a/arch/arm/include/asm/imx-common/video.h
+++ b/arch/arm/include/asm/imx-common/video.h
@@ -12,6 +12,7 @@ struct display_info_t {
 	int	bus;
 	int	addr;
 	int	pixfmt;
+	int	di;
 	int	(*detect)(struct display_info_t const *dev);
 	void	(*enable)(struct display_info_t const *dev);
 	struct	fb_videomode mode;
diff --git a/arch/arm/include/asm/spl.h b/arch/arm/include/asm/spl.h
index a0bda28..29b45cf 100644
--- a/arch/arm/include/asm/spl.h
+++ b/arch/arm/include/asm/spl.h
@@ -29,6 +29,7 @@ enum {
 	BOOT_DEVICE_I2C,
 	BOOT_DEVICE_BOARD,
 	BOOT_DEVICE_DFU,
+	BOOT_DEVICE_SDP,
 	BOOT_DEVICE_NONE
 };
 #endif
diff --git a/arch/arm/mach-tegra/Kconfig b/arch/arm/mach-tegra/Kconfig
index 5bdbc70..db98946 100644
--- a/arch/arm/mach-tegra/Kconfig
+++ b/arch/arm/mach-tegra/Kconfig
@@ -31,7 +31,6 @@ config TEGRA_COMMON
 	select DM_MMC
 	select DM_PWM
 	select DM_RESET
-	select DM_SERIAL
 	select DM_SPI
 	select DM_SPI_FLASH
 	select MISC
@@ -113,6 +112,9 @@ config TEGRA_DISCONNECT_UDC_ON_BOOT
 config SYS_MALLOC_F_LEN
 	default 0x1800
 
+config DM_SERIAL
+	default n
+
 source "arch/arm/mach-tegra/tegra20/Kconfig"
 source "arch/arm/mach-tegra/tegra30/Kconfig"
 source "arch/arm/mach-tegra/tegra114/Kconfig"
diff --git a/arch/arm/mach-tegra/tegra124/Kconfig b/arch/arm/mach-tegra/tegra124/Kconfig
index df77462..443bfeb 100644
--- a/arch/arm/mach-tegra/tegra124/Kconfig
+++ b/arch/arm/mach-tegra/tegra124/Kconfig
@@ -4,6 +4,12 @@ choice
 	prompt "Tegra124 board select"
 	optional
 
+config TARGET_APALIS_TK1
+	bool "Toradex Apalis TK1 module"
+	select CPU_V7_HAS_NONSEC
+	select CPU_V7_HAS_VIRT
+	select ARCH_SUPPORT_PSCI
+
 config TARGET_JETSON_TK1
 	bool "NVIDIA Tegra124 Jetson TK1 board"
 	select CPU_V7_HAS_NONSEC
@@ -42,5 +48,6 @@ source "board/cei/cei-tk1-som/Kconfig"
 source "board/nvidia/jetson-tk1/Kconfig"
 source "board/nvidia/nyan-big/Kconfig"
 source "board/nvidia/venice2/Kconfig"
+source "board/toradex/apalis-tk1/Kconfig"
 
 endif
diff --git a/arch/arm/mach-tegra/tegra20/clock.c b/arch/arm/mach-tegra/tegra20/clock.c
index ec04cf5..71052be 100644
--- a/arch/arm/mach-tegra/tegra20/clock.c
+++ b/arch/arm/mach-tegra/tegra20/clock.c
@@ -751,6 +751,7 @@ int tegra_plle_enable(void)
 }
 
 struct periph_clk_init periph_clk_init_table[] = {
+#ifndef CONFIG_TARGET_COLIBRI_T20
 	{ PERIPH_ID_SPI1, CLOCK_ID_PERIPH },
 	{ PERIPH_ID_SBC1, CLOCK_ID_PERIPH },
 	{ PERIPH_ID_SBC2, CLOCK_ID_PERIPH },
@@ -763,6 +764,7 @@ struct periph_clk_init periph_clk_init_table[] = {
 	{ PERIPH_ID_SDMMC2, CLOCK_ID_PERIPH },
 	{ PERIPH_ID_SDMMC3, CLOCK_ID_PERIPH },
 	{ PERIPH_ID_SDMMC4, CLOCK_ID_PERIPH },
+#endif /* CONFIG_TARGET_COLIBRI_T20 */
 	{ PERIPH_ID_PWM, CLOCK_ID_SFROM32KHZ },
 	{ PERIPH_ID_DVC_I2C, CLOCK_ID_PERIPH },
 	{ PERIPH_ID_I2C1, CLOCK_ID_PERIPH },
diff --git a/arch/arm/mach-tegra/tegra20/cpu.c b/arch/arm/mach-tegra/tegra20/cpu.c
index 7fbc2e2..3a0587b 100644
--- a/arch/arm/mach-tegra/tegra20/cpu.c
+++ b/arch/arm/mach-tegra/tegra20/cpu.c
@@ -5,16 +5,66 @@
  */
 
 #include <common.h>
-#include <asm/io.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/pmu.h>
 #include <asm/arch/tegra.h>
+#include <asm/arch-tegra/clk_rst.h>
 #include <asm/arch-tegra/pmc.h>
+#include <asm/arch-tegra/tegra_i2c.h>
+#include <asm/io.h>
 #include "../cpu.h"
 
+#define I2C_SEND_2_BYTES		0x0a02
+#define TPS6586X_I2C_ADDR		(0x34<<1)
+#define TPS6586X_VCC1_REG		0x20
+#define TPS6586X_SM1V1_REG		0x23
+#define TPS6586X_SM0V1_REG		0x26
+
+/* Tegra20-specific DVC init code */
+void tegra_i2c_ll_init(void)
+{
+	struct dvc_ctlr *reg = (struct dvc_ctlr *)TEGRA_DVC_BASE;
+
+	writel(DVC_CTRL_REG3_I2C_HW_SW_PROG_MASK, &reg->ctrl3);
+}
+
+void tegra_i2c_ll_write(uint offset, uint8_t data)
+{
+	struct dvc_ctlr *reg = (struct dvc_ctlr *)TEGRA_DVC_BASE;
+
+	writel(TPS6586X_I2C_ADDR, &reg->cmd_addr0);
+	writel(2, &reg->cnfg);
+
+	writel((data << 8) | (offset & 0xff), &reg->cmd_data1);
+	writel(I2C_SEND_2_BYTES, &reg->cnfg);
+}
+
 static void enable_cpu_power_rail(void)
 {
 	struct pmc_ctlr *pmc = (struct pmc_ctlr *)NV_PA_PMC_BASE;
 	u32 reg;
 
+	debug("enable_cpu_power_rail entry\n");
+
+#ifdef CONFIG_TEGRA_EARLY_TPS6586X
+	tegra_i2c_ll_init();
+
+	/* Set SM0 being VDD_CORE_1.2V to 1.2 volts */
+	tegra_i2c_ll_write(TPS6586X_SM0V1_REG, 0x13);
+
+	udelay(1000);
+
+	/* Set SM1 being VDD_CPU_1.0V to 1.0 volts */
+	tegra_i2c_ll_write(TPS6586X_SM1V1_REG, 0x0b);
+
+	udelay(1000);
+
+	/* Make sure primary voltages are selected and ramped towards */
+	tegra_i2c_ll_write(TPS6586X_VCC1_REG, 0x05);
+
+	udelay(10 * 1000);
+#endif
+
 	reg = readl(&pmc->pmc_cntrl);
 	reg |= CPUPWRREQ_OE;
 	writel(reg, &pmc->pmc_cntrl);
@@ -28,8 +78,34 @@ static void enable_cpu_power_rail(void)
 	udelay(3750);
 }
 
+/* T20 requires some special clock initialization, incl. setting up DVC I2C */
+void t20_init_clocks(void)
+{
+	debug("t20_init_clocks entry\n");
+
+	/* Put i2c in reset and enable clocks */
+	reset_set_enable(PERIPH_ID_DVC_I2C, 1);
+	clock_set_enable(PERIPH_ID_DVC_I2C, 1);
+
+	/*
+	 * Our high-level clock routines are not available prior to
+	 * relocation. We use the low-level functions which require a
+	 * hard-coded divisor. Use CLK_M with divide by (n + 1 = 16)
+	 */
+	clock_ll_set_source_divisor(PERIPH_ID_DVC_I2C, 3, 15);
+
+	/* Give clocks time to stabilize, then take i2c out of reset */
+	udelay(1000);
+
+	reset_set_enable(PERIPH_ID_DVC_I2C, 0);
+}
+
 void start_cpu(u32 reset_vector)
 {
+	debug("%s entry, reset_vector = %x\n", __func__, reset_vector);
+
+	t20_init_clocks();
+
 	/* Enable VDD_CPU */
 	enable_cpu_power_rail();
 
diff --git a/arch/arm/mach-tegra/tegra30/clock.c b/arch/arm/mach-tegra/tegra30/clock.c
index 4fd8b8a..b366028 100644
--- a/arch/arm/mach-tegra/tegra30/clock.c
+++ b/arch/arm/mach-tegra/tegra30/clock.c
@@ -797,6 +797,7 @@ int tegra_plle_enable(void)
 }
 
 struct periph_clk_init periph_clk_init_table[] = {
+#if !defined(CONFIG_TARGET_APALIS_T30) && !defined(CONFIG_TARGET_COLIBRI_T30)
 	{ PERIPH_ID_SBC1, CLOCK_ID_PERIPH },
 	{ PERIPH_ID_SBC2, CLOCK_ID_PERIPH },
 	{ PERIPH_ID_SBC3, CLOCK_ID_PERIPH },
@@ -805,6 +806,7 @@ struct periph_clk_init periph_clk_init_table[] = {
 	{ PERIPH_ID_SBC6, CLOCK_ID_PERIPH },
 	{ PERIPH_ID_HOST1X, CLOCK_ID_PERIPH },
 	{ PERIPH_ID_DISP1, CLOCK_ID_CGENERAL },
+#endif /* !CONFIG_TARGET_APALIS_T30 && !CONFIG_TARGET_COLIBRI_T30 */
 	{ PERIPH_ID_NDFLASH, CLOCK_ID_PERIPH },
 	{ PERIPH_ID_SDMMC1, CLOCK_ID_PERIPH },
 	{ PERIPH_ID_SDMMC2, CLOCK_ID_PERIPH },
diff --git a/arch/arm/mach-tegra/tegra30/cpu.c b/arch/arm/mach-tegra/tegra30/cpu.c
index 66b021b..e0c9984 100644
--- a/arch/arm/mach-tegra/tegra30/cpu.c
+++ b/arch/arm/mach-tegra/tegra30/cpu.c
@@ -40,6 +40,8 @@ void tegra_i2c_ll_write_data(uint data, uint config)
 #define TPS62361B_SET3_DATA		(0x4600 | TPS62361B_SET3_REG)
 
 #define TPS65911_I2C_ADDR		0x5A
+#define TPS65911_GPIO1_REG		0x61
+#define TPS65911_GPIO1_DATA		(0x0000 | TPS65911_GPIO1_REG)
 #define TPS65911_VDDCTRL_OP_REG		0x28
 #define TPS65911_VDDCTRL_SR_REG		0x27
 #define TPS65911_VDDCTRL_OP_DATA	(0x2400 | TPS65911_VDDCTRL_OP_REG)
@@ -65,6 +67,14 @@ static void enable_cpu_power_rail(void)
 	tegra_i2c_ll_write_addr(TPS62361B_I2C_ADDR, 2);
 	tegra_i2c_ll_write_data(TPS62361B_SET3_DATA, I2C_SEND_2_BYTES);
 #endif
+#ifdef CONFIG_TEGRA_VDD_CORE_TPS62362_SET_TPS65911_GPIO1
+	/*
+	 * Just release TPS65911 GPIO1 (EN_CORE_DVFS_N) connected to TPS62362
+	 * VSEL1 to switch VDD_CORE back to boot set 1 defaulting to 1.200V
+	 */
+	tegra_i2c_ll_write_addr(TPS65911_I2C_ADDR, 2);
+	tegra_i2c_ll_write_data(TPS65911_GPIO1_DATA, I2C_SEND_2_BYTES);
+#endif
 	udelay(1000);
 
 	/*
diff --git a/board/toradex/apalis-tk1/Kconfig b/board/toradex/apalis-tk1/Kconfig
new file mode 100644
index 0000000..05407ad
--- /dev/null
+++ b/board/toradex/apalis-tk1/Kconfig
@@ -0,0 +1,30 @@
+if TARGET_APALIS_TK1
+
+config SYS_BOARD
+	default "apalis-tk1"
+
+config SYS_VENDOR
+	default "toradex"
+
+config SYS_CONFIG_NAME
+	default "apalis-tk1"
+
+config TDX_CFG_BLOCK
+	default y
+
+config TDX_HAVE_MMC
+	default y
+
+config TDX_CFG_BLOCK_DEV
+	default "0"
+
+config TDX_CFG_BLOCK_PART
+	default "1"
+
+# Toradex config block in eMMC, at the end of 1st "boot sector"
+config TDX_CFG_BLOCK_OFFSET
+	default "-512"
+
+source "board/toradex/common/Kconfig"
+
+endif
diff --git a/board/toradex/apalis-tk1/MAINTAINERS b/board/toradex/apalis-tk1/MAINTAINERS
new file mode 100644
index 0000000..9b87233
--- /dev/null
+++ b/board/toradex/apalis-tk1/MAINTAINERS
@@ -0,0 +1,10 @@
+Apalis TK1
+M:	Marcel Ziswiler <marcel.ziswiler@toradex.com>
+M:	Toradex ARM Support <support.arm@toradex.com>
+W:	http://developer.toradex.com/software/linux/linux-software
+W:	https://www.toradex.com/community
+S:	Maintained
+F:	board/toradex/apalis-tk1/
+F:	include/configs/apalis-tk1.h
+F:	configs/apalis-tk1_defconfig
+F:	arch/arm/dts/tegra124-apalis.dtb
diff --git a/board/toradex/apalis-tk1/Makefile b/board/toradex/apalis-tk1/Makefile
new file mode 100644
index 0000000..9ef06dd
--- /dev/null
+++ b/board/toradex/apalis-tk1/Makefile
@@ -0,0 +1,5 @@
+# Copyright (c) 2016 Toradex, Inc.
+# SPDX-License-Identifier:      GPL-2.0+
+
+obj-y	+= as3722_init.o
+obj-y	+= apalis-tk1.o
diff --git a/board/toradex/apalis-tk1/apalis-tk1.c b/board/toradex/apalis-tk1/apalis-tk1.c
new file mode 100644
index 0000000..8ca068a
--- /dev/null
+++ b/board/toradex/apalis-tk1/apalis-tk1.c
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2016 Toradex, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/arch-tegra/ap.h>
+#include <asm/gpio.h>
+#include <asm/io.h>
+#include <asm/arch/gpio.h>
+#include <asm/arch/pinmux.h>
+#include <power/as3722.h>
+
+#include "../common/tdx-common.h"
+#include "pinmux-config-apalis-tk1.h"
+
+#define LAN_RESET_N TEGRA_GPIO(S, 2)
+
+int arch_misc_init(void)
+{
+	if (readl(NV_PA_BASE_SRAM + NVBOOTINFOTABLE_BOOTTYPE) ==
+	    NVBOOTTYPE_RECOVERY) {
+		printf("USB recovery mode, disabled autoboot\n");
+		setenv("bootdelay", "-1");
+	}
+
+	return 0;
+}
+
+int checkboard(void)
+{
+	puts("Model: Toradex Apalis TK1 2GB\n");
+
+	return 0;
+}
+
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_BOARD_SETUP)
+int ft_board_setup(void *blob, bd_t *bd)
+{
+	return ft_common_board_setup(blob, bd);
+}
+#endif
+
+/*
+ * Routine: pinmux_init
+ * Description: Do individual peripheral pinmux configs
+ */
+void pinmux_init(void)
+{
+	pinmux_clear_tristate_input_clamping();
+
+	gpio_config_table(apalis_tk1_gpio_inits,
+			  ARRAY_SIZE(apalis_tk1_gpio_inits));
+
+	pinmux_config_pingrp_table(apalis_tk1_pingrps,
+				   ARRAY_SIZE(apalis_tk1_pingrps));
+
+	pinmux_config_drvgrp_table(apalis_tk1_drvgrps,
+				   ARRAY_SIZE(apalis_tk1_drvgrps));
+}
+
+#ifdef CONFIG_PCI_TEGRA
+int tegra_pcie_board_init(void)
+{
+	struct udevice *pmic;
+	int err;
+
+	err = as3722_init(&pmic);
+	if (err) {
+		error("failed to initialize AS3722 PMIC: %d\n", err);
+		return err;
+	}
+
+	err = as3722_sd_enable(pmic, 4);
+	if (err < 0) {
+		error("failed to enable SD4: %d\n", err);
+		return err;
+	}
+
+	err = as3722_sd_set_voltage(pmic, 4, 0x24);
+	if (err < 0) {
+		error("failed to set SD4 voltage: %d\n", err);
+		return err;
+	}
+
+	err = as3722_gpio_configure(pmic, 1, AS3722_GPIO_OUTPUT_VDDH |
+					     AS3722_GPIO_INVERT);
+	if (err < 0) {
+		error("failed to configure GPIO#1 as output: %d\n", err);
+		return err;
+	}
+
+	err = as3722_gpio_direction_output(pmic, 2, 1);
+	if (err < 0) {
+		error("failed to set GPIO#2 high: %d\n", err);
+		return err;
+	}
+
+	/* Reset I210 Gigabit Ethernet Controller */
+	gpio_request(LAN_RESET_N, "LAN_RESET_N");
+	gpio_direction_output(LAN_RESET_N, 0);
+
+	/*
+	 * Make sure we don't get any back feeding from LAN_WAKE_N resp.
+	 * DEV_OFF_N
+	 */
+	gpio_request(TEGRA_GPIO(O, 5), "LAN_WAKE_N");
+	gpio_direction_output(TEGRA_GPIO(O, 5), 0);
+
+	gpio_request(TEGRA_GPIO(O, 6), "LAN_DEV_OFF_N");
+	gpio_direction_output(TEGRA_GPIO(O, 6), 0);
+
+	/* Make sure LDO9 and LDO10 are initially enabled @ 0V */
+	err = as3722_ldo_enable(pmic, 9);
+	if (err < 0) {
+		error("failed to enable LDO9: %d\n", err);
+		return err;
+	}
+	err = as3722_ldo_enable(pmic, 10);
+	if (err < 0) {
+		error("failed to enable LDO10: %d\n", err);
+		return err;
+	}
+	err = as3722_ldo_set_voltage(pmic, 9, 0x80);
+	if (err < 0) {
+		error("failed to set LDO9 voltage: %d\n", err);
+		return err;
+	}
+	err = as3722_ldo_set_voltage(pmic, 10, 0x80);
+	if (err < 0) {
+		error("failed to set LDO10 voltage: %d\n", err);
+		return err;
+	}
+
+	mdelay(100);
+
+	/* Make sure controller gets enabled by disabling DEV_OFF_N */
+	gpio_set_value(TEGRA_GPIO(O, 6), 1);
+
+	/* Enable LDO9 and LDO10 for +V3.3_ETH on patched prototypes */
+	err = as3722_ldo_set_voltage(pmic, 9, 0xff);
+	if (err < 0) {
+		error("failed to set LDO9 voltage: %d\n", err);
+		return err;
+	}
+	err = as3722_ldo_set_voltage(pmic, 10, 0xff);
+	if (err < 0) {
+		error("failed to set LDO10 voltage: %d\n", err);
+		return err;
+	}
+
+	mdelay(100);
+	gpio_set_value(LAN_RESET_N, 1);
+
+#ifdef APALIS_TK1_PCIE_EVALBOARD_INIT
+#define PEX_PERST_N	TEGRA_GPIO(DD, 1) /* Apalis GPIO7 */
+#define RESET_MOCI_CTRL	TEGRA_GPIO(U, 4)
+
+	/* Reset PLX PEX 8605 PCIe Switch plus PCIe devices on Apalis Evaluation
+	   Board */
+	gpio_request(PEX_PERST_N, "PEX_PERST_N");
+	gpio_request(RESET_MOCI_CTRL, "RESET_MOCI_CTRL");
+	gpio_direction_output(PEX_PERST_N, 0);
+	gpio_direction_output(RESET_MOCI_CTRL, 0);
+	/* Must be asserted for 100 ms after power and clocks are stable */
+	mdelay(100);
+	gpio_set_value(PEX_PERST_N, 1);
+	/* Err_5: PEX_REFCLK_OUTpx/nx Clock Outputs is not Guaranteed Until
+	   900 us After PEX_PERST# De-assertion */
+	mdelay(1);
+	gpio_set_value(RESET_MOCI_CTRL, 1);
+#endif /* APALIS_T30_PCIE_EVALBOARD_INIT */
+
+	return 0;
+}
+#endif /* CONFIG_PCI_TEGRA */
diff --git a/board/toradex/apalis-tk1/as3722_init.c b/board/toradex/apalis-tk1/as3722_init.c
new file mode 100644
index 0000000..4917034
--- /dev/null
+++ b/board/toradex/apalis-tk1/as3722_init.c
@@ -0,0 +1,117 @@
+/*
+ * Copyright (c) 2012-2016 Toradex, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/arch-tegra/tegra_i2c.h>
+#include "as3722_init.h"
+
+/* AS3722-PMIC-specific early init code - get CPU rails up, etc */
+
+void tegra_i2c_ll_write_addr(uint addr, uint config)
+{
+	struct i2c_ctlr *reg = (struct i2c_ctlr *)TEGRA_DVC_BASE;
+
+	writel(addr, &reg->cmd_addr0);
+	writel(config, &reg->cnfg);
+}
+
+void tegra_i2c_ll_write_data(uint data, uint config)
+{
+	struct i2c_ctlr *reg = (struct i2c_ctlr *)TEGRA_DVC_BASE;
+
+	writel(data, &reg->cmd_data1);
+	writel(config, &reg->cnfg);
+}
+
+void pmic_enable_cpu_vdd(void)
+{
+	debug("%s entry\n", __func__);
+
+#ifdef AS3722_SD1VOLTAGE_DATA
+	/* Set up VDD_CORE, for boards where OTP is incorrect*/
+	debug("%s: Setting VDD_CORE via AS3722 reg 1\n", __func__);
+	/* Configure VDD_CORE via the AS3722 PMIC on the PWR I2C bus */
+	tegra_i2c_ll_write_addr(AS3722_I2C_ADDR, 2);
+	tegra_i2c_ll_write_data(AS3722_SD1VOLTAGE_DATA, I2C_SEND_2_BYTES);
+	/*
+	 * Don't write SDCONTROL - it's already 0x7F, i.e. all SDs enabled.
+	 * tegra_i2c_ll_write_data(AS3722_SD1CONTROL_DATA, I2C_SEND_2_BYTES);
+	 */
+	udelay(10 * 1000);
+#endif
+
+	debug("%s: Setting VDD_CPU to 1.0V via AS3722 reg 0/4D\n", __func__);
+	/*
+	 * Bring up VDD_CPU via the AS3722 PMIC on the PWR I2C bus.
+	 * First set VDD to 1.0V, then enable the VDD regulator.
+	 */
+	tegra_i2c_ll_write_addr(AS3722_I2C_ADDR, 2);
+	tegra_i2c_ll_write_data(AS3722_SD0VOLTAGE_DATA, I2C_SEND_2_BYTES);
+	/*
+	 * Don't write SDCONTROL - it's already 0x7F, i.e. all SDs enabled.
+	 * tegra_i2c_ll_write_data(AS3722_SD0CONTROL_DATA, I2C_SEND_2_BYTES);
+	 */
+	udelay(10 * 1000);
+
+	debug("%s: Setting VDD_GPU to 1.0V via AS3722 reg 6/4D\n", __func__);
+	/*
+	 * Bring up VDD_GPU via the AS3722 PMIC on the PWR I2C bus.
+	 * First set VDD to 1.0V, then enable the VDD regulator.
+	 */
+	tegra_i2c_ll_write_addr(AS3722_I2C_ADDR, 2);
+	tegra_i2c_ll_write_data(AS3722_SD6VOLTAGE_DATA, I2C_SEND_2_BYTES);
+	/*
+	 * Don't write SDCONTROL - it's already 0x7F, i.e. all SDs enabled.
+	 * tegra_i2c_ll_write_data(AS3722_SD6CONTROL_DATA, I2C_SEND_2_BYTES);
+	 */
+	udelay(10 * 1000);
+
+	debug("%s: Set VPP_FUSE to 1.2V via AS3722 reg 0x12/4E\n", __func__);
+	/*
+	 * Bring up VPP_FUSE via the AS3722 PMIC on the PWR I2C bus.
+	 * First set VDD to 1.2V, then enable the VDD regulator.
+	 */
+	tegra_i2c_ll_write_addr(AS3722_I2C_ADDR, 2);
+	tegra_i2c_ll_write_data(AS3722_LDO2VOLTAGE_DATA, I2C_SEND_2_BYTES);
+	/*
+	 * Don't write LDCONTROL - it's already 0xFF, i.e. all LDOs enabled.
+	 * tegra_i2c_ll_write_data(AS3722_LDO2CONTROL_DATA, I2C_SEND_2_BYTES);
+	 */
+	udelay(10 * 1000);
+
+	debug("%s: Set VDD_SDMMC1 to 3.3V via AS3722 reg 0x11/4E\n", __func__);
+	/*
+	 * Bring up VDD_SDMMC1 via the AS3722 PMIC on the PWR I2C bus.
+	 * First set it to value closest to 3.3V, then enable the regulator
+	 *
+	 * NOTE: We do this early because doing it later seems to hose the CPU
+	 * power rail/partition startup. Need to debug.
+	 */
+	tegra_i2c_ll_write_addr(AS3722_I2C_ADDR, 2);
+	tegra_i2c_ll_write_data(AS3722_LDO1VOLTAGE_DATA, I2C_SEND_2_BYTES);
+	/*
+	 * Don't write LDCONTROL - it's already 0xFF, i.e. all LDOs enabled.
+	 * tegra_i2c_ll_write_data(AS3722_LDO1CONTROL_DATA, I2C_SEND_2_BYTES);
+	 */
+	udelay(10 * 1000);
+
+	debug("%s: Set VDD_SDMMC3 to 3.3V via AS3722 reg 0x16/4E\n", __func__);
+	/*
+	 * Bring up VDD_SDMMC3 via the AS3722 PMIC on the PWR I2C bus.
+	 * First set it to bypass 3.3V straight thru, then enable the regulator
+	 *
+	 * NOTE: We do this early because doing it later seems to hose the CPU
+	 * power rail/partition startup. Need to debug.
+	 */
+	tegra_i2c_ll_write_addr(AS3722_I2C_ADDR, 2);
+	tegra_i2c_ll_write_data(AS3722_LDO6VOLTAGE_DATA, I2C_SEND_2_BYTES);
+	/*
+	 * Don't write LDCONTROL - it's already 0xFF, i.e. all LDOs enabled.
+	 * tegra_i2c_ll_write_data(AS3722_LDO6CONTROL_DATA, I2C_SEND_2_BYTES);
+	 */
+	udelay(10 * 1000);
+}
diff --git a/board/toradex/apalis-tk1/as3722_init.h b/board/toradex/apalis-tk1/as3722_init.h
new file mode 100644
index 0000000..64898a3
--- /dev/null
+++ b/board/toradex/apalis-tk1/as3722_init.h
@@ -0,0 +1,41 @@
+/*
+ * Copyright (c) 2012-2016 Toradex, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+/* AS3722-PMIC-specific early init regs */
+
+#define AS3722_I2C_ADDR		0x80
+
+#define AS3722_SD0VOLTAGE_REG	0x00	/* CPU */
+#define AS3722_SD1VOLTAGE_REG	0x01	/* CORE, already set by OTP */
+#define AS3722_SD6VOLTAGE_REG	0x06	/* GPU */
+#define AS3722_SDCONTROL_REG	0x4D
+
+#define AS3722_LDO1VOLTAGE_REG	0x11	/* VDD_SDMMC1 */
+#define AS3722_LDO2VOLTAGE_REG	0x12	/* VPP_FUSE */
+#define AS3722_LDO6VOLTAGE_REG	0x16	/* VDD_SDMMC3 */
+#define AS3722_LDCONTROL_REG	0x4E
+
+#define AS3722_SD0VOLTAGE_DATA	(0x3C00 | AS3722_SD0VOLTAGE_REG)
+#define AS3722_SD0CONTROL_DATA	(0x0100 | AS3722_SDCONTROL_REG)
+
+#define AS3722_SD1VOLTAGE_DATA	(0x3200 | AS3722_SD1VOLTAGE_REG)
+#define AS3722_SD1CONTROL_DATA	(0x0200 | AS3722_SDCONTROL_REG)
+
+#define AS3722_SD6CONTROL_DATA	(0x4000 | AS3722_SDCONTROL_REG)
+#define AS3722_SD6VOLTAGE_DATA	(0x2800 | AS3722_SD6VOLTAGE_REG)
+
+#define AS3722_LDO1CONTROL_DATA	(0x0200 | AS3722_LDCONTROL_REG)
+#define AS3722_LDO1VOLTAGE_DATA	(0x7F00 | AS3722_LDO1VOLTAGE_REG)
+
+#define AS3722_LDO2CONTROL_DATA	(0x0400 | AS3722_LDCONTROL_REG)
+#define AS3722_LDO2VOLTAGE_DATA	(0x1000 | AS3722_LDO2VOLTAGE_REG)
+
+#define AS3722_LDO6CONTROL_DATA	(0x4000 | AS3722_LDCONTROL_REG)
+#define AS3722_LDO6VOLTAGE_DATA	(0x3F00 | AS3722_LDO6VOLTAGE_REG)
+
+#define I2C_SEND_2_BYTES	0x0A02
+
+void pmic_enable_cpu_vdd(void);
diff --git a/board/toradex/apalis-tk1/pinmux-config-apalis-tk1.h b/board/toradex/apalis-tk1/pinmux-config-apalis-tk1.h
new file mode 100644
index 0000000..5ed0da3
--- /dev/null
+++ b/board/toradex/apalis-tk1/pinmux-config-apalis-tk1.h
@@ -0,0 +1,287 @@
+/*
+ * Copyright (c) 2016, Toradex, Inc.
+ *
+ * SPDX-License-Identifier: GPL-2.0+
+ */
+
+#ifndef _PINMUX_CONFIG_APALIS_TK1_H_
+#define _PINMUX_CONFIG_APALIS_TK1_H_
+
+#define GPIO_INIT(_port, _gpio, _init)			\
+	{						\
+		.gpio	= TEGRA_GPIO(_port, _gpio),	\
+		.init	= TEGRA_GPIO_INIT_##_init,	\
+	}
+
+static const struct tegra_gpio_config apalis_tk1_gpio_inits[] = {
+	/*        port, pin, init_val */
+	GPIO_INIT(A,    1,   IN),
+	GPIO_INIT(B,    1,   IN),
+	GPIO_INIT(C,    0,   OUT0),
+	GPIO_INIT(I,    5,   IN),
+	GPIO_INIT(I,    6,   IN),
+	GPIO_INIT(J,    0,   IN),
+	GPIO_INIT(J,    2,   IN),
+	GPIO_INIT(K,    2,   IN),
+	GPIO_INIT(K,    7,   IN),
+	GPIO_INIT(N,    2,   OUT1),
+	GPIO_INIT(N,    4,   OUT1),
+	GPIO_INIT(N,    5,   OUT1),
+	GPIO_INIT(N,    7,   IN),
+	GPIO_INIT(O,    5,   IN),
+	GPIO_INIT(Q,    0,   OUT0), /* Shift_CTRL_OE[0] */
+	GPIO_INIT(Q,    1,   OUT0), /* Shift_CTRL_OE[1] */
+	GPIO_INIT(Q,    2,   OUT0), /* Shift_CTRL_OE[2] */
+	GPIO_INIT(Q,    4,   OUT0), /* Shift_CTRL_OE[4] */
+	GPIO_INIT(Q,    5,   OUT1), /* Shift_CTRL_Dir_Out[0] */
+	GPIO_INIT(Q,    6,   OUT1), /* Shift_CTRL_Dir_Out[1] */
+	GPIO_INIT(Q,    7,   OUT1), /* Shift_CTRL_Dir_Out[2] */
+	GPIO_INIT(R,    0,   OUT0), /* Shift_CTRL_Dir_In[0] */
+	GPIO_INIT(R,    1,   OUT0), /* Shift_CTRL_Dir_In[1] */
+	GPIO_INIT(R,    2,   OUT0), /* Shift_CTRL_OE[3] */
+	GPIO_INIT(S,    3,   OUT0), /* Shift_CTRL_Dir_In[2] */
+	GPIO_INIT(U,    4,   OUT1),
+	GPIO_INIT(W,    3,   IN),
+	GPIO_INIT(W,    5,   IN),
+	GPIO_INIT(BB,   0,  IN),
+	GPIO_INIT(BB,   3,  OUT0),
+	GPIO_INIT(BB,   4,  IN),
+	GPIO_INIT(BB,   5,  OUT1),
+	GPIO_INIT(BB,   6,  OUT0),
+	GPIO_INIT(CC,   5,  IN),
+	GPIO_INIT(DD,   3,  IN),
+	GPIO_INIT(EE,   3,  IN),
+	GPIO_INIT(EE,   5,  IN),
+	GPIO_INIT(FF,   1,  IN),
+};
+
+#define PINCFG(_pingrp, _mux, _pull, _tri, _io, _od, _rcv_sel)	\
+	{							\
+		.pingrp		= PMUX_PINGRP_##_pingrp,	\
+		.func		= PMUX_FUNC_##_mux,		\
+		.pull		= PMUX_PULL_##_pull,		\
+		.tristate	= PMUX_TRI_##_tri,		\
+		.io		= PMUX_PIN_##_io,		\
+		.od		= PMUX_PIN_OD_##_od,		\
+		.rcv_sel	= PMUX_PIN_RCV_SEL_##_rcv_sel,	\
+		.lock		= PMUX_PIN_LOCK_DEFAULT,	\
+		.ioreset	= PMUX_PIN_IO_RESET_DEFAULT,	\
+	}
+
+static const struct pmux_pingrp_config apalis_tk1_pingrps[] = {
+	/*     pingrp,                 mux,          pull,   tri,      e_input, od,      rcv_sel */
+	PINCFG(CLK_32K_OUT_PA0,        SOC,          NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(UART3_CTS_N_PA1,        GMI,          NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(DAP2_FS_PA2,            HDA,          NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(DAP2_SCLK_PA3,          HDA,          NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(DAP2_DIN_PA4,           HDA,          NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(DAP2_DOUT_PA5,          HDA,          NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(SDMMC3_CLK_PA6,         SDMMC3,       NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC3_CMD_PA7,         SDMMC3,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PB0,                    UARTD,        NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PB1,                    RSVD2,        NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC3_DAT3_PB4,        SDMMC3,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC3_DAT2_PB5,        SDMMC3,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC3_DAT1_PB6,        SDMMC3,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC3_DAT0_PB7,        SDMMC3,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(UART3_RTS_N_PC0,        GMI,          NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(UART2_TXD_PC2,          IRDA,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(UART2_RXD_PC3,          IRDA,         NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(GEN1_I2C_SCL_PC4,       I2C1,         NORMAL, NORMAL,   INPUT,   ENABLE,  DEFAULT),
+	PINCFG(GEN1_I2C_SDA_PC5,       I2C1,         NORMAL, NORMAL,   INPUT,   ENABLE,  DEFAULT),
+	PINCFG(PC7,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PG0,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PG1,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PG2,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PG3,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PG4,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PG5,                    SPI4,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PG6,                    SPI4,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PG7,                    SPI4,         NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PH0,                    PWM0,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PH1,                    PWM1,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PH2,                    PWM2,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PH3,                    PWM3,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PH4,                    RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PH5,                    RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PH6,                    GMI,          DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PH7,                    GMI,          DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PI0,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PI1,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PI2,                    RSVD4,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PI3,                    SPI4,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PI4,                    GMI,          DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PI5,                    RSVD2,        UP,     TRISTATE, INPUT,   ENABLE,  DEFAULT),
+	PINCFG(PI6,                    RSVD1,        UP,     TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PI7,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PJ0,                    RSVD1,        UP,     TRISTATE, INPUT,   ENABLE,  DEFAULT),
+	PINCFG(PJ2,                    RSVD1,        UP,     TRISTATE, INPUT,   ENABLE,  DEFAULT),
+	PINCFG(UART2_CTS_N_PJ5,        UARTB,        NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(UART2_RTS_N_PJ6,        UARTB,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PJ7,                    UARTD,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PK0,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PK1,                    RSVD4,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PK2,                    RSVD1,        UP,     TRISTATE, INPUT,   ENABLE,  DEFAULT),
+	PINCFG(PK3,                    GMI,          DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PK4,                    RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(SPDIF_OUT_PK5,          SPDIF,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(SPDIF_IN_PK6,           SPDIF,        NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PK7,                    RSVD2,        NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(DAP1_FS_PN0,            RSVD4,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DAP1_DIN_PN1,           RSVD4,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DAP1_DOUT_PN2,          SATA,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DAP1_SCLK_PN3,          RSVD4,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(USB_VBUS_EN0_PN4,       RSVD2,        NORMAL, NORMAL,   OUTPUT,  DISABLE, DEFAULT),
+	PINCFG(USB_VBUS_EN1_PN5,       RSVD2,        NORMAL, NORMAL,   OUTPUT,  DISABLE, DEFAULT),
+	PINCFG(HDMI_INT_PN7,           RSVD1,        DOWN,   TRISTATE, INPUT,   DEFAULT, NORMAL),
+	PINCFG(ULPI_DATA7_PO0,         ULPI,         DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(ULPI_DATA0_PO1,         ULPI,         DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(ULPI_DATA1_PO2,         ULPI,         DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(ULPI_DATA2_PO3,         ULPI,         DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(ULPI_DATA3_PO4,         ULPI,         DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(ULPI_DATA4_PO5,         ULPI,         NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(ULPI_DATA5_PO6,         ULPI,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(ULPI_DATA6_PO7,         ULPI,         DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DAP3_FS_PP0,            I2S2,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DAP3_DIN_PP1,           I2S2,         NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(DAP3_DOUT_PP2,          I2S2,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DAP3_SCLK_PP3,          I2S2,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DAP4_FS_PP4,            RSVD4,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DAP4_DIN_PP5,           RSVD3,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DAP4_DOUT_PP6,          RSVD4,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DAP4_SCLK_PP7,          RSVD3,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_COL0_PQ0,            RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_COL1_PQ1,            RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_COL2_PQ2,            RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_COL3_PQ3,            KBC,          DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_COL4_PQ4,            KBC,          NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_COL5_PQ5,            RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_COL6_PQ6,            RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_COL7_PQ7,            RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW0_PR0,            RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW1_PR1,            RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW2_PR2,            RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW3_PR3,            KBC,          DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW4_PR4,            RSVD3,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW5_PR5,            RSVD3,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW6_PR6,            KBC,          DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW7_PR7,            RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW8_PS0,            RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW9_PS1,            RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW10_PS2,           RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW11_PS3,           RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW12_PS4,           RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW13_PS5,           RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW14_PS6,           RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW15_PS7,           RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW16_PT0,           RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(KB_ROW17_PT1,           RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(GEN2_I2C_SCL_PT5,       I2C2,         NORMAL, NORMAL,   INPUT,   ENABLE,  DEFAULT),
+	PINCFG(GEN2_I2C_SDA_PT6,       I2C2,         NORMAL, NORMAL,   INPUT,   ENABLE,  DEFAULT),
+	PINCFG(SDMMC4_CMD_PT7,         SDMMC4,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PU0,                    UARTA,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PU1,                    UARTA,        NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PU2,                    UARTA,        NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PU3,                    UARTA,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PU4,                    GMI,          NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PU5,                    GMI,          DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PU6,                    PWM3,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PV0,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PV1,                    RSVD1,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(SDMMC3_CD_N_PV2,        RSVD3,        UP,     TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC1_WP_N_PV3,        SDMMC1,       UP,     TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(DDC_SCL_PV4,            RSVD2,        NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(DDC_SDA_PV5,            RSVD2,        NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(GPIO_W2_AUD_PW2,        SPI2,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(GPIO_W3_AUD_PW3,        SPI6,         NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(DAP_MCLK1_PW4,          EXTPERIPH1,   NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(CLK2_OUT_PW5,           RSVD2,        NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(UART3_TXD_PW6,          UARTC,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(UART3_RXD_PW7,          UARTC,        NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(DVFS_PWM_PX0,           CLDVFS,       NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(GPIO_X1_AUD_PX1,        RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DVFS_CLK_PX2,           CLDVFS,       NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(GPIO_X3_AUD_PX3,        RSVD4,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(GPIO_X4_AUD_PX4,        SPI2,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(GPIO_X5_AUD_PX5,        SPI2,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(GPIO_X6_AUD_PX6,        SPI2,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(GPIO_X7_AUD_PX7,        SPI2,         NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(ULPI_CLK_PY0,           SPI1,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(ULPI_DIR_PY1,           SPI1,         NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(ULPI_NXT_PY2,           SPI1,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(ULPI_STP_PY3,           SPI1,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(SDMMC1_DAT3_PY4,        SDMMC1,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC1_DAT2_PY5,        SDMMC1,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC1_DAT1_PY6,        SDMMC1,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC1_DAT0_PY7,        SDMMC1,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC1_CLK_PZ0,         SDMMC1,       NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC1_CMD_PZ1,         SDMMC1,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PWR_I2C_SCL_PZ6,        I2CPWR,       NORMAL, NORMAL,   INPUT,   ENABLE,  DEFAULT),
+	PINCFG(PWR_I2C_SDA_PZ7,        I2CPWR,       NORMAL, NORMAL,   INPUT,   ENABLE,  DEFAULT),
+	PINCFG(SDMMC4_DAT0_PAA0,       SDMMC4,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC4_DAT1_PAA1,       SDMMC4,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC4_DAT2_PAA2,       SDMMC4,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC4_DAT3_PAA3,       SDMMC4,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC4_DAT4_PAA4,       SDMMC4,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC4_DAT5_PAA5,       SDMMC4,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC4_DAT6_PAA6,       SDMMC4,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC4_DAT7_PAA7,       SDMMC4,       UP,     NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PBB0,                   VGP6,         NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(CAM_I2C_SCL_PBB1,       I2C3,         NORMAL, NORMAL,   INPUT,   ENABLE,  DEFAULT),
+	PINCFG(CAM_I2C_SDA_PBB2,       I2C3,         NORMAL, NORMAL,   INPUT,   ENABLE,  DEFAULT),
+	PINCFG(PBB3,                   VGP3,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PBB4,                   VGP4,         NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PBB5,                   VGP5,         NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PBB6,                   RSVD2,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PBB7,                   RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(CAM_MCLK_PCC0,          VI_ALT3,      NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PCC1,                   RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PCC2,                   RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(SDMMC4_CLK_PCC4,        SDMMC4,       NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(CLK2_REQ_PCC5,          RSVD2,        NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PEX_L0_RST_N_PDD1,      RSVD2,        NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PEX_L0_CLKREQ_N_PDD2,   RSVD2,        NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PEX_WAKE_N_PDD3,        RSVD2,        NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PEX_L1_RST_N_PDD5,      RSVD2,        NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(PEX_L1_CLKREQ_N_PDD6,   RSVD2,        NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(CLK3_OUT_PEE0,          EXTPERIPH3,   NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(CLK3_REQ_PEE1,          RSVD2,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(DAP_MCLK1_REQ_PEE2,     RSVD4,        DOWN,   TRISTATE, OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(HDMI_CEC_PEE3,          CEC,          NORMAL, NORMAL,   INPUT,   DISABLE, DEFAULT),
+	/*
+	 * Leave SDMMC3_CLK_LB_OUT muxed as SDMMC3 with output driver enabled aka not
+	 * tristated and input driver enabled as well as it features some magic
+	 * properties even though the external loopback is disabled and the internal
+	 * loopback used as per SDMMC_VENDOR_MISC_CNTRL_0 register's SDMMC_SPARE1 bits
+	 * being set to 0xfffd according to the TRM!
+	 */
+	PINCFG(SDMMC3_CLK_LB_OUT_PEE4, SDMMC3,       NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(SDMMC3_CLK_LB_IN_PEE5,  RSVD2,        NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(DP_HPD_PFF0,            DP,           NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(USB_VBUS_EN2_PFF1,      RSVD2,        NORMAL, NORMAL,   INPUT,   DISABLE, DEFAULT),
+	PINCFG(PFF2,                   RSVD2,        NORMAL, NORMAL,   INPUT,   DISABLE, DEFAULT),
+	PINCFG(CORE_PWR_REQ,           PWRON,        NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(CPU_PWR_REQ,            CPU,          NORMAL, NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+	PINCFG(PWR_INT_N,              PMI,          UP,     TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(RESET_OUT_N,            RESET_OUT_N,  NORMAL, NORMAL,   INPUT,   DEFAULT, DEFAULT),
+	PINCFG(OWR,                    RSVD2,        NORMAL, TRISTATE, OUTPUT,  DEFAULT, NORMAL),
+	PINCFG(CLK_32K_IN,             CLK,          NORMAL, TRISTATE, INPUT,   DEFAULT, DEFAULT),
+	PINCFG(JTAG_RTCK,              RTCK,         UP,     NORMAL,   OUTPUT,  DEFAULT, DEFAULT),
+};
+
+#define DRVCFG(_drvgrp, _slwf, _slwr, _drvup, _drvdn, _lpmd, _schmt, _hsm) \
+	{						\
+		.drvgrp = PMUX_DRVGRP_##_drvgrp,	\
+		.slwf   = _slwf,			\
+		.slwr   = _slwr,			\
+		.drvup  = _drvup,			\
+		.drvdn  = _drvdn,			\
+		.lpmd   = PMUX_LPMD_##_lpmd,		\
+		.schmt  = PMUX_SCHMT_##_schmt,		\
+		.hsm    = PMUX_HSM_##_hsm,		\
+	}
+
+static const struct pmux_drvgrp_config apalis_tk1_drvgrps[] = {
+};
+
+#endif /* PINMUX_CONFIG_APALIS_TK1_H */
diff --git a/board/toradex/apalis_imx6/1066mhz_4x128mx16.cfg b/board/toradex/apalis_imx6/1066mhz_4x128mx16.cfg
new file mode 100644
index 0000000..5cfda26
--- /dev/null
+++ b/board/toradex/apalis_imx6/1066mhz_4x128mx16.cfg
@@ -0,0 +1,48 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ * Copyright (C) 2014-2016 Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+DATA 4, MX6_MMDC_P0_MDPDC, 0x00020036
+DATA 4, MX6_MMDC_P0_MDCFG0, 0x555A7954
+DATA 4, MX6_MMDC_P0_MDCFG1, 0xDB328F64
+DATA 4, MX6_MMDC_P0_MDCFG2, 0x01FF00DB
+DATA 4, MX6_MMDC_P0_MDRWD, 0x000026D2
+DATA 4, MX6_MMDC_P0_MDOR, 0x005A1023
+DATA 4, MX6_MMDC_P0_MDOTC, 0x09555050
+DATA 4, MX6_MMDC_P0_MDPDC, 0x00025576
+DATA 4, MX6_MMDC_P0_MDASP, 0x00000027
+DATA 4, MX6_MMDC_P0_MDCTL, 0x831A0000
+DATA 4, MX6_MMDC_P0_MDSCR, 0x04088032
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00008033
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00428031
+DATA 4, MX6_MMDC_P0_MDSCR, 0x19308030
+DATA 4, MX6_MMDC_P0_MDSCR, 0x04008040
+DATA 4, MX6_MMDC_P0_MPZQHWCTRL, 0xA1390003
+DATA 4, MX6_MMDC_P1_MPZQHWCTRL, 0xA1390003
+DATA 4, MX6_MMDC_P0_MDREF, 0x00005800
+DATA 4, MX6_MMDC_P0_MPODTCTRL, 0x00000000
+DATA 4, MX6_MMDC_P1_MPODTCTRL, 0x00000000
+
+DATA 4, MX6_MMDC_P0_MPDGCTRL0, 0x432A0338
+DATA 4, MX6_MMDC_P0_MPDGCTRL1, 0x03260324
+DATA 4, MX6_MMDC_P1_MPDGCTRL0, 0x43340344
+DATA 4, MX6_MMDC_P1_MPDGCTRL1, 0x031E027C
+
+DATA 4, MX6_MMDC_P0_MPRDDLCTL, 0x33272D2E
+DATA 4, MX6_MMDC_P1_MPRDDLCTL, 0x2F312B37
+
+DATA 4, MX6_MMDC_P0_MPWRDLCTL, 0x3A35433C
+DATA 4, MX6_MMDC_P1_MPWRDLCTL, 0x4336453F
+
+DATA 4, MX6_MMDC_P0_MPWLDECTRL0, 0x0009000E
+DATA 4, MX6_MMDC_P0_MPWLDECTRL1, 0x0018000B
+DATA 4, MX6_MMDC_P1_MPWLDECTRL0, 0x00060015
+DATA 4, MX6_MMDC_P1_MPWLDECTRL1, 0x0006000E
+
+DATA 4, MX6_MMDC_P0_MPMUR0, 0x00000800
+DATA 4, MX6_MMDC_P1_MPMUR0, 0x00000800
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00000000
+DATA 4, MX6_MMDC_P0_MAPSR, 0x00011006
diff --git a/board/toradex/apalis_imx6/1066mhz_4x256mx16.cfg b/board/toradex/apalis_imx6/1066mhz_4x256mx16.cfg
new file mode 100644
index 0000000..3707910
--- /dev/null
+++ b/board/toradex/apalis_imx6/1066mhz_4x256mx16.cfg
@@ -0,0 +1,48 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ * Copyright (C) 2014-2016 Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+DATA 4, MX6_MMDC_P0_MDPDC, 0x00020036
+DATA 4, MX6_MMDC_P0_MDCFG0, 0x898E78f5
+DATA 4, MX6_MMDC_P0_MDCFG1, 0xff328f64
+DATA 4, MX6_MMDC_P0_MDCFG2, 0x01FF00DB
+DATA 4, MX6_MMDC_P0_MDRWD, 0x000026D2
+DATA 4, MX6_MMDC_P0_MDOR, 0x008E1023
+DATA 4, MX6_MMDC_P0_MDOTC, 0x09444040
+DATA 4, MX6_MMDC_P0_MDPDC, 0x00025576
+DATA 4, MX6_MMDC_P0_MDASP, 0x00000047
+DATA 4, MX6_MMDC_P0_MDCTL, 0x841A0000
+DATA 4, MX6_MMDC_P0_MDSCR, 0x02888032
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00008033
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00048031
+DATA 4, MX6_MMDC_P0_MDSCR, 0x19408030
+DATA 4, MX6_MMDC_P0_MDSCR, 0x04008040
+DATA 4, MX6_MMDC_P0_MPZQHWCTRL, 0xA1390003
+DATA 4, MX6_MMDC_P1_MPZQHWCTRL, 0xA1390003
+DATA 4, MX6_MMDC_P0_MDREF, 0x00007800
+DATA 4, MX6_MMDC_P0_MPODTCTRL, 0x00022227
+DATA 4, MX6_MMDC_P1_MPODTCTRL, 0x00022227
+
+DATA 4, MX6_MMDC_P0_MPDGCTRL0, 0x03300338
+DATA 4, MX6_MMDC_P0_MPDGCTRL1, 0x03240324
+DATA 4, MX6_MMDC_P1_MPDGCTRL0, 0x03440350
+DATA 4, MX6_MMDC_P1_MPDGCTRL1, 0x032C0308
+
+DATA 4, MX6_MMDC_P0_MPRDDLCTL, 0x40363C3E
+DATA 4, MX6_MMDC_P1_MPRDDLCTL, 0x3C3E3C46
+
+DATA 4, MX6_MMDC_P0_MPWRDLCTL, 0x403E463E
+DATA 4, MX6_MMDC_P1_MPWRDLCTL, 0x4A384C46
+
+DATA 4, MX6_MMDC_P0_MPWLDECTRL0, 0x0009000E
+DATA 4, MX6_MMDC_P0_MPWLDECTRL1, 0x0018000B
+DATA 4, MX6_MMDC_P1_MPWLDECTRL0, 0x00060015
+DATA 4, MX6_MMDC_P1_MPWLDECTRL1, 0x0006000E
+
+DATA 4, MX6_MMDC_P0_MPMUR0, 0x00000800
+DATA 4, MX6_MMDC_P1_MPMUR0, 0x00000800
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00000000
+DATA 4, MX6_MMDC_P0_MAPSR, 0x00011006
diff --git a/board/toradex/apalis_imx6/Kconfig b/board/toradex/apalis_imx6/Kconfig
new file mode 100644
index 0000000..14f8c10
--- /dev/null
+++ b/board/toradex/apalis_imx6/Kconfig
@@ -0,0 +1,55 @@
+if TARGET_APALIS_IMX6
+
+config SYS_BOARD
+	default "apalis_imx6"
+
+config SYS_CONFIG_NAME
+	default "apalis_imx6"
+
+config SYS_CPU
+	default "armv7"
+
+config SYS_SOC
+	default "mx6"
+
+config SYS_VENDOR
+	default "toradex"
+
+config TDX_CFG_BLOCK
+	default y
+
+config TDX_HAVE_MMC
+	default y
+
+config TDX_CFG_BLOCK_DEV
+	default "0"
+
+config TDX_CFG_BLOCK_PART
+	default "1"
+
+# Toradex config block in eMMC, at the end of 1st "boot sector"
+config TDX_CFG_BLOCK_OFFSET
+	default "-512"
+
+config TDX_CMD_IMX_MFGR
+	bool "Enable factory testing commands for Toradex iMX 6 modules"
+	help
+	  This adds the commands
+	    pf0100_otp_prog - Program the OTP fuses on the PMIC PF0100
+	  If executed on already fused modules it doesn't change any fuse setting.
+	default y
+
+config TDX_APALIS_IMX6_V1_0
+	bool "Apalis iMX6 V1.0 HW"
+	help
+	  Apalis iMX6 V1.0 HW has a different pinout for the UART.
+	    The UARTs must be used in DCE mode, RTS/CTS are swapped and
+	    thus unusable on standard carrier boards.
+	    This option configures DCE mode unconditionally. Whithout this
+	    option the config block stating V1.0 HW selects DCE mode,
+	    otherwise the UARTs are configuered in DTE mode.
+	default n
+
+source "board/toradex/common/Kconfig"
+
+endif
diff --git a/board/toradex/apalis_imx6/MAINTAINERS b/board/toradex/apalis_imx6/MAINTAINERS
new file mode 100644
index 0000000..8f82908
--- /dev/null
+++ b/board/toradex/apalis_imx6/MAINTAINERS
@@ -0,0 +1,10 @@
+Apalis iMX6
+M:	Max Krummenacher <max.krummenacher@toradex.com>
+W:	http://developer.toradex.com/software/linux/linux-software
+W:	https://www.toradex.com/community
+S:	Maintained
+F:	board/toradex/apalis_imx6/
+F:	include/configs/apalis_imx6.h
+F:	configs/apalis_imx6_defconfig
+F:	configs/apalis_imx6_nospl_com_defconfig
+F:	configs/apalis_imx6_nospl_it_defconfig
diff --git a/board/toradex/apalis_imx6/Makefile b/board/toradex/apalis_imx6/Makefile
new file mode 100644
index 0000000..128f179
--- /dev/null
+++ b/board/toradex/apalis_imx6/Makefile
@@ -0,0 +1,5 @@
+# Copyright (c) 2012-2014 Toradex, Inc.
+# SPDX-License-Identifier:      GPL-2.0+
+
+obj-y  := apalis_imx6.o do_fuse.o
+obj-$(CONFIG_TDX_CMD_IMX_MFGR)  += pf0100.o
diff --git a/board/toradex/apalis_imx6/apalis_imx6.c b/board/toradex/apalis_imx6/apalis_imx6.c
new file mode 100644
index 0000000..93e777d
--- /dev/null
+++ b/board/toradex/apalis_imx6/apalis_imx6.c
@@ -0,0 +1,1309 @@
+/*
+ * Copyright (C) 2010-2013 Freescale Semiconductor, Inc.
+ * Copyright (C) 2013, Boundary Devices <info@boundarydevices.com>
+ * Copyright (C) 2014-2016, Toradex AG
+ * copied from nitrogen6x
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/crm_regs.h>
+#include <asm/arch/mxc_hdmi.h>
+#include <asm/arch/imx-regs.h>
+#include <asm/arch/iomux.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/arch/mx6-pins.h>
+#include <asm/arch/mx6-ddr.h>
+#include <asm/bootm.h>
+#include <asm/gpio.h>
+#include <asm/io.h>
+#include <asm/imx-common/iomux-v3.h>
+#include <asm/imx-common/mxc_i2c.h>
+#include <asm/imx-common/sata.h>
+#include <asm/imx-common/boot_mode.h>
+#include <asm/imx-common/video.h>
+#include <dm/platform_data/serial_mxc.h>
+#include <dm/platdata.h>
+#include <fsl_esdhc.h>
+#include <g_dnl.h>
+#include <i2c.h>
+#include <imx_thermal.h>
+#include <linux/errno.h>
+#include <malloc.h>
+#include <mmc.h>
+#include <micrel.h>
+#include <miiphy.h>
+#include <netdev.h>
+
+#include "../common/tdx-cfg-block.h"
+#ifdef CONFIG_TDX_CMD_IMX_MFGR
+#include "pf0100.h"
+#endif
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define UART_PAD_CTRL  (PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm |			\
+	PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
+
+#define USDHC_PAD_CTRL (PAD_CTL_PUS_47K_UP |			\
+	PAD_CTL_SPEED_LOW | PAD_CTL_DSE_40ohm |			\
+	PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
+
+#define USDHC_EMMC_PAD_CTRL (PAD_CTL_PUS_47K_UP |		\
+	PAD_CTL_SPEED_LOW | PAD_CTL_DSE_80ohm |			\
+	PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
+
+#define ENET_PAD_CTRL  (PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS)
+
+#define SPI_PAD_CTRL (PAD_CTL_HYS | PAD_CTL_SPEED_MED |		\
+	PAD_CTL_DSE_40ohm     | PAD_CTL_SRE_FAST)
+
+#define BUTTON_PAD_CTRL (PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS)
+
+#define I2C_PAD_CTRL	(PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS |	\
+	PAD_CTL_ODE | PAD_CTL_SRE_FAST)
+
+#define WEAK_PULLUP	(PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS |	\
+	PAD_CTL_SRE_SLOW)
+
+#define NO_PULLUP	(					\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS |	\
+	PAD_CTL_SRE_SLOW)
+
+#define WEAK_PULLDOWN	(PAD_CTL_PUS_100K_DOWN |		\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm |			\
+	PAD_CTL_HYS | PAD_CTL_SRE_SLOW)
+
+#define TRISTATE	(PAD_CTL_HYS | PAD_CTL_SPEED_MED)
+
+#define OUTPUT_40OHM (PAD_CTL_SPEED_MED|PAD_CTL_DSE_40ohm)
+
+#define OUTPUT_RGB (PAD_CTL_SPEED_MED|PAD_CTL_DSE_60ohm|PAD_CTL_SRE_FAST)
+
+int dram_init(void)
+{
+	/* use the DDR controllers configured size */
+	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
+				    (ulong)imx_ddr_size());
+
+	return 0;
+}
+
+/* Apalis UART1 */
+iomux_v3_cfg_t const uart1_pads_dce[] = {
+	MX6_PAD_CSI0_DAT10__UART1_TX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+	MX6_PAD_CSI0_DAT11__UART1_RX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+};
+iomux_v3_cfg_t const uart1_pads_dte[] = {
+	MX6_PAD_CSI0_DAT10__UART1_RX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+	MX6_PAD_CSI0_DAT11__UART1_TX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+};
+
+#define PC MUX_PAD_CTRL(I2C_PAD_CTRL)
+/* Apalis I2C1 */
+struct i2c_pads_info i2c_pad_info1 = {
+	.scl = {
+		.i2c_mode = MX6_PAD_CSI0_DAT9__I2C1_SCL | PC,
+		.gpio_mode = MX6_PAD_CSI0_DAT9__GPIO5_IO27 | PC,
+		.gp = IMX_GPIO_NR(5, 27)
+	},
+	.sda = {
+		.i2c_mode = MX6_PAD_CSI0_DAT8__I2C1_SDA | PC,
+		.gpio_mode = MX6_PAD_CSI0_DAT8__GPIO5_IO26 | PC,
+		.gp = IMX_GPIO_NR(5, 26)
+	}
+};
+
+/* Apalis local, PMIC, SGTL5000, STMPE811 */
+struct i2c_pads_info i2c_pad_info_loc = {
+	.scl = {
+		.i2c_mode = MX6_PAD_KEY_COL3__I2C2_SCL | PC,
+		.gpio_mode = MX6_PAD_KEY_COL3__GPIO4_IO12 | PC,
+		.gp = IMX_GPIO_NR(4, 12)
+	},
+	.sda = {
+		.i2c_mode = MX6_PAD_KEY_ROW3__I2C2_SDA | PC,
+		.gpio_mode = MX6_PAD_KEY_ROW3__GPIO4_IO13 | PC,
+		.gp = IMX_GPIO_NR(4, 13)
+	}
+};
+
+/* Apalis I2C3 / CAM */
+struct i2c_pads_info i2c_pad_info3 = {
+	.scl = {
+		.i2c_mode = MX6_PAD_EIM_D17__I2C3_SCL | PC,
+		.gpio_mode = MX6_PAD_EIM_D17__GPIO3_IO17 | PC,
+		.gp = IMX_GPIO_NR(3, 17)
+	},
+	.sda = {
+		.i2c_mode = MX6_PAD_EIM_D18__I2C3_SDA | PC,
+		.gpio_mode = MX6_PAD_EIM_D18__GPIO3_IO18 | PC,
+		.gp = IMX_GPIO_NR(3, 18)
+	}
+};
+
+/* Apalis I2C2 / DDC */
+struct i2c_pads_info i2c_pad_info_ddc = {
+	.scl = {
+		.i2c_mode = MX6_PAD_EIM_EB2__HDMI_TX_DDC_SCL | PC,
+		.gpio_mode = MX6_PAD_EIM_EB2__GPIO2_IO30 | PC,
+		.gp = IMX_GPIO_NR(2, 30)
+	},
+	.sda = {
+		.i2c_mode = MX6_PAD_EIM_D16__HDMI_TX_DDC_SDA | PC,
+		.gpio_mode = MX6_PAD_EIM_D16__GPIO3_IO16 | PC,
+		.gp = IMX_GPIO_NR(3, 16)
+	}
+};
+
+/* Apalis MMC1 */
+iomux_v3_cfg_t const usdhc1_pads[] = {
+	MX6_PAD_SD1_CLK__SD1_CLK   | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD1_CMD__SD1_CMD   | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD1_DAT0__SD1_DATA0 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD1_DAT1__SD1_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD1_DAT2__SD1_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD1_DAT3__SD1_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_NANDF_D0__SD1_DATA4 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_NANDF_D1__SD1_DATA5 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_NANDF_D2__SD1_DATA6 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_NANDF_D3__SD1_DATA7 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_DI0_PIN4__GPIO4_IO20   | MUX_PAD_CTRL(NO_PAD_CTRL), /* CD */
+#	define GPIO_MMC_CD IMX_GPIO_NR(4, 20)
+};
+
+/* Apalis SD1 */
+iomux_v3_cfg_t const usdhc2_pads[] = {
+	MX6_PAD_SD2_CLK__SD2_CLK    | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD2_CMD__SD2_CMD    | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD2_DAT0__SD2_DATA0 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD2_DAT1__SD2_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD2_DAT2__SD2_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD2_DAT3__SD2_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_NANDF_CS1__GPIO6_IO14  | MUX_PAD_CTRL(NO_PAD_CTRL), /* CD */
+#	define GPIO_SD_CD IMX_GPIO_NR(6, 14)
+};
+
+/* eMMC */
+iomux_v3_cfg_t const usdhc3_pads[] = {
+	MX6_PAD_SD3_CLK__SD3_CLK    | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_CMD__SD3_CMD    | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT0__SD3_DATA0 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT1__SD3_DATA1 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT2__SD3_DATA2 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT3__SD3_DATA3 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT4__SD3_DATA4 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT5__SD3_DATA5 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT6__SD3_DATA6 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT7__SD3_DATA7 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_RST__GPIO7_IO08 | MUX_PAD_CTRL(WEAK_PULLUP),
+};
+
+int mx6_rgmii_rework(struct phy_device *phydev)
+{
+	/* control data pad skew - devaddr = 0x02, register = 0x04 */
+	ksz9031_phy_extended_write(phydev, 0x02,
+				   MII_KSZ9031_EXT_RGMII_CTRL_SIG_SKEW,
+				   MII_KSZ9031_MOD_DATA_NO_POST_INC, 0x0000);
+	/* rx data pad skew - devaddr = 0x02, register = 0x05 */
+	ksz9031_phy_extended_write(phydev, 0x02,
+				   MII_KSZ9031_EXT_RGMII_RX_DATA_SKEW,
+				   MII_KSZ9031_MOD_DATA_NO_POST_INC, 0x0000);
+	/* tx data pad skew - devaddr = 0x02, register = 0x05 */
+	ksz9031_phy_extended_write(phydev, 0x02,
+				   MII_KSZ9031_EXT_RGMII_TX_DATA_SKEW,
+				   MII_KSZ9031_MOD_DATA_NO_POST_INC, 0x0000);
+	/* gtx and rx clock pad skew - devaddr = 0x02, register = 0x08 */
+	ksz9031_phy_extended_write(phydev, 0x02,
+				   MII_KSZ9031_EXT_RGMII_CLOCK_SKEW,
+				   MII_KSZ9031_MOD_DATA_NO_POST_INC, 0x03FF);
+	return 0;
+}
+
+iomux_v3_cfg_t const enet_pads[] = {
+	MX6_PAD_ENET_MDIO__ENET_MDIO		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_MDC__ENET_MDC		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TXC__RGMII_TXC		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TD0__RGMII_TD0		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TD1__RGMII_TD1		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TD2__RGMII_TD2		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TD3__RGMII_TD3		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_TX_CTL__RGMII_TX_CTL	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_REF_CLK__ENET_TX_CLK	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RXC__RGMII_RXC		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RD0__RGMII_RD0		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RD1__RGMII_RD1		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RD2__RGMII_RD2		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RD3__RGMII_RD3		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_RGMII_RX_CTL__RGMII_RX_CTL	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	/* KSZ9031 PHY Reset */
+	MX6_PAD_ENET_CRS_DV__GPIO1_IO25		| MUX_PAD_CTRL(NO_PAD_CTRL),
+#	define GPIO_ENET_PHY_RESET IMX_GPIO_NR(1, 25)
+};
+
+static void setup_iomux_enet(void)
+{
+	imx_iomux_v3_setup_multiple_pads(enet_pads, ARRAY_SIZE(enet_pads));
+}
+
+static int reset_enet_phy(struct mii_dev *bus)
+{
+	/* Reset KSZ9031 PHY */
+	gpio_direction_output(GPIO_ENET_PHY_RESET, 0);
+	mdelay(10);
+	gpio_set_value(GPIO_ENET_PHY_RESET, 1);
+
+	return 0;
+}
+
+/* mux the Apalis GPIO pins, so they can be used from the U-Boot cmdline */
+iomux_v3_cfg_t const gpio_pads[] = {
+	/* Apalis GPIO1 - GPIO8 */
+	MX6_PAD_NANDF_D4__GPIO2_IO04	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_D5__GPIO2_IO05	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_D6__GPIO2_IO06	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_D7__GPIO2_IO07	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_RB0__GPIO6_IO10	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_WP_B__GPIO6_IO09	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_GPIO_2__GPIO1_IO02	| MUX_PAD_CTRL(WEAK_PULLDOWN),
+	MX6_PAD_GPIO_6__GPIO1_IO06	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_GPIO_4__GPIO1_IO04	| MUX_PAD_CTRL(WEAK_PULLUP),
+};
+
+static void setup_iomux_gpio(void)
+{
+	imx_iomux_v3_setup_multiple_pads(gpio_pads, ARRAY_SIZE(gpio_pads));
+}
+
+iomux_v3_cfg_t const usb_pads[] = {
+	/* USBH_EN */
+	MX6_PAD_GPIO_0__GPIO1_IO00 | MUX_PAD_CTRL(NO_PAD_CTRL),
+#	define GPIO_USBH_EN IMX_GPIO_NR(1, 0)
+	/* USB_VBUS_DET */
+	MX6_PAD_EIM_D28__GPIO3_IO28 | MUX_PAD_CTRL(NO_PAD_CTRL),
+#	define GPIO_USB_VBUS_DET IMX_GPIO_NR(3, 28)
+	/* USBO1_ID */
+	MX6_PAD_ENET_RX_ER__USB_OTG_ID	| MUX_PAD_CTRL(WEAK_PULLUP),
+	/* USBO1_EN */
+	MX6_PAD_EIM_D22__GPIO3_IO22 | MUX_PAD_CTRL(NO_PAD_CTRL),
+#	define GPIO_USBO_EN IMX_GPIO_NR(3, 22)
+};
+
+/*
+ * UARTs are used in DTE mode, switch the mode on all UARTs before
+ * any pinmuxing connects a (DCE) output to a transceiver output.
+ */
+#define UFCR		0x90	/* FIFO Control Register */
+#define UFCR_DCEDTE	(1<<6)	/* DCE=0 */
+
+static void setup_dtemode_uart(void)
+{
+	setbits_le32((u32 *)(UART1_BASE + UFCR), UFCR_DCEDTE);
+	setbits_le32((u32 *)(UART2_BASE + UFCR), UFCR_DCEDTE);
+	setbits_le32((u32 *)(UART4_BASE + UFCR), UFCR_DCEDTE);
+	setbits_le32((u32 *)(UART5_BASE + UFCR), UFCR_DCEDTE);
+}
+static void setup_dcemode_uart(void)
+{
+	clrbits_le32((u32 *)(UART1_BASE + UFCR), UFCR_DCEDTE);
+	clrbits_le32((u32 *)(UART2_BASE + UFCR), UFCR_DCEDTE);
+	clrbits_le32((u32 *)(UART4_BASE + UFCR), UFCR_DCEDTE);
+	clrbits_le32((u32 *)(UART5_BASE + UFCR), UFCR_DCEDTE);
+}
+
+static void setup_iomux_dte_uart(void)
+{
+	setup_dtemode_uart();
+	imx_iomux_v3_setup_multiple_pads(uart1_pads_dte,
+					 ARRAY_SIZE(uart1_pads_dte));
+}
+
+static void setup_iomux_dce_uart(void)
+{
+	setup_dcemode_uart();
+	imx_iomux_v3_setup_multiple_pads(uart1_pads_dce,
+					 ARRAY_SIZE(uart1_pads_dce));
+}
+
+#ifdef CONFIG_USB_EHCI_MX6
+int board_ehci_hcd_init(int port)
+{
+	imx_iomux_v3_setup_multiple_pads(usb_pads, ARRAY_SIZE(usb_pads));
+	return 0;
+}
+
+int board_ehci_power(int port, int on)
+{
+	switch (port) {
+	case 0:
+		/* control OTG power */
+		gpio_direction_output(GPIO_USBO_EN, on);
+		mdelay(100);
+		break;
+	case 1:
+		/* Control MXM USBH */
+		gpio_direction_output(GPIO_USBH_EN, on);
+		mdelay(2);
+		/* Control onboard USB Hub VBUS */
+		gpio_direction_output(GPIO_USB_VBUS_DET, on);
+		mdelay(100);
+		break;
+	default:
+		break;
+	}
+	return 0;
+}
+#endif
+
+#ifdef CONFIG_FSL_ESDHC
+/* use the following sequence: eMMC, MMC, SD */
+struct fsl_esdhc_cfg usdhc_cfg[CONFIG_SYS_FSL_USDHC_NUM] = {
+	{USDHC3_BASE_ADDR},
+	{USDHC1_BASE_ADDR},
+	{USDHC2_BASE_ADDR},
+};
+
+int board_mmc_getcd(struct mmc *mmc)
+{
+	struct fsl_esdhc_cfg *cfg = (struct fsl_esdhc_cfg *)mmc->priv;
+	int ret = true; /* default: assume inserted */
+
+	switch (cfg->esdhc_base) {
+	case USDHC1_BASE_ADDR:
+		gpio_direction_input(GPIO_MMC_CD);
+		ret = !gpio_get_value(GPIO_MMC_CD);
+		break;
+	case USDHC2_BASE_ADDR:
+		gpio_direction_input(GPIO_SD_CD);
+		ret = !gpio_get_value(GPIO_SD_CD);
+		break;
+	}
+
+	return ret;
+}
+
+int board_mmc_init(bd_t *bis)
+{
+#ifndef CONFIG_SPL_BUILD
+	s32 status = 0;
+	u32 index = 0;
+
+	usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
+	usdhc_cfg[1].sdhc_clk = mxc_get_clock(MXC_ESDHC_CLK);
+	usdhc_cfg[2].sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
+
+	usdhc_cfg[0].max_bus_width = 8;
+	usdhc_cfg[1].max_bus_width = 8;
+	usdhc_cfg[2].max_bus_width = 4;
+
+	for (index = 0; index < CONFIG_SYS_FSL_USDHC_NUM; ++index) {
+		switch (index) {
+		case 0:
+			imx_iomux_v3_setup_multiple_pads(
+				usdhc3_pads, ARRAY_SIZE(usdhc3_pads));
+			break;
+		case 1:
+			imx_iomux_v3_setup_multiple_pads(
+				usdhc1_pads, ARRAY_SIZE(usdhc1_pads));
+			break;
+		case 2:
+			imx_iomux_v3_setup_multiple_pads(
+				usdhc2_pads, ARRAY_SIZE(usdhc2_pads));
+			break;
+		default:
+			printf("Warning: you configured more USDHC controllers (%d) then supported by the board (%d)\n",
+			       index + 1, CONFIG_SYS_FSL_USDHC_NUM);
+			return status;
+		}
+
+		status |= fsl_esdhc_initialize(bis, &usdhc_cfg[index]);
+	}
+
+	return status;
+#else
+	struct src *psrc = (struct src *)SRC_BASE_ADDR;
+	unsigned reg = readl(&psrc->sbmr1) >> 11;
+	/*
+	 * Upon reading BOOT_CFG register the following map is done:
+	 * Bit 11 and 12 of BOOT_CFG register can determine the current
+	 * mmc port
+	 * 0x1                  SD1
+	 * 0x2                  SD2
+	 * 0x3                  SD4
+	 */
+
+	switch (reg & 0x3) {
+	case 0x0:
+		imx_iomux_v3_setup_multiple_pads(
+			usdhc1_pads, ARRAY_SIZE(usdhc1_pads));
+		usdhc_cfg[0].esdhc_base = USDHC1_BASE_ADDR;
+		usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC_CLK);
+		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
+		break;
+	case 0x1:
+		imx_iomux_v3_setup_multiple_pads(
+			usdhc2_pads, ARRAY_SIZE(usdhc2_pads));
+		usdhc_cfg[0].esdhc_base = USDHC2_BASE_ADDR;
+		usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
+		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
+		break;
+	case 0x2:
+		imx_iomux_v3_setup_multiple_pads(
+			usdhc3_pads, ARRAY_SIZE(usdhc3_pads));
+		usdhc_cfg[0].esdhc_base = USDHC3_BASE_ADDR;
+		usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
+		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
+		break;
+	default:
+		puts("MMC boot device not available");
+	}
+
+	return fsl_esdhc_initialize(bis, &usdhc_cfg[0]);
+#endif
+}
+#endif
+
+int board_phy_config(struct phy_device *phydev)
+{
+	mx6_rgmii_rework(phydev);
+	if (phydev->drv->config)
+		phydev->drv->config(phydev);
+
+	return 0;
+}
+
+int board_eth_init(bd_t *bis)
+{
+	uint32_t base = IMX_FEC_BASE;
+	struct mii_dev *bus = NULL;
+	struct phy_device *phydev = NULL;
+	int ret;
+
+	setup_iomux_enet();
+
+#ifdef CONFIG_FEC_MXC
+	bus = fec_get_miibus(base, -1);
+	if (!bus)
+		return 0;
+	bus->reset = reset_enet_phy;
+	/* scan PHY 4,5,6,7 */
+	phydev = phy_find_by_mask(bus, (0xf << 4), PHY_INTERFACE_MODE_RGMII);
+	if (!phydev) {
+		free(bus);
+		puts("no PHY found\n");
+		return 0;
+	}
+	printf("using PHY at %d\n", phydev->addr);
+	ret = fec_probe(bis, -1, base, bus, phydev);
+	if (ret) {
+		printf("FEC MXC: %s:failed\n", __func__);
+		free(phydev);
+		free(bus);
+	}
+#endif
+	return 0;
+}
+
+static iomux_v3_cfg_t const pwr_intb_pads[] = {
+	/*
+	 * the bootrom sets the iomux to vselect, potentially connecting
+	 * two outputs. Set this back to GPIO
+	 */
+	MX6_PAD_GPIO_18__GPIO7_IO13 | MUX_PAD_CTRL(NO_PAD_CTRL)
+};
+
+#if defined(CONFIG_VIDEO_IPUV3)
+
+static iomux_v3_cfg_t const backlight_pads[] = {
+	/* Backlight on RGB connector: J15 */
+	MX6_PAD_EIM_DA13__GPIO3_IO13 | MUX_PAD_CTRL(NO_PAD_CTRL),
+#define RGB_BACKLIGHT_GP IMX_GPIO_NR(3, 13)
+	/* additional CPU pin on BKL_PWM, keep in tristate */
+	MX6_PAD_EIM_DA14__GPIO3_IO14 | MUX_PAD_CTRL(TRISTATE),
+	/* Backlight PWM, used as GPIO in U-Boot */
+	MX6_PAD_SD4_DAT2__GPIO2_IO10 | MUX_PAD_CTRL(NO_PAD_CTRL),
+#define RGB_BACKLIGHTPWM_GP IMX_GPIO_NR(2, 10)
+	/* buffer output enable 0: buffer enabled */
+	MX6_PAD_EIM_A25__GPIO5_IO02 | MUX_PAD_CTRL(WEAK_PULLUP),
+#define RGB_BACKLIGHTPWM_OE IMX_GPIO_NR(5, 2)
+	/* PSAVE# integrated VDAC */
+	MX6_PAD_EIM_BCLK__GPIO6_IO31 | MUX_PAD_CTRL(NO_PAD_CTRL),
+#define VGA_PSAVE_NOT_GP IMX_GPIO_NR(6, 31)
+};
+
+static iomux_v3_cfg_t const rgb_pads[] = {
+	MX6_PAD_EIM_A16__IPU1_DI1_DISP_CLK | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA10__IPU1_DI1_PIN15 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA11__IPU1_DI1_PIN02 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA12__IPU1_DI1_PIN03 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA9__IPU1_DISP1_DATA00 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA8__IPU1_DISP1_DATA01 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA7__IPU1_DISP1_DATA02 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA6__IPU1_DISP1_DATA03 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA5__IPU1_DISP1_DATA04 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA4__IPU1_DISP1_DATA05 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA3__IPU1_DISP1_DATA06 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA2__IPU1_DISP1_DATA07 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA1__IPU1_DISP1_DATA08 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_DA0__IPU1_DISP1_DATA09 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_EB1__IPU1_DISP1_DATA10 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_EB0__IPU1_DISP1_DATA11 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_A17__IPU1_DISP1_DATA12 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_A18__IPU1_DISP1_DATA13 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_A19__IPU1_DISP1_DATA14 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_A20__IPU1_DISP1_DATA15 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_A21__IPU1_DISP1_DATA16 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_A22__IPU1_DISP1_DATA17 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_A23__IPU1_DISP1_DATA18 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_A24__IPU1_DISP1_DATA19 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_D26__IPU1_DISP1_DATA22 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_D27__IPU1_DISP1_DATA23 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_D30__IPU1_DISP1_DATA21 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_EIM_D31__IPU1_DISP1_DATA20 | MUX_PAD_CTRL(OUTPUT_RGB),
+};
+
+static iomux_v3_cfg_t const vga_pads[] = {
+#ifdef FOR_DL_SOLO
+	/* DualLite/Solo doesn't have IPU2 */
+	MX6_PAD_DI0_DISP_CLK__IPU1_DI0_DISP_CLK,
+	MX6_PAD_DI0_PIN15__IPU1_DI0_PIN15,
+	MX6_PAD_DI0_PIN2__IPU1_DI0_PIN02,
+	MX6_PAD_DI0_PIN3__IPU1_DI0_PIN03,
+	MX6_PAD_DISP0_DAT0__IPU1_DISP0_DATA00,
+	MX6_PAD_DISP0_DAT1__IPU1_DISP0_DATA01,
+	MX6_PAD_DISP0_DAT2__IPU1_DISP0_DATA02,
+	MX6_PAD_DISP0_DAT3__IPU1_DISP0_DATA03,
+	MX6_PAD_DISP0_DAT4__IPU1_DISP0_DATA04,
+	MX6_PAD_DISP0_DAT5__IPU1_DISP0_DATA05,
+	MX6_PAD_DISP0_DAT6__IPU1_DISP0_DATA06,
+	MX6_PAD_DISP0_DAT7__IPU1_DISP0_DATA07,
+	MX6_PAD_DISP0_DAT8__IPU1_DISP0_DATA08,
+	MX6_PAD_DISP0_DAT9__IPU1_DISP0_DATA09,
+	MX6_PAD_DISP0_DAT10__IPU1_DISP0_DATA10,
+	MX6_PAD_DISP0_DAT11__IPU1_DISP0_DATA11,
+	MX6_PAD_DISP0_DAT12__IPU1_DISP0_DATA12,
+	MX6_PAD_DISP0_DAT13__IPU1_DISP0_DATA13,
+	MX6_PAD_DISP0_DAT14__IPU1_DISP0_DATA14,
+	MX6_PAD_DISP0_DAT15__IPU1_DISP0_DATA15,
+#else
+	MX6_PAD_DI0_DISP_CLK__IPU1_DI0_DISP_CLK,
+	MX6_PAD_DI0_PIN15__IPU2_DI0_PIN15,
+	MX6_PAD_DI0_PIN2__IPU2_DI0_PIN02,
+	MX6_PAD_DI0_PIN3__IPU2_DI0_PIN03,
+	MX6_PAD_DISP0_DAT0__IPU2_DISP0_DATA00,
+	MX6_PAD_DISP0_DAT1__IPU2_DISP0_DATA01,
+	MX6_PAD_DISP0_DAT2__IPU2_DISP0_DATA02,
+	MX6_PAD_DISP0_DAT3__IPU2_DISP0_DATA03,
+	MX6_PAD_DISP0_DAT4__IPU2_DISP0_DATA04,
+	MX6_PAD_DISP0_DAT5__IPU2_DISP0_DATA05,
+	MX6_PAD_DISP0_DAT6__IPU2_DISP0_DATA06,
+	MX6_PAD_DISP0_DAT7__IPU2_DISP0_DATA07,
+	MX6_PAD_DISP0_DAT8__IPU2_DISP0_DATA08,
+	MX6_PAD_DISP0_DAT9__IPU2_DISP0_DATA09,
+	MX6_PAD_DISP0_DAT10__IPU2_DISP0_DATA10,
+	MX6_PAD_DISP0_DAT11__IPU2_DISP0_DATA11,
+	MX6_PAD_DISP0_DAT12__IPU2_DISP0_DATA12,
+	MX6_PAD_DISP0_DAT13__IPU2_DISP0_DATA13,
+	MX6_PAD_DISP0_DAT14__IPU2_DISP0_DATA14,
+	MX6_PAD_DISP0_DAT15__IPU2_DISP0_DATA15,
+#endif
+};
+
+static void do_enable_hdmi(struct display_info_t const *dev)
+{
+	imx_enable_hdmi_phy();
+}
+
+static int detect_i2c(struct display_info_t const *dev)
+{
+	return (0 == i2c_set_bus_num(dev->bus)) &&
+	       (0 == i2c_probe(dev->addr));
+}
+
+static void enable_lvds(struct display_info_t const *dev)
+{
+	struct iomuxc *iomux = (struct iomuxc *)
+				IOMUXC_BASE_ADDR;
+	u32 reg = readl(&iomux->gpr[2]);
+	reg |= IOMUXC_GPR2_DATA_WIDTH_CH0_24BIT;
+	writel(reg, &iomux->gpr[2]);
+	gpio_direction_output(RGB_BACKLIGHT_GP, 1);
+	gpio_direction_output(RGB_BACKLIGHTPWM_GP, 0);
+	gpio_direction_output(RGB_BACKLIGHTPWM_OE, 0);
+}
+
+static void enable_rgb(struct display_info_t const *dev)
+{
+	imx_iomux_v3_setup_multiple_pads(
+		rgb_pads,
+		ARRAY_SIZE(rgb_pads));
+	gpio_direction_output(RGB_BACKLIGHT_GP, 1);
+	gpio_direction_output(RGB_BACKLIGHTPWM_GP, 0);
+	gpio_direction_output(RGB_BACKLIGHTPWM_OE, 0);
+}
+
+static int detect_default(struct display_info_t const *dev)
+{
+	(void) dev;
+	return 1;
+}
+
+struct display_info_t const displays[] = {{
+	.bus	= -1,
+	.addr	= 0,
+	.pixfmt	= IPU_PIX_FMT_RGB24,
+	.detect	= detect_hdmi,
+	.enable	= do_enable_hdmi,
+	.mode	= {
+		.name           = "HDMI",
+		.refresh        = 60,
+		.xres           = 1024,
+		.yres           = 768,
+		.pixclock       = 15385,
+		.left_margin    = 220,
+		.right_margin   = 40,
+		.upper_margin   = 21,
+		.lower_margin   = 7,
+		.hsync_len      = 60,
+		.vsync_len      = 10,
+		.sync           = FB_SYNC_EXT,
+		.vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus	= -1,
+	.addr	= 0,
+	.di	= 1,
+	.pixfmt	= IPU_PIX_FMT_RGB24,
+	.detect	= detect_default,
+	.enable	= enable_rgb,
+	.mode	= {
+		.name           = "vga-rgb",
+		.refresh        = 60,
+		.xres           = 640,
+		.yres           = 480,
+		.pixclock       = 33000,
+		.left_margin    = 48,
+		.right_margin   = 16,
+		.upper_margin   = 31,
+		.lower_margin   = 11,
+		.hsync_len      = 96,
+		.vsync_len      = 2,
+		.sync           = 0,
+		.vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus	= -1,
+	.addr	= 0,
+	.di	= 1,
+	.pixfmt	= IPU_PIX_FMT_RGB24,
+	.enable	= enable_rgb,
+	.mode	= {
+		.name           = "wvga-rgb",
+		.refresh        = 60,
+		.xres           = 800,
+		.yres           = 480,
+		.pixclock       = 25000,
+		.left_margin    = 40,
+		.right_margin   = 88,
+		.upper_margin   = 33,
+		.lower_margin   = 10,
+		.hsync_len      = 128,
+		.vsync_len      = 2,
+		.sync           = 0,
+		.vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus	= -1,
+	.addr	= 0,
+	.pixfmt	= IPU_PIX_FMT_LVDS666,
+	.detect	= detect_i2c,
+	.enable	= enable_lvds,
+	.mode	= {
+		.name           = "wsvga-lvds",
+		.refresh        = 60,
+		.xres           = 1024,
+		.yres           = 600,
+		.pixclock       = 15385,
+		.left_margin    = 220,
+		.right_margin   = 40,
+		.upper_margin   = 21,
+		.lower_margin   = 7,
+		.hsync_len      = 60,
+		.vsync_len      = 10,
+		.sync           = FB_SYNC_EXT,
+		.vmode          = FB_VMODE_NONINTERLACED
+} } };
+size_t display_count = ARRAY_SIZE(displays);
+
+static void setup_display(void)
+{
+	struct mxc_ccm_reg *mxc_ccm = (struct mxc_ccm_reg *)CCM_BASE_ADDR;
+	struct iomuxc *iomux = (struct iomuxc *)IOMUXC_BASE_ADDR;
+	int reg;
+
+	enable_ipu_clock();
+	imx_setup_hdmi();
+	/* Turn on LDB0,IPU,IPU DI0 clocks */
+	reg = __raw_readl(&mxc_ccm->CCGR3);
+	reg |= MXC_CCM_CCGR3_LDB_DI0_MASK;
+	writel(reg, &mxc_ccm->CCGR3);
+
+	/* set LDB0, LDB1 clk select to 011/011 */
+	reg = readl(&mxc_ccm->cs2cdr);
+	reg &= ~(MXC_CCM_CS2CDR_LDB_DI0_CLK_SEL_MASK
+		 |MXC_CCM_CS2CDR_LDB_DI1_CLK_SEL_MASK);
+	reg |= (3<<MXC_CCM_CS2CDR_LDB_DI0_CLK_SEL_OFFSET)
+	      |(3<<MXC_CCM_CS2CDR_LDB_DI1_CLK_SEL_OFFSET);
+	writel(reg, &mxc_ccm->cs2cdr);
+
+	reg = readl(&mxc_ccm->cscmr2);
+	reg |= MXC_CCM_CSCMR2_LDB_DI0_IPU_DIV;
+	writel(reg, &mxc_ccm->cscmr2);
+
+	reg = readl(&mxc_ccm->chsccdr);
+	reg |= (CHSCCDR_CLK_SEL_LDB_DI0
+		<<MXC_CCM_CHSCCDR_IPU1_DI0_CLK_SEL_OFFSET);
+	writel(reg, &mxc_ccm->chsccdr);
+
+	reg = IOMUXC_GPR2_BGREF_RRMODE_EXTERNAL_RES
+	     |IOMUXC_GPR2_DI1_VS_POLARITY_ACTIVE_HIGH
+	     |IOMUXC_GPR2_DI0_VS_POLARITY_ACTIVE_LOW
+	     |IOMUXC_GPR2_BIT_MAPPING_CH1_SPWG
+	     |IOMUXC_GPR2_DATA_WIDTH_CH1_18BIT
+	     |IOMUXC_GPR2_BIT_MAPPING_CH0_SPWG
+	     |IOMUXC_GPR2_DATA_WIDTH_CH0_18BIT
+	     |IOMUXC_GPR2_LVDS_CH1_MODE_DISABLED
+	     |IOMUXC_GPR2_LVDS_CH0_MODE_ENABLED_DI0;
+	writel(reg, &iomux->gpr[2]);
+
+	reg = readl(&iomux->gpr[3]);
+	reg = (reg & ~(IOMUXC_GPR3_LVDS0_MUX_CTL_MASK
+			|IOMUXC_GPR3_HDMI_MUX_CTL_MASK))
+	    | (IOMUXC_GPR3_MUX_SRC_IPU1_DI0
+	       <<IOMUXC_GPR3_LVDS0_MUX_CTL_OFFSET);
+	writel(reg, &iomux->gpr[3]);
+
+	/* backlight unconditionally on for now */
+	imx_iomux_v3_setup_multiple_pads(backlight_pads,
+					 ARRAY_SIZE(backlight_pads));
+	/* use 0 for EDT 7", use 1 for LG fullHD panel */
+	gpio_direction_output(RGB_BACKLIGHTPWM_GP, 0);
+	gpio_direction_output(RGB_BACKLIGHTPWM_OE, 0);
+	gpio_direction_output(RGB_BACKLIGHT_GP, 1);
+}
+#endif /* defined(CONFIG_VIDEO_IPUV3) */
+
+int board_early_init_f(void)
+{
+	imx_iomux_v3_setup_multiple_pads(pwr_intb_pads,
+					 ARRAY_SIZE(pwr_intb_pads));
+#ifndef CONFIG_TDX_APALIS_IMX6_V1_0
+	setup_iomux_dte_uart();
+#else
+	setup_iomux_dce_uart();
+#endif
+
+#if defined(CONFIG_VIDEO_IPUV3)
+	setup_display();
+#endif
+	return 0;
+}
+
+/*
+ * Do not overwrite the console
+ * Use always serial for U-Boot console
+ */
+int overwrite_console(void)
+{
+	return 1;
+}
+
+int board_init(void)
+{
+	/* address of boot parameters */
+	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
+
+	setup_i2c(0, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info1);
+	setup_i2c(1, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info_loc);
+	setup_i2c(2, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info3);
+
+#ifdef CONFIG_TDX_CMD_IMX_MFGR
+	(void) pmic_init();
+#endif
+
+#ifdef CONFIG_CMD_SATA
+	setup_sata();
+#endif
+
+	setup_iomux_gpio();
+
+	return 0;
+}
+
+#ifdef CONFIG_BOARD_LATE_INIT
+int board_late_init(void)
+{
+#if defined(CONFIG_REVISION_TAG) && \
+    defined(CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG)
+	char env_str[256];
+	u32 rev;
+
+	rev = get_board_rev();
+	snprintf(env_str, ARRAY_SIZE(env_str), "%.4x", rev);
+	setenv("board_rev", env_str);
+
+#ifndef CONFIG_TDX_APALIS_IMX6_V1_0
+	if ((rev & 0xfff0) == 0x0100) {
+		char *fdt_env;
+
+		/* reconfigure the UART to DCE mode dynamically if on V1.0 HW */
+		setup_iomux_dce_uart();
+
+		/* if using the default device tree, use version for V1.0 HW */
+		fdt_env = getenv("fdt_file");
+		if ((fdt_env != NULL) && (strcmp(FDT_FILE, fdt_env) == 0)) {
+			setenv("fdt_file", FDT_FILE_V1_0);
+			printf("patching fdt_file to " FDT_FILE_V1_0 "\n");
+#ifndef CONFIG_ENV_IS_NOWHERE
+			saveenv();
+#endif
+		}
+	}
+#endif /* CONFIG_TDX_APALIS_IMX6_V1_0 */
+#endif /* CONFIG_REVISION_TAG */
+
+	return 0;
+}
+#endif /* CONFIG_BOARD_LATE_INIT */
+
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_SYSTEM_SETUP)
+int ft_system_setup(void *blob, bd_t *bd)
+{
+	return 0;
+}
+#endif
+
+int checkboard(void)
+{
+	char it[] = " IT";
+	int minc, maxc;
+
+	switch (get_cpu_temp_grade(&minc, &maxc)) {
+	case TEMP_AUTOMOTIVE:
+	case TEMP_INDUSTRIAL:
+		break;
+	case TEMP_EXTCOMMERCIAL:
+	default:
+		it[0] = 0;
+	};
+	printf("Model: Toradex Apalis iMX6 %s %s%s\n",
+	       is_cpu_type(MXC_CPU_MX6D) ? "Dual" : "Quad",
+	       (gd->ram_size == 0x80000000) ? "2GB" :
+	       (gd->ram_size == 0x40000000) ? "1GB" : "512MB", it);
+	return 0;
+}
+
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_BOARD_SETUP)
+int ft_board_setup(void *blob, bd_t *bd)
+{
+	return ft_common_board_setup(blob, bd);
+}
+#endif
+
+#ifdef CONFIG_CMD_BMODE
+static const struct boot_mode board_boot_modes[] = {
+	/* 4-bit bus width */
+	{"mmc",	MAKE_CFGVAL(0x40, 0x20, 0x00, 0x00)},
+	{"sd",	MAKE_CFGVAL(0x40, 0x28, 0x00, 0x00)},
+	{NULL,	0},
+};
+#endif
+
+int misc_init_r(void)
+{
+#ifdef CONFIG_CMD_BMODE
+	add_board_boot_modes(board_boot_modes);
+#endif
+	return 0;
+}
+
+#ifdef CONFIG_LDO_BYPASS_CHECK
+/* TODO, use external pmic, for now always ldo_enable */
+void ldo_mode_set(int ldo_bypass)
+{
+	return;
+}
+#endif
+
+#ifdef CONFIG_SPL_BUILD
+#include <spl.h>
+#include <libfdt.h>
+#include "asm/arch/mx6q-ddr.h"
+#include "asm/arch/iomux.h"
+#include "asm/arch/crm_regs.h"
+
+static int mx6_com_dcd_table[] = {
+/* ddr-setup.cfg */
+MX6_IOM_DRAM_SDQS0, 0x00000030,
+MX6_IOM_DRAM_SDQS1, 0x00000030,
+MX6_IOM_DRAM_SDQS2, 0x00000030,
+MX6_IOM_DRAM_SDQS3, 0x00000030,
+MX6_IOM_DRAM_SDQS4, 0x00000030,
+MX6_IOM_DRAM_SDQS5, 0x00000030,
+MX6_IOM_DRAM_SDQS6, 0x00000030,
+MX6_IOM_DRAM_SDQS7, 0x00000030,
+
+MX6_IOM_GRP_B0DS, 0x00000030,
+MX6_IOM_GRP_B1DS, 0x00000030,
+MX6_IOM_GRP_B2DS, 0x00000030,
+MX6_IOM_GRP_B3DS, 0x00000030,
+MX6_IOM_GRP_B4DS, 0x00000030,
+MX6_IOM_GRP_B5DS, 0x00000030,
+MX6_IOM_GRP_B6DS, 0x00000030,
+MX6_IOM_GRP_B7DS, 0x00000030,
+MX6_IOM_GRP_ADDDS, 0x00000030,
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+MX6_IOM_GRP_CTLDS, 0x00000030,
+
+MX6_IOM_DRAM_DQM0, 0x00020030,
+MX6_IOM_DRAM_DQM1, 0x00020030,
+MX6_IOM_DRAM_DQM2, 0x00020030,
+MX6_IOM_DRAM_DQM3, 0x00020030,
+MX6_IOM_DRAM_DQM4, 0x00020030,
+MX6_IOM_DRAM_DQM5, 0x00020030,
+MX6_IOM_DRAM_DQM6, 0x00020030,
+MX6_IOM_DRAM_DQM7, 0x00020030,
+
+MX6_IOM_DRAM_CAS, 0x00020030,
+MX6_IOM_DRAM_RAS, 0x00020030,
+MX6_IOM_DRAM_SDCLK_0, 0x00020030,
+MX6_IOM_DRAM_SDCLK_1, 0x00020030,
+
+MX6_IOM_DRAM_RESET, 0x00020030,
+MX6_IOM_DRAM_SDCKE0, 0x00003000,
+MX6_IOM_DRAM_SDCKE1, 0x00003000,
+
+MX6_IOM_DRAM_SDODT0, 0x00003030,
+MX6_IOM_DRAM_SDODT1, 0x00003030,
+
+/* (differential input) */
+MX6_IOM_DDRMODE_CTL, 0x00020000,
+/* (differential input) */
+MX6_IOM_GRP_DDRMODE, 0x00020000,
+/* disable ddr pullups */
+MX6_IOM_GRP_DDRPKE, 0x00000000,
+MX6_IOM_DRAM_SDBA2, 0x00000000,
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+MX6_IOM_GRP_DDR_TYPE, 0x000C0000,
+
+/* Read data DQ Byte0-3 delay */
+MX6_MMDC_P0_MPRDDQBY0DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY1DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY2DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY3DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY0DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY1DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY2DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY3DL, 0x33333333,
+
+/*
+ * MDMISC	mirroring	interleaved (row/bank/col)
+ */
+MX6_MMDC_P0_MDMISC, 0x00081740,
+
+/*
+ * MDSCR	con_req
+ */
+MX6_MMDC_P0_MDSCR, 0x00008000,
+
+/* 1066mhz_4x128mx16.cfg */
+
+MX6_MMDC_P0_MDPDC, 0x00020036,
+MX6_MMDC_P0_MDCFG0, 0x555A7954,
+MX6_MMDC_P0_MDCFG1, 0xDB328F64,
+MX6_MMDC_P0_MDCFG2, 0x01FF00DB,
+MX6_MMDC_P0_MDRWD, 0x000026D2,
+MX6_MMDC_P0_MDOR, 0x005A1023,
+MX6_MMDC_P0_MDOTC, 0x09555050,
+MX6_MMDC_P0_MDPDC, 0x00025576,
+MX6_MMDC_P0_MDASP, 0x00000027,
+MX6_MMDC_P0_MDCTL, 0x831A0000,
+MX6_MMDC_P0_MDSCR, 0x04088032,
+MX6_MMDC_P0_MDSCR, 0x00008033,
+MX6_MMDC_P0_MDSCR, 0x00428031,
+MX6_MMDC_P0_MDSCR, 0x19308030,
+MX6_MMDC_P0_MDSCR, 0x04008040,
+MX6_MMDC_P0_MPZQHWCTRL, 0xA1390003,
+MX6_MMDC_P1_MPZQHWCTRL, 0xA1390003,
+MX6_MMDC_P0_MDREF, 0x00005800,
+MX6_MMDC_P0_MPODTCTRL, 0x00000000,
+MX6_MMDC_P1_MPODTCTRL, 0x00000000,
+
+MX6_MMDC_P0_MPDGCTRL0, 0x432A0338,
+MX6_MMDC_P0_MPDGCTRL1, 0x03260324,
+MX6_MMDC_P1_MPDGCTRL0, 0x43340344,
+MX6_MMDC_P1_MPDGCTRL1, 0x031E027C,
+
+MX6_MMDC_P0_MPRDDLCTL, 0x33272D2E,
+MX6_MMDC_P1_MPRDDLCTL, 0x2F312B37,
+
+MX6_MMDC_P0_MPWRDLCTL, 0x3A35433C,
+MX6_MMDC_P1_MPWRDLCTL, 0x4336453F,
+
+MX6_MMDC_P0_MPWLDECTRL0, 0x0009000E,
+MX6_MMDC_P0_MPWLDECTRL1, 0x0018000B,
+MX6_MMDC_P1_MPWLDECTRL0, 0x00060015,
+MX6_MMDC_P1_MPWLDECTRL1, 0x0006000E,
+
+MX6_MMDC_P0_MPMUR0, 0x00000800,
+MX6_MMDC_P1_MPMUR0, 0x00000800,
+MX6_MMDC_P0_MDSCR, 0x00000000,
+MX6_MMDC_P0_MAPSR, 0x00011006,
+};
+
+static int mx6_it_dcd_table[] = {
+/* ddr-setup.cfg */
+MX6_IOM_DRAM_SDQS0, 0x00000030,
+MX6_IOM_DRAM_SDQS1, 0x00000030,
+MX6_IOM_DRAM_SDQS2, 0x00000030,
+MX6_IOM_DRAM_SDQS3, 0x00000030,
+MX6_IOM_DRAM_SDQS4, 0x00000030,
+MX6_IOM_DRAM_SDQS5, 0x00000030,
+MX6_IOM_DRAM_SDQS6, 0x00000030,
+MX6_IOM_DRAM_SDQS7, 0x00000030,
+
+MX6_IOM_GRP_B0DS, 0x00000030,
+MX6_IOM_GRP_B1DS, 0x00000030,
+MX6_IOM_GRP_B2DS, 0x00000030,
+MX6_IOM_GRP_B3DS, 0x00000030,
+MX6_IOM_GRP_B4DS, 0x00000030,
+MX6_IOM_GRP_B5DS, 0x00000030,
+MX6_IOM_GRP_B6DS, 0x00000030,
+MX6_IOM_GRP_B7DS, 0x00000030,
+MX6_IOM_GRP_ADDDS, 0x00000030,
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+MX6_IOM_GRP_CTLDS, 0x00000030,
+
+MX6_IOM_DRAM_DQM0, 0x00020030,
+MX6_IOM_DRAM_DQM1, 0x00020030,
+MX6_IOM_DRAM_DQM2, 0x00020030,
+MX6_IOM_DRAM_DQM3, 0x00020030,
+MX6_IOM_DRAM_DQM4, 0x00020030,
+MX6_IOM_DRAM_DQM5, 0x00020030,
+MX6_IOM_DRAM_DQM6, 0x00020030,
+MX6_IOM_DRAM_DQM7, 0x00020030,
+
+MX6_IOM_DRAM_CAS, 0x00020030,
+MX6_IOM_DRAM_RAS, 0x00020030,
+MX6_IOM_DRAM_SDCLK_0, 0x00020030,
+MX6_IOM_DRAM_SDCLK_1, 0x00020030,
+
+MX6_IOM_DRAM_RESET, 0x00020030,
+MX6_IOM_DRAM_SDCKE0, 0x00003000,
+MX6_IOM_DRAM_SDCKE1, 0x00003000,
+
+MX6_IOM_DRAM_SDODT0, 0x00003030,
+MX6_IOM_DRAM_SDODT1, 0x00003030,
+
+/* (differential input) */
+MX6_IOM_DDRMODE_CTL, 0x00020000,
+/* (differential input) */
+MX6_IOM_GRP_DDRMODE, 0x00020000,
+/* disable ddr pullups */
+MX6_IOM_GRP_DDRPKE, 0x00000000,
+MX6_IOM_DRAM_SDBA2, 0x00000000,
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+MX6_IOM_GRP_DDR_TYPE, 0x000C0000,
+
+/* Read data DQ Byte0-3 delay */
+MX6_MMDC_P0_MPRDDQBY0DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY1DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY2DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY3DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY0DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY1DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY2DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY3DL, 0x33333333,
+
+/*
+ * MDMISC	mirroring	interleaved (row/bank/col)
+ */
+MX6_MMDC_P0_MDMISC, 0x00081740,
+
+/*
+ * MDSCR	con_req
+ */
+MX6_MMDC_P0_MDSCR, 0x00008000,
+
+/* 1066mhz_4x256mx16.cfg */
+
+MX6_MMDC_P0_MDPDC, 0x00020036,
+MX6_MMDC_P0_MDCFG0, 0x898E78f5,
+MX6_MMDC_P0_MDCFG1, 0xff328f64,
+MX6_MMDC_P0_MDCFG2, 0x01FF00DB,
+MX6_MMDC_P0_MDRWD, 0x000026D2,
+MX6_MMDC_P0_MDOR, 0x008E1023,
+MX6_MMDC_P0_MDOTC, 0x09444040,
+MX6_MMDC_P0_MDPDC, 0x00025576,
+MX6_MMDC_P0_MDASP, 0x00000047,
+MX6_MMDC_P0_MDCTL, 0x841A0000,
+MX6_MMDC_P0_MDSCR, 0x02888032,
+MX6_MMDC_P0_MDSCR, 0x00008033,
+MX6_MMDC_P0_MDSCR, 0x00048031,
+MX6_MMDC_P0_MDSCR, 0x19408030,
+MX6_MMDC_P0_MDSCR, 0x04008040,
+MX6_MMDC_P0_MPZQHWCTRL, 0xA1390003,
+MX6_MMDC_P1_MPZQHWCTRL, 0xA1390003,
+MX6_MMDC_P0_MDREF, 0x00007800,
+MX6_MMDC_P0_MPODTCTRL, 0x00022227,
+MX6_MMDC_P1_MPODTCTRL, 0x00022227,
+
+MX6_MMDC_P0_MPDGCTRL0, 0x03300338,
+MX6_MMDC_P0_MPDGCTRL1, 0x03240324,
+MX6_MMDC_P1_MPDGCTRL0, 0x03440350,
+MX6_MMDC_P1_MPDGCTRL1, 0x032C0308,
+
+MX6_MMDC_P0_MPRDDLCTL, 0x40363C3E,
+MX6_MMDC_P1_MPRDDLCTL, 0x3C3E3C46,
+
+MX6_MMDC_P0_MPWRDLCTL, 0x403E463E,
+MX6_MMDC_P1_MPWRDLCTL, 0x4A384C46,
+
+MX6_MMDC_P0_MPWLDECTRL0, 0x0009000E,
+MX6_MMDC_P0_MPWLDECTRL1, 0x0018000B,
+MX6_MMDC_P1_MPWLDECTRL0, 0x00060015,
+MX6_MMDC_P1_MPWLDECTRL1, 0x0006000E,
+
+MX6_MMDC_P0_MPMUR0, 0x00000800,
+MX6_MMDC_P1_MPMUR0, 0x00000800,
+MX6_MMDC_P0_MDSCR, 0x00000000,
+MX6_MMDC_P0_MAPSR, 0x00011006,
+};
+
+
+static void ccgr_init(void)
+{
+	struct mxc_ccm_reg *ccm = (struct mxc_ccm_reg *)CCM_BASE_ADDR;
+
+	writel(0x00C03F3F, &ccm->CCGR0);
+	writel(0x0030FC03, &ccm->CCGR1);
+	writel(0x0FFFFFF3, &ccm->CCGR2);
+	writel(0x3FF0300F, &ccm->CCGR3);
+	writel(0x00FFF300, &ccm->CCGR4);
+	writel(0x0F0000F3, &ccm->CCGR5);
+	writel(0x000003FF, &ccm->CCGR6);
+
+/*
+ * Setup CCM_CCOSR register as follows:
+ *
+ * cko1_en  = 1	   --> CKO1 enabled
+ * cko1_div = 111  --> divide by 8
+ * cko1_sel = 1011 --> ahb_clk_root
+ *
+ * This sets CKO1 at ahb_clk_root/8 = 132/8 = 16.5 MHz
+ */
+	writel(0x000000FB, &ccm->ccosr);
+}
+
+static void gpr_init(void)
+{
+	struct iomuxc *iomux = (struct iomuxc *)IOMUXC_BASE_ADDR;
+
+	/* enable AXI cache for VDOA/VPU/IPU */
+	writel(0xF00000CF, &iomux->gpr[4]);
+	/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
+	writel(0x007F007F, &iomux->gpr[6]);
+	writel(0x007F007F, &iomux->gpr[7]);
+}
+
+static void ddr_init(int *table, int size)
+{
+	int i;
+
+	for (i = 0; i < size / 2 ; i++)
+		writel(table[2 * i + 1], table[2 * i]);
+}
+
+static void spl_dram_init(void)
+{
+	int minc, maxc;
+
+	switch (get_cpu_temp_grade(&minc, &maxc)) {
+	case TEMP_COMMERCIAL:
+	case TEMP_EXTCOMMERCIAL:
+		puts("Commercial temperature grade DDR3 timings.\n");
+		ddr_init(mx6_com_dcd_table, ARRAY_SIZE(mx6_com_dcd_table));
+		break;
+	case TEMP_INDUSTRIAL:
+	case TEMP_AUTOMOTIVE:
+	default:
+		puts("Industrial temperature grade DDR3 timings.\n");
+		ddr_init(mx6_it_dcd_table, ARRAY_SIZE(mx6_it_dcd_table));
+		break;
+	};
+	udelay(100);
+}
+
+void board_init_f(ulong dummy)
+{
+	/* setup AIPS and disable watchdog */
+	arch_cpu_init();
+
+	ccgr_init();
+	gpr_init();
+
+	/* iomux and setup of i2c */
+	board_early_init_f();
+
+	/* setup GP timer */
+	timer_init();
+
+	/* UART clocks enabled and gd valid - init serial console */
+	preloader_console_init();
+
+#ifndef CONFIG_TDX_APALIS_IMX6_V1_0
+	/* Make sure we use dte mode */
+	setup_dtemode_uart();
+#endif
+
+	/* DDR initialization */
+	spl_dram_init();
+
+	/* Clear the BSS. */
+	memset(__bss_start, 0, __bss_end - __bss_start);
+
+	/* load/boot image from boot device */
+	board_init_r(NULL, 0);
+}
+
+void reset_cpu(ulong addr)
+{
+}
+
+#ifdef CONFIG_SPL_USB_GADGET_SUPPORT
+int g_dnl_bind_fixup(struct usb_device_descriptor *dev, const char *name)
+{
+	unsigned short usb_pid;
+
+	usb_pid = TORADEX_USB_PRODUCT_NUM_OFFSET + 0xfff;
+	put_unaligned(usb_pid, &dev->idProduct);
+
+	return 0;
+}
+#endif
+
+#endif
+
+static struct mxc_serial_platdata mxc_serial_plat = {
+	.reg = (struct mxc_uart *)UART1_BASE,
+	.use_dte = true,
+};
+
+U_BOOT_DEVICE(mxc_serial) = {
+	.name = "serial_mxc",
+	.platdata = &mxc_serial_plat,
+};
diff --git a/board/toradex/apalis_imx6/apalis_imx6q.cfg b/board/toradex/apalis_imx6/apalis_imx6q.cfg
new file mode 100644
index 0000000..b775010
--- /dev/null
+++ b/board/toradex/apalis_imx6/apalis_imx6q.cfg
@@ -0,0 +1,34 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Refer doc/README.imximage for more details about how-to configure
+ * and create imximage boot image
+ *
+ * The syntax is taken as close as possible with the kwbimage
+ */
+
+/* image version */
+IMAGE_VERSION 2
+
+/*
+ * Boot Device : one of
+ * spi, sd (the board has no nand neither onenand)
+ */
+BOOT_FROM      sd
+
+#define __ASSEMBLY__
+#include <config.h>
+#include "asm/arch/mx6-ddr.h"
+#include "asm/arch/iomux.h"
+#include "asm/arch/crm_regs.h"
+
+#include "ddr-setup.cfg"
+#if CONFIG_DDR_MB == 2048
+#include "1066mhz_4x256mx16.cfg"
+#else
+#include "1066mhz_4x128mx16.cfg"
+#endif
+#include "clocks.cfg"
diff --git a/board/toradex/apalis_imx6/clocks.cfg b/board/toradex/apalis_imx6/clocks.cfg
new file mode 100644
index 0000000..be96094
--- /dev/null
+++ b/board/toradex/apalis_imx6/clocks.cfg
@@ -0,0 +1,42 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Device Configuration Data (DCD)
+ *
+ * Each entry must have the format:
+ * Addr-type           Address        Value
+ *
+ * where:
+ *      Addr-type register length (1,2 or 4 bytes)
+ *      Address   absolute address of the register
+ *      value     value to be stored in the register
+ */
+
+/* set the default clock gate to save power */
+DATA 4, CCM_CCGR0, 0x00C03F3F
+DATA 4, CCM_CCGR1, 0x0030FC03
+DATA 4, CCM_CCGR2, 0x0FFFC000
+DATA 4, CCM_CCGR3, 0x3FF00000
+DATA 4, CCM_CCGR4, 0x00FFF300
+DATA 4, CCM_CCGR5, 0x0F0000C3
+DATA 4, CCM_CCGR6, 0x000003FF
+
+/* enable AXI cache for VDOA/VPU/IPU */
+DATA 4, MX6_IOMUXC_GPR4, 0xF00000CF
+/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
+DATA 4, MX6_IOMUXC_GPR6, 0x007F007F
+DATA 4, MX6_IOMUXC_GPR7, 0x007F007F
+
+/*
+ * Setup CCM_CCOSR register as follows:
+ *
+ * cko1_en  = 1	   --> CKO1 enabled
+ * cko1_div = 111  --> divide by 8
+ * cko1_sel = 1011 --> ahb_clk_root
+ *
+ * This sets CKO1 at ahb_clk_root/8 = 132/8 = 16.5 MHz
+ */
+DATA 4, CCM_CCOSR, 0x000000fb
diff --git a/board/toradex/apalis_imx6/ddr-setup.cfg b/board/toradex/apalis_imx6/ddr-setup.cfg
new file mode 100644
index 0000000..de7cdd6
--- /dev/null
+++ b/board/toradex/apalis_imx6/ddr-setup.cfg
@@ -0,0 +1,97 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Device Configuration Data (DCD)
+ *
+ * Each entry must have the format:
+ * Addr-type           Address        Value
+ *
+ * where:
+ *      Addr-type register length (1,2 or 4 bytes)
+ *      Address   absolute address of the register
+ *      value     value to be stored in the register
+ */
+
+/*
+ * DDR3 settings
+ * MX6Q    ddr is limited to 1066 Mhz	currently 1056 MHz(528 MHz clock),
+ *	   memory bus width: 64 bits	x16/x32/x64
+ * MX6DL   ddr is limited to 800 MHz(400 MHz clock)
+ *	   memory bus width: 64 bits	x16/x32/x64
+ * MX6SOLO ddr is limited to 800 MHz(400 MHz clock)
+ *	   memory bus width: 32 bits	x16/x32
+ */
+DATA 4, MX6_IOM_DRAM_SDQS0, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS1, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS2, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS3, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS4, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS5, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS6, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS7, 0x00000030
+
+DATA 4, MX6_IOM_GRP_B0DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B1DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B2DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B3DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B4DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B5DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B6DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B7DS, 0x00000030
+DATA 4, MX6_IOM_GRP_ADDDS, 0x00000030
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+DATA 4, MX6_IOM_GRP_CTLDS, 0x00000030
+
+DATA 4, MX6_IOM_DRAM_DQM0, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM1, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM2, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM3, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM4, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM5, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM6, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM7, 0x00020030
+
+DATA 4, MX6_IOM_DRAM_CAS, 0x00020030
+DATA 4, MX6_IOM_DRAM_RAS, 0x00020030
+DATA 4, MX6_IOM_DRAM_SDCLK_0, 0x00020030
+DATA 4, MX6_IOM_DRAM_SDCLK_1, 0x00020030
+
+DATA 4, MX6_IOM_DRAM_RESET, 0x00020030
+DATA 4, MX6_IOM_DRAM_SDCKE0, 0x00003000
+DATA 4, MX6_IOM_DRAM_SDCKE1, 0x00003000
+
+DATA 4, MX6_IOM_DRAM_SDODT0, 0x00003030
+DATA 4, MX6_IOM_DRAM_SDODT1, 0x00003030
+
+/* (differential input) */
+DATA 4, MX6_IOM_DDRMODE_CTL, 0x00020000
+/* (differential input) */
+DATA 4, MX6_IOM_GRP_DDRMODE, 0x00020000
+/* disable ddr pullups */
+DATA 4, MX6_IOM_GRP_DDRPKE, 0x00000000
+DATA 4, MX6_IOM_DRAM_SDBA2, 0x00000000
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+DATA 4, MX6_IOM_GRP_DDR_TYPE, 0x000C0000
+
+/* Read data DQ Byte0-3 delay */
+DATA 4, MX6_MMDC_P0_MPRDDQBY0DL, 0x33333333
+DATA 4, MX6_MMDC_P0_MPRDDQBY1DL, 0x33333333
+DATA 4, MX6_MMDC_P0_MPRDDQBY2DL, 0x33333333
+DATA 4, MX6_MMDC_P0_MPRDDQBY3DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY0DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY1DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY2DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY3DL, 0x33333333
+
+/*
+ * MDMISC	mirroring	interleaved (row/bank/col)
+ */
+DATA 4, MX6_MMDC_P0_MDMISC, 0x00081740
+
+/*
+ * MDSCR	con_req
+ */
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00008000
diff --git a/board/toradex/apalis_imx6/do_fuse.c b/board/toradex/apalis_imx6/do_fuse.c
new file mode 100644
index 0000000..cff07e9
--- /dev/null
+++ b/board/toradex/apalis_imx6/do_fuse.c
@@ -0,0 +1,98 @@
+/*
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+/*
+ * Helpers for i.MX OTP fusing during module production
+*/
+
+#include <common.h>
+#ifndef CONFIG_SPL_BUILD
+#include <console.h>
+#include <fuse.h>
+
+static int mfgr_fuse(void)
+{
+	unsigned val, val6;
+
+	fuse_sense(0, 5, &val);
+	printf("Fuse 0, 5: %8x\n", val);
+	fuse_sense(0, 6, &val6);
+	printf("Fuse 0, 6: %8x\n", val6);
+	fuse_sense(4, 3, &val);
+	printf("Fuse 4, 3: %8x\n", val);
+	fuse_sense(4, 2, &val);
+	printf("Fuse 4, 2: %8x\n", val);
+	if (val6 & 0x10) {
+		puts("BT_FUSE_SEL already fused, will do nothing\n");
+		return CMD_RET_FAILURE;
+	}
+	/* boot cfg */
+	fuse_prog(0, 5, 0x00005072);
+	/* BT_FUSE_SEL */
+	fuse_prog(0, 6, 0x00000010);
+	return CMD_RET_SUCCESS;
+}
+
+int do_mfgr_fuse(cmd_tbl_t *cmdtp, int flag, int argc,
+		char * const argv[])
+{
+	int ret;
+	puts("Fusing...\n");
+	ret = mfgr_fuse();
+	if (ret == CMD_RET_SUCCESS)
+		puts("done.\n");
+	else
+		puts("failed.\n");
+	return ret;
+}
+
+int do_updt_fuse(cmd_tbl_t *cmdtp, int flag, int argc,
+		char * const argv[])
+{
+	unsigned val;
+	int ret;
+	int confirmed = argc >= 1 && !strcmp(argv[1], "-y");
+
+	/* can be used in scripts for command availability check */
+	if (argc >= 1 && !strcmp(argv[1], "-n"))
+		return CMD_RET_SUCCESS;
+
+	/* boot cfg */
+	fuse_sense(0, 5, &val);
+	printf("Fuse 0, 5: %8x\n", val);
+	if (val & 0x10) {
+		puts("Fast boot mode already fused, no need to fuse\n");
+		return CMD_RET_SUCCESS;
+	}
+	if (!confirmed) {
+		puts("Warning: Programming fuses is an irreversible operation!\n"
+				"         Updating to fast boot mode prevents easy\n"
+				"         downgrading to previous BSP versions.\n"
+				"\nReally perform this fuse programming? <y/N>\n");
+		if (!confirm_yesno())
+			return CMD_RET_FAILURE;
+	}
+	puts("Fusing fast boot mode...\n");
+	ret = fuse_prog(0, 5, 0x00005072);
+	if (ret == CMD_RET_SUCCESS)
+		puts("done.\n");
+	else
+		puts("failed.\n");
+	return ret;
+}
+
+U_BOOT_CMD(
+	mfgr_fuse, 1, 0, do_mfgr_fuse,
+	"OTP fusing during module production",
+	""
+);
+
+U_BOOT_CMD(
+	updt_fuse, 2, 0, do_updt_fuse,
+	"OTP fusing during module update",
+	"updt_fuse [-n] [-y] - boot cfg fast boot mode fusing"
+);
+#endif /* CONFIG_SPL_BUILD */
diff --git a/board/toradex/apalis_imx6/pf0100.c b/board/toradex/apalis_imx6/pf0100.c
new file mode 100644
index 0000000..0a1fb70
--- /dev/null
+++ b/board/toradex/apalis_imx6/pf0100.c
@@ -0,0 +1,229 @@
+/*
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+/*
+ * Helpers for Freescale PMIC PF0100
+*/
+
+#include <common.h>
+#include <i2c.h>
+#include <asm/arch/imx-regs.h>
+#include <asm/arch/iomux.h>
+#include <asm/arch/mx6-pins.h>
+#include <asm/gpio.h>
+#include <asm/imx-common/iomux-v3.h>
+
+#include "pf0100_otp.inc"
+#include "pf0100.h"
+
+/* define for PMIC register dump */
+/*#define DEBUG */
+
+/* use Apalis GPIO1 to switch on VPGM, ON: 1 */
+static iomux_v3_cfg_t const pmic_prog_pads[] = {
+	MX6_PAD_NANDF_D4__GPIO2_IO04 | MUX_PAD_CTRL(NO_PAD_CTRL),
+#	define PMIC_PROG_VOLTAGE IMX_GPIO_NR(2, 4)
+};
+
+unsigned pmic_init(void)
+{
+	unsigned programmed = 0;
+	uchar bus = 1;
+	uchar devid, revid, val;
+
+	puts("PMIC:  ");
+	if (!((0 == i2c_set_bus_num(bus)) &&
+	      (0 == i2c_probe(PFUZE100_I2C_ADDR)))) {
+		puts("i2c bus failed\n");
+		return 0;
+	}
+	/* get device ident */
+	if (i2c_read(PFUZE100_I2C_ADDR, PFUZE100_DEVICEID, 1, &devid, 1) < 0) {
+		puts("i2c pmic devid read failed\n");
+		return 0;
+	}
+	if (i2c_read(PFUZE100_I2C_ADDR, PFUZE100_REVID, 1, &revid, 1) < 0) {
+		puts("i2c pmic revid read failed\n");
+		return 0;
+	}
+	printf("device id: 0x%.2x, revision id: 0x%.2x, ", devid, revid);
+
+	/* get device programmed state */
+	val = PFUZE100_PAGE_REGISTER_PAGE1;
+	if (i2c_write(PFUZE100_I2C_ADDR, PFUZE100_PAGE_REGISTER, 1, &val, 1)) {
+		puts("i2c write failed\n");
+		return 0;
+	}
+	if (i2c_read(PFUZE100_I2C_ADDR, PFUZE100_FUSE_POR1, 1, &val, 1) < 0) {
+		puts("i2c fuse_por read failed\n");
+		return 0;
+	}
+	if (val & PFUZE100_FUSE_POR_M)
+		programmed++;
+
+	if (i2c_read(PFUZE100_I2C_ADDR, PFUZE100_FUSE_POR2, 1, &val, 1) < 0) {
+		puts("i2c fuse_por read failed\n");
+		return programmed;
+	}
+	if (val & PFUZE100_FUSE_POR_M)
+		programmed++;
+
+	if (i2c_read(PFUZE100_I2C_ADDR, PFUZE100_FUSE_POR3, 1, &val, 1) < 0) {
+		puts("i2c fuse_por read failed\n");
+		return programmed;
+	}
+	if (val & PFUZE100_FUSE_POR_M)
+		programmed++;
+
+	switch (programmed) {
+	case 0:
+		puts("not programmed\n");
+		break;
+	case 3:
+		puts("programmed\n");
+		break;
+	default:
+		puts("undefined programming state\n");
+		break;
+	}
+
+	/* The following is needed during production */
+	if (programmed != 3) {
+		/* set VGEN1 to 1.2V */
+		val = PFUZE100_VGEN1_VAL;
+		if (i2c_write(PFUZE100_I2C_ADDR, PFUZE100_VGEN1CTL, 1,
+			      &val, 1)) {
+			puts("i2c write failed\n");
+			return programmed;
+		}
+
+		/* set SWBST to 5.0V */
+		val = PFUZE100_SWBST_VAL;
+		if (i2c_write(PFUZE100_I2C_ADDR, PFUZE100_SWBSTCTL, 1,
+			      &val, 1)) {
+			puts("i2c write failed\n");
+		}
+	}
+
+#ifdef DEBUG
+	{
+		unsigned i, j;
+
+		for (i = 0; i < 16; i++)
+			printf("\t%x", i);
+		for (j = 0; j < 0x80; ) {
+			printf("\n%2x", j);
+			for (i = 0; i < 16; i++) {
+				i2c_read(PFUZE100_I2C_ADDR, j+i, 1, &val, 1);
+				printf("\t%2x", val);
+			}
+			j += 0x10;
+		}
+		printf("\nEXT Page 1");
+
+		val = PFUZE100_PAGE_REGISTER_PAGE1;
+		if (i2c_write(PFUZE100_I2C_ADDR, PFUZE100_PAGE_REGISTER, 1,
+			      &val, 1)) {
+			puts("i2c write failed\n");
+			return 0;
+		}
+
+		for (j = 0x80; j < 0x100; ) {
+			printf("\n%2x", j);
+			for (i = 0; i < 16; i++) {
+				i2c_read(PFUZE100_I2C_ADDR, j+i, 1, &val, 1);
+				printf("\t%2x", val);
+			}
+			j += 0x10;
+		}
+		printf("\nEXT Page 2");
+
+		val = PFUZE100_PAGE_REGISTER_PAGE2;
+		if (i2c_write(PFUZE100_I2C_ADDR, PFUZE100_PAGE_REGISTER, 1,
+			      &val, 1)) {
+			puts("i2c write failed\n");
+			return 0;
+		}
+
+		for (j = 0x80; j < 0x100; ) {
+			printf("\n%2x", j);
+			for (i = 0; i < 16; i++) {
+				i2c_read(PFUZE100_I2C_ADDR, j+i, 1, &val, 1);
+				printf("\t%2x", val);
+			}
+			j += 0x10;
+		}
+		printf("\n");
+	}
+#endif
+	return programmed;
+}
+
+int pf0100_prog(void)
+{
+	unsigned char bus = 1;
+	unsigned char val;
+	unsigned int i;
+
+	if (pmic_init() == 3) {
+		puts("PMIC already programmed, exiting\n");
+		return CMD_RET_FAILURE;
+	}
+	/* set up gpio to manipulate vprog, initially off */
+	imx_iomux_v3_setup_multiple_pads(pmic_prog_pads,
+					 ARRAY_SIZE(pmic_prog_pads));
+	gpio_direction_output(PMIC_PROG_VOLTAGE, 0);
+
+	if (!((0 == i2c_set_bus_num(bus)) &&
+	      (0 == i2c_probe(PFUZE100_I2C_ADDR)))) {
+		puts("i2c bus failed\n");
+		return CMD_RET_FAILURE;
+	}
+
+	for (i = 0; i < ARRAY_SIZE(pmic_otp_prog); i++) {
+		switch (pmic_otp_prog[i].cmd) {
+		case pmic_i2c:
+			val = (unsigned char) (pmic_otp_prog[i].value & 0xff);
+			if (i2c_write(PFUZE100_I2C_ADDR, pmic_otp_prog[i].reg,
+				      1, &val, 1)) {
+				printf("i2c write failed, reg 0x%2x, value 0x%2x\n",
+				       pmic_otp_prog[i].reg, val);
+				return CMD_RET_FAILURE;
+			}
+			break;
+		case pmic_delay:
+			udelay(pmic_otp_prog[i].value * 1000);
+			break;
+		case pmic_vpgm:
+			gpio_direction_output(PMIC_PROG_VOLTAGE,
+					      pmic_otp_prog[i].value);
+			break;
+		case pmic_pwr:
+			/* TODO */
+			break;
+		}
+	}
+	return CMD_RET_SUCCESS;
+}
+
+int do_pf0100_prog(cmd_tbl_t *cmdtp, int flag, int argc,
+		char * const argv[])
+{
+	int ret;
+	puts("Programming PMIC OTP...");
+	ret = pf0100_prog();
+	if (ret == CMD_RET_SUCCESS)
+		puts("done.\n");
+	else
+		puts("failed.\n");
+	return ret;
+}
+
+U_BOOT_CMD(
+	pf0100_otp_prog, 1, 0, do_pf0100_prog,
+	"Program the OTP fuses on the PMIC PF0100",
+	""
+);
diff --git a/board/toradex/apalis_imx6/pf0100.h b/board/toradex/apalis_imx6/pf0100.h
new file mode 100644
index 0000000..c84cab8
--- /dev/null
+++ b/board/toradex/apalis_imx6/pf0100.h
@@ -0,0 +1,56 @@
+/*
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+/*
+ * Helpers for Freescale PMIC PF0100
+*/
+
+#ifndef PF0100_H_
+#define PF0100_H_
+
+/* 7-bit I2C bus slave address */
+#define PFUZE100_I2C_ADDR		(0x08)
+/* Register Addresses */
+#define PFUZE100_DEVICEID		(0x0)
+#define PFUZE100_REVID			(0x3)
+#define PFUZE100_SW1AMODE		(0x23)
+#define PFUZE100_SW1ACON		36
+#define PFUZE100_SW1ACON_SPEED_VAL	(0x1<<6)	/*default */
+#define PFUZE100_SW1ACON_SPEED_M	(0x3<<6)
+#define PFUZE100_SW1CCON		49
+#define PFUZE100_SW1CCON_SPEED_VAL	(0x1<<6)	/*default */
+#define PFUZE100_SW1CCON_SPEED_M	(0x3<<6)
+#define PFUZE100_SW1AVOL		32
+#define PFUZE100_SW1AVOL_VSEL_M		(0x3f<<0)
+#define PFUZE100_SW1CVOL		46
+#define PFUZE100_SW1CVOL_VSEL_M		(0x3f<<0)
+#define PFUZE100_VGEN1CTL		(0x6c)
+#define PFUZE100_VGEN1_VAL		(0x30 + 0x08) /* Always ON, 1.2V */
+#define PFUZE100_SWBSTCTL		(0x66)
+/* Always ON, Auto Switching Mode, 5.0V */
+#define PFUZE100_SWBST_VAL		(0x40 + 0x08 + 0x00)
+
+/* chooses the extended page (registers 0x80..0xff) */
+#define PFUZE100_PAGE_REGISTER		0x7f
+#define PFUZE100_PAGE_REGISTER_PAGE_M	(0x1f << 0)
+#define PFUZE100_PAGE_REGISTER_PAGE1	(0x01 & PFUZE100_PAGE_REGISTER_PAGE_M)
+#define PFUZE100_PAGE_REGISTER_PAGE2	(0x02 & PFUZE100_PAGE_REGISTER_PAGE_M)
+
+/* extended page 1 */
+#define PFUZE100_FUSE_POR1		0xe4
+#define PFUZE100_FUSE_POR2		0xe5
+#define PFUZE100_FUSE_POR3		0xe6
+#define PFUZE100_FUSE_POR_M		(0x1 << 1)
+
+
+/* output some informational messages, return the number FUSE_POR=1 */
+/* i.e. 0: unprogrammed, 3: programmed, other: undefined prog. state */
+unsigned pmic_init(void);
+
+/* programmes OTP fuses to values required on a Toradex Apalis iMX6 */
+int pf0100_prog(void);
+
+#endif /* PF0100_H_ */
diff --git a/board/toradex/apalis_imx6/pf0100_otp.inc b/board/toradex/apalis_imx6/pf0100_otp.inc
new file mode 100644
index 0000000..59e0587
--- /dev/null
+++ b/board/toradex/apalis_imx6/pf0100_otp.inc
@@ -0,0 +1,191 @@
+/*
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+// Register Output for PF0100 programmer
+// Customer: Toradex AG
+// Program: Apalis iMX6
+// Sample marking:
+// Date: 12.02.2014
+// Time: 17:16:41
+// Generated from Spreadsheet Revision: P1.8
+
+/* sed commands to get from programmer script to struct */
+/* sed -e 's/^WRITE_I2C:\(..\):\(..\)/\{pmic_i2c, 0x\1, 0x\2\},/g' -e 's/^DELAY:\([0-9]*\)/\{pmic_delay, 0, \1\},/g' pf0100_otp.txt > pf0100_otp.inc
+   sed -i -e 's/^VPGM:ON/\{pmic_vpgm, 0, 1},/g' -e 's/^VPGM:OFF/\{pmic_vpgm, 0, 0},/g' pf0100_otp.inc
+   sed -i -e 's/^PWRON: HIGH/\{pmic_pwr, 0, 1},/g' -e 's/^PWRON:LOW/\{pmic_pwr, 0, 0},/g' pf0100_otp.inc */
+
+enum { pmic_i2c, pmic_delay, pmic_vpgm, pmic_pwr };
+struct pmic_otp_prog_t{
+	unsigned char cmd;
+	unsigned char reg;
+	unsigned short value;
+};
+
+struct pmic_otp_prog_t pmic_otp_prog[] = {
+{pmic_i2c, 0x7F, 0x01}, // Access FSL EXT Page 1
+{pmic_i2c, 0xA0, 0x2B}, // Auto gen from Row94
+{pmic_i2c, 0xA1, 0x01}, // Auto gen from Row95
+{pmic_i2c, 0xA2, 0x05}, // Auto gen from Row96
+{pmic_i2c, 0xA8, 0x2B}, // Auto gen from Row102
+{pmic_i2c, 0xA9, 0x02}, // Auto gen from Row103
+{pmic_i2c, 0xAA, 0x01}, // Auto gen from Row104
+{pmic_i2c, 0xAC, 0x18}, // Auto gen from Row106
+{pmic_i2c, 0xAE, 0x01}, // Auto gen from Row108
+{pmic_i2c, 0xB0, 0x2C}, // Auto gen from Row110
+{pmic_i2c, 0xB1, 0x04}, // Auto gen from Row111
+{pmic_i2c, 0xB2, 0x01}, // Auto gen from Row112
+{pmic_i2c, 0xB4, 0x2C}, // Auto gen from Row114
+{pmic_i2c, 0xB5, 0x04}, // Auto gen from Row115
+{pmic_i2c, 0xB6, 0x01}, // Auto gen from Row116
+{pmic_i2c, 0xB8, 0x18}, // Auto gen from Row118
+{pmic_i2c, 0xBA, 0x01}, // Auto gen from Row120
+{pmic_i2c, 0xBD, 0x1F}, // Auto gen from Row123
+{pmic_i2c, 0xC0, 0x06}, // Auto gen from Row126
+{pmic_i2c, 0xC4, 0x04}, // Auto gen from Row130
+{pmic_i2c, 0xC8, 0x0E}, // Auto gen from Row134
+{pmic_i2c, 0xC9, 0x08}, // Auto gen from Row135
+{pmic_i2c, 0xCC, 0x0E}, // Auto gen from Row138
+{pmic_i2c, 0xCD, 0x05}, // Auto gen from Row139
+{pmic_i2c, 0xD0, 0x0C}, // Auto gen from Row142
+{pmic_i2c, 0xD1, 0x05}, // Auto gen from Row143
+{pmic_i2c, 0xD5, 0x07}, // Auto gen from Row147
+{pmic_i2c, 0xD8, 0x07}, // Auto gen from Row150
+{pmic_i2c, 0xD9, 0x06}, // Auto gen from Row151
+{pmic_i2c, 0xDC, 0x0A}, // Auto gen from Row154
+{pmic_i2c, 0xDD, 0x03}, // Auto gen from Row155
+{pmic_i2c, 0xE0, 0x07}, // Auto gen from Row158
+
+#if 0 /* TBB mode */
+{pmic_i2c, 0xE4, 0x80}, // TBB_POR = 1
+{pmic_delay, 0, 10},
+#else
+// Write OTP
+{pmic_i2c, 0xE4, 0x02}, // FUSE POR1=1
+{pmic_i2c, 0xE5, 0x02}, // FUSE POR2=1
+{pmic_i2c, 0xE6, 0x02}, // FUSE POR3=1
+{pmic_i2c, 0xF0, 0x1F}, // Enable ECC for fuse banks 1 to 5 by writing to OTP EN ECC0 register
+{pmic_i2c, 0xF1, 0x1F}, // Enable ECC for fuse banks 6 to 10 by writing to OTP EN ECC1 register
+{pmic_i2c, 0x7F, 0x02}, // Access PF0100 EXT Page2
+{pmic_i2c, 0xD0, 0x1F}, // Set Auto ECC for fuse banks 1 to 5 by writing to OTP AUTO ECC0 register
+{pmic_i2c, 0xD1, 0x1F}, // Set Auto ECC for fuse banks 6 to 10 by writing to OTP AUTO ECC1 register
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF1, 0x00}, // Reset Bank 1 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF2, 0x00}, // Reset Bank 2 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF3, 0x00}, // Reset Bank 3 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF4, 0x00}, // Reset Bank 4 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF5, 0x00}, // Reset Bank 5 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF6, 0x00}, // Reset Bank 6 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF7, 0x00}, // Reset Bank 7 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF8, 0x00}, // Reset Bank 8 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF9, 0x00}, // Reset Bank 9 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xFA, 0x00}, // Reset Bank 10 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+{pmic_vpgm, 0, 1}, // Turn ON 8V SWBST
+//VPGM:DOWN:n
+//VPGM:UP:n
+{pmic_delay, 0, 500}, // Adds 500msec delay to allow VPGM time to ramp up
+//-----------------------------------------------------------------------------------
+// PF0100 OTP MANUAL-PROGRAMMING (BANK 1 thru 10)
+//-----------------------------------------------------------------------------------
+// BANK 1
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF1, 0x00}, // Reset Bank 1 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF1, 0x03}, // Set Bank 1 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF1, 0x0B}, // Set Bank 1 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF1, 0x03}, // Reset Bank 1 ANTIFUSE_EN
+{pmic_i2c, 0xF1, 0x00}, // Reset Bank 1 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 2
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF2, 0x00}, // Reset Bank 2 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF2, 0x03}, // Set Bank 2 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF2, 0x0B}, // Set Bank 2 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF2, 0x03}, // Reset Bank 2 ANTIFUSE_EN
+{pmic_i2c, 0xF2, 0x00}, // Reset Bank 2 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 3
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF3, 0x00}, // Reset Bank 3 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF3, 0x03}, // Set Bank 3 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF3, 0x0B}, // Set Bank 3 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF3, 0x03}, // Reset Bank 3 ANTIFUSE_EN
+{pmic_i2c, 0xF3, 0x00}, // Reset Bank 3 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 4
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF4, 0x00}, // Reset Bank 4 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF4, 0x03}, // Set Bank 4 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF4, 0x0B}, // Set Bank 4 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF4, 0x03}, // Reset Bank 4 ANTIFUSE_EN
+{pmic_i2c, 0xF4, 0x00}, // Reset Bank 4 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 5
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF5, 0x00}, // Reset Bank 5 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF5, 0x03}, // Set Bank 5 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF5, 0x0B}, // Set Bank 5 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF5, 0x03}, // Reset Bank 5 ANTIFUSE_EN
+{pmic_i2c, 0xF5, 0x00}, // Reset Bank 5 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 6
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF6, 0x00}, // Reset Bank 6 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF6, 0x03}, // Set Bank 6 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF6, 0x0B}, // Set Bank 6 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF6, 0x03}, // Reset Bank 6 ANTIFUSE_EN
+{pmic_i2c, 0xF6, 0x00}, // Reset Bank 6 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 7
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF7, 0x00}, // Reset Bank 7 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF7, 0x03}, // Set Bank 7 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF7, 0x0B}, // Set Bank 7 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF7, 0x03}, // Reset Bank 7 ANTIFUSE_EN
+{pmic_i2c, 0xF7, 0x00}, // Reset Bank 7 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 8
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF8, 0x00}, // Reset Bank 8 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF8, 0x03}, // Set Bank 8 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF8, 0x0B}, // Set Bank 8 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF8, 0x03}, // Reset Bank 8 ANTIFUSE_EN
+{pmic_i2c, 0xF8, 0x00}, // Reset Bank 8 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 9
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF9, 0x00}, // Reset Bank 9 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF9, 0x03}, // Set Bank 9 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF9, 0x0B}, // Set Bank 9 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF9, 0x03}, // Reset Bank 9 ANTIFUSE_EN
+{pmic_i2c, 0xF9, 0x00}, // Reset Bank 9 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 10
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xFA, 0x00}, // Reset Bank 10 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xFA, 0x03}, // Set Bank 10 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xFA, 0x0B}, // Set Bank 10 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xFA, 0x03}, // Reset Bank 10 ANTIFUSE_EN
+{pmic_i2c, 0xFA, 0x00}, // Reset Bank 10 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+{pmic_vpgm, 0, 0}, // Turn off 8V SWBST
+{pmic_delay, 0, 500}, // Adds delay to allow VPGM to bleed off
+{pmic_i2c, 0xD0, 0x00}, // Clear
+{pmic_i2c, 0xD1, 0x00}, // Clear
+{pmic_pwr, 0, 0}, // PWRON LOW to reload new OTP data
+{pmic_delay, 0, 500},
+{pmic_pwr, 0, 1},
+#endif
+};
\ No newline at end of file
diff --git a/board/toradex/apalis_t30/Kconfig b/board/toradex/apalis_t30/Kconfig
index f1dcda5..16224da 100644
--- a/board/toradex/apalis_t30/Kconfig
+++ b/board/toradex/apalis_t30/Kconfig
@@ -9,4 +9,22 @@ config SYS_VENDOR
 config SYS_CONFIG_NAME
 	default "apalis_t30"
 
+config TDX_CFG_BLOCK
+	default y
+
+config TDX_HAVE_MMC
+	default y
+
+config TDX_CFG_BLOCK_DEV
+	default "0"
+
+config TDX_CFG_BLOCK_PART
+	default "1"
+
+# Toradex config block in eMMC, at the end of 1st "boot sector"
+config TDX_CFG_BLOCK_OFFSET
+	default "-512"
+
+source "board/toradex/common/Kconfig"
+
 endif
diff --git a/board/toradex/apalis_t30/MAINTAINERS b/board/toradex/apalis_t30/MAINTAINERS
index 01bc73e..434bb3f 100644
--- a/board/toradex/apalis_t30/MAINTAINERS
+++ b/board/toradex/apalis_t30/MAINTAINERS
@@ -1,5 +1,8 @@
 Apalis T30
 M:	Marcel Ziswiler <marcel.ziswiler@toradex.com>
+M:	Toradex ARM Support <support.arm@toradex.com>
+W:	http://developer.toradex.com/software/linux/linux-software
+W:	https://www.toradex.com/community
 S:	Maintained
 F:	board/toradex/apalis_t30/
 F:	include/configs/apalis_t30.h
diff --git a/board/toradex/apalis_t30/Makefile b/board/toradex/apalis_t30/Makefile
index 0ea3d8f..a3b444f 100644
--- a/board/toradex/apalis_t30/Makefile
+++ b/board/toradex/apalis_t30/Makefile
@@ -1,4 +1,4 @@
-# Copyright (c) 2014 Marcel Ziswiler
+# Copyright (c) 2012-2016 Toradex, Inc.
 # SPDX-License-Identifier:      GPL-2.0+
 
 obj-y	+= apalis_t30.o
diff --git a/board/toradex/apalis_t30/apalis_t30.c b/board/toradex/apalis_t30/apalis_t30.c
index 3f56971..773f9e9 100644
--- a/board/toradex/apalis_t30/apalis_t30.c
+++ b/board/toradex/apalis_t30/apalis_t30.c
@@ -1,6 +1,5 @@
 /*
- *  (C) Copyright 2014
- *  Marcel Ziswiler <marcel@ziswiler.com>
+ * Copyright (c) 2012-2016 Toradex, Inc.
  *
  * SPDX-License-Identifier:	GPL-2.0+
  */
@@ -14,21 +13,60 @@
 #include <asm/io.h>
 #include <dm.h>
 #include <i2c.h>
+#include "../common/tdx-common.h"
 
 #include "pinmux-config-apalis_t30.h"
 
+DECLARE_GLOBAL_DATA_PTR;
+
 #define PMU_I2C_ADDRESS		0x2D
 #define MAX_I2C_RETRY		3
 
 int arch_misc_init(void)
 {
+	/* Default memory arguments */
+	if (!getenv("memargs")) {
+		switch (gd->ram_size) {
+		case 0x40000000:
+			/* 1 GB */
+			setenv("memargs", "vmalloc=128M mem=1012M@2048M "
+					  "fbmem=12M@3060M");
+			break;
+		case 0x7ff00000:
+		case 0x80000000:
+			/* 2 GB */
+			setenv("memargs", "vmalloc=256M mem=2035M@2048M "
+					  "fbmem=12M@4083M");
+			break;
+		default:
+			printf("Failed detecting RAM size.\n");
+		}
+	}
+
 	if (readl(NV_PA_BASE_SRAM + NVBOOTINFOTABLE_BOOTTYPE) ==
-	    NVBOOTTYPE_RECOVERY)
-		printf("USB recovery mode\n");
+	    NVBOOTTYPE_RECOVERY) {
+		printf("USB recovery mode, disabled autoboot\n");
+		setenv("bootdelay", "-1");
+	}
 
 	return 0;
 }
 
+int checkboard(void)
+{
+	printf("Model: Toradex Apalis T30 %dGB\n",
+	       (gd->ram_size == 0x40000000) ? 1 : 2);
+
+	return 0;
+}
+
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_BOARD_SETUP)
+int ft_board_setup(void *blob, bd_t *bd)
+{
+	return ft_common_board_setup(blob, bd);
+}
+#endif
+
 /*
  * Routine: pinmux_init
  * Description: Do individual peripheral pinmux configs
@@ -89,6 +127,25 @@ int tegra_pcie_board_init(void)
 		return err;
 	}
 
+#ifdef APALIS_T30_PCIE_EVALBOARD_INIT
+#define PEX_PERST_N     GPIO_PS7 /* Apalis GPIO7 */
+#define RESET_MOCI_N    GPIO_PI4
+
+	/* Reset PLX PEX 8605 PCIe Switch plus PCIe devices on Apalis Evaluation
+	   Board */
+	gpio_request(PEX_PERST_N, "PEX_PERST_N");
+	gpio_request(RESET_MOCI_N, "RESET_MOCI_N");
+	gpio_direction_output(PEX_PERST_N, 0);
+	gpio_direction_output(RESET_MOCI_N, 0);
+	/* Must be asserted for 100 ms after power and clocks are stable */
+	mdelay(100);
+	gpio_set_value(PEX_PERST_N, 1);
+	/* Err_5: PEX_REFCLK_OUTpx/nx Clock Outputs is not Guaranteed Until
+	   900 us After PEX_PERST# De-assertion */
+	mdelay(1);
+	gpio_set_value(RESET_MOCI_N, 1);
+#endif /* APALIS_T30_PCIE_EVALBOARD_INIT */
+
 	return 0;
 }
 #endif /* CONFIG_PCI_TEGRA */
diff --git a/board/toradex/apalis_t30/pinmux-config-apalis_t30.h b/board/toradex/apalis_t30/pinmux-config-apalis_t30.h
index 16d1a64..28e6fd0 100644
--- a/board/toradex/apalis_t30/pinmux-config-apalis_t30.h
+++ b/board/toradex/apalis_t30/pinmux-config-apalis_t30.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014, Marcel Ziswiler
+ * Copyright (c) 2012-2016, Toradex, Inc.
  *
  * SPDX-License-Identifier:	GPL-2.0
  */
@@ -194,7 +194,8 @@ static struct pmux_pingrp_config tegra3_pinmux_common[] = {
 	DEFAULT_PINMUX(UART2_CTS_N_PJ5, UARTB, DOWN, TRISTATE, OUTPUT), /* NC */
 	DEFAULT_PINMUX(UART3_TXD_PW6, UARTC, NORMAL, NORMAL, OUTPUT),
 	DEFAULT_PINMUX(UART3_RXD_PW7, UARTC, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(UART3_CTS_N_PA1, UARTC, NORMAL, NORMAL, INPUT),
+	/* disable BKL1_PWM_EN# (e.g. PMIC PWM backlight enable) for now */
+	DEFAULT_PINMUX(UART3_CTS_N_PA1, RSVD1, UP, NORMAL, OUTPUT),
 	DEFAULT_PINMUX(UART3_RTS_N_PC0, PWM0, NORMAL, NORMAL, OUTPUT),
 	DEFAULT_PINMUX(PU0, RSVD1, DOWN, TRISTATE, OUTPUT),
 	DEFAULT_PINMUX(PU1, RSVD1, DOWN, TRISTATE, OUTPUT),
@@ -211,14 +212,14 @@ static struct pmux_pingrp_config tegra3_pinmux_common[] = {
 	DEFAULT_PINMUX(CLK3_REQ_PEE1, DEV3, DOWN, TRISTATE, OUTPUT), /* NC */
 	DEFAULT_PINMUX(GMI_WP_N_PC7, GMI, DOWN, TRISTATE, OUTPUT), /* NC */
 	DEFAULT_PINMUX(GMI_CS2_N_PK3, RSVD1, DOWN, TRISTATE, OUTPUT), /* NC */
-	DEFAULT_PINMUX(GMI_AD8_PH0, PWM0, DOWN, TRISTATE, OUTPUT), /* NC */
+	DEFAULT_PINMUX(GMI_AD8_PH0, RSVD1, DOWN, TRISTATE, OUTPUT), /* NC */
 	DEFAULT_PINMUX(GMI_AD10_PH2, NAND, DOWN, TRISTATE, OUTPUT), /* NC */
 	DEFAULT_PINMUX(GMI_A16_PJ7, UARTD, DOWN, TRISTATE, OUTPUT), /* NC */
 	DEFAULT_PINMUX(GMI_A17_PB0, UARTD, DOWN, TRISTATE, OUTPUT), /* NC */
 	DEFAULT_PINMUX(GMI_A18_PB1, UARTD, DOWN, TRISTATE, OUTPUT), /* NC */
 	DEFAULT_PINMUX(GMI_A19_PK7, UARTD, DOWN, TRISTATE, OUTPUT), /* NC */
 
-	DEFAULT_PINMUX(CAM_MCLK_PCC0, VI_ALT2, NORMAL, NORMAL, OUTPUT),
+	DEFAULT_PINMUX(CAM_MCLK_PCC0, VI_ALT3, NORMAL, NORMAL, OUTPUT),
 	DEFAULT_PINMUX(PBB0, RSVD1, NORMAL, NORMAL, OUTPUT),
 	DEFAULT_PINMUX(PBB3, VGP3, NORMAL, NORMAL, OUTPUT),
 	DEFAULT_PINMUX(PBB4, VGP4, NORMAL, NORMAL, OUTPUT),
@@ -232,16 +233,16 @@ static struct pmux_pingrp_config tegra3_pinmux_common[] = {
 
 	/* multiplexed VI_D2, VI_D3, VI_D4, VI_D5, VI_D6, VI_D7, VI_D8 and VI_D9
 	 */
-	DEFAULT_PINMUX(KB_ROW0_PR0, RSVD2, NORMAL, TRISTATE, INPUT),
-	DEFAULT_PINMUX(KB_ROW1_PR1, RSVD2, NORMAL, TRISTATE, INPUT),
-	DEFAULT_PINMUX(KB_ROW2_PR2, RSVD2, NORMAL, TRISTATE, INPUT),
-	DEFAULT_PINMUX(KB_ROW3_PR3, RSVD2, NORMAL, TRISTATE, INPUT),
-	DEFAULT_PINMUX(KB_ROW4_PR4, RSVD3, NORMAL, TRISTATE, INPUT),
-	DEFAULT_PINMUX(KB_ROW5_PR5, KBC, NORMAL, TRISTATE, INPUT),
-	DEFAULT_PINMUX(KB_ROW6_PR6, KBC, NORMAL, TRISTATE, INPUT),
-	DEFAULT_PINMUX(KB_ROW7_PR7, KBC, NORMAL, TRISTATE, INPUT),
-	DEFAULT_PINMUX(KB_ROW8_PS0, KBC, NORMAL, TRISTATE, INPUT),
-	DEFAULT_PINMUX(KB_ROW9_PS1, KBC, NORMAL, TRISTATE, INPUT),
+	DEFAULT_PINMUX(KB_ROW0_PR0, RSVD2, DOWN, TRISTATE, INPUT),
+	DEFAULT_PINMUX(KB_ROW1_PR1, RSVD2, DOWN, TRISTATE, INPUT),
+	DEFAULT_PINMUX(KB_ROW2_PR2, RSVD2, DOWN, TRISTATE, INPUT),
+	DEFAULT_PINMUX(KB_ROW3_PR3, RSVD2, DOWN, TRISTATE, INPUT),
+	DEFAULT_PINMUX(KB_ROW4_PR4, RSVD3, DOWN, TRISTATE, INPUT),
+	DEFAULT_PINMUX(KB_ROW5_PR5, KBC, DOWN, TRISTATE, INPUT),
+	DEFAULT_PINMUX(KB_ROW6_PR6, KBC, DOWN, TRISTATE, INPUT),
+	DEFAULT_PINMUX(KB_ROW7_PR7, KBC, DOWN, TRISTATE, INPUT),
+	DEFAULT_PINMUX(KB_ROW8_PS0, KBC, DOWN, TRISTATE, INPUT),
+	DEFAULT_PINMUX(KB_ROW9_PS1, KBC, DOWN, TRISTATE, INPUT),
 
 	/* GPIOs */
 	DEFAULT_PINMUX(KB_ROW10_PS2, SDMMC2, NORMAL, NORMAL, INPUT),
@@ -253,11 +254,11 @@ static struct pmux_pingrp_config tegra3_pinmux_common[] = {
 
 	DEFAULT_PINMUX(KB_COL0_PQ0, KBC, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(KB_COL1_PQ1, KBC, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(KB_COL2_PQ2, KBC, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(KB_COL3_PQ3, KBC, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(KB_COL4_PQ4, KBC, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(KB_COL5_PQ5, KBC, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(KB_COL6_PQ6, KBC, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(KB_COL2_PQ2, KBC, DOWN, NORMAL, INPUT),
+	DEFAULT_PINMUX(KB_COL3_PQ3, KBC, DOWN, NORMAL, INPUT),
+	DEFAULT_PINMUX(KB_COL4_PQ4, KBC, DOWN, NORMAL, INPUT),
+	DEFAULT_PINMUX(KB_COL5_PQ5, KBC, DOWN, NORMAL, INPUT),
+	DEFAULT_PINMUX(KB_COL6_PQ6, KBC, DOWN, NORMAL, INPUT),
 	DEFAULT_PINMUX(KB_COL7_PQ7, KBC, NORMAL, NORMAL, INPUT),
 
 	DEFAULT_PINMUX(PV0, RSVD1, NORMAL, NORMAL, INPUT),
@@ -285,17 +286,19 @@ static struct pmux_pingrp_config tegra3_pinmux_common[] = {
 	DEFAULT_PINMUX(SPI1_CS0_N_PX6, SPI1, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(SPI1_MISO_PX7, SPI1, NORMAL, NORMAL, INPUT),
 
-	DEFAULT_PINMUX(PEX_L0_PRSNT_N_PDD0, PCIE, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(PEX_L0_RST_N_PDD1, PCIE, NORMAL, NORMAL, OUTPUT),
-	DEFAULT_PINMUX(PEX_L0_CLKREQ_N_PDD2, PCIE, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(PEX_WAKE_N_PDD3, PCIE, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(PEX_L0_PRSNT_N_PDD0, RSVD2, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(PEX_L0_RST_N_PDD1, RSVD2, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(PEX_L0_CLKREQ_N_PDD2, RSVD2, NORMAL, NORMAL, INPUT),
+
+	DEFAULT_PINMUX(PEX_L1_PRSNT_N_PDD4, RSVD2, DOWN, TRISTATE, OUTPUT), /* NC */
+	DEFAULT_PINMUX(PEX_L1_RST_N_PDD5, RSVD2, DOWN, TRISTATE, OUTPUT), /* NC */
+	DEFAULT_PINMUX(PEX_L1_CLKREQ_N_PDD6, RSVD2, DOWN, TRISTATE, OUTPUT), /* NC */
 
-	DEFAULT_PINMUX(PEX_L1_PRSNT_N_PDD4, PCIE, DOWN, TRISTATE, OUTPUT), /* NC */
-	DEFAULT_PINMUX(PEX_L1_RST_N_PDD5, PCIE, DOWN, TRISTATE, OUTPUT), /* NC */
-	DEFAULT_PINMUX(PEX_L1_CLKREQ_N_PDD6, PCIE, DOWN, TRISTATE, OUTPUT), /* NC */
-	DEFAULT_PINMUX(PEX_L2_PRSNT_N_PDD7, PCIE, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(PEX_L2_PRSNT_N_PDD7, PCIE, NORMAL, NORMAL, OUTPUT),
 	DEFAULT_PINMUX(PEX_L2_RST_N_PCC6, PCIE, NORMAL, NORMAL, OUTPUT),
 	DEFAULT_PINMUX(PEX_L2_CLKREQ_N_PCC7, PCIE, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(PEX_WAKE_N_PDD3, PCIE, NORMAL, NORMAL, INPUT),
+
 	DEFAULT_PINMUX(HDMI_CEC_PEE3, CEC, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(HDMI_INT_PN7, RSVD1, NORMAL, NORMAL, INPUT),
 
@@ -321,7 +324,7 @@ static struct pmux_pingrp_config unused_pins_lowpower[] = {
 	DEFAULT_PINMUX(GMI_AD5_PG5, NAND, DOWN, TRISTATE, OUTPUT),
 	DEFAULT_PINMUX(GMI_AD6_PG6, NAND, DOWN, TRISTATE, OUTPUT),
 	DEFAULT_PINMUX(GMI_AD7_PG7, NAND, DOWN, TRISTATE, OUTPUT),
-	DEFAULT_PINMUX(GMI_AD9_PH1, PWM1, DOWN, TRISTATE, OUTPUT),
+	DEFAULT_PINMUX(GMI_AD9_PH1, RSVD1, DOWN, TRISTATE, OUTPUT),
 	DEFAULT_PINMUX(GMI_AD11_PH3, NAND, DOWN, TRISTATE, OUTPUT),
 	DEFAULT_PINMUX(GMI_AD13_PH5, NAND, DOWN, TRISTATE, OUTPUT),
 	DEFAULT_PINMUX(GMI_WR_N_PI0, NAND, DOWN, TRISTATE, OUTPUT),
diff --git a/board/toradex/colibri_imx6/800mhz_2x64mx16.cfg b/board/toradex/colibri_imx6/800mhz_2x64mx16.cfg
new file mode 100644
index 0000000..660f9d3
--- /dev/null
+++ b/board/toradex/colibri_imx6/800mhz_2x64mx16.cfg
@@ -0,0 +1,59 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+DATA 4, MX6_MMDC_P0_MDPDC, 0x0002002D
+DATA 4, MX6_MMDC_P0_MDCFG0, 0x2C305503
+DATA 4, MX6_MMDC_P0_MDCFG1, 0xB66D8D63
+DATA 4, MX6_MMDC_P0_MDCFG2, 0x01FF00DB
+DATA 4, MX6_MMDC_P0_MDRWD, 0x000026D2
+DATA 4, MX6_MMDC_P0_MDOR, 0x00301023
+DATA 4, MX6_MMDC_P0_MDOTC, 0x00333030
+DATA 4, MX6_MMDC_P0_MDPDC, 0x0002556D
+/* CS0 End: 7MSB of ((0x10000000 + 512M) -1) >> 25 */
+DATA 4, MX6_MMDC_P0_MDASP, 0x00000017
+/* DDR3 DATA BUS SIZE: 64BIT */
+/* DATA 4, MX6_MMDC_P0_MDCTL, 0x821A0000 */
+/* DDR3 DATA BUS SIZE: 32BIT */
+DATA 4, MX6_MMDC_P0_MDCTL, 0x82190000
+
+/* Write commands to DDR */
+/* Load Mode Registers */
+/* TODO Use Auto Self-Refresh mode (Extended Temperature)*/
+/* DATA 4, MX6_MMDC_P0_MDSCR, 0x04408032 */
+DATA 4, MX6_MMDC_P0_MDSCR, 0x04008032
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00008033
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00048031
+DATA 4, MX6_MMDC_P0_MDSCR, 0x13208030
+/* ZQ calibration */
+DATA 4, MX6_MMDC_P0_MDSCR, 0x04008040
+
+DATA 4, MX6_MMDC_P0_MPZQHWCTRL, 0xA1390003
+DATA 4, MX6_MMDC_P1_MPZQHWCTRL, 0xA1390003
+DATA 4, MX6_MMDC_P0_MDREF, 0x00005800
+
+DATA 4, MX6_MMDC_P0_MPODTCTRL, 0x00000000
+DATA 4, MX6_MMDC_P1_MPODTCTRL, 0x00000000
+
+DATA 4, MX6_MMDC_P0_MPDGCTRL0, 0x42360232
+DATA 4, MX6_MMDC_P0_MPDGCTRL1, 0x021F022A
+DATA 4, MX6_MMDC_P1_MPDGCTRL0, 0x421E0224
+DATA 4, MX6_MMDC_P1_MPDGCTRL1, 0x02110218
+
+DATA 4, MX6_MMDC_P0_MPRDDLCTL, 0x41434344
+DATA 4, MX6_MMDC_P1_MPRDDLCTL, 0x4345423E
+DATA 4, MX6_MMDC_P0_MPWRDLCTL, 0x39383339
+DATA 4, MX6_MMDC_P1_MPWRDLCTL, 0x3E363930
+
+DATA 4, MX6_MMDC_P0_MPWLDECTRL0, 0x00340039
+DATA 4, MX6_MMDC_P0_MPWLDECTRL1, 0x002C002D
+DATA 4, MX6_MMDC_P1_MPWLDECTRL0, 0x00120019
+DATA 4, MX6_MMDC_P1_MPWLDECTRL1, 0x0012002D
+
+DATA 4, MX6_MMDC_P0_MPMUR0, 0x00000800
+DATA 4, MX6_MMDC_P1_MPMUR0, 0x00000800
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00000000
+DATA 4, MX6_MMDC_P0_MAPSR, 0x00011006
diff --git a/board/toradex/colibri_imx6/800mhz_4x64mx16.cfg b/board/toradex/colibri_imx6/800mhz_4x64mx16.cfg
new file mode 100644
index 0000000..3bd8576
--- /dev/null
+++ b/board/toradex/colibri_imx6/800mhz_4x64mx16.cfg
@@ -0,0 +1,59 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+DATA 4, MX6_MMDC_P0_MDPDC, 0x0002002D
+DATA 4, MX6_MMDC_P0_MDCFG0, 0x2C305503
+DATA 4, MX6_MMDC_P0_MDCFG1, 0xB66D8D63
+DATA 4, MX6_MMDC_P0_MDCFG2, 0x01FF00DB
+DATA 4, MX6_MMDC_P0_MDRWD, 0x000026D2
+DATA 4, MX6_MMDC_P0_MDOR, 0x00301023
+DATA 4, MX6_MMDC_P0_MDOTC, 0x00333030
+DATA 4, MX6_MMDC_P0_MDPDC, 0x0002556D
+/* CS0 End: 7MSB of ((0x10000000 + 512M) -1) >> 25 */
+DATA 4, MX6_MMDC_P0_MDASP, 0x00000017
+/* DDR3 DATA BUS SIZE: 64BIT */
+DATA 4, MX6_MMDC_P0_MDCTL, 0x821A0000
+/* DDR3 DATA BUS SIZE: 32BIT */
+/* DATA 4, MX6_MMDC_P0_MDCTL, 0x82190000 */
+
+/* Write commands to DDR */
+/* Load Mode Registers */
+/* TODO Use Auto Self-Refresh mode (Extended Temperature)*/
+/* DATA 4, MX6_MMDC_P0_MDSCR, 0x04408032 */
+DATA 4, MX6_MMDC_P0_MDSCR, 0x04008032
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00008033
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00048031
+DATA 4, MX6_MMDC_P0_MDSCR, 0x13208030
+/* ZQ calibration */
+DATA 4, MX6_MMDC_P0_MDSCR, 0x04008040
+
+DATA 4, MX6_MMDC_P0_MPZQHWCTRL, 0xA1390003
+DATA 4, MX6_MMDC_P1_MPZQHWCTRL, 0xA1390003
+DATA 4, MX6_MMDC_P0_MDREF, 0x00005800
+
+DATA 4, MX6_MMDC_P0_MPODTCTRL, 0x00000000
+DATA 4, MX6_MMDC_P1_MPODTCTRL, 0x00000000
+
+DATA 4, MX6_MMDC_P0_MPDGCTRL0, 0x42360232
+DATA 4, MX6_MMDC_P0_MPDGCTRL1, 0x021F022A
+DATA 4, MX6_MMDC_P1_MPDGCTRL0, 0x421E0224
+DATA 4, MX6_MMDC_P1_MPDGCTRL1, 0x02110218
+
+DATA 4, MX6_MMDC_P0_MPRDDLCTL, 0x41434344
+DATA 4, MX6_MMDC_P1_MPRDDLCTL, 0x4345423E
+DATA 4, MX6_MMDC_P0_MPWRDLCTL, 0x39383339
+DATA 4, MX6_MMDC_P1_MPWRDLCTL, 0x3E363930
+
+DATA 4, MX6_MMDC_P0_MPWLDECTRL0, 0x00340039
+DATA 4, MX6_MMDC_P0_MPWLDECTRL1, 0x002C002D
+DATA 4, MX6_MMDC_P1_MPWLDECTRL0, 0x00120019
+DATA 4, MX6_MMDC_P1_MPWLDECTRL1, 0x0012002D
+
+DATA 4, MX6_MMDC_P0_MPMUR0, 0x00000800
+DATA 4, MX6_MMDC_P1_MPMUR0, 0x00000800
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00000000
+DATA 4, MX6_MMDC_P0_MAPSR, 0x00011006
diff --git a/board/toradex/colibri_imx6/Kconfig b/board/toradex/colibri_imx6/Kconfig
new file mode 100644
index 0000000..d2ad1ce
--- /dev/null
+++ b/board/toradex/colibri_imx6/Kconfig
@@ -0,0 +1,44 @@
+if TARGET_COLIBRI_IMX6
+
+config SYS_BOARD
+	default "colibri_imx6"
+
+config SYS_CONFIG_NAME
+	default "colibri_imx6"
+
+config SYS_CPU
+	default "armv7"
+
+config SYS_SOC
+	default "mx6"
+
+config SYS_VENDOR
+	default "toradex"
+
+config TDX_CFG_BLOCK
+	default y
+
+config TDX_HAVE_MMC
+	default y
+
+config TDX_CFG_BLOCK_DEV
+	default "0"
+
+config TDX_CFG_BLOCK_PART
+	default "1"
+
+# Toradex config block in eMMC, at the end of 1st "boot sector"
+config TDX_CFG_BLOCK_OFFSET
+	default "-512"
+
+config TDX_CMD_IMX_MFGR
+	bool "Enable factory testing commands for Toradex iMX 6 modules"
+	help
+	  This adds the commands
+	    pf0100_otp_prog - Program the OTP fuses on the PMIC PF0100
+	  If executed on already fused modules it doesn't change any fuse setting.
+	default y
+
+source "board/toradex/common/Kconfig"
+
+endif
diff --git a/board/toradex/colibri_imx6/MAINTAINERS b/board/toradex/colibri_imx6/MAINTAINERS
new file mode 100644
index 0000000..20f312b
--- /dev/null
+++ b/board/toradex/colibri_imx6/MAINTAINERS
@@ -0,0 +1,9 @@
+Colibri iMX6
+M:	Max Krummenacher <max.krummenacher@toradex.com>
+W:	http://developer.toradex.com/software/linux/linux-software
+W:	https://www.toradex.com/community
+S:	Maintained
+F:	board/toradex/colibri_imx6/
+F:	include/configs/colibri_imx6.h
+F:	configs/colibri_imx6_defconfig
+F:	configs/colibri_imx6_nospl_defconfig
diff --git a/board/toradex/colibri_imx6/Makefile b/board/toradex/colibri_imx6/Makefile
new file mode 100644
index 0000000..c81bc2d
--- /dev/null
+++ b/board/toradex/colibri_imx6/Makefile
@@ -0,0 +1,5 @@
+# Copyright (c) 2012-2014 Toradex, Inc.
+# SPDX-License-Identifier:      GPL-2.0+
+
+obj-y  := colibri_imx6.o do_fuse.o
+obj-$(CONFIG_TDX_CMD_IMX_MFGR)  += pf0100.o
diff --git a/board/toradex/colibri_imx6/clocks.cfg b/board/toradex/colibri_imx6/clocks.cfg
new file mode 100644
index 0000000..be96094
--- /dev/null
+++ b/board/toradex/colibri_imx6/clocks.cfg
@@ -0,0 +1,42 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Device Configuration Data (DCD)
+ *
+ * Each entry must have the format:
+ * Addr-type           Address        Value
+ *
+ * where:
+ *      Addr-type register length (1,2 or 4 bytes)
+ *      Address   absolute address of the register
+ *      value     value to be stored in the register
+ */
+
+/* set the default clock gate to save power */
+DATA 4, CCM_CCGR0, 0x00C03F3F
+DATA 4, CCM_CCGR1, 0x0030FC03
+DATA 4, CCM_CCGR2, 0x0FFFC000
+DATA 4, CCM_CCGR3, 0x3FF00000
+DATA 4, CCM_CCGR4, 0x00FFF300
+DATA 4, CCM_CCGR5, 0x0F0000C3
+DATA 4, CCM_CCGR6, 0x000003FF
+
+/* enable AXI cache for VDOA/VPU/IPU */
+DATA 4, MX6_IOMUXC_GPR4, 0xF00000CF
+/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
+DATA 4, MX6_IOMUXC_GPR6, 0x007F007F
+DATA 4, MX6_IOMUXC_GPR7, 0x007F007F
+
+/*
+ * Setup CCM_CCOSR register as follows:
+ *
+ * cko1_en  = 1	   --> CKO1 enabled
+ * cko1_div = 111  --> divide by 8
+ * cko1_sel = 1011 --> ahb_clk_root
+ *
+ * This sets CKO1 at ahb_clk_root/8 = 132/8 = 16.5 MHz
+ */
+DATA 4, CCM_CCOSR, 0x000000fb
diff --git a/board/toradex/colibri_imx6/colibri_imx6.c b/board/toradex/colibri_imx6/colibri_imx6.c
new file mode 100644
index 0000000..1fa0bf6
--- /dev/null
+++ b/board/toradex/colibri_imx6/colibri_imx6.c
@@ -0,0 +1,1142 @@
+/*
+ * Copyright (C) 2010-2013 Freescale Semiconductor, Inc.
+ * Copyright (C) 2013, Boundary Devices <info@boundarydevices.com>
+ * Copyright (C) 2014-2016, Toradex AG
+ * copied from nitrogen6x
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/arch/clock.h>
+#include <asm/arch/crm_regs.h>
+#include <asm/arch/imx-regs.h>
+#include <asm/arch/iomux.h>
+#include <asm/arch/mx6-pins.h>
+#include <asm/arch/mx6-ddr.h>
+#include <asm/arch/mxc_hdmi.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/bootm.h>
+#include <asm/gpio.h>
+#include <asm/imx-common/iomux-v3.h>
+#include <asm/imx-common/mxc_i2c.h>
+#include <asm/imx-common/boot_mode.h>
+#include <asm/imx-common/video.h>
+#include <asm/io.h>
+#include <dm/platform_data/serial_mxc.h>
+#include <dm/platdata.h>
+#include <fsl_esdhc.h>
+#include <g_dnl.h>
+#include <i2c.h>
+#include <imx_thermal.h>
+#include <linux/errno.h>
+#include <malloc.h>
+#include <micrel.h>
+#include <miiphy.h>
+#include <mmc.h>
+#include <netdev.h>
+
+#include "../common/tdx-cfg-block.h"
+#ifdef CONFIG_TDX_CMD_IMX_MFGR
+#include "pf0100.h"
+#endif
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define UART_PAD_CTRL  (PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm |			\
+	PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
+
+#define USDHC_PAD_CTRL (PAD_CTL_PUS_47K_UP |			\
+	PAD_CTL_SPEED_LOW | PAD_CTL_DSE_40ohm |			\
+	PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
+
+#define USDHC_EMMC_PAD_CTRL (PAD_CTL_PUS_47K_UP |		\
+	PAD_CTL_SPEED_LOW | PAD_CTL_DSE_80ohm |			\
+	PAD_CTL_SRE_FAST  | PAD_CTL_HYS)
+
+#define ENET_PAD_CTRL  (PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS)
+
+#define SPI_PAD_CTRL (PAD_CTL_HYS | PAD_CTL_SPEED_MED |		\
+	PAD_CTL_DSE_40ohm     | PAD_CTL_SRE_FAST)
+
+#define BUTTON_PAD_CTRL (PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS)
+
+#define I2C_PAD_CTRL	(PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS |	\
+	PAD_CTL_ODE | PAD_CTL_SRE_FAST)
+
+#define WEAK_PULLUP	(PAD_CTL_PUS_100K_UP |			\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS |	\
+	PAD_CTL_SRE_SLOW)
+
+#define NO_PULLUP	(					\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm | PAD_CTL_HYS |	\
+	PAD_CTL_SRE_SLOW)
+
+#define WEAK_PULLDOWN	(PAD_CTL_PUS_100K_DOWN |		\
+	PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm |			\
+	PAD_CTL_HYS | PAD_CTL_SRE_SLOW)
+
+#define OUTPUT_40OHM (PAD_CTL_SPEED_MED|PAD_CTL_DSE_40ohm)
+
+#define OUTPUT_RGB (PAD_CTL_SPEED_MED|PAD_CTL_DSE_60ohm|PAD_CTL_SRE_FAST)
+
+int dram_init(void)
+{
+	/* use the DDR controllers configured size */
+	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
+				    (ulong)imx_ddr_size());
+
+	return 0;
+}
+
+/* Colibri UARTA */
+iomux_v3_cfg_t const uart1_pads[] = {
+	MX6_PAD_CSI0_DAT10__UART1_RX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+	MX6_PAD_CSI0_DAT11__UART1_TX_DATA | MUX_PAD_CTRL(UART_PAD_CTRL),
+};
+
+#define PC MUX_PAD_CTRL(I2C_PAD_CTRL)
+/* Colibri I2C */
+struct i2c_pads_info i2c_pad_info1 = {
+	.scl = {
+		.i2c_mode = MX6_PAD_GPIO_3__I2C3_SCL | PC,
+		.gpio_mode = MX6_PAD_GPIO_3__GPIO1_IO03 | PC,
+		.gp = IMX_GPIO_NR(1, 3)
+	},
+	.sda = {
+		.i2c_mode = MX6_PAD_GPIO_6__I2C3_SDA | PC,
+		.gpio_mode = MX6_PAD_GPIO_6__GPIO1_IO06 | PC,
+		.gp = IMX_GPIO_NR(1, 6)
+	}
+};
+
+/* Colibri local, PMIC, SGTL5000, STMPE811 */
+struct i2c_pads_info i2c_pad_info_loc = {
+	.scl = {
+		.i2c_mode = MX6_PAD_EIM_EB2__I2C2_SCL | PC,
+		.gpio_mode = MX6_PAD_EIM_EB2__GPIO2_IO30 | PC,
+		.gp = IMX_GPIO_NR(2, 30)
+	},
+	.sda = {
+		.i2c_mode = MX6_PAD_EIM_D16__I2C2_SDA | PC,
+		.gpio_mode = MX6_PAD_EIM_D16__GPIO3_IO16 | PC,
+		.gp = IMX_GPIO_NR(3, 16)
+	}
+};
+
+/* Apalis MMC */
+iomux_v3_cfg_t const usdhc1_pads[] = {
+	MX6_PAD_SD1_CLK__SD1_CLK    | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD1_CMD__SD1_CMD    | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD1_DAT0__SD1_DATA0 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD1_DAT1__SD1_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD1_DAT2__SD1_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_SD1_DAT3__SD1_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+	MX6_PAD_NANDF_D5__GPIO2_IO05 | MUX_PAD_CTRL(NO_PAD_CTRL), /* CD */
+#	define GPIO_MMC_CD IMX_GPIO_NR(2, 5)
+};
+
+/* eMMC */
+iomux_v3_cfg_t const usdhc3_pads[] = {
+	MX6_PAD_SD3_CLK__SD3_CLK    | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_CMD__SD3_CMD    | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT0__SD3_DATA0 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT1__SD3_DATA1 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT2__SD3_DATA2 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT3__SD3_DATA3 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT4__SD3_DATA4 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT5__SD3_DATA5 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT6__SD3_DATA6 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_DAT7__SD3_DATA7 | MUX_PAD_CTRL(USDHC_EMMC_PAD_CTRL),
+	MX6_PAD_SD3_RST__SD3_RESET  | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+};
+
+iomux_v3_cfg_t const enet_pads[] = {
+	MX6_PAD_ENET_MDC__ENET_MDC		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_MDIO__ENET_MDIO		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_RXD0__ENET_RX_DATA0	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_RXD1__ENET_RX_DATA1	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_RX_ER__ENET_RX_ER		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_TX_EN__ENET_TX_EN		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_TXD0__ENET_TX_DATA0	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_TXD1__ENET_TX_DATA1	| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_ENET_CRS_DV__ENET_RX_EN		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX6_PAD_GPIO_16__ENET_REF_CLK		| MUX_PAD_CTRL(ENET_PAD_CTRL),
+};
+
+static void setup_iomux_enet(void)
+{
+	imx_iomux_v3_setup_multiple_pads(enet_pads, ARRAY_SIZE(enet_pads));
+}
+
+/* mux auxiliary pins to GPIO, so they can be used from the U-Boot cmdline */
+iomux_v3_cfg_t const gpio_pads[] = {
+	/* ADDRESS[17:18] [25] used as GPIO */
+	MX6_PAD_KEY_ROW2__GPIO4_IO11	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_KEY_COL2__GPIO4_IO10	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_D1__GPIO2_IO01	| MUX_PAD_CTRL(WEAK_PULLUP),
+	/* ADDRESS[19:24] used as GPIO */
+	MX6_PAD_DISP0_DAT23__GPIO5_IO17 | MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_DISP0_DAT22__GPIO5_IO16 | MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_DISP0_DAT21__GPIO5_IO15 | MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_DISP0_DAT20__GPIO5_IO14 | MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_DISP0_DAT19__GPIO5_IO13 | MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_DISP0_DAT18__GPIO5_IO12 | MUX_PAD_CTRL(WEAK_PULLUP),
+	/* DATA[16:29] [31]	 used as GPIO */
+	MX6_PAD_EIM_LBA__GPIO2_IO27	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_EIM_BCLK__GPIO6_IO31	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_CS3__GPIO6_IO16	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_CS1__GPIO6_IO14	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_RB0__GPIO6_IO10	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_ALE__GPIO6_IO08	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_WP_B__GPIO6_IO09	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_CS0__GPIO6_IO11	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_CLE__GPIO6_IO07	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_GPIO_19__GPIO4_IO05	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_CSI0_MCLK__GPIO5_IO19	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_CSI0_PIXCLK__GPIO5_IO18 | MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_GPIO_4__GPIO1_IO04	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_GPIO_5__GPIO1_IO05	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_GPIO_2__GPIO1_IO02	| MUX_PAD_CTRL(WEAK_PULLUP),
+	/* DQM[0:3]	 used as GPIO */
+	MX6_PAD_EIM_EB0__GPIO2_IO28	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_EIM_EB1__GPIO2_IO29	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_SD2_DAT2__GPIO1_IO13	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_D0__GPIO2_IO00	| MUX_PAD_CTRL(WEAK_PULLUP),
+	/* RDY	used as GPIO */
+	MX6_PAD_EIM_WAIT__GPIO5_IO00	| MUX_PAD_CTRL(WEAK_PULLUP),
+	/* ADDRESS[16] DATA[30]	 used as GPIO */
+	MX6_PAD_KEY_ROW4__GPIO4_IO15	| MUX_PAD_CTRL(WEAK_PULLDOWN),
+	MX6_PAD_KEY_COL4__GPIO4_IO14	| MUX_PAD_CTRL(WEAK_PULLUP),
+	/* CSI pins used as GPIO */
+	MX6_PAD_EIM_A24__GPIO5_IO04	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_SD2_CMD__GPIO1_IO11	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_CS2__GPIO6_IO15	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_EIM_D18__GPIO3_IO18	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_EIM_A19__GPIO2_IO19	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_EIM_D29__GPIO3_IO29	| MUX_PAD_CTRL(WEAK_PULLDOWN),
+	MX6_PAD_EIM_A23__GPIO6_IO06	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_EIM_A20__GPIO2_IO18	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_EIM_A17__GPIO2_IO21	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_EIM_A18__GPIO2_IO20	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_EIM_EB3__GPIO2_IO31	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_EIM_D17__GPIO3_IO17	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_SD2_DAT0__GPIO1_IO15	| MUX_PAD_CTRL(WEAK_PULLUP),
+	/* GPIO */
+	MX6_PAD_EIM_D26__GPIO3_IO26	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_EIM_D27__GPIO3_IO27	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_D6__GPIO2_IO06	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_D3__GPIO2_IO03	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_ENET_REF_CLK__GPIO1_IO23 | MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_DI0_PIN4__GPIO4_IO20	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_SD4_DAT3__GPIO2_IO11	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_NANDF_D4__GPIO2_IO04	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_SD4_DAT0__GPIO2_IO08	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_GPIO_7__GPIO1_IO07	| MUX_PAD_CTRL(WEAK_PULLUP),
+	MX6_PAD_GPIO_8__GPIO1_IO08	| MUX_PAD_CTRL(WEAK_PULLUP),
+	/* USBH_OC */
+	MX6_PAD_EIM_D30__GPIO3_IO30	| MUX_PAD_CTRL(WEAK_PULLUP),
+	/* USBC_ID */
+	MX6_PAD_NANDF_D2__GPIO2_IO02	| MUX_PAD_CTRL(WEAK_PULLUP),
+	/* USBC_DET */
+	MX6_PAD_GPIO_17__GPIO7_IO12	| MUX_PAD_CTRL(WEAK_PULLUP),
+};
+
+static void setup_iomux_gpio(void)
+{
+	imx_iomux_v3_setup_multiple_pads(gpio_pads, ARRAY_SIZE(gpio_pads));
+}
+
+iomux_v3_cfg_t const usb_pads[] = {
+	/* USB_PE */
+	MX6_PAD_EIM_D31__GPIO3_IO31 | MUX_PAD_CTRL(NO_PAD_CTRL),
+#	define GPIO_USBH_EN IMX_GPIO_NR(3, 31)
+};
+
+/*
+ * UARTs are used in DTE mode, switch the mode on all UARTs before
+ * any pinmuxing connects a (DCE) output to a transceiver output.
+ */
+#define UFCR		0x90	/* FIFO Control Register */
+#define UFCR_DCEDTE	(1<<6)	/* DCE=0 */
+
+static void setup_dtemode_uart(void)
+{
+	setbits_le32((u32 *)(UART1_BASE + UFCR), UFCR_DCEDTE);
+	setbits_le32((u32 *)(UART2_BASE + UFCR), UFCR_DCEDTE);
+	setbits_le32((u32 *)(UART3_BASE + UFCR), UFCR_DCEDTE);
+}
+
+static void setup_iomux_uart(void)
+{
+	setup_dtemode_uart();
+	imx_iomux_v3_setup_multiple_pads(uart1_pads, ARRAY_SIZE(uart1_pads));
+}
+
+#ifdef CONFIG_USB_EHCI_MX6
+int board_ehci_hcd_init(int port)
+{
+	imx_iomux_v3_setup_multiple_pads(usb_pads, ARRAY_SIZE(usb_pads));
+	return 0;
+}
+
+int board_ehci_power(int port, int on)
+{
+	switch (port) {
+	case 0:
+		/* control OTG power */
+		/* No special PE for USBC, always on when ID pin signals
+		   host mode */
+		break;
+	case 1:
+		/* Control MXM USBH */
+		/* Set MXM USBH power enable, '0' means on */
+		gpio_direction_output(GPIO_USBH_EN, !on);
+		mdelay(100);
+		break;
+	default:
+		break;
+	}
+	return 0;
+}
+#endif
+
+#ifdef CONFIG_FSL_ESDHC
+/* use the following sequence: eMMC, MMC */
+struct fsl_esdhc_cfg usdhc_cfg[CONFIG_SYS_FSL_USDHC_NUM] = {
+	{USDHC3_BASE_ADDR},
+	{USDHC1_BASE_ADDR},
+};
+
+int board_mmc_getcd(struct mmc *mmc)
+{
+	struct fsl_esdhc_cfg *cfg = (struct fsl_esdhc_cfg *)mmc->priv;
+	int ret = true; /* default: assume inserted */
+
+	switch (cfg->esdhc_base) {
+	case USDHC1_BASE_ADDR:
+		gpio_direction_input(GPIO_MMC_CD);
+		ret = !gpio_get_value(GPIO_MMC_CD);
+		break;
+	}
+
+	return ret;
+}
+
+int board_mmc_init(bd_t *bis)
+{
+#ifndef CONFIG_SPL_BUILD
+	s32 status = 0;
+	u32 index = 0;
+
+	usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
+	usdhc_cfg[1].sdhc_clk = mxc_get_clock(MXC_ESDHC_CLK);
+
+	usdhc_cfg[0].max_bus_width = 8;
+	usdhc_cfg[1].max_bus_width = 4;
+
+	for (index = 0; index < CONFIG_SYS_FSL_USDHC_NUM; ++index) {
+		switch (index) {
+		case 0:
+			imx_iomux_v3_setup_multiple_pads(
+				usdhc3_pads, ARRAY_SIZE(usdhc3_pads));
+			break;
+		case 1:
+			imx_iomux_v3_setup_multiple_pads(
+				usdhc1_pads, ARRAY_SIZE(usdhc1_pads));
+			break;
+		default:
+			printf("Warning: you configured more USDHC controllers (%d) then supported by the board (%d)\n",
+			       index + 1, CONFIG_SYS_FSL_USDHC_NUM);
+			return status;
+		}
+
+		status |= fsl_esdhc_initialize(bis, &usdhc_cfg[index]);
+	}
+
+	return status;
+#else
+	struct src *psrc = (struct src *)SRC_BASE_ADDR;
+	unsigned reg = readl(&psrc->sbmr1) >> 11;
+	/*
+	 * Upon reading BOOT_CFG register the following map is done:
+	 * Bit 11 and 12 of BOOT_CFG register can determine the current
+	 * mmc port
+	 * 0x1                  SD1
+	 * 0x2                  SD2
+	 * 0x3                  SD4
+	 */
+
+	switch (reg & 0x3) {
+	case 0x0:
+		imx_iomux_v3_setup_multiple_pads(
+			usdhc1_pads, ARRAY_SIZE(usdhc1_pads));
+		usdhc_cfg[0].esdhc_base = USDHC1_BASE_ADDR;
+		usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC_CLK);
+		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
+		break;
+	case 0x2:
+		imx_iomux_v3_setup_multiple_pads(
+			usdhc3_pads, ARRAY_SIZE(usdhc3_pads));
+		usdhc_cfg[0].esdhc_base = USDHC3_BASE_ADDR;
+		usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
+		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
+		break;
+	default:
+		puts("MMC boot device not available");
+	}
+
+	return fsl_esdhc_initialize(bis, &usdhc_cfg[0]);
+#endif
+}
+#endif
+
+int board_phy_config(struct phy_device *phydev)
+{
+	if (phydev->drv->config)
+		phydev->drv->config(phydev);
+
+	return 0;
+}
+
+int board_eth_init(bd_t *bis)
+{
+	struct iomuxc *iomuxc_regs = (struct iomuxc *)IOMUXC_BASE_ADDR;
+	uint32_t base = IMX_FEC_BASE;
+	struct mii_dev *bus = NULL;
+	struct phy_device *phydev = NULL;
+	int ret;
+
+	/* provide the PHY clock from the i.MX 6 */
+	ret = enable_fec_anatop_clock(0, ENET_50MHZ);
+	if (ret)
+		return ret;
+	/* set gpr1[ENET_CLK_SEL] */
+	setbits_le32(&iomuxc_regs->gpr[1], IOMUXC_GPR1_ENET_CLK_SEL_MASK);
+
+	setup_iomux_enet();
+
+#ifdef CONFIG_FEC_MXC
+	bus = fec_get_miibus(base, -1);
+	if (!bus)
+		return 0;
+	/* scan PHY 1..7 */
+	phydev = phy_find_by_mask(bus, 0xff, PHY_INTERFACE_MODE_RMII);
+	if (!phydev) {
+		free(bus);
+		puts("no PHY found\n");
+		return 0;
+	}
+	phy_reset(phydev);
+	printf("using PHY at %d\n", phydev->addr);
+	ret = fec_probe(bis, -1, base, bus, phydev);
+	if (ret) {
+		printf("FEC MXC: %s:failed\n", __func__);
+		free(phydev);
+		free(bus);
+	}
+#endif
+	return 0;
+}
+
+static iomux_v3_cfg_t const pwr_intb_pads[] = {
+	/*
+	 * the bootrom sets the iomux to vselect, potentially connecting
+	 * two outputs. Set this back to GPIO
+	 */
+	MX6_PAD_GPIO_18__GPIO7_IO13 | MUX_PAD_CTRL(NO_PAD_CTRL)
+};
+
+#if defined(CONFIG_VIDEO_IPUV3)
+
+static iomux_v3_cfg_t const backlight_pads[] = {
+	/* Backlight On */
+	MX6_PAD_EIM_D26__GPIO3_IO26 | MUX_PAD_CTRL(NO_PAD_CTRL),
+#define RGB_BACKLIGHT_GP IMX_GPIO_NR(3, 26)
+	/* Backlight PWM, used as GPIO in U-Boot */
+	MX6_PAD_EIM_A22__GPIO2_IO16  | MUX_PAD_CTRL(NO_PULLUP),
+	MX6_PAD_SD4_DAT1__GPIO2_IO09 | MUX_PAD_CTRL(NO_PAD_CTRL),
+#define RGB_BACKLIGHTPWM_GP IMX_GPIO_NR(2, 9)
+};
+
+static iomux_v3_cfg_t const rgb_pads[] = {
+	MX6_PAD_DI0_DISP_CLK__IPU1_DI0_DISP_CLK | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DI0_PIN15__IPU1_DI0_PIN15 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DI0_PIN2__IPU1_DI0_PIN02 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DI0_PIN3__IPU1_DI0_PIN03 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT0__IPU1_DISP0_DATA00 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT1__IPU1_DISP0_DATA01 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT2__IPU1_DISP0_DATA02 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT3__IPU1_DISP0_DATA03 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT4__IPU1_DISP0_DATA04 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT5__IPU1_DISP0_DATA05 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT6__IPU1_DISP0_DATA06 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT7__IPU1_DISP0_DATA07 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT8__IPU1_DISP0_DATA08 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT9__IPU1_DISP0_DATA09 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT10__IPU1_DISP0_DATA10 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT11__IPU1_DISP0_DATA11 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT12__IPU1_DISP0_DATA12 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT13__IPU1_DISP0_DATA13 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT14__IPU1_DISP0_DATA14 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT15__IPU1_DISP0_DATA15 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT16__IPU1_DISP0_DATA16 | MUX_PAD_CTRL(OUTPUT_RGB),
+	MX6_PAD_DISP0_DAT17__IPU1_DISP0_DATA17 | MUX_PAD_CTRL(OUTPUT_RGB),
+};
+
+static void do_enable_hdmi(struct display_info_t const *dev)
+{
+	imx_enable_hdmi_phy();
+}
+
+static void enable_rgb(struct display_info_t const *dev)
+{
+	imx_iomux_v3_setup_multiple_pads(
+		rgb_pads,
+		ARRAY_SIZE(rgb_pads));
+	gpio_direction_output(RGB_BACKLIGHT_GP, 1);
+	gpio_direction_output(RGB_BACKLIGHTPWM_GP, 0);
+}
+
+static int detect_default(struct display_info_t const *dev)
+{
+	(void) dev;
+	return 1;
+}
+
+struct display_info_t const displays[] = {{
+	.bus	= -1,
+	.addr	= 0,
+	.pixfmt	= IPU_PIX_FMT_RGB24,
+	.detect	= detect_hdmi,
+	.enable	= do_enable_hdmi,
+	.mode	= {
+		.name           = "HDMI",
+		.refresh        = 60,
+		.xres           = 1024,
+		.yres           = 768,
+		.pixclock       = 15385,
+		.left_margin    = 220,
+		.right_margin   = 40,
+		.upper_margin   = 21,
+		.lower_margin   = 7,
+		.hsync_len      = 60,
+		.vsync_len      = 10,
+		.sync           = FB_SYNC_EXT,
+		.vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus	= -1,
+	.addr	= 0,
+	.pixfmt	= IPU_PIX_FMT_RGB666,
+	.detect	= detect_default,
+	.enable	= enable_rgb,
+	.mode	= {
+		.name           = "vga-rgb",
+		.refresh        = 60,
+		.xres           = 640,
+		.yres           = 480,
+		.pixclock       = 33000,
+		.left_margin    = 48,
+		.right_margin   = 16,
+		.upper_margin   = 31,
+		.lower_margin   = 11,
+		.hsync_len      = 96,
+		.vsync_len      = 2,
+		.sync           = 0,
+		.vmode          = FB_VMODE_NONINTERLACED
+} }, {
+	.bus	= -1,
+	.addr	= 0,
+	.pixfmt	= IPU_PIX_FMT_RGB666,
+	.enable	= enable_rgb,
+	.mode	= {
+		.name           = "wvga-rgb",
+		.refresh        = 60,
+		.xres           = 800,
+		.yres           = 480,
+		.pixclock       = 25000,
+		.left_margin    = 40,
+		.right_margin   = 88,
+		.upper_margin   = 33,
+		.lower_margin   = 10,
+		.hsync_len      = 128,
+		.vsync_len      = 2,
+		.sync           = 0,
+		.vmode          = FB_VMODE_NONINTERLACED
+} } };
+size_t display_count = ARRAY_SIZE(displays);
+
+static void setup_display(void)
+{
+	struct mxc_ccm_reg *mxc_ccm = (struct mxc_ccm_reg *)CCM_BASE_ADDR;
+	struct iomuxc *iomux = (struct iomuxc *)IOMUXC_BASE_ADDR;
+	int reg;
+
+	enable_ipu_clock();
+	imx_setup_hdmi();
+	/* Turn on LDB0,IPU,IPU DI0 clocks */
+	reg = __raw_readl(&mxc_ccm->CCGR3);
+	reg |= MXC_CCM_CCGR3_LDB_DI0_MASK;
+	writel(reg, &mxc_ccm->CCGR3);
+
+	/* set LDB0, LDB1 clk select to 011/011 */
+	reg = readl(&mxc_ccm->cs2cdr);
+	reg &= ~(MXC_CCM_CS2CDR_LDB_DI0_CLK_SEL_MASK
+		 |MXC_CCM_CS2CDR_LDB_DI1_CLK_SEL_MASK);
+	reg |= (3<<MXC_CCM_CS2CDR_LDB_DI0_CLK_SEL_OFFSET)
+	      |(3<<MXC_CCM_CS2CDR_LDB_DI1_CLK_SEL_OFFSET);
+	writel(reg, &mxc_ccm->cs2cdr);
+
+	reg = readl(&mxc_ccm->cscmr2);
+	reg |= MXC_CCM_CSCMR2_LDB_DI0_IPU_DIV;
+	writel(reg, &mxc_ccm->cscmr2);
+
+	reg = readl(&mxc_ccm->chsccdr);
+	reg |= (CHSCCDR_CLK_SEL_LDB_DI0
+		<<MXC_CCM_CHSCCDR_IPU1_DI0_CLK_SEL_OFFSET);
+	writel(reg, &mxc_ccm->chsccdr);
+
+	reg = IOMUXC_GPR2_BGREF_RRMODE_EXTERNAL_RES
+	     |IOMUXC_GPR2_DI1_VS_POLARITY_ACTIVE_HIGH
+	     |IOMUXC_GPR2_DI0_VS_POLARITY_ACTIVE_LOW
+	     |IOMUXC_GPR2_BIT_MAPPING_CH1_SPWG
+	     |IOMUXC_GPR2_DATA_WIDTH_CH1_18BIT
+	     |IOMUXC_GPR2_BIT_MAPPING_CH0_SPWG
+	     |IOMUXC_GPR2_DATA_WIDTH_CH0_18BIT
+	     |IOMUXC_GPR2_LVDS_CH1_MODE_DISABLED
+	     |IOMUXC_GPR2_LVDS_CH0_MODE_ENABLED_DI0;
+	writel(reg, &iomux->gpr[2]);
+
+	reg = readl(&iomux->gpr[3]);
+	reg = (reg & ~(IOMUXC_GPR3_LVDS0_MUX_CTL_MASK
+			|IOMUXC_GPR3_HDMI_MUX_CTL_MASK))
+	    | (IOMUXC_GPR3_MUX_SRC_IPU1_DI0
+	       <<IOMUXC_GPR3_LVDS0_MUX_CTL_OFFSET);
+	writel(reg, &iomux->gpr[3]);
+
+	/* backlight unconditionally on for now */
+	imx_iomux_v3_setup_multiple_pads(backlight_pads,
+					 ARRAY_SIZE(backlight_pads));
+	/* use 0 for EDT 7", use 1 for LG fullHD panel */
+	gpio_direction_output(RGB_BACKLIGHTPWM_GP, 0);
+	gpio_direction_output(RGB_BACKLIGHT_GP, 1);
+}
+#endif /* defined(CONFIG_VIDEO_IPUV3) */
+
+int board_early_init_f(void)
+{
+	imx_iomux_v3_setup_multiple_pads(pwr_intb_pads,
+					 ARRAY_SIZE(pwr_intb_pads));
+	setup_iomux_uart();
+
+#if defined(CONFIG_VIDEO_IPUV3)
+	setup_display();
+#endif
+	return 0;
+}
+
+/*
+ * Do not overwrite the console
+ * Use always serial for U-Boot console
+ */
+int overwrite_console(void)
+{
+	return 1;
+}
+
+int board_init(void)
+{
+	/* address of boot parameters */
+	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
+
+	setup_i2c(2, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info1);
+	setup_i2c(1, CONFIG_SYS_I2C_SPEED, 0x7f, &i2c_pad_info_loc);
+
+#ifdef CONFIG_TDX_CMD_IMX_MFGR
+	(void) pmic_init();
+#endif
+
+	setup_iomux_gpio();
+
+	return 0;
+}
+
+#ifdef CONFIG_BOARD_LATE_INIT
+int board_late_init(void)
+{
+#if defined(CONFIG_REVISION_TAG) && \
+    defined(CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG)
+	char env_str[256];
+	u32 rev;
+
+	rev = get_board_rev();
+	snprintf(env_str, ARRAY_SIZE(env_str), "%.4x", rev);
+	setenv("board_rev", env_str);
+#endif
+
+	return 0;
+}
+#endif /* CONFIG_BOARD_LATE_INIT */
+
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_SYSTEM_SETUP)
+int ft_system_setup(void *blob, bd_t *bd)
+{
+	return 0;
+}
+#endif
+
+int checkboard(void)
+{
+	char it[] = " IT";
+	int minc, maxc;
+
+	switch (get_cpu_temp_grade(&minc, &maxc)) {
+	case TEMP_AUTOMOTIVE:
+	case TEMP_INDUSTRIAL:
+		break;
+	case TEMP_EXTCOMMERCIAL:
+	default:
+		it[0] = 0;
+	};
+	printf("Model: Toradex Colibri iMX6 %s %sMB%s\n",
+	       is_cpu_type(MXC_CPU_MX6DL) ? "DualLite" : "Solo",
+	       (gd->ram_size == 0x20000000) ? "512" : "256", it);
+	return 0;
+}
+
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_BOARD_SETUP)
+int ft_board_setup(void *blob, bd_t *bd)
+{
+	return ft_common_board_setup(blob, bd);
+}
+#endif
+
+#ifdef CONFIG_CMD_BMODE
+static const struct boot_mode board_boot_modes[] = {
+	{"mmc",	MAKE_CFGVAL(0x40, 0x20, 0x00, 0x00)},
+	{NULL,	0},
+};
+#endif
+
+int misc_init_r(void)
+{
+#ifdef CONFIG_CMD_BMODE
+	add_board_boot_modes(board_boot_modes);
+#endif
+	return 0;
+}
+
+#ifdef CONFIG_LDO_BYPASS_CHECK
+/* TODO, use external pmic, for now always ldo_enable */
+void ldo_mode_set(int ldo_bypass)
+{
+	return;
+}
+#endif
+
+#ifdef CONFIG_SPL_BUILD
+#include <spl.h>
+#include <libfdt.h>
+#include "asm/arch/mx6dl-ddr.h"
+#include "asm/arch/iomux.h"
+#include "asm/arch/crm_regs.h"
+
+static int mx6s_dcd_table[] = {
+/* ddr-setup.cfg */
+
+MX6_IOM_DRAM_SDQS0, 0x00000030,
+MX6_IOM_DRAM_SDQS1, 0x00000030,
+MX6_IOM_DRAM_SDQS2, 0x00000030,
+MX6_IOM_DRAM_SDQS3, 0x00000030,
+MX6_IOM_DRAM_SDQS4, 0x00000030,
+MX6_IOM_DRAM_SDQS5, 0x00000030,
+MX6_IOM_DRAM_SDQS6, 0x00000030,
+MX6_IOM_DRAM_SDQS7, 0x00000030,
+
+MX6_IOM_GRP_B0DS, 0x00000030,
+MX6_IOM_GRP_B1DS, 0x00000030,
+MX6_IOM_GRP_B2DS, 0x00000030,
+MX6_IOM_GRP_B3DS, 0x00000030,
+MX6_IOM_GRP_B4DS, 0x00000030,
+MX6_IOM_GRP_B5DS, 0x00000030,
+MX6_IOM_GRP_B6DS, 0x00000030,
+MX6_IOM_GRP_B7DS, 0x00000030,
+MX6_IOM_GRP_ADDDS, 0x00000030,
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+MX6_IOM_GRP_CTLDS, 0x00000030,
+
+MX6_IOM_DRAM_DQM0, 0x00020030,
+MX6_IOM_DRAM_DQM1, 0x00020030,
+MX6_IOM_DRAM_DQM2, 0x00020030,
+MX6_IOM_DRAM_DQM3, 0x00020030,
+MX6_IOM_DRAM_DQM4, 0x00020030,
+MX6_IOM_DRAM_DQM5, 0x00020030,
+MX6_IOM_DRAM_DQM6, 0x00020030,
+MX6_IOM_DRAM_DQM7, 0x00020030,
+
+MX6_IOM_DRAM_CAS, 0x00020030,
+MX6_IOM_DRAM_RAS, 0x00020030,
+MX6_IOM_DRAM_SDCLK_0, 0x00020030,
+MX6_IOM_DRAM_SDCLK_1, 0x00020030,
+
+MX6_IOM_DRAM_RESET, 0x00020030,
+MX6_IOM_DRAM_SDCKE0, 0x00003000,
+MX6_IOM_DRAM_SDCKE1, 0x00003000,
+
+MX6_IOM_DRAM_SDODT0, 0x00003030,
+MX6_IOM_DRAM_SDODT1, 0x00003030,
+
+/* (differential input) */
+MX6_IOM_DDRMODE_CTL, 0x00020000,
+/* (differential input) */
+MX6_IOM_GRP_DDRMODE, 0x00020000,
+/* disable ddr pullups */
+MX6_IOM_GRP_DDRPKE, 0x00000000,
+MX6_IOM_DRAM_SDBA2, 0x00000000,
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+MX6_IOM_GRP_DDR_TYPE, 0x000C0000,
+
+/* Read data DQ Byte0-3 delay */
+MX6_MMDC_P0_MPRDDQBY0DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY1DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY2DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY3DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY0DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY1DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY2DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY3DL, 0x33333333,
+
+/*
+ * MDMISC	mirroring	interleaved (row/bank/col)
+ */
+/* TODO: check what the RALAT field does */
+MX6_MMDC_P0_MDMISC, 0x00081740,
+
+/*
+ * MDSCR	con_req
+ */
+MX6_MMDC_P0_MDSCR, 0x00008000,
+
+
+/* 800mhz_2x64mx16.cfg */
+
+MX6_MMDC_P0_MDPDC, 0x0002002D,
+MX6_MMDC_P0_MDCFG0, 0x2C305503,
+MX6_MMDC_P0_MDCFG1, 0xB66D8D63,
+MX6_MMDC_P0_MDCFG2, 0x01FF00DB,
+MX6_MMDC_P0_MDRWD, 0x000026D2,
+MX6_MMDC_P0_MDOR, 0x00301023,
+MX6_MMDC_P0_MDOTC, 0x00333030,
+MX6_MMDC_P0_MDPDC, 0x0002556D,
+/* CS0 End: 7MSB of ((0x10000000, + 512M) -1) >> 25 */
+MX6_MMDC_P0_MDASP, 0x00000017,
+/* DDR3 DATA BUS SIZE: 64BIT */
+/* MX6_MMDC_P0_MDCTL, 0x821A0000, */
+/* DDR3 DATA BUS SIZE: 32BIT */
+MX6_MMDC_P0_MDCTL, 0x82190000,
+
+/* Write commands to DDR */
+/* Load Mode Registers */
+/* TODO Use Auto Self-Refresh mode (Extended Temperature)*/
+/* MX6_MMDC_P0_MDSCR, 0x04408032, */
+MX6_MMDC_P0_MDSCR, 0x04008032,
+MX6_MMDC_P0_MDSCR, 0x00008033,
+MX6_MMDC_P0_MDSCR, 0x00048031,
+MX6_MMDC_P0_MDSCR, 0x13208030,
+/* ZQ calibration */
+MX6_MMDC_P0_MDSCR, 0x04008040,
+
+MX6_MMDC_P0_MPZQHWCTRL, 0xA1390003,
+MX6_MMDC_P1_MPZQHWCTRL, 0xA1390003,
+MX6_MMDC_P0_MDREF, 0x00005800,
+
+MX6_MMDC_P0_MPODTCTRL, 0x00000000,
+MX6_MMDC_P1_MPODTCTRL, 0x00000000,
+
+MX6_MMDC_P0_MPDGCTRL0, 0x42360232,
+MX6_MMDC_P0_MPDGCTRL1, 0x021F022A,
+MX6_MMDC_P1_MPDGCTRL0, 0x421E0224,
+MX6_MMDC_P1_MPDGCTRL1, 0x02110218,
+
+MX6_MMDC_P0_MPRDDLCTL, 0x41434344,
+MX6_MMDC_P1_MPRDDLCTL, 0x4345423E,
+MX6_MMDC_P0_MPWRDLCTL, 0x39383339,
+MX6_MMDC_P1_MPWRDLCTL, 0x3E363930,
+
+MX6_MMDC_P0_MPWLDECTRL0, 0x00340039,
+MX6_MMDC_P0_MPWLDECTRL1, 0x002C002D,
+MX6_MMDC_P1_MPWLDECTRL0, 0x00120019,
+MX6_MMDC_P1_MPWLDECTRL1, 0x0012002D,
+
+MX6_MMDC_P0_MPMUR0, 0x00000800,
+MX6_MMDC_P1_MPMUR0, 0x00000800,
+MX6_MMDC_P0_MDSCR, 0x00000000,
+MX6_MMDC_P0_MAPSR, 0x00011006,
+};
+
+static int mx6dl_dcd_table[] = {
+/* ddr-setup.cfg */
+
+MX6_IOM_DRAM_SDQS0, 0x00000030,
+MX6_IOM_DRAM_SDQS1, 0x00000030,
+MX6_IOM_DRAM_SDQS2, 0x00000030,
+MX6_IOM_DRAM_SDQS3, 0x00000030,
+MX6_IOM_DRAM_SDQS4, 0x00000030,
+MX6_IOM_DRAM_SDQS5, 0x00000030,
+MX6_IOM_DRAM_SDQS6, 0x00000030,
+MX6_IOM_DRAM_SDQS7, 0x00000030,
+
+MX6_IOM_GRP_B0DS, 0x00000030,
+MX6_IOM_GRP_B1DS, 0x00000030,
+MX6_IOM_GRP_B2DS, 0x00000030,
+MX6_IOM_GRP_B3DS, 0x00000030,
+MX6_IOM_GRP_B4DS, 0x00000030,
+MX6_IOM_GRP_B5DS, 0x00000030,
+MX6_IOM_GRP_B6DS, 0x00000030,
+MX6_IOM_GRP_B7DS, 0x00000030,
+MX6_IOM_GRP_ADDDS, 0x00000030,
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+MX6_IOM_GRP_CTLDS, 0x00000030,
+
+MX6_IOM_DRAM_DQM0, 0x00020030,
+MX6_IOM_DRAM_DQM1, 0x00020030,
+MX6_IOM_DRAM_DQM2, 0x00020030,
+MX6_IOM_DRAM_DQM3, 0x00020030,
+MX6_IOM_DRAM_DQM4, 0x00020030,
+MX6_IOM_DRAM_DQM5, 0x00020030,
+MX6_IOM_DRAM_DQM6, 0x00020030,
+MX6_IOM_DRAM_DQM7, 0x00020030,
+
+MX6_IOM_DRAM_CAS, 0x00020030,
+MX6_IOM_DRAM_RAS, 0x00020030,
+MX6_IOM_DRAM_SDCLK_0, 0x00020030,
+MX6_IOM_DRAM_SDCLK_1, 0x00020030,
+
+MX6_IOM_DRAM_RESET, 0x00020030,
+MX6_IOM_DRAM_SDCKE0, 0x00003000,
+MX6_IOM_DRAM_SDCKE1, 0x00003000,
+
+MX6_IOM_DRAM_SDODT0, 0x00003030,
+MX6_IOM_DRAM_SDODT1, 0x00003030,
+
+/* (differential input) */
+MX6_IOM_DDRMODE_CTL, 0x00020000,
+/* (differential input) */
+MX6_IOM_GRP_DDRMODE, 0x00020000,
+/* disable ddr pullups */
+MX6_IOM_GRP_DDRPKE, 0x00000000,
+MX6_IOM_DRAM_SDBA2, 0x00000000,
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+MX6_IOM_GRP_DDR_TYPE, 0x000C0000,
+
+/* Read data DQ Byte0-3 delay */
+MX6_MMDC_P0_MPRDDQBY0DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY1DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY2DL, 0x33333333,
+MX6_MMDC_P0_MPRDDQBY3DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY0DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY1DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY2DL, 0x33333333,
+MX6_MMDC_P1_MPRDDQBY3DL, 0x33333333,
+
+/*
+ * MDMISC	mirroring	interleaved (row/bank/col)
+ */
+/* TODO: check what the RALAT field does */
+MX6_MMDC_P0_MDMISC, 0x00081740,
+
+/*
+ * MDSCR	con_req
+ */
+MX6_MMDC_P0_MDSCR, 0x00008000,
+
+
+/* 800mhz_2x64mx16.cfg */
+
+MX6_MMDC_P0_MDPDC, 0x0002002D,
+MX6_MMDC_P0_MDCFG0, 0x2C305503,
+MX6_MMDC_P0_MDCFG1, 0xB66D8D63,
+MX6_MMDC_P0_MDCFG2, 0x01FF00DB,
+MX6_MMDC_P0_MDRWD, 0x000026D2,
+MX6_MMDC_P0_MDOR, 0x00301023,
+MX6_MMDC_P0_MDOTC, 0x00333030,
+MX6_MMDC_P0_MDPDC, 0x0002556D,
+/* CS0 End: 7MSB of ((0x10000000, + 512M) -1) >> 25 */
+MX6_MMDC_P0_MDASP, 0x00000017,
+/* DDR3 DATA BUS SIZE: 64BIT */
+MX6_MMDC_P0_MDCTL, 0x821A0000,
+/* DDR3 DATA BUS SIZE: 32BIT */
+/* MX6_MMDC_P0_MDCTL, 0x82190000, */
+
+/* Write commands to DDR */
+/* Load Mode Registers */
+/* TODO Use Auto Self-Refresh mode (Extended Temperature)*/
+/* MX6_MMDC_P0_MDSCR, 0x04408032, */
+MX6_MMDC_P0_MDSCR, 0x04008032,
+MX6_MMDC_P0_MDSCR, 0x00008033,
+MX6_MMDC_P0_MDSCR, 0x00048031,
+MX6_MMDC_P0_MDSCR, 0x13208030,
+/* ZQ calibration */
+MX6_MMDC_P0_MDSCR, 0x04008040,
+
+MX6_MMDC_P0_MPZQHWCTRL, 0xA1390003,
+MX6_MMDC_P1_MPZQHWCTRL, 0xA1390003,
+MX6_MMDC_P0_MDREF, 0x00005800,
+
+MX6_MMDC_P0_MPODTCTRL, 0x00000000,
+MX6_MMDC_P1_MPODTCTRL, 0x00000000,
+
+MX6_MMDC_P0_MPDGCTRL0, 0x42360232,
+MX6_MMDC_P0_MPDGCTRL1, 0x021F022A,
+MX6_MMDC_P1_MPDGCTRL0, 0x421E0224,
+MX6_MMDC_P1_MPDGCTRL1, 0x02110218,
+
+MX6_MMDC_P0_MPRDDLCTL, 0x41434344,
+MX6_MMDC_P1_MPRDDLCTL, 0x4345423E,
+MX6_MMDC_P0_MPWRDLCTL, 0x39383339,
+MX6_MMDC_P1_MPWRDLCTL, 0x3E363930,
+
+MX6_MMDC_P0_MPWLDECTRL0, 0x00340039,
+MX6_MMDC_P0_MPWLDECTRL1, 0x002C002D,
+MX6_MMDC_P1_MPWLDECTRL0, 0x00120019,
+MX6_MMDC_P1_MPWLDECTRL1, 0x0012002D,
+
+MX6_MMDC_P0_MPMUR0, 0x00000800,
+MX6_MMDC_P1_MPMUR0, 0x00000800,
+MX6_MMDC_P0_MDSCR, 0x00000000,
+MX6_MMDC_P0_MAPSR, 0x00011006,
+};
+
+static void ccgr_init(void)
+{
+	struct mxc_ccm_reg *ccm = (struct mxc_ccm_reg *)CCM_BASE_ADDR;
+
+	writel(0x00C03F3F, &ccm->CCGR0);
+	writel(0x0030FC03, &ccm->CCGR1);
+	writel(0x0FFFFFF3, &ccm->CCGR2);
+	writel(0x3FF0300F, &ccm->CCGR3);
+	writel(0x00FFF300, &ccm->CCGR4);
+	writel(0x0F0000F3, &ccm->CCGR5);
+	writel(0x000003FF, &ccm->CCGR6);
+
+/*
+ * Setup CCM_CCOSR register as follows:
+ *
+ * cko1_en  = 1	   --> CKO1 enabled
+ * cko1_div = 111  --> divide by 8
+ * cko1_sel = 1011 --> ahb_clk_root
+ *
+ * This sets CKO1 at ahb_clk_root/8 = 132/8 = 16.5 MHz
+ */
+	writel(0x000000FB, &ccm->ccosr);
+}
+
+static void gpr_init(void)
+{
+	struct iomuxc *iomux = (struct iomuxc *)IOMUXC_BASE_ADDR;
+
+	/* enable AXI cache for VDOA/VPU/IPU */
+	writel(0xF00000CF, &iomux->gpr[4]);
+	/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
+	writel(0x007F007F, &iomux->gpr[6]);
+	writel(0x007F007F, &iomux->gpr[7]);
+}
+
+static void ddr_init(int *table, int size)
+{
+	int i;
+
+	for (i = 0; i < size / 2 ; i++)
+		writel(table[2 * i + 1], table[2 * i]);
+}
+
+static void spl_dram_init(void)
+{
+	int minc, maxc;
+
+	switch (get_cpu_temp_grade(&minc, &maxc)) {
+	case TEMP_COMMERCIAL:
+	case TEMP_EXTCOMMERCIAL:
+		if (is_cpu_type(MXC_CPU_MX6DL)) {
+			puts("Commercial temperature grade DDR3 timings, 64bit bus width.\n");
+			ddr_init(mx6dl_dcd_table, ARRAY_SIZE(mx6dl_dcd_table));
+		} else {
+			puts("Commercial temperature grade DDR3 timings, 32bit bus width.\n");
+			ddr_init(mx6s_dcd_table, ARRAY_SIZE(mx6s_dcd_table));
+		}
+		break;
+	case TEMP_INDUSTRIAL:
+	case TEMP_AUTOMOTIVE:
+	default:
+		if (is_cpu_type(MXC_CPU_MX6DL)) {
+			ddr_init(mx6dl_dcd_table, ARRAY_SIZE(mx6dl_dcd_table));
+		} else {
+			puts("Industrial temperature grade DDR3 timings, 32bit bus width.\n");
+			ddr_init(mx6s_dcd_table, ARRAY_SIZE(mx6s_dcd_table));
+		}
+		break;
+	};
+	udelay(100);
+}
+
+void board_init_f(ulong dummy)
+{
+	/* setup AIPS and disable watchdog */
+	arch_cpu_init();
+
+	ccgr_init();
+	gpr_init();
+
+	/* iomux and setup of i2c */
+	board_early_init_f();
+
+	/* setup GP timer */
+	timer_init();
+
+	/* UART clocks enabled and gd valid - init serial console */
+	preloader_console_init();
+
+	/* Make sure we use dte mode */
+	setup_dtemode_uart();
+
+	/* DDR initialization */
+	spl_dram_init();
+
+	/* Clear the BSS. */
+	memset(__bss_start, 0, __bss_end - __bss_start);
+
+	/* load/boot image from boot device */
+	board_init_r(NULL, 0);
+}
+
+void reset_cpu(ulong addr)
+{
+}
+
+#ifdef CONFIG_SPL_USB_GADGET_SUPPORT
+int g_dnl_bind_fixup(struct usb_device_descriptor *dev, const char *name)
+{
+	unsigned short usb_pid;
+
+	usb_pid = TORADEX_USB_PRODUCT_NUM_OFFSET + 0xfff;
+	put_unaligned(usb_pid, &dev->idProduct);
+
+	return 0;
+}
+#endif
+
+#endif
+
+static struct mxc_serial_platdata mxc_serial_plat = {
+	.reg = (struct mxc_uart *)UART1_BASE,
+	.use_dte = true,
+};
+
+U_BOOT_DEVICE(mxc_serial) = {
+	.name = "serial_mxc",
+	.platdata = &mxc_serial_plat,
+};
diff --git a/board/toradex/colibri_imx6/colibri_imx6.cfg b/board/toradex/colibri_imx6/colibri_imx6.cfg
new file mode 100644
index 0000000..e7886de
--- /dev/null
+++ b/board/toradex/colibri_imx6/colibri_imx6.cfg
@@ -0,0 +1,38 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ * Copyright (C) 2014 Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Refer doc/README.imximage for more details about how-to configure
+ * and create imximage boot image
+ *
+ * The syntax is taken as close as possible with the kwbimage
+ */
+
+/* image version */
+IMAGE_VERSION 2
+
+/*
+ * Boot Device : one of
+ * spi, sd (the board has no nand neither onenand)
+ */
+BOOT_FROM      sd
+
+#define __ASSEMBLY__
+#include <config.h>
+#include "asm/arch/mx6-ddr.h"
+#include "asm/arch/iomux.h"
+#include "asm/arch/crm_regs.h"
+
+#include "ddr-setup.cfg"
+
+#if CONFIG_DDR_MB == 256
+#include "800mhz_2x64mx16.cfg"
+#elif CONFIG_DDR_MB == 512
+#include "800mhz_4x64mx16.cfg"
+#else
+#error "unknown DDR size"
+#endif
+
+#include "clocks.cfg"
diff --git a/board/toradex/colibri_imx6/ddr-setup.cfg b/board/toradex/colibri_imx6/ddr-setup.cfg
new file mode 100644
index 0000000..f46ae55
--- /dev/null
+++ b/board/toradex/colibri_imx6/ddr-setup.cfg
@@ -0,0 +1,98 @@
+/*
+ * Copyright (C) 2013 Boundary Devices
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ *
+ * Device Configuration Data (DCD)
+ *
+ * Each entry must have the format:
+ * Addr-type           Address        Value
+ *
+ * where:
+ *      Addr-type register length (1,2 or 4 bytes)
+ *      Address   absolute address of the register
+ *      value     value to be stored in the register
+ */
+
+/*
+ * DDR3 settings
+ * MX6Q    ddr is limited to 1066 Mhz	currently 1056 MHz(528 MHz clock),
+ *	   memory bus width: 64 bits	x16/x32/x64
+ * MX6DL   ddr is limited to 800 MHz(400 MHz clock)
+ *	   memory bus width: 64 bits	x16/x32/x64
+ * MX6SOLO ddr is limited to 800 MHz(400 MHz clock)
+ *	   memory bus width: 32 bits	x16/x32
+ */
+DATA 4, MX6_IOM_DRAM_SDQS0, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS1, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS2, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS3, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS4, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS5, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS6, 0x00000030
+DATA 4, MX6_IOM_DRAM_SDQS7, 0x00000030
+
+DATA 4, MX6_IOM_GRP_B0DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B1DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B2DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B3DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B4DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B5DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B6DS, 0x00000030
+DATA 4, MX6_IOM_GRP_B7DS, 0x00000030
+DATA 4, MX6_IOM_GRP_ADDDS, 0x00000030
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+DATA 4, MX6_IOM_GRP_CTLDS, 0x00000030
+
+DATA 4, MX6_IOM_DRAM_DQM0, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM1, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM2, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM3, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM4, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM5, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM6, 0x00020030
+DATA 4, MX6_IOM_DRAM_DQM7, 0x00020030
+
+DATA 4, MX6_IOM_DRAM_CAS, 0x00020030
+DATA 4, MX6_IOM_DRAM_RAS, 0x00020030
+DATA 4, MX6_IOM_DRAM_SDCLK_0, 0x00020030
+DATA 4, MX6_IOM_DRAM_SDCLK_1, 0x00020030
+
+DATA 4, MX6_IOM_DRAM_RESET, 0x00020030
+DATA 4, MX6_IOM_DRAM_SDCKE0, 0x00003000
+DATA 4, MX6_IOM_DRAM_SDCKE1, 0x00003000
+
+DATA 4, MX6_IOM_DRAM_SDODT0, 0x00003030
+DATA 4, MX6_IOM_DRAM_SDODT1, 0x00003030
+
+/* (differential input) */
+DATA 4, MX6_IOM_DDRMODE_CTL, 0x00020000
+/* (differential input) */
+DATA 4, MX6_IOM_GRP_DDRMODE, 0x00020000
+/* disable ddr pullups */
+DATA 4, MX6_IOM_GRP_DDRPKE, 0x00000000
+DATA 4, MX6_IOM_DRAM_SDBA2, 0x00000000
+/* 40 Ohm drive strength for cs0/1,sdba2,cke0/1,sdwe */
+DATA 4, MX6_IOM_GRP_DDR_TYPE, 0x000C0000
+
+/* Read data DQ Byte0-3 delay */
+DATA 4, MX6_MMDC_P0_MPRDDQBY0DL, 0x33333333
+DATA 4, MX6_MMDC_P0_MPRDDQBY1DL, 0x33333333
+DATA 4, MX6_MMDC_P0_MPRDDQBY2DL, 0x33333333
+DATA 4, MX6_MMDC_P0_MPRDDQBY3DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY0DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY1DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY2DL, 0x33333333
+DATA 4, MX6_MMDC_P1_MPRDDQBY3DL, 0x33333333
+
+/*
+ * MDMISC	mirroring	interleaved (row/bank/col)
+ */
+/* TODO: check what the RALAT field does */
+DATA 4, MX6_MMDC_P0_MDMISC, 0x00081740
+
+/*
+ * MDSCR	con_req
+ */
+DATA 4, MX6_MMDC_P0_MDSCR, 0x00008000
diff --git a/board/toradex/colibri_imx6/do_fuse.c b/board/toradex/colibri_imx6/do_fuse.c
new file mode 100644
index 0000000..cff07e9
--- /dev/null
+++ b/board/toradex/colibri_imx6/do_fuse.c
@@ -0,0 +1,98 @@
+/*
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+/*
+ * Helpers for i.MX OTP fusing during module production
+*/
+
+#include <common.h>
+#ifndef CONFIG_SPL_BUILD
+#include <console.h>
+#include <fuse.h>
+
+static int mfgr_fuse(void)
+{
+	unsigned val, val6;
+
+	fuse_sense(0, 5, &val);
+	printf("Fuse 0, 5: %8x\n", val);
+	fuse_sense(0, 6, &val6);
+	printf("Fuse 0, 6: %8x\n", val6);
+	fuse_sense(4, 3, &val);
+	printf("Fuse 4, 3: %8x\n", val);
+	fuse_sense(4, 2, &val);
+	printf("Fuse 4, 2: %8x\n", val);
+	if (val6 & 0x10) {
+		puts("BT_FUSE_SEL already fused, will do nothing\n");
+		return CMD_RET_FAILURE;
+	}
+	/* boot cfg */
+	fuse_prog(0, 5, 0x00005072);
+	/* BT_FUSE_SEL */
+	fuse_prog(0, 6, 0x00000010);
+	return CMD_RET_SUCCESS;
+}
+
+int do_mfgr_fuse(cmd_tbl_t *cmdtp, int flag, int argc,
+		char * const argv[])
+{
+	int ret;
+	puts("Fusing...\n");
+	ret = mfgr_fuse();
+	if (ret == CMD_RET_SUCCESS)
+		puts("done.\n");
+	else
+		puts("failed.\n");
+	return ret;
+}
+
+int do_updt_fuse(cmd_tbl_t *cmdtp, int flag, int argc,
+		char * const argv[])
+{
+	unsigned val;
+	int ret;
+	int confirmed = argc >= 1 && !strcmp(argv[1], "-y");
+
+	/* can be used in scripts for command availability check */
+	if (argc >= 1 && !strcmp(argv[1], "-n"))
+		return CMD_RET_SUCCESS;
+
+	/* boot cfg */
+	fuse_sense(0, 5, &val);
+	printf("Fuse 0, 5: %8x\n", val);
+	if (val & 0x10) {
+		puts("Fast boot mode already fused, no need to fuse\n");
+		return CMD_RET_SUCCESS;
+	}
+	if (!confirmed) {
+		puts("Warning: Programming fuses is an irreversible operation!\n"
+				"         Updating to fast boot mode prevents easy\n"
+				"         downgrading to previous BSP versions.\n"
+				"\nReally perform this fuse programming? <y/N>\n");
+		if (!confirm_yesno())
+			return CMD_RET_FAILURE;
+	}
+	puts("Fusing fast boot mode...\n");
+	ret = fuse_prog(0, 5, 0x00005072);
+	if (ret == CMD_RET_SUCCESS)
+		puts("done.\n");
+	else
+		puts("failed.\n");
+	return ret;
+}
+
+U_BOOT_CMD(
+	mfgr_fuse, 1, 0, do_mfgr_fuse,
+	"OTP fusing during module production",
+	""
+);
+
+U_BOOT_CMD(
+	updt_fuse, 2, 0, do_updt_fuse,
+	"OTP fusing during module update",
+	"updt_fuse [-n] [-y] - boot cfg fast boot mode fusing"
+);
+#endif /* CONFIG_SPL_BUILD */
diff --git a/board/toradex/colibri_imx6/pf0100.c b/board/toradex/colibri_imx6/pf0100.c
new file mode 100644
index 0000000..5fb7e45
--- /dev/null
+++ b/board/toradex/colibri_imx6/pf0100.c
@@ -0,0 +1,211 @@
+/*
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+/*
+ * Helpers for Freescale PMIC PF0100
+*/
+
+#include <common.h>
+#include <i2c.h>
+#include <asm/arch/imx-regs.h>
+#include <asm/arch/iomux.h>
+#include <asm/arch/mx6-pins.h>
+#include <asm/gpio.h>
+#include <asm/imx-common/iomux-v3.h>
+
+#include "pf0100_otp.inc"
+#include "pf0100.h"
+
+/* define for PMIC register dump */
+/*#define DEBUG */
+
+/* use GPIO: EXT_IO1 to switch on VPGM, ON: 1 */
+static iomux_v3_cfg_t const pmic_prog_pads[] = {
+	MX6_PAD_NANDF_D3__GPIO2_IO03 | MUX_PAD_CTRL(NO_PAD_CTRL),
+#	define PMIC_PROG_VOLTAGE IMX_GPIO_NR(2, 3)
+};
+
+unsigned pmic_init(void)
+{
+	unsigned programmed = 0;
+	uchar bus = 1;
+	uchar devid, revid, val;
+
+	puts("PMIC:  ");
+	if (!((0 == i2c_set_bus_num(bus)) &&
+	      (0 == i2c_probe(PFUZE100_I2C_ADDR)))) {
+		puts("i2c bus failed\n");
+		return 0;
+	}
+	/* get device ident */
+	if (i2c_read(PFUZE100_I2C_ADDR, PFUZE100_DEVICEID, 1, &devid, 1) < 0) {
+		puts("i2c pmic devid read failed\n");
+		return 0;
+	}
+	if (i2c_read(PFUZE100_I2C_ADDR, PFUZE100_REVID, 1, &revid, 1) < 0) {
+		puts("i2c pmic revid read failed\n");
+		return 0;
+	}
+	printf("device id: 0x%.2x, revision id: 0x%.2x, ", devid, revid);
+
+	/* get device programmed state */
+	val = PFUZE100_PAGE_REGISTER_PAGE1;
+	if (i2c_write(PFUZE100_I2C_ADDR, PFUZE100_PAGE_REGISTER, 1, &val, 1)) {
+		puts("i2c write failed\n");
+		return 0;
+	}
+	if (i2c_read(PFUZE100_I2C_ADDR, PFUZE100_FUSE_POR1, 1, &val, 1) < 0) {
+		puts("i2c fuse_por read failed\n");
+		return 0;
+	}
+	if (val & PFUZE100_FUSE_POR_M)
+		programmed++;
+
+	if (i2c_read(PFUZE100_I2C_ADDR, PFUZE100_FUSE_POR2, 1, &val, 1) < 0) {
+		puts("i2c fuse_por read failed\n");
+		return programmed;
+	}
+	if (val & PFUZE100_FUSE_POR_M)
+		programmed++;
+
+	if (i2c_read(PFUZE100_I2C_ADDR, PFUZE100_FUSE_POR3, 1, &val, 1) < 0) {
+		puts("i2c fuse_por read failed\n");
+		return programmed;
+	}
+	if (val & PFUZE100_FUSE_POR_M)
+		programmed++;
+
+	switch (programmed) {
+	case 0:
+		puts("not programmed\n");
+		break;
+	case 3:
+		puts("programmed\n");
+		break;
+	default:
+		puts("undefined programming state\n");
+		break;
+	}
+
+#ifdef DEBUG
+	{
+		unsigned i, j;
+
+		for (i = 0; i < 16; i++)
+			printf("\t%x", i);
+		for (j = 0; j < 0x80; ) {
+			printf("\n%2x", j);
+			for (i = 0; i < 16; i++) {
+				i2c_read(PFUZE100_I2C_ADDR, j+i, 1, &val, 1);
+				printf("\t%2x", val);
+			}
+			j += 0x10;
+		}
+		printf("\nEXT Page 1");
+
+		val = PFUZE100_PAGE_REGISTER_PAGE1;
+		if (i2c_write(PFUZE100_I2C_ADDR, PFUZE100_PAGE_REGISTER, 1,
+			      &val, 1)) {
+			puts("i2c write failed\n");
+			return 0;
+		}
+
+		for (j = 0x80; j < 0x100; ) {
+			printf("\n%2x", j);
+			for (i = 0; i < 16; i++) {
+				i2c_read(PFUZE100_I2C_ADDR, j+i, 1, &val, 1);
+				printf("\t%2x", val);
+			}
+			j += 0x10;
+		}
+		printf("\nEXT Page 2");
+
+		val = PFUZE100_PAGE_REGISTER_PAGE2;
+		if (i2c_write(PFUZE100_I2C_ADDR, PFUZE100_PAGE_REGISTER, 1,
+			      &val, 1)) {
+			puts("i2c write failed\n");
+			return 0;
+		}
+
+		for (j = 0x80; j < 0x100; ) {
+			printf("\n%2x", j);
+			for (i = 0; i < 16; i++) {
+				i2c_read(PFUZE100_I2C_ADDR, j+i, 1, &val, 1);
+				printf("\t%2x", val);
+			}
+			j += 0x10;
+		}
+		printf("\n");
+	}
+#endif
+	return programmed;
+}
+
+int pf0100_prog(void)
+{
+	unsigned char bus = 1;
+	unsigned char val;
+	unsigned int i;
+
+	if (pmic_init() == 3) {
+		puts("PMIC already programmed, exiting\n");
+		return CMD_RET_FAILURE;
+	}
+	/* set up gpio to manipulate vprog, initially off */
+	imx_iomux_v3_setup_multiple_pads(pmic_prog_pads,
+					 ARRAY_SIZE(pmic_prog_pads));
+	gpio_direction_output(PMIC_PROG_VOLTAGE, 0);
+
+	if (!((0 == i2c_set_bus_num(bus)) &&
+	      (0 == i2c_probe(PFUZE100_I2C_ADDR)))) {
+		puts("i2c bus failed\n");
+		return CMD_RET_FAILURE;
+	}
+
+	for (i = 0; i < ARRAY_SIZE(pmic_otp_prog); i++) {
+		switch (pmic_otp_prog[i].cmd) {
+		case pmic_i2c:
+			val = (unsigned char) (pmic_otp_prog[i].value & 0xff);
+			if (i2c_write(PFUZE100_I2C_ADDR, pmic_otp_prog[i].reg,
+				      1, &val, 1)) {
+				printf("i2c write failed, reg 0x%2x, value 0x%2x\n",
+				       pmic_otp_prog[i].reg, val);
+				return CMD_RET_FAILURE;
+			}
+			break;
+		case pmic_delay:
+			udelay(pmic_otp_prog[i].value * 1000);
+			break;
+		case pmic_vpgm:
+			gpio_direction_output(PMIC_PROG_VOLTAGE,
+					      pmic_otp_prog[i].value);
+			break;
+		case pmic_pwr:
+			/* TODO */
+			break;
+		}
+	}
+	return CMD_RET_SUCCESS;
+}
+
+int do_pf0100_prog(cmd_tbl_t *cmdtp, int flag, int argc,
+		char * const argv[])
+{
+	int ret;
+	puts("Programming PMIC OTP...");
+	ret = pf0100_prog();
+	if (ret == CMD_RET_SUCCESS)
+		puts("done.\n");
+	else
+		puts("failed.\n");
+	return ret;
+}
+
+U_BOOT_CMD(
+	pf0100_otp_prog, 1, 0, do_pf0100_prog,
+	"Program the OTP fuses on the PMIC PF0100",
+	""
+);
diff --git a/board/toradex/colibri_imx6/pf0100.h b/board/toradex/colibri_imx6/pf0100.h
new file mode 100644
index 0000000..c84cab8
--- /dev/null
+++ b/board/toradex/colibri_imx6/pf0100.h
@@ -0,0 +1,56 @@
+/*
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+/*
+ * Helpers for Freescale PMIC PF0100
+*/
+
+#ifndef PF0100_H_
+#define PF0100_H_
+
+/* 7-bit I2C bus slave address */
+#define PFUZE100_I2C_ADDR		(0x08)
+/* Register Addresses */
+#define PFUZE100_DEVICEID		(0x0)
+#define PFUZE100_REVID			(0x3)
+#define PFUZE100_SW1AMODE		(0x23)
+#define PFUZE100_SW1ACON		36
+#define PFUZE100_SW1ACON_SPEED_VAL	(0x1<<6)	/*default */
+#define PFUZE100_SW1ACON_SPEED_M	(0x3<<6)
+#define PFUZE100_SW1CCON		49
+#define PFUZE100_SW1CCON_SPEED_VAL	(0x1<<6)	/*default */
+#define PFUZE100_SW1CCON_SPEED_M	(0x3<<6)
+#define PFUZE100_SW1AVOL		32
+#define PFUZE100_SW1AVOL_VSEL_M		(0x3f<<0)
+#define PFUZE100_SW1CVOL		46
+#define PFUZE100_SW1CVOL_VSEL_M		(0x3f<<0)
+#define PFUZE100_VGEN1CTL		(0x6c)
+#define PFUZE100_VGEN1_VAL		(0x30 + 0x08) /* Always ON, 1.2V */
+#define PFUZE100_SWBSTCTL		(0x66)
+/* Always ON, Auto Switching Mode, 5.0V */
+#define PFUZE100_SWBST_VAL		(0x40 + 0x08 + 0x00)
+
+/* chooses the extended page (registers 0x80..0xff) */
+#define PFUZE100_PAGE_REGISTER		0x7f
+#define PFUZE100_PAGE_REGISTER_PAGE_M	(0x1f << 0)
+#define PFUZE100_PAGE_REGISTER_PAGE1	(0x01 & PFUZE100_PAGE_REGISTER_PAGE_M)
+#define PFUZE100_PAGE_REGISTER_PAGE2	(0x02 & PFUZE100_PAGE_REGISTER_PAGE_M)
+
+/* extended page 1 */
+#define PFUZE100_FUSE_POR1		0xe4
+#define PFUZE100_FUSE_POR2		0xe5
+#define PFUZE100_FUSE_POR3		0xe6
+#define PFUZE100_FUSE_POR_M		(0x1 << 1)
+
+
+/* output some informational messages, return the number FUSE_POR=1 */
+/* i.e. 0: unprogrammed, 3: programmed, other: undefined prog. state */
+unsigned pmic_init(void);
+
+/* programmes OTP fuses to values required on a Toradex Apalis iMX6 */
+int pf0100_prog(void);
+
+#endif /* PF0100_H_ */
diff --git a/board/toradex/colibri_imx6/pf0100_otp.inc b/board/toradex/colibri_imx6/pf0100_otp.inc
new file mode 100644
index 0000000..255392b
--- /dev/null
+++ b/board/toradex/colibri_imx6/pf0100_otp.inc
@@ -0,0 +1,189 @@
+/*
+ * Copyright (C) 2014-2016, Toradex AG
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+// Register Output for PF0100 programmer
+// Customer: Toradex AG
+// Program: Colibri iMX6
+// Sample marking:
+// Date: 24.07.2015
+// Time: 10:52:58
+// Generated from Spreadsheet Revision: P1.8
+
+/* sed commands to get from programmer script to struct */
+/* sed -e 's/^WRITE_I2C:\(..\):\(..\)/\{pmic_i2c, 0x\1, 0x\2\},/g' -e 's/^DELAY:\([0-9]*\)/\{pmic_delay, 0, \1\},/g' pf0100_otp_Colibri_iMX6.txt > pf0100_otp.inc
+   sed -i -e 's/^VPGM:ON/\{pmic_vpgm, 0, 1},/g' -e 's/^VPGM:OFF/\{pmic_vpgm, 0, 0},/g' pf0100_otp.inc
+   sed -i -e 's/^PWRON: HIGH/\{pmic_pwr, 0, 1},/g' -e 's/^PWRON:LOW/\{pmic_pwr, 0, 0},/g' pf0100_otp.inc */
+
+enum { pmic_i2c, pmic_delay, pmic_vpgm, pmic_pwr };
+struct pmic_otp_prog_t{
+	unsigned char cmd;
+	unsigned char reg;
+	unsigned short value;
+};
+
+struct pmic_otp_prog_t pmic_otp_prog[] = {
+{pmic_i2c, 0x7F, 0x01}, // Access FSL EXT Page 1
+{pmic_i2c, 0xA0, 0x2B}, // Auto gen from Row94
+{pmic_i2c, 0xA1, 0x01}, // Auto gen from Row95
+{pmic_i2c, 0xA2, 0x05}, // Auto gen from Row96
+{pmic_i2c, 0xA8, 0x2B}, // Auto gen from Row102
+{pmic_i2c, 0xA9, 0x02}, // Auto gen from Row103
+{pmic_i2c, 0xAA, 0x01}, // Auto gen from Row104
+{pmic_i2c, 0xAC, 0x18}, // Auto gen from Row106
+{pmic_i2c, 0xAE, 0x01}, // Auto gen from Row108
+{pmic_i2c, 0xB0, 0x2C}, // Auto gen from Row110
+{pmic_i2c, 0xB1, 0x04}, // Auto gen from Row111
+{pmic_i2c, 0xB2, 0x01}, // Auto gen from Row112
+{pmic_i2c, 0xB4, 0x2C}, // Auto gen from Row114
+{pmic_i2c, 0xB5, 0x04}, // Auto gen from Row115
+{pmic_i2c, 0xB6, 0x01}, // Auto gen from Row116
+{pmic_i2c, 0xB8, 0x18}, // Auto gen from Row118
+{pmic_i2c, 0xBA, 0x01}, // Auto gen from Row120
+{pmic_i2c, 0xBD, 0x0E}, // Auto gen from Row123
+{pmic_i2c, 0xC0, 0x06}, // Auto gen from Row126
+{pmic_i2c, 0xC4, 0x04}, // Auto gen from Row130
+{pmic_i2c, 0xC8, 0x0E}, // Auto gen from Row134
+{pmic_i2c, 0xCC, 0x0E}, // Auto gen from Row138
+{pmic_i2c, 0xCD, 0x05}, // Auto gen from Row139
+{pmic_i2c, 0xD0, 0x0C}, // Auto gen from Row142
+{pmic_i2c, 0xD5, 0x07}, // Auto gen from Row147
+{pmic_i2c, 0xD8, 0x07}, // Auto gen from Row150
+{pmic_i2c, 0xD9, 0x06}, // Auto gen from Row151
+{pmic_i2c, 0xDC, 0x0A}, // Auto gen from Row154
+{pmic_i2c, 0xDD, 0x03}, // Auto gen from Row155
+{pmic_i2c, 0xE0, 0x05}, // Auto gen from Row158
+
+#if 0 /* TBB mode */
+{pmic_i2c, 0xE4, 0x80}, // TBB_POR = 1
+{pmic_delay, 0, 10},
+#else
+// Write OTP
+{pmic_i2c, 0xE4, 0x02}, // FUSE POR1=1
+{pmic_i2c, 0xE5, 0x02}, // FUSE POR2=1
+{pmic_i2c, 0xE6, 0x02}, // FUSE POR3=1
+{pmic_i2c, 0xF0, 0x1F}, // Enable ECC for fuse banks 1 to 5 by writing to OTP EN ECC0 register
+{pmic_i2c, 0xF1, 0x1F}, // Enable ECC for fuse banks 6 to 10 by writing to OTP EN ECC1 register
+{pmic_i2c, 0x7F, 0x02}, // Access PF0100 EXT Page2
+{pmic_i2c, 0xD0, 0x1F}, // Set Auto ECC for fuse banks 1 to 5 by writing to OTP AUTO ECC0 register
+{pmic_i2c, 0xD1, 0x1F}, // Set Auto ECC for fuse banks 6 to 10 by writing to OTP AUTO ECC1 register
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF1, 0x00}, // Reset Bank 1 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF2, 0x00}, // Reset Bank 2 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF3, 0x00}, // Reset Bank 3 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF4, 0x00}, // Reset Bank 4 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF5, 0x00}, // Reset Bank 5 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF6, 0x00}, // Reset Bank 6 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF7, 0x00}, // Reset Bank 7 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF8, 0x00}, // Reset Bank 8 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF9, 0x00}, // Reset Bank 9 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xFA, 0x00}, // Reset Bank 10 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+{pmic_vpgm, 0, 1}, // Turn ON 8V SWBST
+//VPGM:DOWN:n
+//VPGM:UP:n
+{pmic_delay, 0, 500}, // Adds 500msec delay to allow VPGM time to ramp up
+//-----------------------------------------------------------------------------------
+// PF0100 OTP MANUAL-PROGRAMMING (BANK 1 thru 10)
+//-----------------------------------------------------------------------------------
+// BANK 1
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF1, 0x00}, // Reset Bank 1 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF1, 0x03}, // Set Bank 1 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF1, 0x0B}, // Set Bank 1 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF1, 0x03}, // Reset Bank 1 ANTIFUSE_EN
+{pmic_i2c, 0xF1, 0x00}, // Reset Bank 1 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 2
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF2, 0x00}, // Reset Bank 2 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF2, 0x03}, // Set Bank 2 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF2, 0x0B}, // Set Bank 2 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF2, 0x03}, // Reset Bank 2 ANTIFUSE_EN
+{pmic_i2c, 0xF2, 0x00}, // Reset Bank 2 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 3
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF3, 0x00}, // Reset Bank 3 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF3, 0x03}, // Set Bank 3 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF3, 0x0B}, // Set Bank 3 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF3, 0x03}, // Reset Bank 3 ANTIFUSE_EN
+{pmic_i2c, 0xF3, 0x00}, // Reset Bank 3 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 4
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF4, 0x00}, // Reset Bank 4 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF4, 0x03}, // Set Bank 4 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF4, 0x0B}, // Set Bank 4 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF4, 0x03}, // Reset Bank 4 ANTIFUSE_EN
+{pmic_i2c, 0xF4, 0x00}, // Reset Bank 4 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 5
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF5, 0x00}, // Reset Bank 5 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF5, 0x03}, // Set Bank 5 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF5, 0x0B}, // Set Bank 5 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF5, 0x03}, // Reset Bank 5 ANTIFUSE_EN
+{pmic_i2c, 0xF5, 0x00}, // Reset Bank 5 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 6
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF6, 0x00}, // Reset Bank 6 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF6, 0x03}, // Set Bank 6 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF6, 0x0B}, // Set Bank 6 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF6, 0x03}, // Reset Bank 6 ANTIFUSE_EN
+{pmic_i2c, 0xF6, 0x00}, // Reset Bank 6 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 7
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF7, 0x00}, // Reset Bank 7 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF7, 0x03}, // Set Bank 7 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF7, 0x0B}, // Set Bank 7 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF7, 0x03}, // Reset Bank 7 ANTIFUSE_EN
+{pmic_i2c, 0xF7, 0x00}, // Reset Bank 7 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 8
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF8, 0x00}, // Reset Bank 8 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF8, 0x03}, // Set Bank 8 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF8, 0x0B}, // Set Bank 8 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF8, 0x03}, // Reset Bank 8 ANTIFUSE_EN
+{pmic_i2c, 0xF8, 0x00}, // Reset Bank 8 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 9
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xF9, 0x00}, // Reset Bank 9 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF9, 0x03}, // Set Bank 9 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xF9, 0x0B}, // Set Bank 9 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xF9, 0x03}, // Reset Bank 9 ANTIFUSE_EN
+{pmic_i2c, 0xF9, 0x00}, // Reset Bank 9 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+// BANK 10
+//-----------------------------------------------------------------------------------
+{pmic_i2c, 0xFA, 0x00}, // Reset Bank 10 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xFA, 0x03}, // Set Bank 10 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+{pmic_i2c, 0xFA, 0x0B}, // Set Bank 10 ANTIFUSE_EN
+{pmic_delay, 0, 10}, // Allow time for bank programming to complete
+{pmic_i2c, 0xFA, 0x03}, // Reset Bank 10 ANTIFUSE_EN
+{pmic_i2c, 0xFA, 0x00}, // Reset Bank 10 ANTIFUSE_RW and ANTIFUSE_BYPASS bits
+//-----------------------------------------------------------------------------------
+{pmic_vpgm, 0, 0}, // Turn off 8V SWBST
+{pmic_delay, 0, 500}, // Adds delay to allow VPGM to bleed off
+{pmic_i2c, 0xD0, 0x00}, // Clear
+{pmic_i2c, 0xD1, 0x00}, // Clear
+{pmic_pwr, 0, 0}, // PWRON LOW to reload new OTP data
+{pmic_delay, 0, 500},
+{pmic_pwr, 0, 1},
+#endif
+};
\ No newline at end of file
diff --git a/board/toradex/colibri_imx7/Kconfig b/board/toradex/colibri_imx7/Kconfig
index 7bba26b..414a600 100644
--- a/board/toradex/colibri_imx7/Kconfig
+++ b/board/toradex/colibri_imx7/Kconfig
@@ -16,5 +16,21 @@ config COLIBRI_IMX7_EXT_PHYCLK
 	  clock source.
 	default y
 
+config TDX_CFG_BLOCK
+	default y
+
+config TDX_HAVE_NAND
+	default y
+
+config TDX_CFG_BLOCK_OFFSET
+	default "2048"
+
+config TDX_CFG_BLOCK_OFFSET2
+	default "133120"
+
+config TDX_CFG_BLOCK_2ND_ETHADDR
+	default y
+
+source "board/toradex/common/Kconfig"
 
 endif
diff --git a/board/toradex/colibri_imx7/MAINTAINERS b/board/toradex/colibri_imx7/MAINTAINERS
index 5ffb241..7c8028a 100644
--- a/board/toradex/colibri_imx7/MAINTAINERS
+++ b/board/toradex/colibri_imx7/MAINTAINERS
@@ -1,5 +1,8 @@
 Colibri iMX7
 M:	Stefan Agner <stefan.agner@toradex.com>
+M:	Toradex ARM Support <support.arm@toradex.com>
+W:	http://developer.toradex.com/software/linux/linux-software
+W:	https://www.toradex.com/community
 S:	Maintained
 F:	board/toradex/colibri_imx7/
 F:	include/configs/colibri_imx7.h
diff --git a/board/toradex/colibri_imx7/colibri_imx7.c b/board/toradex/colibri_imx7/colibri_imx7.c
index c64e31e..8af5995 100644
--- a/board/toradex/colibri_imx7/colibri_imx7.c
+++ b/board/toradex/colibri_imx7/colibri_imx7.c
@@ -16,6 +16,7 @@
 #include <common.h>
 #include <dm.h>
 #include <dm/platform_data/serial_mxc.h>
+#include <fdt_support.h>
 #include <fsl_esdhc.h>
 #include <linux/sizes.h>
 #include <mmc.h>
@@ -24,6 +25,7 @@
 #include <power/pmic.h>
 #include <power/rn5t567_pmic.h>
 #include <usb/ehci-ci.h>
+#include "../common/tdx-common.h"
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -387,6 +389,61 @@ int checkboard(void)
 	return 0;
 }
 
+#if defined(CONFIG_IMX_BOOTAUX)
+ulong board_get_usable_ram_top(ulong total_size)
+{
+	/* Reserve last 1MiB for M4 on modules with 256MiB RAM */
+	if (gd->ram_size == SZ_256M)
+		return gd->ram_top - SZ_1M;
+	else
+		return gd->ram_top;
+}
+#endif
+
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_BOARD_SETUP)
+int ft_board_setup(void *blob, bd_t *bd)
+{
+#if defined(CONFIG_IMX_BOOTAUX)
+	int up;
+
+	up = arch_auxiliary_core_check_up(0);
+	if (up) {
+		int ret;
+		int areas = 1;
+		u64 start[2], size[2];
+
+		/*
+		 * Reserve 1MB of memory for M4 (1MiB is also the minimum
+		 * alignment for Linux due to MMU section size restrictions).
+		 */
+		start[0] = gd->bd->bi_dram[0].start;
+		size[0] = SZ_256M - SZ_1M;
+
+		/* If needed, create a second entry for memory beyond 256M */
+		if (gd->bd->bi_dram[0].size > SZ_256M) {
+			start[1] = gd->bd->bi_dram[0].start + SZ_256M;
+			size[1] = gd->bd->bi_dram[0].size - SZ_256M;
+			areas = 2;
+		}
+
+		ret = fdt_set_usable_memory(blob, start, size, areas);
+		if (ret) {
+			eprintf("Cannot set usable memory\n");
+			return ret;
+		}
+	} else {
+		int off;
+
+		off = fdt_node_offset_by_compatible(blob, -1, "fsl,imx7d-rpmsg");
+		if (off > 0)
+			fdt_status_disabled(blob, off);
+	}
+#endif
+
+	return ft_common_board_setup(blob, bd);
+}
+#endif
+
 #ifdef CONFIG_USB_EHCI_MX7
 static iomux_v3_cfg_t const usb_otg2_pads[] = {
 	MX7D_PAD_UART3_CTS_B__USB_OTG2_PWR | MUX_PAD_CTRL(NO_PAD_CTRL),
diff --git a/board/toradex/colibri_pxa270/Kconfig b/board/toradex/colibri_pxa270/Kconfig
index 949407a..f646baa 100644
--- a/board/toradex/colibri_pxa270/Kconfig
+++ b/board/toradex/colibri_pxa270/Kconfig
@@ -9,4 +9,15 @@ config SYS_VENDOR
 config SYS_CONFIG_NAME
 	default "colibri_pxa270"
 
+config TDX_CFG_BLOCK
+	default y
+
+config TDX_HAVE_NOR
+	default y
+
+config TDX_CFG_BLOCK_OFFSET
+	default "262144"
+
+source "board/toradex/common/Kconfig"
+
 endif
diff --git a/board/toradex/colibri_pxa270/colibri_pxa270.c b/board/toradex/colibri_pxa270/colibri_pxa270.c
index 3def0a6..8e94854 100644
--- a/board/toradex/colibri_pxa270/colibri_pxa270.c
+++ b/board/toradex/colibri_pxa270/colibri_pxa270.c
@@ -2,18 +2,23 @@
  * Toradex Colibri PXA270 Support
  *
  * Copyright (C) 2010 Marek Vasut <marek.vasut@gmail.com>
+ * Copyright (C) 2016 Marcel Ziswiler <marcel.ziswiler@toradex.com>
  *
  * SPDX-License-Identifier:	GPL-2.0+
  */
 
 #include <common.h>
 #include <asm/arch/hardware.h>
-#include <asm/arch/regs-mmc.h>
 #include <asm/arch/pxa.h>
-#include <netdev.h>
+#include <asm/arch/regs-mmc.h>
+#include <asm/arch/regs-uart.h>
 #include <asm/io.h>
+#include <dm/platdata.h>
+#include <dm/platform_data/serial_pxa.h>
+#include <netdev.h>
 #include <serial.h>
 #include <usb.h>
+#include "../common/tdx-common.h"
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -32,6 +37,20 @@ int board_init(void)
 	return 0;
 }
 
+int checkboard(void)
+{
+	puts("Model: Toradex Colibri PXA270\n");
+
+	return 0;
+}
+
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_BOARD_SETUP)
+int ft_board_setup(void *blob, bd_t *bd)
+{
+	return ft_common_board_setup(blob, bd);
+}
+#endif
+
 int dram_init(void)
 {
 	pxa2xx_dram_init();
@@ -105,3 +124,14 @@ int board_mmc_init(bd_t *bis)
 	return 0;
 }
 #endif
+
+static const struct pxa_serial_platdata serial_platdata = {
+	.base = (struct pxa_uart_regs *)FFUART_BASE,
+	.port = FFUART_INDEX,
+	.baudrate = CONFIG_BAUDRATE,
+};
+
+U_BOOT_DEVICE(pxa_serials) = {
+	.name = "serial_pxa",
+	.platdata = &serial_platdata,
+};
diff --git a/board/toradex/colibri_t20/Kconfig b/board/toradex/colibri_t20/Kconfig
index 7f373b2..a43acdd 100644
--- a/board/toradex/colibri_t20/Kconfig
+++ b/board/toradex/colibri_t20/Kconfig
@@ -9,4 +9,15 @@ config SYS_VENDOR
 config SYS_CONFIG_NAME
 	default "colibri_t20"
 
+config TDX_CFG_BLOCK
+	default y
+
+config TDX_HAVE_NAND
+	default y
+
+config TDX_CFG_BLOCK_OFFSET
+	default "3145728"
+
+source "board/toradex/common/Kconfig"
+
 endif
diff --git a/board/toradex/colibri_t20/MAINTAINERS b/board/toradex/colibri_t20/MAINTAINERS
index b251c00..834167a 100644
--- a/board/toradex/colibri_t20/MAINTAINERS
+++ b/board/toradex/colibri_t20/MAINTAINERS
@@ -1,5 +1,8 @@
 COLIBRI_T20
 M:	Lucas Stach <dev@lynxeye.de>
+M:	Toradex ARM Support <support.arm@toradex.com>
+W:	http://developer.toradex.com/software/linux/linux-software
+W:	https://www.toradex.com/community
 S:	Maintained
 F:	board/toradex/colibri_t20/
 F:	include/configs/colibri_t20.h
diff --git a/board/toradex/colibri_t20/Makefile b/board/toradex/colibri_t20/Makefile
index e5e71ac..e449e14 100644
--- a/board/toradex/colibri_t20/Makefile
+++ b/board/toradex/colibri_t20/Makefile
@@ -1,7 +1,4 @@
-#
-#  (C) Copyright 2012 Lucas Stach
-#
-# SPDX-License-Identifier:	GPL-2.0+
-#
+# Copyright (c) 2011-2016 Toradex, Inc.
+# SPDX-License-Identifier:      GPL-2.0+
 
 obj-y	+= colibri_t20.o
diff --git a/board/toradex/colibri_t20/colibri_t20.c b/board/toradex/colibri_t20/colibri_t20.c
index 68fbf49..14361a2 100644
--- a/board/toradex/colibri_t20/colibri_t20.c
+++ b/board/toradex/colibri_t20/colibri_t20.c
@@ -1,5 +1,5 @@
 /*
- *  Copyright (C) 2012 Lucas Stach
+ * Copyright (c) 2011-2016 Toradex, Inc.
  *
  * SPDX-License-Identifier:	GPL-2.0+
  */
@@ -14,6 +14,10 @@
 #include <asm/gpio.h>
 #include <asm/io.h>
 #include <i2c.h>
+#include <nand.h>
+#include "../common/tdx-common.h"
+
+DECLARE_GLOBAL_DATA_PTR;
 
 #define PMU_I2C_ADDRESS		0x34
 #define MAX_I2C_RETRY		3
@@ -21,6 +25,8 @@
 #define PMU_SUPPLYENE_SYSINEN	(1<<5)
 #define PMU_SUPPLYENE_EXITSLREQ	(1<<1)
 
+u32 get_board_rev(void);
+
 int arch_misc_init(void)
 {
 	/* Disable PMIC sleep mode on low supply voltage */
@@ -54,13 +60,84 @@ int arch_misc_init(void)
 	/* make sure SODIMM pin 87 nRESET_OUT is released properly */
 	pinmux_set_func(PMUX_PINGRP_ATA, PMUX_FUNC_GMI);
 
+	/* HW version */
+	if (!getenv("hw-version")) {
+		switch (get_board_rev()) {
+		case 0x011b:
+		case 0x011c:
+			setenv("hw-version", "v11");
+			break;
+		case 0x012a:
+			setenv("hw-version", "v12");
+			break;
+		default:
+			setenv("hw-version", (nand_info[0]->erasesize >> 10
+					      == 512)?"v11":"v12");
+		}
+	}
+
+	/* Default memory arguments */
+	if (!getenv("memargs")) {
+		switch (gd->ram_size) {
+		case 0x10000000:
+			/* 256 MB */
+			setenv("memargs", "mem=148M@0M fbmem=12M@148M "
+			       "nvmem=96M@160M");
+			setenv("ram-size", "256");
+			break;
+		case 0x20000000:
+			/* 512 MB */
+			setenv("memargs", "mem=372M@0M fbmem=12M@372M "
+			       "nvmem=128M@384M");
+			setenv("ram-size", "512");
+			break;
+		default:
+			printf("Failed detecting RAM size.\n");
+		}
+	}
+
+	/* NAND parameters */
+	if (!getenv("leb-size")) {
+		switch (nand_info[0]->erasesize >> 10) {
+		case 256:
+			/* 256 KiB */
+			setenv("leb-size", "248KiB");
+			break;
+		case 512:
+			/* 512 KiB */
+			setenv("leb-size", "504KiB");
+			break;
+		default:
+			printf("Failed detecting NAND block erase size.\n");
+		}
+	}
+
 	if (readl(NV_PA_BASE_SRAM + NVBOOTINFOTABLE_BOOTTYPE) ==
-	    NVBOOTTYPE_RECOVERY)
-		printf("USB recovery mode\n");
+	    NVBOOTTYPE_RECOVERY) {
+		printf("USB recovery mode, disabled autoboot\n");
+		setenv("bootdelay", "-1");
+	}
 
 	return 0;
 }
 
+int checkboard(void)
+{
+	printf("Model: Toradex Colibri T20 %dMB V%s\n",
+	       (gd->ram_size == 0x10000000) ? 256 : 512,
+	       (nand_info[0]->erasesize >> 10 == 512) ?
+	       ((gd->ram_size == 0x10000000) ? "1.1B" : "1.1C") : "1.2A");
+
+	return 0;
+}
+
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_BOARD_SETUP)
+int ft_board_setup(void *blob, bd_t *bd)
+{
+	return ft_common_board_setup(blob, bd);
+}
+#endif
+
 #ifdef CONFIG_TEGRA_MMC
 /*
  * Routine: pin_mux_mmc
diff --git a/board/toradex/colibri_t30/Kconfig b/board/toradex/colibri_t30/Kconfig
index 3e436a2..68ef82b 100644
--- a/board/toradex/colibri_t30/Kconfig
+++ b/board/toradex/colibri_t30/Kconfig
@@ -9,4 +9,22 @@ config SYS_VENDOR
 config SYS_CONFIG_NAME
 	default "colibri_t30"
 
+config TDX_CFG_BLOCK
+	default y
+
+config TDX_HAVE_MMC
+	default y
+
+config TDX_CFG_BLOCK_DEV
+	default "0"
+
+config TDX_CFG_BLOCK_PART
+	default "1"
+
+# Toradex config block in eMMC, at the end of 1st "boot sector"
+config TDX_CFG_BLOCK_OFFSET
+	default "-512"
+
+source "board/toradex/common/Kconfig"
+
 endif
diff --git a/board/toradex/colibri_t30/MAINTAINERS b/board/toradex/colibri_t30/MAINTAINERS
index 73b8e5d..a353b4c 100644
--- a/board/toradex/colibri_t30/MAINTAINERS
+++ b/board/toradex/colibri_t30/MAINTAINERS
@@ -1,5 +1,8 @@
 Colibri T30
 M:	Stefan Agner <stefan.agner@toradex.com>
+M:	Toradex ARM Support <support.arm@toradex.com>
+W:	http://developer.toradex.com/software/linux/linux-software
+W:	https://www.toradex.com/community
 S:	Maintained
 F:	board/toradex/colibri_t30/
 F:	include/configs/colibri_t30.h
diff --git a/board/toradex/colibri_t30/Makefile b/board/toradex/colibri_t30/Makefile
index 4242902..a5e0559 100644
--- a/board/toradex/colibri_t30/Makefile
+++ b/board/toradex/colibri_t30/Makefile
@@ -1,4 +1,4 @@
-# Copyright (c) 2013-2014 Stefan Agner
+# Copyright (c) 2012-2016 Toradex, Inc.
 # SPDX-License-Identifier:      GPL-2.0+
 
 obj-y	+= colibri_t30.o
diff --git a/board/toradex/colibri_t30/colibri_t30.c b/board/toradex/colibri_t30/colibri_t30.c
index e32362a..8ae3437 100644
--- a/board/toradex/colibri_t30/colibri_t30.c
+++ b/board/toradex/colibri_t30/colibri_t30.c
@@ -1,6 +1,5 @@
 /*
- *  (C) Copyright 2014
- *  Stefan Agner <stefan@agner.ch>
+ * Copyright (c) 2012-2016 Toradex, Inc.
  *
  * SPDX-License-Identifier:	GPL-2.0+
  */
@@ -14,16 +13,33 @@
 #include <asm/io.h>
 #include <i2c.h>
 #include "pinmux-config-colibri_t30.h"
+#include "../common/tdx-common.h"
 
 int arch_misc_init(void)
 {
 	if (readl(NV_PA_BASE_SRAM + NVBOOTINFOTABLE_BOOTTYPE) ==
-	    NVBOOTTYPE_RECOVERY)
-		printf("USB recovery mode\n");
+	    NVBOOTTYPE_RECOVERY) {
+		printf("USB recovery mode, disabled autoboot\n");
+		setenv("bootdelay", "-1");
+	}
 
 	return 0;
 }
 
+int checkboard(void)
+{
+	puts("Model: Toradex Colibri T30 1GB\n");
+
+	return 0;
+}
+
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_BOARD_SETUP)
+int ft_board_setup(void *blob, bd_t *bd)
+{
+	return ft_common_board_setup(blob, bd);
+}
+#endif
+
 /*
  * Routine: pinmux_init
  * Description: Do individual peripheral pinmux configs
diff --git a/board/toradex/colibri_t30/pinmux-config-colibri_t30.h b/board/toradex/colibri_t30/pinmux-config-colibri_t30.h
index 407c6c3..0bc3a92 100644
--- a/board/toradex/colibri_t30/pinmux-config-colibri_t30.h
+++ b/board/toradex/colibri_t30/pinmux-config-colibri_t30.h
@@ -1,7 +1,17 @@
 /*
- * Copyright (c) 2013-2014, Stefan Agner
+ * Copyright (c) 2012-2016, Toradex, Inc.
  *
- * SPDX-License-Identifier:	GPL-2.0
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
 #ifndef _PINMUX_CONFIG_COLIBRI_T30_H_
@@ -57,20 +67,20 @@
 
 static struct pmux_pingrp_config tegra3_pinmux_common[] = {
 	/* SDMMC1 disabled */
-	DEFAULT_PINMUX(SDMMC1_CLK_PZ0, RSVD1, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(SDMMC1_CMD_PZ1, RSVD1, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(SDMMC1_DAT3_PY4, RSVD1, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(SDMMC1_DAT2_PY5, RSVD1, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(SDMMC1_DAT1_PY6, RSVD1, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(SDMMC1_DAT0_PY7, RSVD1, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(SDMMC1_CLK_PZ0, RSVD1, DOWN, NORMAL, INPUT),
+	DEFAULT_PINMUX(SDMMC1_CMD_PZ1, RSVD1, DOWN, NORMAL, INPUT),
+	DEFAULT_PINMUX(SDMMC1_DAT3_PY4, RSVD1, DOWN, NORMAL, INPUT),
+	DEFAULT_PINMUX(SDMMC1_DAT2_PY5, RSVD1, DOWN, NORMAL, INPUT),
+	DEFAULT_PINMUX(SDMMC1_DAT1_PY6, RSVD1, DOWN, NORMAL, INPUT),
+	DEFAULT_PINMUX(SDMMC1_DAT0_PY7, RSVD1, DOWN, NORMAL, INPUT),
 
 	/* SDMMC3 pinmux */
 	DEFAULT_PINMUX(SDMMC3_CLK_PA6, SDMMC3, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(SDMMC3_CMD_PA7, SDMMC3, UP, NORMAL, INPUT),
+	DEFAULT_PINMUX(SDMMC3_CMD_PA7, SDMMC3, DOWN, NORMAL, INPUT),
 	DEFAULT_PINMUX(SDMMC3_DAT0_PB7, SDMMC3, UP, NORMAL, INPUT),
 	DEFAULT_PINMUX(SDMMC3_DAT1_PB6, SDMMC3, UP, NORMAL, INPUT),
 	DEFAULT_PINMUX(SDMMC3_DAT2_PB5, SDMMC3, UP, NORMAL, INPUT),
-	DEFAULT_PINMUX(SDMMC3_DAT3_PB4, SDMMC3, UP, NORMAL, INPUT),
+	DEFAULT_PINMUX(SDMMC3_DAT3_PB4, PWM0, DOWN, NORMAL, OUTPUT),
 	DEFAULT_PINMUX(SDMMC3_DAT6_PD3, RSVD1, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(SDMMC3_DAT7_PD4, RSVD1, NORMAL, NORMAL, INPUT),
 
@@ -124,11 +134,11 @@ static struct pmux_pingrp_config tegra3_pinmux_common[] = {
 	DEFAULT_PINMUX(DAP3_DIN_PP1, I2S2, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(DAP3_DOUT_PP2, I2S2, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(DAP3_SCLK_PP3, I2S2, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(PV2, OWR, NORMAL, NORMAL, OUTPUT),
-	DEFAULT_PINMUX(PV3, RSVD1, NORMAL, NORMAL, OUTPUT),
+	DEFAULT_PINMUX(PV2, OWR, DOWN, NORMAL, OUTPUT),
+	DEFAULT_PINMUX(PV3, RSVD1, DOWN, NORMAL, OUTPUT),
 	DEFAULT_PINMUX(CLK2_OUT_PW5, EXTPERIPH2, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(CLK2_REQ_PCC5, DAP, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(LCD_PWR1_PC1, DISPLAYA, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(LCD_PWR1_PC1, DISPLAYA, DOWN, NORMAL, INPUT),
 	DEFAULT_PINMUX(LCD_PWR2_PC6, DISPLAYA, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(LCD_SDIN_PZ2, DISPLAYA, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(LCD_SDOUT_PN5, DISPLAYA, NORMAL, NORMAL, INPUT),
@@ -166,7 +176,7 @@ static struct pmux_pingrp_config tegra3_pinmux_common[] = {
 	DEFAULT_PINMUX(LCD_D22_PM6, DISPLAYA, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(LCD_D23_PM7, DISPLAYA, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(LCD_CS1_N_PW0, DISPLAYA, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(LCD_M1_PW1, DISPLAYA, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(LCD_M1_PW1, DISPLAYA, NORMAL, TRISTATE, OUTPUT),
 	DEFAULT_PINMUX(LCD_DC1_PD2, DISPLAYA, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(CRT_HSYNC_PV6, CRT, NORMAL, NORMAL, OUTPUT),
 	DEFAULT_PINMUX(CRT_VSYNC_PV7, CRT, NORMAL, NORMAL, OUTPUT),
@@ -202,16 +212,15 @@ static struct pmux_pingrp_config tegra3_pinmux_common[] = {
 	DEFAULT_PINMUX(CLK3_REQ_PEE1, DEV3, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(GMI_WP_N_PC7, GMI, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(GMI_CS2_N_PK3, RSVD1, UP, NORMAL, INPUT), /* EN_VDD_BL1 */
-	DEFAULT_PINMUX(GMI_AD8_PH0, PWM0, NORMAL, NORMAL, OUTPUT), /* LCD1_BL_PWM */
+	DEFAULT_PINMUX(GMI_AD8_PH0, RSVD2, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(GMI_AD10_PH2, NAND, NORMAL, NORMAL, OUTPUT), /* LCD1_BL_EN */
 	DEFAULT_PINMUX(GMI_A16_PJ7, UARTD, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(GMI_A17_PB0, UARTD, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(GMI_A18_PB1, UARTD, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(GMI_A19_PK7, UARTD, NORMAL, NORMAL, INPUT),
 
-
 	/* Multiplexed with KB_ROW10/KB_ROW11/KB_ROW12/KB_ROW15 */
-	DEFAULT_PINMUX(CAM_MCLK_PCC0, VI_ALT2, UP, TRISTATE, INPUT),
+	DEFAULT_PINMUX(CAM_MCLK_PCC0, VI_ALT3, UP, TRISTATE, INPUT),
 	DEFAULT_PINMUX(PCC1, RSVD1, NORMAL, TRISTATE, INPUT),
 	DEFAULT_PINMUX(PBB0, RSVD1, NORMAL, TRISTATE, INPUT),
 	DEFAULT_PINMUX(PBB3, VGP3, NORMAL, TRISTATE, INPUT),
@@ -219,7 +228,7 @@ static struct pmux_pingrp_config tegra3_pinmux_common[] = {
 	DEFAULT_PINMUX(PBB5, VGP5, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(PBB6, VGP6, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(PBB7, I2S4, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(PCC2, I2S4, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(PCC2, I2S4, DOWN, NORMAL, INPUT),
 	DEFAULT_PINMUX(JTAG_RTCK_PU7, RTCK, NORMAL, NORMAL, OUTPUT),
 
 	/* KBC keys */
@@ -284,11 +293,11 @@ static struct pmux_pingrp_config tegra3_pinmux_common[] = {
 
 	DEFAULT_PINMUX(PEX_WAKE_N_PDD3, PCIE, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(PEX_L1_PRSNT_N_PDD4, PCIE, NORMAL, NORMAL, INPUT),
-	DEFAULT_PINMUX(PEX_L1_RST_N_PDD5, PCIE, NORMAL, NORMAL, OUTPUT),
-	DEFAULT_PINMUX(PEX_L1_CLKREQ_N_PDD6, PCIE, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(PEX_L1_RST_N_PDD5, PCIE, DOWN, NORMAL, OUTPUT),
+	DEFAULT_PINMUX(PEX_L1_CLKREQ_N_PDD6, PCIE, DOWN, NORMAL, INPUT),
 	DEFAULT_PINMUX(PEX_L2_PRSNT_N_PDD7, PCIE, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(PEX_L2_RST_N_PCC6, PCIE, NORMAL, NORMAL, OUTPUT),
-	DEFAULT_PINMUX(PEX_L2_CLKREQ_N_PCC7, PCIE, NORMAL, NORMAL, INPUT),
+	DEFAULT_PINMUX(PEX_L2_CLKREQ_N_PCC7, PCIE, DOWN, NORMAL, INPUT),
 	DEFAULT_PINMUX(HDMI_CEC_PEE3, CEC, NORMAL, NORMAL, INPUT),
 	DEFAULT_PINMUX(HDMI_INT_PN7, RSVD1, NORMAL, TRISTATE, INPUT),
 
diff --git a/board/toradex/colibri_vf/Kconfig b/board/toradex/colibri_vf/Kconfig
index 2c3cb30..bf9bb01 100644
--- a/board/toradex/colibri_vf/Kconfig
+++ b/board/toradex/colibri_vf/Kconfig
@@ -15,4 +15,18 @@ config SYS_SOC
 config SYS_CONFIG_NAME
 	default "colibri_vf"
 
+config TDX_CFG_BLOCK
+	default y
+
+config TDX_HAVE_NAND
+	default y
+
+config TDX_CFG_BLOCK_OFFSET
+	default "2048"
+
+config TDX_CFG_BLOCK_2ND_ETHADDR
+	default y
+
+source "board/toradex/common/Kconfig"
+
 endif
diff --git a/board/toradex/colibri_vf/MAINTAINERS b/board/toradex/colibri_vf/MAINTAINERS
index a1217a4..270bad3 100644
--- a/board/toradex/colibri_vf/MAINTAINERS
+++ b/board/toradex/colibri_vf/MAINTAINERS
@@ -1,5 +1,8 @@
 Colibri VFxx
 M:	Stefan Agner <stefan.agner@toradex.com>
+M:	Toradex ARM Support <support.arm@toradex.com>
+W:	http://developer.toradex.com/software/linux/linux-software
+W:	https://www.toradex.com/community
 S:	Maintained
 F:	board/toradex/colibri_vf/
 F:	include/configs/colibri_vf.h
diff --git a/board/toradex/colibri_vf/Makefile b/board/toradex/colibri_vf/Makefile
index c7e5134..b5233b0 100644
--- a/board/toradex/colibri_vf/Makefile
+++ b/board/toradex/colibri_vf/Makefile
@@ -5,3 +5,4 @@
 #
 
 obj-y	:= colibri_vf.o
+obj-$(CONFIG_FSL_DCU_FB) += dcu.o
diff --git a/board/toradex/colibri_vf/colibri_vf.c b/board/toradex/colibri_vf/colibri_vf.c
index c65ccb3..535d1a1 100644
--- a/board/toradex/colibri_vf/colibri_vf.c
+++ b/board/toradex/colibri_vf/colibri_vf.c
@@ -15,13 +15,19 @@
 #include <asm/arch/crm_regs.h>
 #include <asm/arch/clock.h>
 #include <mmc.h>
+#include <fdt_support.h>
 #include <fsl_esdhc.h>
+#include <fsl_dcu_fb.h>
+#include <jffs2/load_kernel.h>
 #include <miiphy.h>
+#include <mtd_node.h>
 #include <netdev.h>
 #include <i2c.h>
 #include <g_dnl.h>
 #include <asm/gpio.h>
 #include <usb.h>
+#include "../common/tdx-common.h"
+#include "../common/tdx-cfg-block.h"
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -291,6 +297,49 @@ static void setup_iomux_gpio(void)
 }
 #endif
 
+#ifdef CONFIG_FSL_DCU_FB
+static void setup_iomux_fsl_dcu(void)
+{
+	static const iomux_v3_cfg_t dcu0_pads[] = {
+		VF610_PAD_PTE0__DCU0_HSYNC,
+		VF610_PAD_PTE1__DCU0_VSYNC,
+		VF610_PAD_PTE2__DCU0_PCLK,
+		VF610_PAD_PTE4__DCU0_DE,
+		VF610_PAD_PTE5__DCU0_R0,
+		VF610_PAD_PTE6__DCU0_R1,
+		VF610_PAD_PTE7__DCU0_R2,
+		VF610_PAD_PTE8__DCU0_R3,
+		VF610_PAD_PTE9__DCU0_R4,
+		VF610_PAD_PTE10__DCU0_R5,
+		VF610_PAD_PTE11__DCU0_R6,
+		VF610_PAD_PTE12__DCU0_R7,
+		VF610_PAD_PTE13__DCU0_G0,
+		VF610_PAD_PTE14__DCU0_G1,
+		VF610_PAD_PTE15__DCU0_G2,
+		VF610_PAD_PTE16__DCU0_G3,
+		VF610_PAD_PTE17__DCU0_G4,
+		VF610_PAD_PTE18__DCU0_G5,
+		VF610_PAD_PTE19__DCU0_G6,
+		VF610_PAD_PTE20__DCU0_G7,
+		VF610_PAD_PTE21__DCU0_B0,
+		VF610_PAD_PTE22__DCU0_B1,
+		VF610_PAD_PTE23__DCU0_B2,
+		VF610_PAD_PTE24__DCU0_B3,
+		VF610_PAD_PTE25__DCU0_B4,
+		VF610_PAD_PTE26__DCU0_B5,
+		VF610_PAD_PTE27__DCU0_B6,
+		VF610_PAD_PTE28__DCU0_B7,
+	};
+
+	imx_iomux_v3_setup_multiple_pads(dcu0_pads, ARRAY_SIZE(dcu0_pads));
+}
+
+static void setup_tcon(void)
+{
+	setbits_le32(TCON0_BASE_ADDR, (1 << 29));
+}
+#endif
+
 #ifdef CONFIG_FSL_ESDHC
 struct fsl_esdhc_cfg esdhc_cfg[1] = {
 	{ESDHC1_BASE_ADDR},
@@ -364,12 +413,18 @@ static void clock_init(void)
 	clrsetbits_le32(&ccm->ccgr10, CCM_REG_CTRL_MASK,
 			CCM_CCGR10_NFC_CTRL_MASK);
 
-#ifdef CONFIG_CI_UDC
+#ifdef CONFIG_USB_EHCI_VF
 	setbits_le32(&ccm->ccgr1, CCM_CCGR1_USBC0_CTRL_MASK);
-#endif
-
-#ifdef CONFIG_USB_EHCI
 	setbits_le32(&ccm->ccgr7, CCM_CCGR7_USBC1_CTRL_MASK);
+
+	clrsetbits_le32(&anadig->pll3_ctrl, ANADIG_PLL3_CTRL_BYPASS |
+			ANADIG_PLL3_CTRL_POWERDOWN |
+			ANADIG_PLL3_CTRL_DIV_SELECT,
+			ANADIG_PLL3_CTRL_ENABLE);
+	clrsetbits_le32(&anadig->pll7_ctrl, ANADIG_PLL7_CTRL_BYPASS |
+			ANADIG_PLL7_CTRL_POWERDOWN |
+			ANADIG_PLL7_CTRL_DIV_SELECT,
+			ANADIG_PLL7_CTRL_ENABLE);
 #endif
 
 	clrsetbits_le32(&anadig->pll5_ctrl, ANADIG_PLL5_CTRL_BYPASS |
@@ -418,9 +473,15 @@ static void clock_init(void)
 			CCM_CSCDR2_ESDHC1_EN | CCM_CSCDR2_ESDHC1_CLK_DIV(0) |
 			CCM_CSCDR2_NFC_EN);
 	clrsetbits_le32(&ccm->cscdr3, CCM_REG_CTRL_MASK,
-			CCM_CSCDR3_NFC_PRE_DIV(5));
+			CCM_CSCDR3_NFC_PRE_DIV(3));
 	clrsetbits_le32(&ccm->cscmr2, CCM_REG_CTRL_MASK,
 			CCM_CSCMR2_RMII_CLK_SEL(2));
+
+#ifdef CONFIG_FSL_DCU_FB
+	setbits_le32(&ccm->ccgr1, CCM_CCGR1_TCON0_CTRL_MASK);
+
+	setbits_le32(&ccm->ccgr3, CCM_CCGR3_DCU0_CTRL_MASK);
+#endif
 }
 
 static void mscm_init(void)
@@ -459,6 +520,10 @@ int board_early_init_f(void)
 #ifdef CONFIG_FSL_DSPI
 	setup_iomux_dspi();
 #endif
+#ifdef CONFIG_FSL_DCU_FB
+	setup_tcon();
+	setup_iomux_fsl_dcu();
+#endif
 
 	return 0;
 }
@@ -468,22 +533,6 @@ int board_late_init(void)
 {
 	struct src *src = (struct src *)SRC_BASE_ADDR;
 
-	/* Default memory arguments */
-	if (!getenv("memargs")) {
-		switch (gd->ram_size) {
-		case 0x08000000:
-			/* 128 MB */
-			setenv("memargs", "mem=128M");
-			break;
-		case 0x10000000:
-			/* 256 MB */
-			setenv("memargs", "mem=256M");
-			break;
-		default:
-			printf("Failed detecting RAM size.\n");
-		}
-	}
-
 	if (((src->sbmr2 & SRC_SBMR2_BMOD_MASK) >> SRC_SBMR2_BMOD_SHIFT)
 			== SRC_SBMR2_BMOD_SERIAL) {
 		printf("Serial Downloader recovery mode, disable autoboot\n");
@@ -528,21 +577,37 @@ int checkboard(void)
 	return 0;
 }
 
-int g_dnl_bind_fixup(struct usb_device_descriptor *dev, const char *name)
+#if defined(CONFIG_OF_LIBFDT) && defined(CONFIG_OF_BOARD_SETUP)
+int ft_board_setup(void *blob, bd_t *bd)
 {
-	unsigned short usb_pid;
-
-	put_unaligned(CONFIG_TRDX_VID, &dev->idVendor);
-
-	if (is_colibri_vf61())
-		usb_pid = CONFIG_TRDX_PID_COLIBRI_VF61IT;
-	else
-		usb_pid = CONFIG_TRDX_PID_COLIBRI_VF50IT;
+	int ret = 0;
+#ifdef CONFIG_FDT_FIXUP_PARTITIONS
+	static struct node_info nodes[] = {
+		{ "fsl,vf610-nfc", MTD_DEV_TYPE_NAND, }, /* NAND flash */
+	};
 
-	put_unaligned(usb_pid, &dev->idProduct);
+	/* Update partition nodes using info from mtdparts env var */
+	puts("   Updating MTD partitions...\n");
+	fdt_fixup_mtdparts(blob, nodes, ARRAY_SIZE(nodes));
+#endif
+#ifdef CONFIG_TDX_CFG_BLOCK
+	/*
+	 * Colibri VFxx modules V1.2 and later have pull-up/down which allows
+	 * to put the DDR3 memory into self-refresh mode.
+	 */
+	if (tdx_hw_tag.ver_major > 1 || tdx_hw_tag.ver_minor >= 2)
+		do_fixup_by_compat(blob, "fsl,vf610-ddrmc",
+				"fsl,has-cke-reset-pulls", NULL, 0, 1);
+#endif
+#ifdef CONFIG_FSL_DCU_FB
+	ret = fsl_dcu_fixedfb_setup(blob);
+	if (ret)
+		return ret;
+#endif
 
-	return 0;
+	return ft_common_board_setup(blob, bd);
 }
+#endif
 
 #ifdef CONFIG_USB_EHCI_VF
 int board_ehci_hcd_init(int port)
diff --git a/board/toradex/colibri_vf/dcu.c b/board/toradex/colibri_vf/dcu.c
new file mode 100644
index 0000000..f1d8027
--- /dev/null
+++ b/board/toradex/colibri_vf/dcu.c
@@ -0,0 +1,38 @@
+/*
+ * Copyright 2016 Toradex AG
+ *
+ * FSL DCU platform driver
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <asm/arch/crm_regs.h>
+#include <asm/io.h>
+#include <common.h>
+#include <fsl_dcu_fb.h>
+#include "div64.h"
+
+DECLARE_GLOBAL_DATA_PTR;
+
+unsigned int dcu_set_pixel_clock(unsigned int pixclock)
+{
+	struct ccm_reg *ccm = (struct ccm_reg *)CCM_BASE_ADDR;
+	unsigned long long div;
+
+	clrbits_le32(&ccm->cscmr1, CCM_CSCMR1_DCU0_CLK_SEL);
+	clrsetbits_le32(&ccm->cscdr3,
+			CCM_CSCDR3_DCU0_DIV_MASK | CCM_CSCDR3_DCU0_EN,
+			CCM_CSCDR3_DCU0_DIV(0) | CCM_CSCDR3_DCU0_EN);
+	div = (unsigned long long)(PLL1_PFD2_FREQ / 1000);
+	do_div(div, pixclock);
+
+	return div;
+}
+
+int platform_dcu_init(unsigned int xres, unsigned int yres,
+		      const char *port,
+		      struct fb_videomode *dcu_fb_videomode)
+{
+	fsl_dcu_init(xres, yres, 32);
+
+	return 0;
+}
diff --git a/board/toradex/common/Kconfig b/board/toradex/common/Kconfig
new file mode 100644
index 0000000..b33baef
--- /dev/null
+++ b/board/toradex/common/Kconfig
@@ -0,0 +1,69 @@
+# Copyright (c) 2016 Toradex, Inc.
+# SPDX-License-Identifier:	GPL-2.0+
+
+menuconfig TDX_CFG_BLOCK
+	bool "Enable Toradex config block support"
+	select OF_BOARD_SETUP
+	help
+	  The Toradex config block stored production data on the on-module
+	  flash device (NAND, NOR or eMMC). The area is normally preserved by
+	  software and contains the serial number (out of which the MAC
+	  address is generated) and the exact module type.
+
+# Helper config to determine the correct default location of the cfg block
+config TDX_HAVE_MMC
+	bool
+
+config TDX_HAVE_NAND
+	bool
+
+config TDX_HAVE_NOR
+	bool
+
+if TDX_CFG_BLOCK
+
+config TDX_CFG_BLOCK_IS_IN_MMC
+	bool
+	depends on TDX_HAVE_MMC
+	default y
+
+config TDX_CFG_BLOCK_IS_IN_NAND
+	bool
+	depends on TDX_HAVE_NAND
+	default y
+
+config TDX_CFG_BLOCK_IS_IN_NOR
+	bool
+	depends on TDX_HAVE_NOR
+	default y
+
+config TDX_CFG_BLOCK_DEV
+	int "Toradex config block eMMC device ID"
+	depends on TDX_CFG_BLOCK_IS_IN_MMC
+
+config TDX_CFG_BLOCK_PART
+	int "Toradex config block eMMC partition ID"
+	depends on TDX_CFG_BLOCK_IS_IN_MMC
+
+config TDX_CFG_BLOCK_OFFSET
+	int "Toradex config block offset"
+	help
+	  Specify the byte offset of the Toradex config block within the flash
+	  device the config block is stored on.
+
+config TDX_CFG_BLOCK_OFFSET2
+	int "Toradex config block offset, second instance"
+	default 0
+	help
+	  Specify the byte offset of the 2nd instance of the Toradex config block
+	  within the flash device the config block is stored on.
+	  Set to 0 on modules which have no 2nd instance.
+
+config TDX_CFG_BLOCK_2ND_ETHADDR
+	bool "Set the second Ethernet address"
+	help
+	  For each serial number two Ethernet addresses are available for dual
+	  Ethernet carrier boards. This options enables the code to set the
+	  second Ethernet address as environment variable (eth1addr).
+
+endif
diff --git a/board/toradex/common/Makefile b/board/toradex/common/Makefile
new file mode 100644
index 0000000..d645f5a
--- /dev/null
+++ b/board/toradex/common/Makefile
@@ -0,0 +1,11 @@
+# Copyright (c) 2016 Toradex, Inc.
+# SPDX-License-Identifier:	GPL-2.0+
+
+# Common for all Toradex modules
+ifeq ($(CONFIG_SPL_BUILD),y)
+# Necessary to create built-in.o
+obj- := __dummy__.o
+else
+obj-$(CONFIG_TDX_CFG_BLOCK) += tdx-cfg-block.o
+obj-y += tdx-common.o
+endif
diff --git a/board/toradex/common/tdx-cfg-block.c b/board/toradex/common/tdx-cfg-block.c
new file mode 100644
index 0000000..cc120db
--- /dev/null
+++ b/board/toradex/common/tdx-cfg-block.c
@@ -0,0 +1,548 @@
+/*
+ * Copyright (c) 2016 Toradex, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include "tdx-cfg-block.h"
+
+#if defined(CONFIG_TARGET_APALIS_IMX6) || defined(CONFIG_TARGET_COLIBRI_IMX6)
+#include <asm/arch/sys_proto.h>
+#else
+#define is_cpu_type(cpu) (0)
+#endif
+#if defined(CONFIG_CPU_PXA27X)
+#include <asm/arch-pxa/pxa.h>
+#else
+#define cpu_is_pxa27x(cpu) (0)
+#endif
+#include <cli.h>
+#include <console.h>
+#include <flash.h>
+#include <malloc.h>
+#include <mmc.h>
+#include <nand.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define TAG_VALID	0xcf01
+#define TAG_MAC		0x0000
+#define TAG_HW		0x0008
+#define TAG_INVALID	0xffff
+
+#define TAG_FLAG_VALID	0x1
+
+#if defined(CONFIG_TDX_CFG_BLOCK_IS_IN_MMC)
+#define TDX_CFG_BLOCK_MAX_SIZE 512
+#elif defined(CONFIG_TDX_CFG_BLOCK_IS_IN_NAND)
+#define TDX_CFG_BLOCK_MAX_SIZE 64
+#elif defined(CONFIG_TDX_CFG_BLOCK_IS_IN_NOR)
+#define TDX_CFG_BLOCK_MAX_SIZE 64
+#else
+#error Toradex config block location not set
+#endif
+
+struct toradex_tag {
+	u32 len:14;
+	u32 flags:2;
+	u32 id:16;
+};
+
+bool valid_cfgblock;
+struct toradex_hw tdx_hw_tag;
+struct toradex_eth_addr tdx_eth_addr;
+u32 tdx_serial;
+
+const char * const toradex_modules[] = {
+	 [0] = "UNKNOWN MODULE",
+	 [1] = "Colibri PXA270 312MHz",
+	 [2] = "Colibri PXA270 520MHz",
+	 [3] = "Colibri PXA320 806MHz",
+	 [4] = "Colibri PXA300 208MHz",
+	 [5] = "Colibri PXA310 624MHz",
+	 [6] = "Colibri PXA320 806MHz IT",
+	 [7] = "Colibri PXA300 208MHz XT",
+	 [8] = "Colibri PXA270 312MHz",
+	 [9] = "Colibri PXA270 520MHz",
+	[10] = "Colibri VF50 128MB", /* not currently on sale */
+	[11] = "Colibri VF61 256MB",
+	[12] = "Colibri VF61 256MB IT",
+	[13] = "Colibri VF50 128MB IT",
+	[14] = "Colibri iMX6 Solo 256MB",
+	[15] = "Colibri iMX6 DualLite 512MB",
+	[16] = "Colibri iMX6 Solo 256MB IT",
+	[17] = "Colibri iMX6 DualLite 512MB IT",
+	[18] = "UNKNOWN MODULE",
+	[19] = "UNKNOWN MODULE",
+	[20] = "Colibri T20 256MB",
+	[21] = "Colibri T20 512MB",
+	[22] = "Colibri T20 512MB IT",
+	[23] = "Colibri T30 1GB",
+	[24] = "Colibri T20 256MB IT",
+	[25] = "Apalis T30 2GB",
+	[26] = "Apalis T30 1GB",
+	[27] = "Apalis iMX6 Quad 1GB",
+	[28] = "Apalis iMX6 Quad 2GB IT",
+	[29] = "Apalis iMX6 Dual 512MB",
+	[30] = "Colibri T30 1GB IT",
+	[31] = "Apalis T30 1GB IT",
+	[32] = "Colibri iMX7 Solo 256MB",
+	[33] = "Colibri iMX7 Dual 512MB",
+	[34] = "Apalis TK1 2GB",
+	[35] = "Apalis iMX6 Dual 1GB IT",
+};
+
+#ifdef CONFIG_TDX_CFG_BLOCK_IS_IN_MMC
+static int tdx_cfg_block_mmc_storage(u8 *config_block, int write)
+{
+	struct mmc *mmc;
+	int dev = CONFIG_TDX_CFG_BLOCK_DEV;
+	int offset = CONFIG_TDX_CFG_BLOCK_OFFSET;
+	uint part = CONFIG_TDX_CFG_BLOCK_PART;
+	uint blk_start;
+	int ret = 0;
+
+	/* Read production parameter config block from eMMC */
+	mmc = find_mmc_device(dev);
+	if (!mmc) {
+		puts("No MMC card found\n");
+		ret = -ENODEV;
+		goto out;
+	}
+	if (mmc_init(mmc)) {
+		puts("MMC init failed\n");
+		return -EINVAL;
+	}
+	if (part != mmc->block_dev.hwpart) {
+		if (blk_select_hwpart_devnum(IF_TYPE_MMC, dev, part)) {
+			puts("MMC partition switch failed\n");
+			ret = -ENODEV;
+			goto out;
+		}
+	}
+	if (offset < 0)
+		offset += mmc->capacity;
+	blk_start = ALIGN(offset, mmc->write_bl_len) / mmc->write_bl_len;
+
+	if (!write) {
+		/* Careful reads a whole block of 512 bytes into config_block */
+		if (blk_dread(mmc_get_blk_desc(mmc), blk_start, 1,
+			      (unsigned char *)config_block) != 1) {
+			ret = -EIO;
+			goto out;
+		}
+		/* Flush cache after read */
+		flush_cache((ulong)(unsigned char *)config_block, 512);
+	} else {
+		/* Just writing one 512 byte block */
+		if (blk_dwrite(mmc_get_blk_desc(mmc), blk_start, 1,
+			       (unsigned char *)config_block) != 1) {
+			ret = -EIO;
+			goto out;
+		}
+	}
+
+out:
+	/* Switch back to regular eMMC user partition */
+	blk_select_hwpart_devnum(IF_TYPE_MMC, 0, 0);
+
+	return ret;
+}
+#endif
+
+#ifdef CONFIG_TDX_CFG_BLOCK_IS_IN_NAND
+static int read_tdx_cfg_block_from_nand(unsigned char *config_block)
+{
+	size_t size = TDX_CFG_BLOCK_MAX_SIZE;
+
+	/* Read production parameter config block from NAND page */
+	return nand_read_skip_bad(nand_info[0], CONFIG_TDX_CFG_BLOCK_OFFSET,
+			 &size, NULL, TDX_CFG_BLOCK_MAX_SIZE, config_block);
+}
+
+static int write_tdx_cfg_block_to_nand(unsigned char *config_block)
+{
+	size_t size = TDX_CFG_BLOCK_MAX_SIZE;
+
+	/* Write production parameter config block to NAND page */
+	return nand_write_skip_bad(nand_info[0], CONFIG_TDX_CFG_BLOCK_OFFSET,
+				   &size, NULL, TDX_CFG_BLOCK_MAX_SIZE,
+				   config_block, WITH_WR_VERIFY);
+}
+#endif
+
+#ifdef CONFIG_TDX_CFG_BLOCK_IS_IN_NOR
+static int read_tdx_cfg_block_from_nor(unsigned char *config_block)
+{
+	/* Read production parameter config block from NOR flash */
+	memcpy(config_block, (void *)CONFIG_TDX_CFG_BLOCK_OFFSET,
+	       TDX_CFG_BLOCK_MAX_SIZE);
+	return 0;
+}
+
+static int write_tdx_cfg_block_to_nor(unsigned char *config_block)
+{
+	/* Write production parameter config block to NOR flash */
+	return flash_write((void *)config_block, CONFIG_TDX_CFG_BLOCK_OFFSET,
+			   TDX_CFG_BLOCK_MAX_SIZE);
+}
+#endif
+
+int read_tdx_cfg_block(void)
+{
+	int ret = 0;
+	u8 *config_block = NULL;
+	struct toradex_tag *tag;
+	size_t size = TDX_CFG_BLOCK_MAX_SIZE;
+	int offset;
+
+	/* Allocate RAM area for config block */
+	config_block = memalign(ARCH_DMA_MINALIGN, size);
+	if (!config_block) {
+		printf("Not enough malloc space available!\n");
+		return -ENOMEM;
+	}
+
+	memset(config_block, 0, size);
+
+#if defined(CONFIG_TDX_CFG_BLOCK_IS_IN_MMC)
+	ret = tdx_cfg_block_mmc_storage(config_block, 0);
+#elif defined(CONFIG_TDX_CFG_BLOCK_IS_IN_NAND)
+	ret = read_tdx_cfg_block_from_nand(config_block);
+#elif defined(CONFIG_TDX_CFG_BLOCK_IS_IN_NOR)
+	ret = read_tdx_cfg_block_from_nor(config_block);
+#else
+	ret = -EINVAL;
+#endif
+	if (ret)
+		goto out;
+
+	/* Expect a valid tag first */
+	tag = (struct toradex_tag *)config_block;
+	if (tag->flags != TAG_FLAG_VALID || tag->id != TAG_VALID) {
+		valid_cfgblock = false;
+		ret = -EINVAL;
+		goto out;
+	}
+	valid_cfgblock = true;
+	offset = 4;
+
+	while (offset < TDX_CFG_BLOCK_MAX_SIZE) {
+		tag = (struct toradex_tag *)(config_block + offset);
+		offset += 4;
+		if (tag->id == TAG_INVALID)
+			break;
+
+		if (tag->flags == TAG_FLAG_VALID) {
+			switch (tag->id) {
+			case TAG_MAC:
+				memcpy(&tdx_eth_addr, config_block + offset,
+				       6);
+
+				/* NIC part of MAC address is serial number */
+				tdx_serial = ntohl(tdx_eth_addr.nic) >> 8;
+				break;
+			case TAG_HW:
+				memcpy(&tdx_hw_tag, config_block + offset, 8);
+				break;
+			}
+		}
+
+		/* Get to next tag according to current tags length */
+		offset += tag->len * 4;
+	}
+
+	/* Cap product id to avoid issues with a yet unknown one */
+	if (tdx_hw_tag.prodid > (sizeof(toradex_modules) /
+				  sizeof(toradex_modules[0])))
+		tdx_hw_tag.prodid = 0;
+
+out:
+	free(config_block);
+	return ret;
+}
+
+static int get_cfgblock_interactive(void)
+{
+	char message[CONFIG_SYS_CBSIZE];
+	char *soc;
+	char it = 'n';
+	int len;
+
+	if (cpu_is_pxa27x())
+		sprintf(message, "Is the module the 312 MHz version? [y/N] ");
+	else
+		sprintf(message, "Is the module an IT version? [y/N] ");
+
+	len = cli_readline(message);
+	it = console_buffer[0];
+
+	soc = getenv("soc");
+	if (!strcmp("mx6", soc)) {
+#ifdef CONFIG_MACH_TYPE
+		if (it == 'y' || it == 'Y')
+			if (is_cpu_type(MXC_CPU_MX6Q))
+				tdx_hw_tag.prodid = APALIS_IMX6Q_IT;
+			else
+				tdx_hw_tag.prodid = APALIS_IMX6D_IT;
+		else
+			if (is_cpu_type(MXC_CPU_MX6Q))
+				tdx_hw_tag.prodid = APALIS_IMX6Q;
+			else
+				tdx_hw_tag.prodid = APALIS_IMX6D;
+#else
+		if (it == 'y' || it == 'Y')
+			if (is_cpu_type(MXC_CPU_MX6DL))
+				tdx_hw_tag.prodid = COLIBRI_IMX6DL_IT;
+			else
+				tdx_hw_tag.prodid = COLIBRI_IMX6S_IT;
+		else
+			if (is_cpu_type(MXC_CPU_MX6DL))
+				tdx_hw_tag.prodid = COLIBRI_IMX6DL;
+			else
+				tdx_hw_tag.prodid = COLIBRI_IMX6S;
+#endif /* CONFIG_MACH_TYPE */
+	} else if (!strcmp("imx7d", soc)) {
+		tdx_hw_tag.prodid = COLIBRI_IMX7D;
+	} else if (!strcmp("imx7s", soc)) {
+		tdx_hw_tag.prodid = COLIBRI_IMX7S;
+	} else if (!strcmp("tegra20", soc)) {
+		if (it == 'y' || it == 'Y')
+			if (gd->ram_size == 0x10000000)
+				tdx_hw_tag.prodid = COLIBRI_T20_256MB_IT;
+			else
+				tdx_hw_tag.prodid = COLIBRI_T20_512MB_IT;
+		else
+			if (gd->ram_size == 0x10000000)
+				tdx_hw_tag.prodid = COLIBRI_T20_256MB;
+			else
+				tdx_hw_tag.prodid = COLIBRI_T20_512MB;
+	} else if (cpu_is_pxa27x()) {
+		if (it == 'y' || it == 'Y')
+			tdx_hw_tag.prodid = COLIBRI_PXA270_312MHZ;
+		else
+			tdx_hw_tag.prodid = COLIBRI_PXA270_520MHZ;
+#ifdef CONFIG_MACH_TYPE
+	} else if (!strcmp("tegra30", soc)) {
+		if (CONFIG_MACH_TYPE == MACH_TYPE_APALIS_T30) {
+			if (it == 'y' || it == 'Y')
+				tdx_hw_tag.prodid = APALIS_T30_IT;
+			else
+				if (gd->ram_size == 0x40000000)
+					tdx_hw_tag.prodid = APALIS_T30_1GB;
+				else
+					tdx_hw_tag.prodid = APALIS_T30_2GB;
+		} else {
+			if (it == 'y' || it == 'Y')
+				tdx_hw_tag.prodid = COLIBRI_T30_IT;
+			else
+				tdx_hw_tag.prodid = COLIBRI_T30;
+		}
+#endif /* CONFIG_MACH_TYPE */
+	} else if (!strcmp("tegra124", soc)) {
+		tdx_hw_tag.prodid = APALIS_TK1_2GB;
+	} else if (!strcmp("vf500", soc)) {
+		if (it == 'y' || it == 'Y')
+			tdx_hw_tag.prodid = COLIBRI_VF50_IT;
+		else
+			tdx_hw_tag.prodid = COLIBRI_VF50;
+	} else if (!strcmp("vf610", soc)) {
+		if (it == 'y' || it == 'Y')
+			tdx_hw_tag.prodid = COLIBRI_VF61_IT;
+		else
+			tdx_hw_tag.prodid = COLIBRI_VF61;
+	} else {
+		printf("Module type not detectable due to unknown SoC\n");
+		return -1;
+	}
+
+	while (len < 4) {
+		sprintf(message, "Enter the module version (e.g. V1.1B): V");
+		len = cli_readline(message);
+	}
+
+	tdx_hw_tag.ver_major = console_buffer[0] - '0';
+	tdx_hw_tag.ver_minor = console_buffer[2] - '0';
+	tdx_hw_tag.ver_assembly = console_buffer[3] - 'A';
+
+	if (cpu_is_pxa27x() && (tdx_hw_tag.ver_major == 1))
+		tdx_hw_tag.prodid -= (COLIBRI_PXA270_312MHZ -
+				       COLIBRI_PXA270_V1_312MHZ);
+
+	while (len < 8) {
+		sprintf(message, "Enter module serial number: ");
+		len = cli_readline(message);
+	}
+
+	tdx_serial = simple_strtoul(console_buffer, NULL, 10);
+
+	return 0;
+}
+
+static int get_cfgblock_barcode(char *barcode)
+{
+	if (strlen(barcode) < 16) {
+		printf("Argument too short, barcode is 16 chars long\n");
+		return -1;
+	}
+
+	/* Get hardware information from the first 8 digits */
+	tdx_hw_tag.ver_major = barcode[4] - '0';
+	tdx_hw_tag.ver_minor = barcode[5] - '0';
+	tdx_hw_tag.ver_assembly = barcode[7] - '0';
+
+	barcode[4] = '\0';
+	tdx_hw_tag.prodid = simple_strtoul(barcode, NULL, 10);
+
+	/* Parse second part of the barcode (serial number */
+	barcode += 8;
+	tdx_serial = simple_strtoul(barcode, NULL, 10);
+
+	return 0;
+}
+
+static int do_cfgblock_create(cmd_tbl_t *cmdtp, int flag, int argc,
+			      char * const argv[])
+{
+	u8 *config_block;
+	struct toradex_tag *tag;
+	size_t size = TDX_CFG_BLOCK_MAX_SIZE;
+	int offset = 0;
+	int ret = CMD_RET_SUCCESS;
+	int err;
+
+	/* Allocate RAM area for config block */
+	config_block = memalign(ARCH_DMA_MINALIGN, size);
+	if (!config_block) {
+		printf("Not enough malloc space available!\n");
+		return CMD_RET_FAILURE;
+	}
+
+	memset(config_block, 0xff, size);
+
+	read_tdx_cfg_block();
+	if (valid_cfgblock) {
+#if defined(CONFIG_TDX_CFG_BLOCK_IS_IN_NAND)
+		/*
+		 * On NAND devices, recreation is only allowed if the page is
+		 * empty (config block invalid...)
+		 */
+		printf("NAND erase block %d need to be erased before creating a Toradex config block\n",
+		       CONFIG_TDX_CFG_BLOCK_OFFSET / nand_info[0]->erasesize);
+		goto out;
+#elif defined(CONFIG_TDX_CFG_BLOCK_IS_IN_NOR)
+		/*
+		 * On NOR devices, recreation is only allowed if the sector is
+		 * empty and write protection is off (config block invalid...)
+		 */
+		printf("NOR sector at offset 0x%02x need to be erased and unprotected before creating a Toradex config block\n",
+		       CONFIG_TDX_CFG_BLOCK_OFFSET);
+		goto out;
+#else
+		char message[CONFIG_SYS_CBSIZE];
+		sprintf(message,
+			"A valid Toradex config block is present, still recreate? [y/N] ");
+
+		if (!cli_readline(message))
+			goto out;
+
+		if (console_buffer[0] != 'y' && console_buffer[0] != 'Y')
+			goto out;
+#endif
+	}
+
+	/* Parse new Toradex config block data... */
+	if (argc < 3)
+		err = get_cfgblock_interactive();
+	else
+		err = get_cfgblock_barcode(argv[2]);
+
+	if (err) {
+		ret = CMD_RET_FAILURE;
+		goto out;
+	}
+
+	/* Convert serial number to MAC address (the storage format) */
+	tdx_eth_addr.oui = htonl(0x00142dUL << 8);
+	tdx_eth_addr.nic = htonl(tdx_serial << 8);
+
+	/* Valid Tag */
+	tag = (struct toradex_tag *)config_block;
+	tag->id = TAG_VALID;
+	tag->flags = TAG_FLAG_VALID;
+	tag->len = 0;
+	offset += 4;
+
+	/* Product Tag */
+	tag = (struct toradex_tag *)(config_block + offset);
+	tag->id = TAG_HW;
+	tag->flags = TAG_FLAG_VALID;
+	tag->len = 2;
+	offset += 4;
+
+	memcpy(config_block + offset, &tdx_hw_tag, 8);
+	offset += 8;
+
+	/* MAC Tag */
+	tag = (struct toradex_tag *)(config_block + offset);
+	tag->id = TAG_MAC;
+	tag->flags = TAG_FLAG_VALID;
+	tag->len = 2;
+	offset += 4;
+
+	memcpy(config_block + offset, &tdx_eth_addr, 6);
+	offset += 6;
+	memset(config_block + offset, 0, 32 - offset);
+
+#if defined(CONFIG_TDX_CFG_BLOCK_IS_IN_MMC)
+	err = tdx_cfg_block_mmc_storage(config_block, 1);
+#elif defined(CONFIG_TDX_CFG_BLOCK_IS_IN_NAND)
+	err = write_tdx_cfg_block_to_nand(config_block);
+#elif defined(CONFIG_TDX_CFG_BLOCK_IS_IN_NOR)
+	err = write_tdx_cfg_block_to_nor(config_block);
+#else
+	err = -EINVAL;
+#endif
+	if (err) {
+		printf("Failed to write Toradex config block: %d\n", ret);
+		ret = CMD_RET_FAILURE;
+		goto out;
+	}
+
+	printf("Toradex config block successfully written\n");
+
+out:
+	free(config_block);
+	return ret;
+}
+
+static int do_cfgblock(cmd_tbl_t *cmdtp, int flag, int argc,
+		       char * const argv[])
+{
+	int ret;
+
+	if (argc < 2)
+		return CMD_RET_USAGE;
+
+	if (!strcmp(argv[1], "create")) {
+		return do_cfgblock_create(cmdtp, flag, argc, argv);
+	} else if (!strcmp(argv[1], "reload")) {
+		ret = read_tdx_cfg_block();
+		if (ret) {
+			printf("Failed to reload Toradex config block: %d\n",
+			       ret);
+			return CMD_RET_FAILURE;
+		}
+		return CMD_RET_SUCCESS;
+	}
+
+	return CMD_RET_USAGE;
+}
+
+U_BOOT_CMD(
+	cfgblock, 3, 0, do_cfgblock,
+	"Toradex config block handling commands",
+	"create [barcode] - (Re-)create Toradex config block\n"
+	"cfgblock reload - Reload Toradex config block from flash"
+);
diff --git a/board/toradex/common/tdx-cfg-block.h b/board/toradex/common/tdx-cfg-block.h
new file mode 100644
index 0000000..fd7c362
--- /dev/null
+++ b/board/toradex/common/tdx-cfg-block.h
@@ -0,0 +1,68 @@
+/*
+ * Copyright (c) 2016 Toradex, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef _TDX_CFG_BLOCK_H
+#define _TDX_CFG_BLOCK_H
+
+#include "tdx-common.h"
+
+struct toradex_hw {
+	u16 ver_major;
+	u16 ver_minor;
+	u16 ver_assembly;
+	u16 prodid;
+};
+
+struct toradex_eth_addr {
+	u32 oui:24;
+	u32 nic:24;
+} __attribute__((__packed__));
+
+enum {
+	COLIBRI_PXA270_V1_312MHZ = 1,
+	COLIBRI_PXA270_V1_520MHZ,
+	COLIBRI_PXA320,
+	COLIBRI_PXA300,
+	COLIBRI_PXA310,
+	COLIBRI_PXA320_IT,
+	COLIBRI_PXA300_XT,
+	COLIBRI_PXA270_312MHZ,
+	COLIBRI_PXA270_520MHZ,
+	COLIBRI_VF50, /* not currently on sale */
+	COLIBRI_VF61,
+	COLIBRI_VF61_IT,
+	COLIBRI_VF50_IT,
+	COLIBRI_IMX6S,
+	COLIBRI_IMX6DL,
+	COLIBRI_IMX6S_IT,
+	COLIBRI_IMX6DL_IT,
+	COLIBRI_T20_256MB = 20,
+	COLIBRI_T20_512MB,
+	COLIBRI_T20_512MB_IT,
+	COLIBRI_T30,
+	COLIBRI_T20_256MB_IT,
+	APALIS_T30_2GB,
+	APALIS_T30_1GB,
+	APALIS_IMX6Q,
+	APALIS_IMX6Q_IT,
+	APALIS_IMX6D,
+	COLIBRI_T30_IT,
+	APALIS_T30_IT,
+	COLIBRI_IMX7S,
+	COLIBRI_IMX7D,
+	APALIS_TK1_2GB,
+	APALIS_IMX6D_IT,
+};
+
+extern const char * const toradex_modules[];
+extern bool valid_cfgblock;
+extern struct toradex_hw tdx_hw_tag;
+extern struct toradex_eth_addr tdx_eth_addr;
+extern u32 tdx_serial;
+
+int read_tdx_cfg_block(void);
+
+#endif /* _TDX_CFG_BLOCK_H */
diff --git a/board/toradex/common/tdx-common.c b/board/toradex/common/tdx-common.c
new file mode 100644
index 0000000..d383ac7
--- /dev/null
+++ b/board/toradex/common/tdx-common.c
@@ -0,0 +1,167 @@
+/*
+ * Copyright (c) 2016 Toradex, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <g_dnl.h>
+#include <libfdt.h>
+
+#include "tdx-cfg-block.h"
+#include "tdx-common.h"
+
+#ifdef CONFIG_TDX_CFG_BLOCK
+static char tdx_serial_str[9];
+static char tdx_board_rev_str[6];
+
+#ifdef CONFIG_REVISION_TAG
+u32 get_board_rev(void)
+{
+	/* Check validity */
+	if (!tdx_hw_tag.ver_major)
+		return 0;
+
+	return ((tdx_hw_tag.ver_major & 0xff) << 8) |
+		((tdx_hw_tag.ver_minor & 0xf) << 4) |
+		((tdx_hw_tag.ver_assembly & 0xf) + 0xa);
+}
+#endif /* CONFIG_TDX_CFG_BLOCK */
+
+#ifdef CONFIG_SERIAL_TAG
+void get_board_serial(struct tag_serialnr *serialnr)
+{
+	int array[8];
+	unsigned int serial = tdx_serial;
+	int i;
+
+	serialnr->low = 0;
+	serialnr->high = 0;
+
+	/* Check validity */
+	if (serial) {
+		/*
+		 * Convert to Linux serial number format (hexadecimal coded
+		 * decimal)
+		 */
+		i = 7;
+		while (serial) {
+			array[i--] = serial % 10;
+			serial /= 10;
+		}
+		while (i >= 0)
+			array[i--] = 0;
+		serial = array[0];
+		for (i = 1; i < 8; i++) {
+			serial *= 16;
+			serial += array[i];
+		}
+
+		serialnr->low = serial;
+	}
+}
+#endif /* CONFIG_SERIAL_TAG */
+
+int show_board_info(void)
+{
+	unsigned char ethaddr[6];
+
+	if (read_tdx_cfg_block()) {
+		printf("Missing Toradex config block\n");
+		checkboard();
+		return 0;
+	}
+
+	/* board serial-number */
+	sprintf(tdx_serial_str, "%08u", tdx_serial);
+	sprintf(tdx_board_rev_str, "V%1d.%1d%c",
+		tdx_hw_tag.ver_major,
+		tdx_hw_tag.ver_minor,
+		(char)tdx_hw_tag.ver_assembly + 'A');
+
+	setenv("serial#", tdx_serial_str);
+
+	/*
+	 * Check if environment contains a valid MAC address,
+	 * set the one from config block if not
+	 */
+	if (!eth_getenv_enetaddr("ethaddr", ethaddr))
+		eth_setenv_enetaddr("ethaddr", (u8 *)&tdx_eth_addr);
+
+#ifdef CONFIG_TDX_CFG_BLOCK_2ND_ETHADDR
+	if (!eth_getenv_enetaddr("eth1addr", ethaddr)) {
+		/*
+		 * Secondary MAC address is allocated from block
+		 * 0x100000 higher then the first MAC address
+		 */
+		memcpy(ethaddr, &tdx_eth_addr, 6);
+		ethaddr[3] += 0x10;
+		eth_setenv_enetaddr("eth1addr", ethaddr);
+	}
+#endif
+
+	printf("Model: Toradex %s %s, Serial# %s\n",
+	       toradex_modules[tdx_hw_tag.prodid],
+	       tdx_board_rev_str,
+	       tdx_serial_str);
+
+	return 0;
+}
+
+#ifdef CONFIG_USB_GADGET_DOWNLOAD
+int g_dnl_bind_fixup(struct usb_device_descriptor *dev, const char *name)
+{
+	unsigned short usb_pid;
+
+	usb_pid = TORADEX_USB_PRODUCT_NUM_OFFSET + tdx_hw_tag.prodid;
+	put_unaligned(usb_pid, &dev->idProduct);
+
+	return 0;
+}
+#endif
+
+#if defined(CONFIG_OF_LIBFDT)
+int ft_common_board_setup(void *blob, bd_t *bd)
+{
+	if (tdx_serial) {
+		fdt_setprop(blob, 0, "serial-number", tdx_serial_str,
+			    strlen(tdx_serial_str) + 1);
+	}
+
+	if (tdx_hw_tag.ver_major) {
+		char prod_id[5];
+
+		sprintf(prod_id, "%04u", tdx_hw_tag.prodid);
+		fdt_setprop(blob, 0, "toradex,product-id", prod_id, 5);
+
+		fdt_setprop(blob, 0, "toradex,board-rev", tdx_board_rev_str,
+			    strlen(tdx_board_rev_str) + 1);
+	}
+
+	return 0;
+}
+#endif
+
+#else /* CONFIG_TDX_CFG_BLOCK */
+
+#ifdef CONFIG_REVISION_TAG
+u32 get_board_rev(void)
+{
+	return 0;
+}
+#endif /* CONFIG_REVISION_TAG */
+
+#ifdef CONFIG_SERIAL_TAG
+void get_board_serial(struct tag_serialnr *serialnr)
+{
+	serialnr->low = 0;
+	serialnr->high = 0;
+}
+#endif /* CONFIG_SERIAL_TAG */
+
+int ft_common_board_setup(void *blob, bd_t *bd)
+{
+	return 0;
+}
+
+#endif /* CONFIG_TDX_CFG_BLOCK */
diff --git a/board/toradex/common/tdx-common.h b/board/toradex/common/tdx-common.h
new file mode 100644
index 0000000..f8d78f0
--- /dev/null
+++ b/board/toradex/common/tdx-common.h
@@ -0,0 +1,15 @@
+/*
+ * Copyright (c) 2016 Toradex, Inc.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef _TDX_COMMON_H
+#define _TDX_COMMON_H
+
+#define TORADEX_USB_PRODUCT_NUM_OFFSET	0x4000
+#define TDX_USB_VID			0x1B67
+
+int ft_common_board_setup(void *blob, bd_t *bd);
+
+#endif /* _TDX_COMMON_H */
diff --git a/cmd/Kconfig b/cmd/Kconfig
index e339d86..43b7c82 100644
--- a/cmd/Kconfig
+++ b/cmd/Kconfig
@@ -409,6 +409,13 @@ config CMD_DFU
 	  Enables the command "dfu" which is used to have U-Boot create a DFU
 	  class device via USB.
 
+config CMD_USB_SDP
+	bool "sdp"
+	select USB_FUNCTION_SDP
+	help
+	  Enables the command "sdp" which is used to have U-Boot emulating the
+	  Serial Download Protocol (SDP) via USB.
+
 config CMD_USB_MASS_STORAGE
 	bool "UMS usb mass storage"
 	help
diff --git a/cmd/Makefile b/cmd/Makefile
index 9c9a9d1..4b566a1 100644
--- a/cmd/Makefile
+++ b/cmd/Makefile
@@ -143,6 +143,7 @@ obj-$(CONFIG_CMD_FASTBOOT) += fastboot.o
 obj-$(CONFIG_CMD_FS_UUID) += fs_uuid.o
 
 obj-$(CONFIG_CMD_USB_MASS_STORAGE) += usb_mass_storage.o
+obj-$(CONFIG_CMD_USB_SDP) += usb_gadget_sdp.o
 obj-$(CONFIG_CMD_THOR_DOWNLOAD) += thordown.o
 obj-$(CONFIG_CMD_XIMG) += ximg.o
 obj-$(CONFIG_YAFFS2) += yaffs2.o
diff --git a/cmd/fdt.c b/cmd/fdt.c
index b503357..e73db4e 100644
--- a/cmd/fdt.c
+++ b/cmd/fdt.c
@@ -644,6 +644,7 @@ static int do_fdt(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
 	else if (strncmp(argv[1], "ap", 2) == 0) {
 		unsigned long addr;
 		struct fdt_header *blob;
+		int ret;
 
 		if (argc != 3)
 			return CMD_RET_USAGE;
@@ -656,8 +657,11 @@ static int do_fdt(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
 		if (!fdt_valid(&blob))
 			return CMD_RET_FAILURE;
 
-		if (fdt_overlay_apply(working_fdt, blob))
+		ret = fdt_overlay_apply(working_fdt, blob);
+		if (ret) {
+			printf("fdt_overlay_apply(): %s\n", fdt_strerror(ret));
 			return CMD_RET_FAILURE;
+		}
 	}
 #endif
 	/* resize the fdt */
diff --git a/cmd/nand.c b/cmd/nand.c
index c16ec77..ea6e17a 100644
--- a/cmd/nand.c
+++ b/cmd/nand.c
@@ -304,8 +304,8 @@ static void nand_print_and_set_info(int idx)
 	setenv_hex("nand_erasesize", mtd->erasesize);
 }
 
-static int raw_access(struct mtd_info *mtd, ulong addr, loff_t off,
-		      ulong count, int read, int no_verify)
+int raw_access(struct mtd_info *mtd, ulong addr, loff_t off,
+	       ulong count, int read, int no_verify)
 {
 	int ret = 0;
 
diff --git a/cmd/usb_gadget_sdp.c b/cmd/usb_gadget_sdp.c
new file mode 100644
index 0000000..09ddb4f
--- /dev/null
+++ b/cmd/usb_gadget_sdp.c
@@ -0,0 +1,53 @@
+/*
+ * cmd_sdp.c -- sdp command
+ *
+ * Copyright (C) 2016 Toradex
+ * Author: Stefan Agner <stefan.agner@toradex.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <g_dnl.h>
+#include <sdp.h>
+#include <usb.h>
+
+static int do_sdp(cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
+{
+	int ret = CMD_RET_SUCCESS;
+
+	if (argc < 2)
+		return CMD_RET_USAGE;
+
+	char *usb_controller = argv[1];
+	int controller_index = simple_strtoul(usb_controller, NULL, 0);
+	board_usb_init(controller_index, USB_INIT_DEVICE);
+
+	g_dnl_clear_detach();
+	g_dnl_register("usb_dnl_sdp");
+
+	ret = sdp_init();
+	if (ret) {
+		error("SDP init failed: %d", ret);
+		ret = CMD_RET_FAILURE;
+		goto exit;
+	}
+
+	ret = sdp_handle();
+	if (ret) {
+		error("SDP failed: %d", ret);
+		ret = CMD_RET_FAILURE;
+		goto exit;
+	}
+
+exit:
+	g_dnl_unregister();
+
+	return ret;
+}
+
+U_BOOT_CMD(sdp, 2, 1, do_sdp,
+	"Serial Downloader Protocol",
+	"<USB_controller>\n"
+	"  - serial downloader protocol via <USB_controller>\n"
+);
diff --git a/common/board_info.c b/common/board_info.c
index bd5dcfa..aa45e24 100644
--- a/common/board_info.c
+++ b/common/board_info.c
@@ -15,9 +15,9 @@ int __weak checkboard(void)
  * If the root node of the DTB has a "model" property, show it.
  * Then call checkboard().
  */
-int show_board_info(void)
+int __weak show_board_info(void)
 {
-#if defined(CONFIG_OF_CONTROL) && !defined(CONFIG_CUSTOM_BOARDINFO)
+#ifdef CONFIG_OF_CONTROL
 	DECLARE_GLOBAL_DATA_PTR;
 	const char *model;
 
diff --git a/common/board_r.c b/common/board_r.c
index d959ad3..b392148 100644
--- a/common/board_r.c
+++ b/common/board_r.c
@@ -748,6 +748,14 @@ static int run_main_loop(void)
 	return 0;
 }
 
+#if defined (CONFIG_TARGET_COLIBRI_IMX6) || defined(CONFIG_TARGET_APALIS_IMX6)
+static int print_linefeed(void)
+{
+	printf("\n");
+	return 0;
+}
+#endif
+
 /*
  * Over time we hope to remove these functions with code fragments and
  * stub funtcions, and instead call the relevant function directly.
@@ -801,6 +809,10 @@ init_fnc_t init_sequence_r[] = {
 	efi_memory_init,
 #endif
 	stdio_init_tables,
+#if defined (CONFIG_TARGET_COLIBRI_IMX6) || defined(CONFIG_TARGET_APALIS_IMX6)
+	/* workaround delete line and garbage characters in output. */
+	print_linefeed,
+#endif
 	initr_serial,
 	initr_announce,
 	INIT_FUNC_WATCHDOG_RESET
diff --git a/common/fdt_support.c b/common/fdt_support.c
index 0609470..2ef812b 100644
--- a/common/fdt_support.c
+++ b/common/fdt_support.c
@@ -460,6 +460,42 @@ int fdt_fixup_memory_banks(void *blob, u64 start[], u64 size[], int banks)
 	return 0;
 }
 
+int fdt_set_usable_memory(void *blob, u64 start[], u64 size[], int areas)
+{
+	int err, nodeoffset;
+	int len;
+	u8 tmp[8 * 16]; /* Up to 64-bit address + 64-bit size */
+
+	if (areas > 8) {
+		printf("%s: num areas %d exceeds hardcoded limit %d."
+		       " Recompile with higher MEMORY_BANKS_MAX?\n",
+		       __func__, areas, 8);
+		return -1;
+	}
+
+	err = fdt_check_header(blob);
+	if (err < 0) {
+		printf("%s: %s\n", __func__, fdt_strerror(err));
+		return err;
+	}
+
+	/* find or create "/memory" node. */
+	nodeoffset = fdt_find_or_add_subnode(blob, 0, "memory");
+	if (nodeoffset < 0)
+		return nodeoffset;
+
+	len = fdt_pack_reg(blob, tmp, start, size, areas);
+
+	err = fdt_setprop(blob, nodeoffset, "linux,usable-memory", tmp, len);
+	if (err < 0) {
+		printf("WARNING: could not set %s %s.\n",
+		       "reg", fdt_strerror(err));
+		return err;
+	}
+
+	return 0;
+}
+
 int fdt_fixup_memory(void *blob, u64 start, u64 size)
 {
 	return fdt_fixup_memory_banks(blob, &start, &size, 1);
diff --git a/common/spl/Kconfig b/common/spl/Kconfig
index bb99f1f..6cdc31b 100644
--- a/common/spl/Kconfig
+++ b/common/spl/Kconfig
@@ -465,17 +465,6 @@ config SPL_SPI_SUPPORT
 	  enable SPI drivers that are needed for other purposes also, such
 	  as a SPI PMIC.
 
-config SPL_USBETH_SUPPORT
-	bool "Support USB Ethernet drivers"
-	depends on SPL
-	help
-	  Enable access to the USB network subsystem and associated
-	  drivers in SPL. This permits SPL to load U-Boot over a
-	  USB-connected Ethernet link (such as a USB Ethernet dongle) rather
-	  than from an onboard peripheral. Environment support is required
-	  since the network stack uses a number of environment variables.
-	  See also SPL_NET_SUPPORT and SPL_ETH_SUPPORT.
-
 config SPL_USB_HOST_SUPPORT
 	bool "Support USB host drivers"
 	depends on SPL
@@ -497,6 +486,58 @@ config SPL_USB_SUPPORT
 	  config options. This enables loading from USB using a configured
 	  device.
 
+config SPL_USB_GADGET_SUPPORT
+	bool "Suppport USB Gadget drivers"
+	depends on SPL
+	help
+	  Enable USB Gadget API which allows to enable USB device functions
+	  in SPL.
+
+if SPL_USB_GADGET_SUPPORT
+
+config SPL_USBETH_SUPPORT
+	bool "Support USB Ethernet drivers"
+	help
+	  Enable access to the USB network subsystem and associated
+	  drivers in SPL. This permits SPL to load U-Boot over a
+	  USB-connected Ethernet link (such as a USB Ethernet dongle) rather
+	  than from an onboard peripheral. Environment support is required
+	  since the network stack uses a number of environment variables.
+	  See also SPL_NET_SUPPORT and SPL_ETH_SUPPORT.
+
+config SPL_DFU_SUPPORT
+	bool "Support DFU (Device Firmware Upgarde)"
+	select SPL_HASH_SUPPORT
+	help
+	  This feature enables the DFU (Device Firmware Upgarde) in SPL with
+	  RAM memory device support. The ROM code will load and execute
+	  the SPL built with dfu. The user can load binaries (u-boot/kernel) to
+	  selected device partition from host-pc using dfu-utils.
+	  This feature is useful to flash the binaries to factory or bare-metal
+	  boards using USB interface.
+
+choice
+	bool "DFU device selection"
+	depends on SPL_DFU_SUPPORT
+
+config SPL_DFU_RAM
+	bool "RAM device"
+	depends on SPL_DFU_SUPPORT
+	help
+	 select RAM/DDR memory device for loading binary images
+	 (u-boot/kernel) to the selected device partition using
+	 DFU and execute the u-boot/kernel from RAM.
+
+endchoice
+
+config SPL_USB_SDP_SUPPORT
+	bool "Support SDP (Serial Download Protocol)"
+	help
+	  Enable Serial Download Protocol (SDP) device support in SPL. This
+	  allows to download images into memory and execute (jump to) them
+	  using the same protocol as implemented by the i.MX family's boot ROM.
+endif
+
 config SPL_WATCHDOG_SUPPORT
 	bool "Support watchdog drivers"
 	depends on SPL
diff --git a/common/spl/Makefile b/common/spl/Makefile
index ed02635..69fe2ca 100644
--- a/common/spl/Makefile
+++ b/common/spl/Makefile
@@ -26,4 +26,5 @@ obj-$(CONFIG_SPL_EXT_SUPPORT) += spl_ext.o
 obj-$(CONFIG_SPL_SATA_SUPPORT) += spl_sata.o
 obj-$(CONFIG_SPL_DFU_SUPPORT) += spl_dfu.o
 obj-$(CONFIG_SPL_SPI_LOAD) += spl_spi.o
+obj-$(CONFIG_SPL_USB_SDP_SUPPORT) += spl_sdp.o
 endif
diff --git a/common/spl/spl.c b/common/spl/spl.c
index bdb165a..8d07321 100644
--- a/common/spl/spl.c
+++ b/common/spl/spl.c
@@ -220,7 +220,9 @@ static int spl_ram_load_image(struct spl_image_info *spl_image,
 
 	return 0;
 }
+#if defined(CONFIG_SPL_RAM_DEVICE)
 SPL_LOAD_IMAGE_METHOD(0, BOOT_DEVICE_RAM, spl_ram_load_image);
+#endif
 #if defined(CONFIG_SPL_DFU_SUPPORT)
 SPL_LOAD_IMAGE_METHOD(0, BOOT_DEVICE_DFU, spl_ram_load_image);
 #endif
@@ -317,6 +319,9 @@ struct boot_device_name boot_name_table[] = {
 #ifdef CONFIG_SPL_DFU_SUPPORT
 	{ BOOT_DEVICE_DFU, "USB DFU" },
 #endif
+#ifdef CONFIG_SPL_USB_SDP_SUPPORT
+	{ BOOT_DEVICE_SDP, "USB SDP" },
+#endif
 #ifdef CONFIG_SPL_SATA_SUPPORT
 	{ BOOT_DEVICE_SATA, "SATA" },
 #endif
diff --git a/common/spl/spl_mmc.c b/common/spl/spl_mmc.c
index c674e61..367b4e4 100644
--- a/common/spl/spl_mmc.c
+++ b/common/spl/spl_mmc.c
@@ -342,7 +342,6 @@ static int spl_mmc_load_image(struct spl_image_info *spl_image,
 			return err;
 
 		break;
-	case MMCSD_MODE_UNDEFINED:
 #ifdef CONFIG_SPL_LIBCOMMON_SUPPORT
 	default:
 		puts("spl: mmc: wrong boot mode\n");
diff --git a/common/spl/spl_sdp.c b/common/spl/spl_sdp.c
new file mode 100644
index 0000000..6252a45
--- /dev/null
+++ b/common/spl/spl_sdp.c
@@ -0,0 +1,38 @@
+/*
+ * (C) Copyright 2016 Toradex
+ * Author: Stefan Agner <stefan.agner@toradex.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <spl.h>
+#include <usb.h>
+#include <g_dnl.h>
+#include <sdp.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+static int spl_sdp_load_image(struct spl_image_info *spl_image,
+			      struct spl_boot_device *bootdev)
+{
+	int ret;
+
+	g_dnl_clear_detach();
+	g_dnl_register("usb_dnl_sdp");
+
+	ret = sdp_init();
+	if (ret) {
+		error("SDP init failed: %d", ret);
+		return -ENODEV;
+	}
+
+	ret = sdp_handle();
+	if (ret) {
+		error("SDP failed: %d", ret);
+		return -ENODEV;
+	}
+
+	return 0;
+}
+SPL_LOAD_IMAGE_METHOD(0, BOOT_DEVICE_SDP, spl_sdp_load_image);
diff --git a/configs/am335x_evm_usbspl_defconfig b/configs/am335x_evm_usbspl_defconfig
index 8c28e28..fdb6f77 100644
--- a/configs/am335x_evm_usbspl_defconfig
+++ b/configs/am335x_evm_usbspl_defconfig
@@ -12,6 +12,7 @@ CONFIG_SPL_MTD_SUPPORT=y
 CONFIG_SPL_MUSB_NEW_SUPPORT=y
 CONFIG_SPL_NET_SUPPORT=y
 CONFIG_SPL_OS_BOOT=y
+CONFIG_SPL_GADGET_SUPPORT=y
 CONFIG_SPL_USBETH_SUPPORT=y
 CONFIG_HUSH_PARSER=y
 CONFIG_CMD_BOOTZ=y
diff --git a/configs/apalis-tk1_defconfig b/configs/apalis-tk1_defconfig
new file mode 100644
index 0000000..024ed6e
--- /dev/null
+++ b/configs/apalis-tk1_defconfig
@@ -0,0 +1,58 @@
+CONFIG_ARM=y
+CONFIG_TEGRA=y
+CONFIG_TEGRA124=y
+CONFIG_TARGET_APALIS_TK1=y
+CONFIG_DEFAULT_DEVICE_TREE="tegra124-apalis"
+CONFIG_FIT=y
+CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_BOOTDELAY=1
+CONFIG_CONSOLE_MUX=y
+CONFIG_SYS_STDIO_DEREGISTER=y
+CONFIG_VERSION_VARIABLE=y
+# CONFIG_DISPLAY_BOARDINFO is not set
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="Apalis TK1 # "
+CONFIG_CMD_BOOTZ=y
+# CONFIG_CMD_IMI is not set
+# CONFIG_CMD_IMLS is not set
+# CONFIG_CMD_FLASH is not set
+CONFIG_CMD_MMC=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+# CONFIG_CMD_FPGA is not set
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_DHCP=y
+# CONFIG_CMD_NFS is not set
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+CONFIG_SPL_DM=y
+# CONFIG_BLK is not set
+CONFIG_DFU_MMC=y
+CONFIG_DFU_RAM=y
+# CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
+CONFIG_TEGRA124_MMC_DISABLE_EXT_LOOPBACK=y
+CONFIG_E1000=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_DM_PCI_COMPAT=y
+CONFIG_PCI_TEGRA=y
+CONFIG_SYS_NS16550=y
+CONFIG_USB=y
+CONFIG_DM_USB=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_DOWNLOAD=y
+CONFIG_G_DNL_MANUFACTURER="Toradex"
+CONFIG_G_DNL_VENDOR_NUM=0x1b67
+CONFIG_G_DNL_PRODUCT_NUM=0xffff
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/apalis_imx6_defconfig b/configs/apalis_imx6_defconfig
new file mode 100644
index 0000000..fc462f4
--- /dev/null
+++ b/configs/apalis_imx6_defconfig
@@ -0,0 +1,55 @@
+CONFIG_ARM=y
+CONFIG_ARCH_MX6=y
+CONFIG_SPL_GPIO_SUPPORT=y
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_TARGET_APALIS_IMX6=y
+CONFIG_SPL_I2C_SUPPORT=y
+CONFIG_SPL_MMC_SUPPORT=y
+CONFIG_SPL_SERIAL_SUPPORT=y
+CONFIG_VIDEO=y
+CONFIG_FIT=y
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=arch/arm/imx-common/spl_sd.cfg,MX6Q"
+CONFIG_BOOTDELAY=1
+# CONFIG_CONSOLE_MUX is not set
+# CONFIG_DISPLAY_BOARDINFO is not set
+CONFIG_SPL=y
+CONFIG_SPL_DMA_SUPPORT=y
+CONFIG_SPL_USB_HOST_SUPPORT=y
+CONFIG_SPL_USB_GADGET_SUPPORT=y
+CONFIG_SPL_USB_SDP_SUPPORT=y
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="Apalis iMX6 # "
+CONFIG_CMD_BOOTZ=y
+# CONFIG_CMD_ELF is not set
+# CONFIG_CMD_IMI is not set
+# CONFIG_CMD_IMLS is not set
+# CONFIG_CMD_XIMG is not set
+CONFIG_CMD_ASKENV=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+# CONFIG_CMD_FPGA is not set
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+CONFIG_USB=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_DOWNLOAD=y
+CONFIG_G_DNL_MANUFACTURER="Toradex"
+CONFIG_G_DNL_VENDOR_NUM=0x1b67
+CONFIG_G_DNL_PRODUCT_NUM=0x4000
+CONFIG_OF_LIBFDT=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/apalis_imx6_nospl_com_defconfig b/configs/apalis_imx6_nospl_com_defconfig
new file mode 100644
index 0000000..4276c6a
--- /dev/null
+++ b/configs/apalis_imx6_nospl_com_defconfig
@@ -0,0 +1,42 @@
+CONFIG_ARM=y
+CONFIG_ARCH_MX6=y
+CONFIG_TARGET_APALIS_IMX6=y
+CONFIG_VIDEO=y
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/toradex/apalis_imx6/apalis_imx6q.cfg,MX6Q,DDR_MB=1024"
+CONFIG_BOOTDELAY=1
+# CONFIG_CONSOLE_MUX is not set
+# CONFIG_DISPLAY_BOARDINFO is not set
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="Apalis iMX6 # "
+CONFIG_CMD_BOOTZ=y
+# CONFIG_CMD_ELF is not set
+# CONFIG_CMD_IMI is not set
+# CONFIG_CMD_IMLS is not set
+# CONFIG_CMD_XIMG is not set
+CONFIG_CMD_ASKENV=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+# CONFIG_CMD_FPGA is not set
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+CONFIG_USB=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_DOWNLOAD=y
+CONFIG_G_DNL_MANUFACTURER="Toradex"
+CONFIG_G_DNL_VENDOR_NUM=0x1b67
+CONFIG_G_DNL_PRODUCT_NUM=0x4020
+CONFIG_OF_LIBFDT=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/apalis_imx6_nospl_it_defconfig b/configs/apalis_imx6_nospl_it_defconfig
new file mode 100644
index 0000000..d246722
--- /dev/null
+++ b/configs/apalis_imx6_nospl_it_defconfig
@@ -0,0 +1,44 @@
+CONFIG_ARM=y
+CONFIG_ARCH_MX6=y
+CONFIG_TARGET_APALIS_IMX6=y
+CONFIG_VIDEO=y
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/toradex/apalis_imx6/apalis_imx6q.cfg,MX6Q,DDR_MB=2048"
+CONFIG_BOOTDELAY=1
+# CONFIG_CONSOLE_MUX is not set
+# CONFIG_DISPLAY_BOARDINFO is not set
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="Apalis iMX6 # "
+CONFIG_CMD_BOOTZ=y
+# CONFIG_CMD_ELF is not set
+# CONFIG_CMD_IMI is not set
+# CONFIG_CMD_IMLS is not set
+# CONFIG_CMD_XIMG is not set
+CONFIG_CMD_ASKENV=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+# CONFIG_CMD_FPGA is not set
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+CONFIG_DM=y
+CONFIG_DM_THERMAL=y
+CONFIG_USB=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_DOWNLOAD=y
+CONFIG_G_DNL_MANUFACTURER="Toradex"
+CONFIG_G_DNL_VENDOR_NUM=0x1b67
+CONFIG_G_DNL_PRODUCT_NUM=0x4020
+CONFIG_OF_LIBFDT=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/apalis_t30_defconfig b/configs/apalis_t30_defconfig
index 640c9ce..8f1ba7c 100644
--- a/configs/apalis_t30_defconfig
+++ b/configs/apalis_t30_defconfig
@@ -3,14 +3,19 @@ CONFIG_TEGRA=y
 CONFIG_TEGRA30=y
 CONFIG_TARGET_APALIS_T30=y
 CONFIG_DEFAULT_DEVICE_TREE="tegra30-apalis"
+CONFIG_FIT=y
 CONFIG_OF_SYSTEM_SETUP=y
-CONFIG_CONSOLE_MUX=y
+CONFIG_BOOTDELAY=1
 CONFIG_SYS_STDIO_DEREGISTER=y
+CONFIG_VERSION_VARIABLE=y
+# CONFIG_DISPLAY_BOARDINFO is not set
 CONFIG_HUSH_PARSER=y
 CONFIG_SYS_PROMPT="Apalis T30 # "
 CONFIG_CMD_BOOTZ=y
 # CONFIG_CMD_IMI is not set
 # CONFIG_CMD_IMLS is not set
+CONFIG_CMD_ASKENV=y
+CONFIG_CMD_MEMTEST=y
 # CONFIG_CMD_FLASH is not set
 CONFIG_CMD_MMC=y
 CONFIG_CMD_I2C=y
@@ -33,11 +38,15 @@ CONFIG_SPL_DM=y
 CONFIG_DFU_MMC=y
 CONFIG_DFU_RAM=y
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_E1000=y
 CONFIG_PCI=y
 CONFIG_DM_PCI=y
 CONFIG_DM_PCI_COMPAT=y
 CONFIG_PCI_TEGRA=y
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_PWM_TEGRA=y
 CONFIG_SYS_NS16550=y
 CONFIG_USB=y
 CONFIG_DM_USB=y
@@ -45,6 +54,11 @@ CONFIG_USB_STORAGE=y
 CONFIG_USB_GADGET=y
 CONFIG_CI_UDC=y
 CONFIG_USB_GADGET_DOWNLOAD=y
-CONFIG_G_DNL_MANUFACTURER="NVIDIA"
-CONFIG_G_DNL_VENDOR_NUM=0x0955
-CONFIG_G_DNL_PRODUCT_NUM=0x701a
+CONFIG_G_DNL_MANUFACTURER="Toradex"
+CONFIG_G_DNL_VENDOR_NUM=0x1b67
+CONFIG_G_DNL_PRODUCT_NUM=0x4000
+CONFIG_DM_VIDEO=y
+CONFIG_VIDEO_TEGRA20=y
+CONFIG_CONSOLE_SCROLL_LINES=10
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/beaver_defconfig b/configs/beaver_defconfig
index dc326a0..2ea5e23 100644
--- a/configs/beaver_defconfig
+++ b/configs/beaver_defconfig
@@ -37,6 +37,7 @@ CONFIG_DFU_MMC=y
 CONFIG_DFU_RAM=y
 CONFIG_DFU_SF=y
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_SPI_FLASH=y
 CONFIG_SPI_FLASH_WINBOND=y
 CONFIG_RTL8169=y
diff --git a/configs/cardhu_defconfig b/configs/cardhu_defconfig
index 10c74d4..ef46363 100644
--- a/configs/cardhu_defconfig
+++ b/configs/cardhu_defconfig
@@ -32,6 +32,7 @@ CONFIG_CMD_FS_GENERIC=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_SPI_FLASH=y
 CONFIG_SPI_FLASH_WINBOND=y
 CONFIG_RTL8169=y
diff --git a/configs/cei-tk1-som_defconfig b/configs/cei-tk1-som_defconfig
index b7c6d37..dfc780d 100644
--- a/configs/cei-tk1-som_defconfig
+++ b/configs/cei-tk1-som_defconfig
@@ -37,6 +37,7 @@ CONFIG_DFU_MMC=y
 CONFIG_DFU_RAM=y
 CONFIG_DFU_SF=y
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_SPI_FLASH=y
 CONFIG_SPI_FLASH_WINBOND=y
 CONFIG_RTL8169=y
diff --git a/configs/colibri_imx6_defconfig b/configs/colibri_imx6_defconfig
new file mode 100644
index 0000000..bf92628
--- /dev/null
+++ b/configs/colibri_imx6_defconfig
@@ -0,0 +1,55 @@
+CONFIG_ARM=y
+CONFIG_ARCH_MX6=y
+CONFIG_SPL_GPIO_SUPPORT=y
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_TARGET_COLIBRI_IMX6=y
+CONFIG_SPL_I2C_SUPPORT=y
+CONFIG_SPL_MMC_SUPPORT=y
+CONFIG_SPL_SERIAL_SUPPORT=y
+CONFIG_VIDEO=y
+CONFIG_FIT=y
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=arch/arm/imx-common/spl_sd.cfg,MX6DL"
+CONFIG_BOOTDELAY=1
+# CONFIG_CONSOLE_MUX is not set
+# CONFIG_DISPLAY_BOARDINFO is not set
+CONFIG_SPL=y
+CONFIG_SPL_DMA_SUPPORT=y
+CONFIG_SPL_USB_HOST_SUPPORT=y
+CONFIG_SPL_USB_GADGET_SUPPORT=y
+CONFIG_SPL_USB_SDP_SUPPORT=y
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="Colibri iMX6 # "
+CONFIG_CMD_BOOTZ=y
+# CONFIG_CMD_ELF is not set
+# CONFIG_CMD_IMI is not set
+# CONFIG_CMD_IMLS is not set
+# CONFIG_CMD_XIMG is not set
+CONFIG_CMD_ASKENV=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+# CONFIG_CMD_FPGA is not set
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+CONFIG_USB=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_DOWNLOAD=y
+CONFIG_G_DNL_MANUFACTURER="Toradex"
+CONFIG_G_DNL_VENDOR_NUM=0x1b67
+CONFIG_G_DNL_PRODUCT_NUM=0x4000
+CONFIG_OF_LIBFDT=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/colibri_imx6_nospl_defconfig b/configs/colibri_imx6_nospl_defconfig
new file mode 100644
index 0000000..0feeb39
--- /dev/null
+++ b/configs/colibri_imx6_nospl_defconfig
@@ -0,0 +1,44 @@
+CONFIG_ARM=y
+CONFIG_ARCH_MX6=y
+CONFIG_TARGET_COLIBRI_IMX6=y
+CONFIG_VIDEO=y
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/toradex/colibri_imx6/colibri_imx6.cfg,MX6DL,DDR_MB=256"
+CONFIG_BOOTDELAY=1
+# CONFIG_CONSOLE_MUX is not set
+# CONFIG_DISPLAY_BOARDINFO is not set
+CONFIG_HUSH_PARSER=y
+CONFIG_SYS_PROMPT="Colibri iMX6 # "
+CONFIG_CMD_BOOTZ=y
+# CONFIG_CMD_ELF is not set
+# CONFIG_CMD_IMI is not set
+# CONFIG_CMD_IMLS is not set
+# CONFIG_CMD_XIMG is not set
+CONFIG_CMD_ASKENV=y
+CONFIG_CMD_MEMTEST=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_DFU=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+# CONFIG_CMD_FPGA is not set
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_CACHE=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+CONFIG_DM=y
+CONFIG_DM_THERMAL=y
+CONFIG_USB=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_CI_UDC=y
+CONFIG_USB_GADGET_DOWNLOAD=y
+CONFIG_G_DNL_MANUFACTURER="Toradex"
+CONFIG_G_DNL_VENDOR_NUM=0x1b67
+CONFIG_G_DNL_PRODUCT_NUM=0x4000
+CONFIG_OF_LIBFDT=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/colibri_imx7_defconfig b/configs/colibri_imx7_defconfig
index 341c99d..7425500 100644
--- a/configs/colibri_imx7_defconfig
+++ b/configs/colibri_imx7_defconfig
@@ -1,18 +1,19 @@
 CONFIG_ARM=y
 CONFIG_ARCH_MX7=y
 CONFIG_TARGET_COLIBRI_IMX7=y
+CONFIG_ARMV7_BOOT_SEC_DEFAULT=y
 CONFIG_IMX_RDC=y
 CONFIG_IMX_BOOTAUX=y
 CONFIG_VIDEO=y
 CONFIG_DEFAULT_DEVICE_TREE="imx7-colibri"
-CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/toradex/colibri_imx7/imximage.cfg,MX7D"
+CONFIG_FIT=y
+CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/toradex/colibri_imx7/imximage.cfg,MX7D,IMX_NAND"
 CONFIG_BOOTDELAY=1
 # CONFIG_CONSOLE_MUX is not set
 CONFIG_SYS_CONSOLE_IS_IN_ENV=y
 # CONFIG_DISPLAY_BOARDINFO is not set
 CONFIG_HUSH_PARSER=y
 CONFIG_SYS_PROMPT="Colibri iMX7 # "
-# CONFIG_CMD_BOOTD is not set
 CONFIG_CMD_BOOTZ=y
 # CONFIG_CMD_IMI is not set
 # CONFIG_CMD_IMLS is not set
@@ -36,7 +37,6 @@ CONFIG_CMD_FAT=y
 CONFIG_CMD_FS_GENERIC=y
 CONFIG_CMD_UBI=y
 CONFIG_OF_CONTROL=y
-CONFIG_OF_EMBED=y
 CONFIG_DFU_MMC=y
 CONFIG_DM_GPIO=y
 CONFIG_DM_I2C=y
@@ -53,4 +53,6 @@ CONFIG_CI_UDC=y
 CONFIG_USB_GADGET_DOWNLOAD=y
 CONFIG_G_DNL_MANUFACTURER="Toradex"
 CONFIG_G_DNL_VENDOR_NUM=0x1b67
-CONFIG_G_DNL_PRODUCT_NUM=0x4020
+CONFIG_G_DNL_PRODUCT_NUM=0x4000
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/colibri_pxa270_defconfig b/configs/colibri_pxa270_defconfig
index 9a57041..e0a36f1 100644
--- a/configs/colibri_pxa270_defconfig
+++ b/configs/colibri_pxa270_defconfig
@@ -1,19 +1,26 @@
 CONFIG_ARM=y
 CONFIG_TARGET_COLIBRI_PXA270=y
 # CONFIG_DISPLAY_BOARDINFO is not set
-CONFIG_HUSH_PARSER=y
 CONFIG_SYS_PROMPT="$ "
+# CONFIG_CMD_ELF is not set
 # CONFIG_CMD_IMLS is not set
+# CONFIG_CMD_EXPORTENV is not set
+# CONFIG_CMD_IMPORTENV is not set
 # CONFIG_CMD_LOADB is not set
 # CONFIG_CMD_LOADS is not set
 CONFIG_CMD_MMC=y
 CONFIG_CMD_USB=y
+# CONFIG_CMD_FPGA is not set
 # CONFIG_CMD_SETEXPR is not set
 CONFIG_CMD_DHCP=y
 CONFIG_CMD_PING=y
 CONFIG_CMD_EXT2=y
 CONFIG_CMD_FAT=y
+CONFIG_DM=y
+CONFIG_DM_SERIAL=y
+CONFIG_PXA_SERIAL=y
 CONFIG_USB=y
 CONFIG_USB_STORAGE=y
+# CONFIG_REGEX is not set
 CONFIG_OF_LIBFDT=y
 # CONFIG_EFI_LOADER is not set
diff --git a/configs/colibri_t20_defconfig b/configs/colibri_t20_defconfig
index 5f95e3e..f5cbea2 100644
--- a/configs/colibri_t20_defconfig
+++ b/configs/colibri_t20_defconfig
@@ -3,13 +3,19 @@ CONFIG_TEGRA=y
 CONFIG_TEGRA20=y
 CONFIG_TARGET_COLIBRI_T20=y
 CONFIG_DEFAULT_DEVICE_TREE="tegra20-colibri"
+CONFIG_FIT=y
 CONFIG_OF_SYSTEM_SETUP=y
+CONFIG_BOOTDELAY=1
 CONFIG_SYS_STDIO_DEREGISTER=y
+CONFIG_VERSION_VARIABLE=y
+# CONFIG_DISPLAY_BOARDINFO is not set
 CONFIG_HUSH_PARSER=y
 CONFIG_SYS_PROMPT="Colibri T20 # "
 CONFIG_CMD_BOOTZ=y
 # CONFIG_CMD_IMI is not set
 # CONFIG_CMD_IMLS is not set
+CONFIG_CMD_ASKENV=y
+CONFIG_CMD_MEMTEST=y
 # CONFIG_CMD_FLASH is not set
 CONFIG_CMD_MMC=y
 CONFIG_CMD_I2C=y
@@ -34,8 +40,10 @@ CONFIG_CMD_UBI=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 CONFIG_DFU_MMC=y
+CONFIG_DFU_NAND=y
 CONFIG_DFU_RAM=y
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_MTD_UBI_FASTMAP=y
 CONFIG_DM_PMIC=y
 CONFIG_DM_REGULATOR=y
@@ -50,9 +58,11 @@ CONFIG_USB_STORAGE=y
 CONFIG_USB_GADGET=y
 CONFIG_CI_UDC=y
 CONFIG_USB_GADGET_DOWNLOAD=y
-CONFIG_G_DNL_MANUFACTURER="NVIDIA"
-CONFIG_G_DNL_VENDOR_NUM=0x0955
-CONFIG_G_DNL_PRODUCT_NUM=0x701a
+CONFIG_G_DNL_MANUFACTURER="Toradex"
+CONFIG_G_DNL_VENDOR_NUM=0x1b67
+CONFIG_G_DNL_PRODUCT_NUM=0x4000
 CONFIG_DM_VIDEO=y
 CONFIG_VIDEO_TEGRA20=y
 CONFIG_CONSOLE_SCROLL_LINES=10
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/colibri_t30_defconfig b/configs/colibri_t30_defconfig
index de00afe..e99b148 100644
--- a/configs/colibri_t30_defconfig
+++ b/configs/colibri_t30_defconfig
@@ -3,14 +3,19 @@ CONFIG_TEGRA=y
 CONFIG_TEGRA30=y
 CONFIG_TARGET_COLIBRI_T30=y
 CONFIG_DEFAULT_DEVICE_TREE="tegra30-colibri"
+CONFIG_FIT=y
 CONFIG_OF_SYSTEM_SETUP=y
-CONFIG_CONSOLE_MUX=y
+CONFIG_BOOTDELAY=1
 CONFIG_SYS_STDIO_DEREGISTER=y
+CONFIG_VERSION_VARIABLE=y
+# CONFIG_DISPLAY_BOARDINFO is not set
 CONFIG_HUSH_PARSER=y
 CONFIG_SYS_PROMPT="Colibri T30 # "
 CONFIG_CMD_BOOTZ=y
 # CONFIG_CMD_IMI is not set
 # CONFIG_CMD_IMLS is not set
+CONFIG_CMD_ASKENV=y
+CONFIG_CMD_MEMTEST=y
 # CONFIG_CMD_FLASH is not set
 CONFIG_CMD_MMC=y
 CONFIG_CMD_I2C=y
@@ -33,6 +38,10 @@ CONFIG_SPL_DM=y
 CONFIG_DFU_MMC=y
 CONFIG_DFU_RAM=y
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_PWM_TEGRA=y
 CONFIG_SYS_NS16550=y
 CONFIG_USB=y
 CONFIG_DM_USB=y
@@ -40,6 +49,11 @@ CONFIG_USB_STORAGE=y
 CONFIG_USB_GADGET=y
 CONFIG_CI_UDC=y
 CONFIG_USB_GADGET_DOWNLOAD=y
-CONFIG_G_DNL_MANUFACTURER="NVIDIA"
-CONFIG_G_DNL_VENDOR_NUM=0x0955
-CONFIG_G_DNL_PRODUCT_NUM=0x701a
+CONFIG_G_DNL_MANUFACTURER="Toradex"
+CONFIG_G_DNL_VENDOR_NUM=0x1b67
+CONFIG_G_DNL_PRODUCT_NUM=0x4000
+CONFIG_DM_VIDEO=y
+CONFIG_VIDEO_TEGRA20=y
+CONFIG_CONSOLE_SCROLL_LINES=10
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/colibri_vf_defconfig b/configs/colibri_vf_defconfig
index 1020e44..cf2d87a 100644
--- a/configs/colibri_vf_defconfig
+++ b/configs/colibri_vf_defconfig
@@ -1,9 +1,12 @@
 CONFIG_ARM=y
 CONFIG_TARGET_COLIBRI_VF=y
+CONFIG_DM_SERIAL=y
 CONFIG_DEFAULT_DEVICE_TREE="vf610-colibri"
+CONFIG_FIT=y
 CONFIG_SYS_EXTRA_OPTIONS="IMX_CONFIG=board/toradex/colibri_vf/imximage.cfg,ENV_IS_IN_NAND,IMX_NAND"
 CONFIG_BOOTDELAY=1
 CONFIG_VERSION_VARIABLE=y
+# CONFIG_DISPLAY_BOARDINFO is not set
 CONFIG_HUSH_PARSER=y
 CONFIG_SYS_PROMPT="Colibri VFxx # "
 CONFIG_CMD_BOOTZ=y
@@ -33,7 +36,6 @@ CONFIG_VYBRID_GPIO=y
 CONFIG_NAND_VF610_NFC=y
 CONFIG_SYS_NAND_VF610_NFC_60_ECC_BYTES=y
 CONFIG_MTD_UBI_FASTMAP=y
-CONFIG_DM_SERIAL=y
 CONFIG_FSL_LPUART=y
 CONFIG_DM_SPI=y
 CONFIG_FSL_DSPI=y
@@ -45,4 +47,6 @@ CONFIG_CI_UDC=y
 CONFIG_USB_GADGET_DOWNLOAD=y
 CONFIG_G_DNL_MANUFACTURER="Toradex"
 CONFIG_G_DNL_VENDOR_NUM=0x1b67
-CONFIG_G_DNL_PRODUCT_NUM=0x0016
+CONFIG_G_DNL_PRODUCT_NUM=0x4000
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_EFI_LOADER is not set
diff --git a/configs/dalmore_defconfig b/configs/dalmore_defconfig
index 0a17ca4..c7f9b65 100644
--- a/configs/dalmore_defconfig
+++ b/configs/dalmore_defconfig
@@ -37,6 +37,7 @@ CONFIG_DFU_MMC=y
 CONFIG_DFU_RAM=y
 CONFIG_DFU_SF=y
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_SPI_FLASH=y
 CONFIG_SPI_FLASH_WINBOND=y
 CONFIG_SYS_NS16550=y
diff --git a/configs/h2200_defconfig b/configs/h2200_defconfig
index c1b359e..a47159a 100644
--- a/configs/h2200_defconfig
+++ b/configs/h2200_defconfig
@@ -24,3 +24,4 @@ CONFIG_SYS_PROMPT="> "
 # CONFIG_CMD_NFS is not set
 CONFIG_CMD_PING=y
 # CONFIG_CMD_MISC is not set
+CONFIG_PXA_SERIAL=y
diff --git a/configs/harmony_defconfig b/configs/harmony_defconfig
index 8f490da..281fbc6 100644
--- a/configs/harmony_defconfig
+++ b/configs/harmony_defconfig
@@ -30,6 +30,7 @@ CONFIG_CMD_FS_GENERIC=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_PCI=y
 CONFIG_DM_PCI=y
 CONFIG_DM_PCI_COMPAT=y
diff --git a/configs/jetson-tk1_defconfig b/configs/jetson-tk1_defconfig
index e24d1d0..6e31024 100644
--- a/configs/jetson-tk1_defconfig
+++ b/configs/jetson-tk1_defconfig
@@ -37,6 +37,7 @@ CONFIG_DFU_MMC=y
 CONFIG_DFU_RAM=y
 CONFIG_DFU_SF=y
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_SPI_FLASH=y
 CONFIG_SPI_FLASH_WINBOND=y
 CONFIG_RTL8169=y
diff --git a/configs/medcom-wide_defconfig b/configs/medcom-wide_defconfig
index c3caebb..5c9ac30 100644
--- a/configs/medcom-wide_defconfig
+++ b/configs/medcom-wide_defconfig
@@ -31,6 +31,7 @@ CONFIG_CMD_FS_GENERIC=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_DM_PMIC=y
 CONFIG_DM_REGULATOR=y
 CONFIG_DM_REGULATOR_FIXED=y
diff --git a/configs/nyan-big_defconfig b/configs/nyan-big_defconfig
index ae3f84c..0f11516 100644
--- a/configs/nyan-big_defconfig
+++ b/configs/nyan-big_defconfig
@@ -45,6 +45,7 @@ CONFIG_CROS_EC_KEYB=y
 CONFIG_CROS_EC=y
 CONFIG_CROS_EC_SPI=y
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_SPI_FLASH=y
 CONFIG_SPI_FLASH_WINBOND=y
 CONFIG_DM_PMIC=y
diff --git a/configs/paz00_defconfig b/configs/paz00_defconfig
index be87087..3781d95 100644
--- a/configs/paz00_defconfig
+++ b/configs/paz00_defconfig
@@ -30,6 +30,7 @@ CONFIG_CMD_FS_GENERIC=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_DM_PMIC=y
 CONFIG_DM_REGULATOR=y
 CONFIG_DM_REGULATOR_FIXED=y
diff --git a/configs/plutux_defconfig b/configs/plutux_defconfig
index 5285481..0467ea1 100644
--- a/configs/plutux_defconfig
+++ b/configs/plutux_defconfig
@@ -30,6 +30,7 @@ CONFIG_CMD_FS_GENERIC=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_SYS_NS16550=y
 CONFIG_USB=y
 CONFIG_DM_USB=y
diff --git a/configs/seaboard_defconfig b/configs/seaboard_defconfig
index 34947a8..caff0a7 100644
--- a/configs/seaboard_defconfig
+++ b/configs/seaboard_defconfig
@@ -30,6 +30,7 @@ CONFIG_CMD_FS_GENERIC=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_DM_PMIC=y
 CONFIG_DM_REGULATOR=y
 CONFIG_DM_REGULATOR_FIXED=y
diff --git a/configs/tec-ng_defconfig b/configs/tec-ng_defconfig
index f830389..e306a9a 100644
--- a/configs/tec-ng_defconfig
+++ b/configs/tec-ng_defconfig
@@ -33,6 +33,7 @@ CONFIG_CMD_FS_GENERIC=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_SPI_FLASH=y
 CONFIG_SPI_FLASH_WINBOND=y
 CONFIG_SYS_NS16550=y
diff --git a/configs/tec_defconfig b/configs/tec_defconfig
index 40c96eb..a6609a9 100644
--- a/configs/tec_defconfig
+++ b/configs/tec_defconfig
@@ -31,6 +31,7 @@ CONFIG_CMD_FS_GENERIC=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_DM_PMIC=y
 CONFIG_DM_REGULATOR=y
 CONFIG_DM_REGULATOR_FIXED=y
diff --git a/configs/trimslice_defconfig b/configs/trimslice_defconfig
index cc209a9..5e6bd0e 100644
--- a/configs/trimslice_defconfig
+++ b/configs/trimslice_defconfig
@@ -32,6 +32,7 @@ CONFIG_CMD_FS_GENERIC=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_SPI_FLASH=y
 CONFIG_SPI_FLASH_WINBOND=y
 CONFIG_RTL8169=y
diff --git a/configs/venice2_defconfig b/configs/venice2_defconfig
index 01f3c17..9a7eb0f 100644
--- a/configs/venice2_defconfig
+++ b/configs/venice2_defconfig
@@ -37,6 +37,7 @@ CONFIG_DFU_MMC=y
 CONFIG_DFU_RAM=y
 CONFIG_DFU_SF=y
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_SPI_FLASH=y
 CONFIG_SPI_FLASH_WINBOND=y
 CONFIG_SYS_NS16550=y
diff --git a/configs/ventana_defconfig b/configs/ventana_defconfig
index c86c0d9..d63aeb7 100644
--- a/configs/ventana_defconfig
+++ b/configs/ventana_defconfig
@@ -29,6 +29,7 @@ CONFIG_CMD_FS_GENERIC=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_DM_PMIC=y
 CONFIG_DM_REGULATOR=y
 CONFIG_DM_REGULATOR_FIXED=y
diff --git a/configs/whistler_defconfig b/configs/whistler_defconfig
index 2c83661..369ce37 100644
--- a/configs/whistler_defconfig
+++ b/configs/whistler_defconfig
@@ -30,6 +30,7 @@ CONFIG_CMD_FS_GENERIC=y
 CONFIG_SPL_DM=y
 # CONFIG_BLK is not set
 # CONFIG_DM_MMC_OPS is not set
+CONFIG_TEGRA_MMC=y
 CONFIG_SYS_NS16550=y
 CONFIG_USB=y
 CONFIG_DM_USB=y
diff --git a/configs/zipitz2_defconfig b/configs/zipitz2_defconfig
index 8eb9be4..5846579 100644
--- a/configs/zipitz2_defconfig
+++ b/configs/zipitz2_defconfig
@@ -14,6 +14,7 @@ CONFIG_CMD_USB=y
 CONFIG_CMD_CACHE=y
 CONFIG_CMD_EXT2=y
 CONFIG_CMD_FAT=y
+CONFIG_PXA_SERIAL=y
 CONFIG_USB=y
 CONFIG_USB_STORAGE=y
 CONFIG_LCD=y
diff --git a/drivers/Makefile b/drivers/Makefile
index 761d0b3..c19fa14 100644
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -33,7 +33,9 @@ obj-$(CONFIG_SPL_ETH_SUPPORT) += net/
 obj-$(CONFIG_SPL_ETH_SUPPORT) += net/phy/
 obj-$(CONFIG_SPL_USBETH_SUPPORT) += net/phy/
 obj-$(CONFIG_SPL_MUSB_NEW_SUPPORT) += usb/musb-new/
-obj-$(CONFIG_SPL_USBETH_SUPPORT) += usb/gadget/
+obj-$(CONFIG_SPL_USB_GADGET_SUPPORT) += usb/gadget/
+obj-$(CONFIG_SPL_USB_GADGET_SUPPORT) += usb/gadget/udc/
+obj-$(CONFIG_SPL_DFU_SUPPORT) += dfu/
 obj-$(CONFIG_SPL_WATCHDOG_SUPPORT) += watchdog/
 obj-$(CONFIG_SPL_USB_HOST_SUPPORT) += usb/host/
 obj-$(CONFIG_OMAP_USB_PHY) += usb/phy/
diff --git a/drivers/mmc/Kconfig b/drivers/mmc/Kconfig
index 24f4b28..2c71420 100644
--- a/drivers/mmc/Kconfig
+++ b/drivers/mmc/Kconfig
@@ -95,4 +95,18 @@ config SANDBOX_MMC
 	  improves build coverage for sandbox and makes it easier to detect
 	  MMC build errors with sandbox.
 
+config TEGRA_MMC
+	bool "Tegra SDHCI aka MMC support"
+	depends on DM_MMC && TEGRA
+	help
+	  This selects support for SDHCI on Tegra SoCs.
+
+config TEGRA124_MMC_DISABLE_EXT_LOOPBACK
+	bool "Disable external clock loopback"
+	depends on TEGRA_MMC && TEGRA124
+	help
+	  Disable the external clock loopback and use the internal one on SDMMC3
+	  as per the SDMMC_VENDOR_MISC_CNTRL_0 register's SDMMC_SPARE1 bits
+	  being set to 0xfffd according to the TRM.
+
 endmenu
diff --git a/drivers/mmc/tegra_mmc.c b/drivers/mmc/tegra_mmc.c
index 97b1154..ed02708 100644
--- a/drivers/mmc/tegra_mmc.c
+++ b/drivers/mmc/tegra_mmc.c
@@ -511,6 +511,19 @@ static int tegra_mmc_init(struct mmc *mmc)
 
 	tegra_mmc_reset(priv, mmc);
 
+#if defined(CONFIG_TEGRA124_MMC_DISABLE_EXT_LOOPBACK)
+	/*
+	 * Disable the external clock loopback and use the internal one on
+	 * SDMMC3 as per the SDMMC_VENDOR_MISC_CNTRL_0 register's SDMMC_SPARE1
+	 * bits being set to 0xfffd according to the TRM.
+	 */
+	if (priv->reg == (void *)0x700b0400) {
+		mask = readl(&priv->reg->venmiscctl);
+		mask &= ~TEGRA_MMC_MISCON_ENABLE_EXT_LOOPBACK;
+		writel(mask, &priv->reg->venmiscctl);
+	}
+#endif
+
 	priv->version = readw(&priv->reg->hcver);
 	debug("host version = %x\n", priv->version);
 
diff --git a/drivers/mtd/nand/mxs_nand.c b/drivers/mtd/nand/mxs_nand.c
index 9200544..ef571b4 100644
--- a/drivers/mtd/nand/mxs_nand.c
+++ b/drivers/mtd/nand/mxs_nand.c
@@ -7,7 +7,7 @@
  * Based on code from LTIB:
  * Freescale GPMI NFC NAND Flash Driver
  *
- * Copyright (C) 2010 Freescale Semiconductor, Inc.
+ * Copyright (C) 2010-2016 Freescale Semiconductor, Inc.
  * Copyright (C) 2008 Embedded Alley Solutions, Inc.
  *
  * SPDX-License-Identifier:	GPL-2.0+
@@ -46,6 +46,11 @@
 
 #define	MXS_NAND_BCH_TIMEOUT			10000
 
+int bbm_chunk;
+int ecc_strength;
+bool large_oob_flag;
+bool ecc_for_meta;
+
 struct mxs_nand_info {
 	int		cur_chip;
 
@@ -137,7 +142,8 @@ static void mxs_nand_return_dma_descs(struct mxs_nand_info *info)
 
 static uint32_t mxs_nand_ecc_chunk_cnt(uint32_t page_data_size)
 {
-	return page_data_size / chunk_data_size;
+	int tmp = page_data_size / chunk_data_size;
+	return ecc_for_meta ? tmp + 1 : tmp;
 }
 
 static uint32_t mxs_nand_ecc_size_in_bits(uint32_t ecc_strength)
@@ -150,10 +156,50 @@ static uint32_t mxs_nand_aux_status_offset(void)
 	return (MXS_NAND_METADATA_SIZE + 0x3) & ~0x3;
 }
 
-static inline uint32_t mxs_nand_get_ecc_strength(uint32_t page_data_size,
-						uint32_t page_oob_size)
+/*
+ * For some large oob NAND chip( the oob larger than data chunk), combined meta
+ * with chunk0 style bch layout might override the bbm with ecc data. The
+ * function checked if bbm can be in the data chunk. If it is true, chunk_num
+ * indicate the chunk number that bbm located.
+ *
+ */
+static bool mxs_nand_bbm_in_data_chunk(struct mtd_info *mtd, int gf_len,
+		int *chunk_num)
+{
+	int i, j;
+	int meta = MXS_NAND_METADATA_SIZE;
+
+	i = (mtd->writesize * 8 - meta * 8) /
+		(gf_len * ecc_strength +
+		chunk_data_size * 8);
+
+	j = (mtd->writesize * 8 - meta * 8) %
+		(gf_len * ecc_strength +
+		chunk_data_size * 8);
+
+	if (j < chunk_data_size * 8) {
+		*chunk_num = i+1;
+		return true;
+       }
+
+	return false;
+}
+
+/*
+ * the work flow about how to set the ecc layout
+ *
+ * 1. if ecc_strength_ds>max_soc_ecc, quit
+ * 2. if ecc_strength_ds>0 and ecc_stride_ds>0,
+ *         if ecc_stride_ds > oob, go to large_oob branch
+ *         else go to normal branch
+ * 3. if either ecc_stride_ds<=0 or ecc_stride_ds<=0, quit
+ *
+ */
+static int mxs_nand_get_ecc_strength(struct mtd_info *mtd)
 {
-	int ecc_strength;
+	struct nand_chip *chip = mtd_to_nand(mtd);
+	uint32_t page_oob_size = mtd->oobsize;
+	int meta = MXS_NAND_METADATA_SIZE;
 	int max_ecc_strength_supported;
 
 	/* Refer to Chapter 17 for i.MX6DQ, Chapter 18 for i.MX6SX */
@@ -162,20 +208,61 @@ static inline uint32_t mxs_nand_get_ecc_strength(uint32_t page_data_size,
 	else
 		max_ecc_strength_supported = 40;
 
-	/*
-	 * Determine the ECC layout with the formula:
-	 *	ECC bits per chunk = (total page spare data bits) /
-	 *		(bits per ECC level) / (chunks per page)
-	 * where:
-	 *	total page spare data bits =
-	 *		(page oob size - meta data size) * (bits per byte)
-	 */
-	ecc_strength = ((page_oob_size - MXS_NAND_METADATA_SIZE) * 8)
-			/ (galois_field *
-			   mxs_nand_ecc_chunk_cnt(page_data_size));
+	if (chip->ecc_strength_ds > max_ecc_strength_supported) {
+		printf("cannot support the NAND, ecc too weak\n");
+		return -EINVAL;
+	}
 
-	return min(round_down(ecc_strength, 2), max_ecc_strength_supported);
-}
+	if (!(chip->ecc_strength_ds > 0 && chip->ecc_step_ds > 0) &&
+			!(page_oob_size > 1024)) {
+		printf("cannot support the NAND, missing necessary info\n");
+		return -EINVAL;
+	}
+
+	/* set some parameters according to NAND chip parameters */
+	chunk_data_size = chip->ecc_step_ds;
+	if (1024 == chunk_data_size)
+		galois_field = 14;
+	if (chunk_data_size < page_oob_size)
+		large_oob_flag = true;
+
+	if (large_oob_flag) {
+		/* start from the minimum ecc NAND chips required */
+		ecc_strength = chip->ecc_strength_ds;
+		while (!(ecc_strength > max_ecc_strength_supported)) {
+			if (mxs_nand_bbm_in_data_chunk(mtd,
+						galois_field,
+						&bbm_chunk))
+				break;
+			ecc_strength += 2;
+		}
+		/*
+		 * if all supported ecc cannot satisfy the bbm
+		 * requirement, change * the ecc layout to meta
+		 * with ecc type.
+		 *
+		 */
+		if (ecc_strength > max_ecc_strength_supported) {
+			ecc_strength = chip->ecc_strength_ds;
+			ecc_for_meta = true;
+			/* calculate in which chunk bbm located */
+			bbm_chunk = (mtd->writesize * 8 - meta * 8 -
+				galois_field * ecc_strength) /
+				(galois_field * ecc_strength +
+				chunk_data_size * 8) + 1;
+		}
+	} else {
+		ecc_strength = chip->ecc_strength_ds;
+		ecc_strength += ecc_strength & 1;
+#if defined(CONFIG_NAND_MXS_BCH_LEGACY_GEO)
+		ecc_strength = ((page_oob_size - MXS_NAND_METADATA_SIZE) * 8)
+			/(galois_field * mxs_nand_ecc_chunk_cnt(mtd->writesize));
+		ecc_strength += ecc_strength & 1;
+		ecc_strength = min(ecc_strength, MXS_NAND_MAX_ECC_STRENGTH);
+#endif
+	}
+	return 0;
+};
 
 static inline uint32_t mxs_nand_get_mark_offset(uint32_t page_data_size,
 						uint32_t ecc_strength)
@@ -196,8 +283,13 @@ static inline uint32_t mxs_nand_get_mark_offset(uint32_t page_data_size,
 	/* Compute the bit offset of the block mark within the physical page. */
 	block_mark_bit_offset = page_data_size * 8;
 
-	/* Subtract the metadata bits. */
-	block_mark_bit_offset -= MXS_NAND_METADATA_SIZE * 8;
+	if (ecc_for_meta)
+		/* Subtract the metadata bits and ecc bits. */
+		block_mark_bit_offset -= MXS_NAND_METADATA_SIZE * 8
+					+ chunk_ecc_size_in_bits;
+	else
+		/* Subtract the metadata bits. */
+		block_mark_bit_offset -= MXS_NAND_METADATA_SIZE * 8;
 
 	/*
 	 * Compute the chunk number (starting at zero) in which the block mark
@@ -228,15 +320,11 @@ static inline uint32_t mxs_nand_get_mark_offset(uint32_t page_data_size,
 
 static uint32_t mxs_nand_mark_byte_offset(struct mtd_info *mtd)
 {
-	uint32_t ecc_strength;
-	ecc_strength = mxs_nand_get_ecc_strength(mtd->writesize, mtd->oobsize);
 	return mxs_nand_get_mark_offset(mtd->writesize, ecc_strength) >> 3;
 }
 
 static uint32_t mxs_nand_mark_bit_offset(struct mtd_info *mtd)
 {
-	uint32_t ecc_strength;
-	ecc_strength = mxs_nand_get_ecc_strength(mtd->writesize, mtd->oobsize);
 	return mxs_nand_get_mark_offset(mtd->writesize, ecc_strength) & 0x7;
 }
 
@@ -557,6 +645,45 @@ static uint8_t mxs_nand_read_byte(struct mtd_info *mtd)
 	return buf;
 }
 
+static bool mxs_nand_erased_page(struct mtd_info *mtd, struct nand_chip *nand,
+				 uint8_t *buf, int chunk, int page)
+{
+	int gf_len = galois_field;
+	unsigned int flip_bits = 0, flip_bits_noecc = 0;
+	unsigned int threshold;
+	unsigned int ecc_chunkn_size = MXS_NAND_CHUNK_DATA_CHUNK_SIZE;
+	unsigned int base = ecc_chunkn_size * chunk;
+	uint32_t *dma_buf = (uint32_t *)buf;
+	int i;
+
+	threshold = gf_len / 2;
+	if (threshold > ecc_strength)
+		threshold = ecc_strength;
+
+	for (i = 0; i < ecc_chunkn_size; i++) {
+		flip_bits += hweight8(~buf[base + i]);
+		if (flip_bits > threshold)
+			return false;
+	}
+
+	nand->cmdfunc(mtd, NAND_CMD_READ0, 0, page);
+	nand->read_buf(mtd, buf, mtd->writesize);
+
+	for (i = 0; i < mtd->writesize / 4; i++) {
+		flip_bits_noecc += hweight32(~dma_buf[i]);
+		if (flip_bits_noecc > threshold)
+			return false;
+	}
+
+	mtd->ecc_stats.corrected += flip_bits;
+
+	memset(buf, 0xff, mtd->writesize);
+
+	printf("The page(%d) is an erased page(%d,%d,%d,%d).\n", page, chunk, threshold, flip_bits, flip_bits_noecc);
+
+	return true;
+}
+
 /*
  * Read a page from NAND.
  */
@@ -566,10 +693,12 @@ static int mxs_nand_ecc_read_page(struct mtd_info *mtd, struct nand_chip *nand,
 {
 	struct mxs_nand_info *nand_info = nand_get_controller_data(nand);
 	struct mxs_dma_desc *d;
+	struct mxs_bch_regs *bch_regs = (struct mxs_bch_regs *)MXS_BCH_BASE;
 	uint32_t channel = MXS_DMA_CHANNEL_AHB_APBH_GPMI0 + nand_info->cur_chip;
 	uint32_t corrected = 0, failed = 0;
 	uint8_t	*status;
 	int i, ret;
+	int flag = 0;
 
 	/* Compile the DMA descriptor - wait for ready. */
 	d = mxs_nand_get_dma_desc(nand_info);
@@ -659,6 +788,8 @@ static int mxs_nand_ecc_read_page(struct mtd_info *mtd, struct nand_chip *nand,
 		goto rtn;
 	}
 
+	mxs_nand_return_dma_descs(nand_info);
+
 	/* Invalidate caches */
 	mxs_nand_inval_data_buf(nand_info);
 
@@ -671,10 +802,18 @@ static int mxs_nand_ecc_read_page(struct mtd_info *mtd, struct nand_chip *nand,
 		if (status[i] == 0x00)
 			continue;
 
-		if (status[i] == 0xff)
+		if (status[i] == 0xff) {
+			if (is_mx6dqp() || is_soc_type(MXC_SOC_MX7) ||
+			    is_cpu_type(MXC_CPU_MX6UL))
+				if (readl(&bch_regs->hw_bch_debug1))
+					flag = 1;
 			continue;
+		}
 
 		if (status[i] == 0xfe) {
+			if (mxs_nand_erased_page(mtd, nand,
+						 nand_info->data_buf, i, page))
+				break;
 			failed++;
 			continue;
 		}
@@ -701,6 +840,9 @@ static int mxs_nand_ecc_read_page(struct mtd_info *mtd, struct nand_chip *nand,
 
 	memcpy(buf, nand_info->data_buf, mtd->writesize);
 
+	if (flag)
+		memset(buf, 0xff, mtd->writesize);
+
 rtn:
 	mxs_nand_return_dma_descs(nand_info);
 
@@ -992,15 +1134,8 @@ static int mxs_nand_scan_bbt(struct mtd_info *mtd)
 	struct mxs_bch_regs *bch_regs = (struct mxs_bch_regs *)MXS_BCH_BASE;
 	uint32_t tmp;
 
-	if (mtd->oobsize > MXS_NAND_CHUNK_DATA_CHUNK_SIZE) {
-		galois_field = 14;
-		chunk_data_size = MXS_NAND_CHUNK_DATA_CHUNK_SIZE * 2;
-	}
-
-	if (mtd->oobsize > chunk_data_size) {
-		printf("Not support the NAND chips whose oob size is larger then %d bytes!\n", chunk_data_size);
-		return -EINVAL;
-	}
+	/* calculate ecc_strength, bbm_chunk, eec_for meta, if necessary */
+	mxs_nand_get_ecc_strength(mtd);
 
 	/* Configure BCH and set NFC geometry */
 	mxs_reset_block(&bch_regs->hw_bch_ctrl_reg);
@@ -1009,22 +1144,33 @@ static int mxs_nand_scan_bbt(struct mtd_info *mtd)
 	tmp = (mxs_nand_ecc_chunk_cnt(mtd->writesize) - 1)
 		<< BCH_FLASHLAYOUT0_NBLOCKS_OFFSET;
 	tmp |= MXS_NAND_METADATA_SIZE << BCH_FLASHLAYOUT0_META_SIZE_OFFSET;
-	tmp |= (mxs_nand_get_ecc_strength(mtd->writesize, mtd->oobsize) >> 1)
+	tmp |= (ecc_strength >> 1)
 		<< BCH_FLASHLAYOUT0_ECC0_OFFSET;
-	tmp |= chunk_data_size >> MXS_NAND_CHUNK_DATA_CHUNK_SIZE_SHIFT;
-	tmp |= (14 == galois_field ? 1 : 0) <<
-		BCH_FLASHLAYOUT0_GF13_0_GF14_1_OFFSET;
+	if (!ecc_for_meta)
+		tmp |= chunk_data_size
+			>> MXS_NAND_CHUNK_DATA_CHUNK_SIZE_SHIFT;
+	else
+		/* set data0 size as 0 */
+		tmp &= ~BCH_FLASHLAYOUT0_DATA0_SIZE_MASK;
+	tmp |= (14 == galois_field ? 1 : 0)
+		<< BCH_FLASHLAYOUT0_GF13_0_GF14_1_OFFSET;
 	writel(tmp, &bch_regs->hw_bch_flash0layout0);
 
 	tmp = (mtd->writesize + mtd->oobsize)
 		<< BCH_FLASHLAYOUT1_PAGE_SIZE_OFFSET;
-	tmp |= (mxs_nand_get_ecc_strength(mtd->writesize, mtd->oobsize) >> 1)
+	tmp |= (ecc_strength >> 1)
 		<< BCH_FLASHLAYOUT1_ECCN_OFFSET;
 	tmp |= chunk_data_size >> MXS_NAND_CHUNK_DATA_CHUNK_SIZE_SHIFT;
 	tmp |= (14 == galois_field ? 1 : 0) <<
 		BCH_FLASHLAYOUT1_GF13_0_GF14_1_OFFSET;
 	writel(tmp, &bch_regs->hw_bch_flash0layout1);
 
+	/* Set erase threshold to ecc strength for mx6ul, mx6qp and mx7 */
+	if (is_mx6dqp() || is_soc_type(MXC_SOC_MX7) ||
+	    is_cpu_type(MXC_CPU_MX6UL))
+		writel(BCH_MODE_ERASE_THRESHOLD(ecc_strength),
+		       &bch_regs->hw_bch_mode);
+
 	/* Set *all* chip selects to use layout 0 */
 	writel(0, &bch_regs->hw_bch_layoutselect);
 
@@ -1181,7 +1327,7 @@ int board_nand_init(struct nand_chip *nand)
 	memset(&fake_ecc_layout, 0, sizeof(fake_ecc_layout));
 
 	nand_set_controller_data(nand, nand_info);
-	nand->options |= NAND_NO_SUBPAGE_WRITE;
+	nand->options |= NAND_NO_SUBPAGE_WRITE | NAND_NEED_BBTSCAN;
 
 	nand->cmd_ctrl		= mxs_nand_cmd_ctrl;
 
diff --git a/drivers/mtd/nand/nand_base.c b/drivers/mtd/nand/nand_base.c
index d9e5fc9..9d1ab57 100644
--- a/drivers/mtd/nand/nand_base.c
+++ b/drivers/mtd/nand/nand_base.c
@@ -4216,6 +4216,11 @@ int nand_scan_tail(struct mtd_info *mtd)
 	if (!mtd->bitflip_threshold)
 		mtd->bitflip_threshold = DIV_ROUND_UP(mtd->ecc_strength * 3, 4);
 
+	if (chip->options & NAND_NEED_BBTSCAN) {
+		chip->options |= NAND_BBT_SCANNED;
+		return chip->scan_bbt(mtd);
+	}
+
 	return 0;
 }
 EXPORT_SYMBOL(nand_scan_tail);
diff --git a/drivers/mtd/nand/tegra_nand.c b/drivers/mtd/nand/tegra_nand.c
index 5c9b485..e6dbdbb 100644
--- a/drivers/mtd/nand/tegra_nand.c
+++ b/drivers/mtd/nand/tegra_nand.c
@@ -539,18 +539,14 @@ static int nand_rw_page(struct mtd_info *mtd, struct nand_chip *chip,
 			       chip->ecc.layout->oobavail + TAG_ECC_BYTES);
 		tag_size = chip->ecc.layout->oobavail + TAG_ECC_BYTES;
 		reg_val |= (CFG_SKIP_SPARE_SEL_4
-			| CFG_SKIP_SPARE_ENABLE
-			| CFG_HW_ECC_CORRECTION_ENABLE
-			| CFG_ECC_EN_TAG_DISABLE
-			| CFG_HW_ECC_SEL_RS
-			| CFG_HW_ECC_ENABLE
-			| CFG_TVAL4
-			| (tag_size - 1));
+			| CFG_SKIP_SPARE_ENABLE);
 
 		if (!is_writing)
 			tag_size += SKIPPED_SPARE_BYTES;
 		bounce_buffer_start(&bbstate_oob, (void *)tag_ptr, tag_size,
 				    bbflags);
+		writel(virt_to_phys(bbstate_oob.bounce_buffer), &info->reg->tag_ptr);
+		writel(BCH_CONFIG_BCH_TVAL16 | BCH_CONFIG_BCH_ECC_ENABLE, &info->reg->bch_config);
 	} else {
 		tag_size = mtd->oobsize;
 		reg_val |= (CFG_SKIP_SPARE_DISABLE
@@ -560,10 +556,10 @@ static int nand_rw_page(struct mtd_info *mtd, struct nand_chip *chip,
 			| (tag_size - 1));
 		bounce_buffer_start(&bbstate_oob, (void *)chip->oob_poi,
 				    tag_size, bbflags);
+		writel(virt_to_phys(bbstate_oob.bounce_buffer), &info->reg->tag_ptr);
+		writel(BCH_CONFIG_BCH_ECC_DISABLE, &info->reg->bch_config);
 	}
 	writel(reg_val, &info->reg->config);
-	writel(virt_to_phys(bbstate_oob.bounce_buffer), &info->reg->tag_ptr);
-	writel(BCH_CONFIG_BCH_ECC_DISABLE, &info->reg->bch_config);
 	writel(tag_size - 1, &info->reg->dma_cfg_b);
 
 	nand_clear_interrupt_status(info->reg);
@@ -572,7 +568,7 @@ static int nand_rw_page(struct mtd_info *mtd, struct nand_chip *chip,
 		| CMD_SEC_CMD
 		| (CMD_ALE_BYTES5 << CMD_ALE_BYTE_SIZE_SHIFT)
 		| CMD_A_VALID
-		| CMD_B_VALID
+		| (with_ecc ? 0 : CMD_B_VALID)
 		| (CMD_TRANS_SIZE_PAGE << CMD_TRANS_SIZE_SHIFT)
 		| CMD_CE0;
 	if (!is_writing)
@@ -585,7 +581,7 @@ static int nand_rw_page(struct mtd_info *mtd, struct nand_chip *chip,
 	reg_val = DMA_MST_CTRL_GO_ENABLE
 		| DMA_MST_CTRL_BURST_8WORDS
 		| DMA_MST_CTRL_EN_A_ENABLE
-		| DMA_MST_CTRL_EN_B_ENABLE;
+		| (with_ecc ? 0 : DMA_MST_CTRL_EN_B_ENABLE);
 
 	if (!is_writing)
 		reg_val |= DMA_MST_CTRL_DIR_READ;
diff --git a/drivers/net/e1000.c b/drivers/net/e1000.c
index 3332ad9..a60ffed 100644
--- a/drivers/net/e1000.c
+++ b/drivers/net/e1000.c
@@ -4361,7 +4361,9 @@ e1000_get_phy_cfg_done(struct e1000_hw *hw)
 		if (!timeout) {
 			DEBUGOUT("MNG configuration cycle has not "
 					"completed.\n");
-			return -E1000_ERR_RESET;
+//hack to avoid the following error on unprogrammed i210 for now
+//e1000: e1000#0: ERROR: Hardware Initialization Failed
+//			return -E1000_ERR_RESET;
 		}
 		break;
 	}
diff --git a/drivers/serial/Kconfig b/drivers/serial/Kconfig
index 56c024f..620dd82 100644
--- a/drivers/serial/Kconfig
+++ b/drivers/serial/Kconfig
@@ -407,4 +407,10 @@ config MSM_SERIAL
 	  for example APQ8016 and MSM8916.
 	  Single baudrate is supported in current implementation (115200).
 
+config PXA_SERIAL
+	bool "PXA serial port support"
+	help
+	  If you have a machine based on a Marvell XScale PXA2xx CPU you
+	  can enable its onboard serial ports by enabling this option.
+
 endmenu
diff --git a/drivers/serial/serial_pxa.c b/drivers/serial/serial_pxa.c
index 1eb19ec..ea5971b 100644
--- a/drivers/serial/serial_pxa.c
+++ b/drivers/serial/serial_pxa.c
@@ -14,6 +14,9 @@
  *
  * Copyright (C) 1999 2000 2001 Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
  *
+ * Modified to add driver model (DM) support
+ * (C) Copyright 2016 Marcel Ziswiler <marcel.ziswiler@toradex.com>
+ *
  * SPDX-License-Identifier:	GPL-2.0+
  */
 
@@ -21,73 +24,17 @@
 #include <asm/arch/pxa-regs.h>
 #include <asm/arch/regs-uart.h>
 #include <asm/io.h>
+#include <dm.h>
+#include <dm/platform_data/serial_pxa.h>
 #include <linux/compiler.h>
 #include <serial.h>
 #include <watchdog.h>
 
 DECLARE_GLOBAL_DATA_PTR;
 
-/*
- * The numbering scheme differs here for PXA25x, PXA27x and PXA3xx so we can
- * easily handle enabling of clock.
- */
-#ifdef	CONFIG_CPU_MONAHANS
-#define	UART_CLK_BASE	CKENA_21_BTUART
-#define	UART_CLK_REG	CKENA
-#define	BTUART_INDEX	0
-#define	FFUART_INDEX	1
-#define	STUART_INDEX	2
-#elif	CONFIG_CPU_PXA25X
-#define	UART_CLK_BASE	(1 << 4)	/* HWUART */
-#define	UART_CLK_REG	CKEN
-#define	HWUART_INDEX	0
-#define	STUART_INDEX	1
-#define	FFUART_INDEX	2
-#define	BTUART_INDEX	3
-#else	/* PXA27x */
-#define	UART_CLK_BASE	CKEN5_STUART
-#define	UART_CLK_REG	CKEN
-#define	STUART_INDEX	0
-#define	FFUART_INDEX	1
-#define	BTUART_INDEX	2
-#endif
-
-/*
- * Only PXA250 has HWUART, to avoid poluting the code with more macros,
- * artificially introduce this.
- */
-#ifndef	CONFIG_CPU_PXA25X
-#define	HWUART_INDEX	0xff
-#endif
-
-static uint32_t pxa_uart_get_baud_divider(void)
-{
-	if (gd->baudrate == 1200)
-		return 768;
-	else if (gd->baudrate == 9600)
-		return 96;
-	else if (gd->baudrate == 19200)
-		return 48;
-	else if (gd->baudrate == 38400)
-		return 24;
-	else if (gd->baudrate == 57600)
-		return 16;
-	else if (gd->baudrate == 115200)
-		return 8;
-	else	/* Unsupported baudrate */
-		return 0;
-}
-
-static struct pxa_uart_regs *pxa_uart_index_to_regs(uint32_t uart_index)
+static uint32_t pxa_uart_get_baud_divider(int baudrate)
 {
-	switch (uart_index) {
-	case FFUART_INDEX: return (struct pxa_uart_regs *)FFUART_BASE;
-	case BTUART_INDEX: return (struct pxa_uart_regs *)BTUART_BASE;
-	case STUART_INDEX: return (struct pxa_uart_regs *)STUART_BASE;
-	case HWUART_INDEX: return (struct pxa_uart_regs *)HWUART_BASE;
-	default:
-		return NULL;
-	}
+	return 921600 / baudrate;
 }
 
 static void pxa_uart_toggle_clock(uint32_t uart_index, int enable)
@@ -110,20 +57,14 @@ static void pxa_uart_toggle_clock(uint32_t uart_index, int enable)
 /*
  * Enable clock and set baud rate, parity etc.
  */
-void pxa_setbrg_dev(uint32_t uart_index)
+void pxa_setbrg_common(struct pxa_uart_regs *uart_regs, int port, int baudrate)
 {
-	uint32_t divider = 0;
-	struct pxa_uart_regs *uart_regs;
-
-	divider = pxa_uart_get_baud_divider();
+	uint32_t divider = pxa_uart_get_baud_divider(baudrate);
 	if (!divider)
 		hang();
 
-	uart_regs = pxa_uart_index_to_regs(uart_index);
-	if (!uart_regs)
-		hang();
 
-	pxa_uart_toggle_clock(uart_index, 1);
+	pxa_uart_toggle_clock(port, 1);
 
 	/* Disable interrupts and FIFOs */
 	writel(0, &uart_regs->ier);
@@ -139,13 +80,38 @@ void pxa_setbrg_dev(uint32_t uart_index)
 	writel(IER_UUE, &uart_regs->ier);
 }
 
+#ifndef CONFIG_DM_SERIAL
+static struct pxa_uart_regs *pxa_uart_index_to_regs(uint32_t uart_index)
+{
+	switch (uart_index) {
+	case FFUART_INDEX: return (struct pxa_uart_regs *)FFUART_BASE;
+	case BTUART_INDEX: return (struct pxa_uart_regs *)BTUART_BASE;
+	case STUART_INDEX: return (struct pxa_uart_regs *)STUART_BASE;
+	case HWUART_INDEX: return (struct pxa_uart_regs *)HWUART_BASE;
+	default:
+		return NULL;
+	}
+}
+
+/*
+ * Enable clock and set baud rate, parity etc.
+ */
+void pxa_setbrg_dev(uint32_t uart_index)
+{
+	struct pxa_uart_regs *uart_regs = pxa_uart_index_to_regs(uart_index);
+	if (!uart_regs)
+		panic("Failed getting UART registers\n");
+
+	pxa_setbrg_common(uart_regs, uart_index, gd->baudrate);
+}
+
 /*
  * Initialise the serial port with the given baudrate. The settings
  * are always 8 data bits, no parity, 1 stop bit, no start bits.
  */
 int pxa_init_dev(unsigned int uart_index)
 {
-	pxa_setbrg_dev (uart_index);
+	pxa_setbrg_dev(uart_index);
 	return 0;
 }
 
@@ -297,3 +263,80 @@ void pxa_serial_initialize(void)
 	serial_register(&serial_stuart_device);
 #endif
 }
+#endif /* CONFIG_DM_SERIAL */
+
+#ifdef CONFIG_DM_SERIAL
+static int pxa_serial_probe(struct udevice *dev)
+{
+	struct pxa_serial_platdata *plat = dev->platdata;
+
+	pxa_setbrg_common((struct pxa_uart_regs *)plat->base, plat->port,
+			  plat->baudrate);
+	return 0;
+}
+
+static int pxa_serial_putc(struct udevice *dev, const char ch)
+{
+	struct pxa_serial_platdata *plat = dev->platdata;
+	struct pxa_uart_regs *uart_regs = (struct pxa_uart_regs *)plat->base;
+
+	/* Wait for last character to go. */
+	if (!(readl(&uart_regs->lsr) & LSR_TEMT))
+		return -EAGAIN;
+
+	writel(ch, &uart_regs->thr);
+
+	return 0;
+}
+
+static int pxa_serial_getc(struct udevice *dev)
+{
+	struct pxa_serial_platdata *plat = dev->platdata;
+	struct pxa_uart_regs *uart_regs = (struct pxa_uart_regs *)plat->base;
+
+	/* Wait for a character to arrive. */
+	if (!(readl(&uart_regs->lsr) & LSR_DR))
+		return -EAGAIN;
+
+	return readl(&uart_regs->rbr) & 0xff;
+}
+
+int pxa_serial_setbrg(struct udevice *dev, int baudrate)
+{
+	struct pxa_serial_platdata *plat = dev->platdata;
+	struct pxa_uart_regs *uart_regs = (struct pxa_uart_regs *)plat->base;
+	int port = plat->port;
+
+	pxa_setbrg_common(uart_regs, port, baudrate);
+
+	return 0;
+}
+
+static int pxa_serial_pending(struct udevice *dev, bool input)
+{
+	struct pxa_serial_platdata *plat = dev->platdata;
+	struct pxa_uart_regs *uart_regs = (struct pxa_uart_regs *)plat->base;
+
+	if (input)
+		return readl(&uart_regs->lsr) & LSR_DR ? 1 : 0;
+	else
+		return readl(&uart_regs->lsr) & LSR_TEMT ? 0 : 1;
+
+	return 0;
+}
+
+static const struct dm_serial_ops pxa_serial_ops = {
+	.putc		= pxa_serial_putc,
+	.pending	= pxa_serial_pending,
+	.getc		= pxa_serial_getc,
+	.setbrg		= pxa_serial_setbrg,
+};
+
+U_BOOT_DRIVER(serial_pxa) = {
+	.name	= "serial_pxa",
+	.id	= UCLASS_SERIAL,
+	.probe	= pxa_serial_probe,
+	.ops	= &pxa_serial_ops,
+	.flags	= DM_FLAG_PRE_RELOC,
+};
+#endif /* CONFIG_DM_SERIAL */
diff --git a/drivers/usb/gadget/Kconfig b/drivers/usb/gadget/Kconfig
index 40839d8..8b4cea9 100644
--- a/drivers/usb/gadget/Kconfig
+++ b/drivers/usb/gadget/Kconfig
@@ -103,6 +103,13 @@ config USB_GADGET_DOWNLOAD
 
 if USB_GADGET_DOWNLOAD
 
+config USB_FUNCTION_SDP
+	bool "Enable USB SDP (Serial Download Protocol)"
+	help
+	  Enable Serial Download Protocol (SDP) device support in U-Boot. This
+	  allows to download images into memory and execute (jump to) them
+	  using the same protocol as implemented by the i.MX family's boot ROM.
+
 config G_DNL_MANUFACTURER
 	string "Vendor name of USB device"
 
diff --git a/drivers/usb/gadget/Makefile b/drivers/usb/gadget/Makefile
index acc9964..93a41ef 100644
--- a/drivers/usb/gadget/Makefile
+++ b/drivers/usb/gadget/Makefile
@@ -8,6 +8,12 @@
 obj-$(CONFIG_USB_GADGET) += epautoconf.o config.o usbstring.o
 obj-$(CONFIG_USB_ETHER) += epautoconf.o config.o usbstring.o
 
+ifdef CONFIG_SPL_BUILD
+obj-$(CONFIG_SPL_USB_GADGET_SUPPORT) += g_dnl.o
+obj-$(CONFIG_SPL_DFU_SUPPORT) += f_dfu.o
+obj-$(CONFIG_SPL_USB_SDP_SUPPORT) += f_sdp.o
+endif
+
 # new USB gadget layer dependencies
 ifdef CONFIG_USB_GADGET
 obj-$(CONFIG_USB_GADGET_AT91) += at91_udc.o
@@ -17,13 +23,14 @@ obj-$(CONFIG_USB_GADGET_DWC2_OTG) += dwc2_udc_otg.o
 obj-$(CONFIG_USB_GADGET_DWC2_OTG_PHY) += dwc2_udc_otg_phy.o
 obj-$(CONFIG_USB_GADGET_FOTG210) += fotg210.o
 obj-$(CONFIG_CI_UDC)	+= ci_udc.o
+ifndef CONFIG_SPL_BUILD
 obj-$(CONFIG_USB_GADGET_DOWNLOAD) += g_dnl.o
 obj-$(CONFIG_USB_FUNCTION_THOR) += f_thor.o
-ifndef CONFIG_SPL_BUILD
 obj-$(CONFIG_USB_FUNCTION_DFU) += f_dfu.o
-endif
 obj-$(CONFIG_USB_FUNCTION_MASS_STORAGE) += f_mass_storage.o
 obj-$(CONFIG_USB_FUNCTION_FASTBOOT) += f_fastboot.o
+obj-$(CONFIG_USB_FUNCTION_SDP) += f_sdp.o
+endif
 endif
 ifdef CONFIG_USB_ETHER
 obj-y += ether.o
diff --git a/drivers/usb/gadget/f_sdp.c b/drivers/usb/gadget/f_sdp.c
new file mode 100644
index 0000000..77c3f94
--- /dev/null
+++ b/drivers/usb/gadget/f_sdp.c
@@ -0,0 +1,739 @@
+/*
+ * f_sdp.c -- USB HID Serial Download Protocol
+ *
+ * Copyright (C) 2016 Toradex
+ * Author: Stefan Agner <stefan.agner@toradex.com>
+ *
+ * This file implements the Serial Download Protocol (SDP) as specified in
+ * the i.MX 6 Reference Manual. The SDP is a USB HID based protocol and
+ * allows to download images directly to memory. The implementation
+ * works with the imx_loader (imx_usb) USB client software on host side.
+ *
+ * Not all commands are implemented, e.g. WRITE_REGISTER, DCD_WRITE and
+ * SKIP_DCD_HEADER are only stubs.
+ *
+ * Parts of the implementation are based on f_dfu and f_thor.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <errno.h>
+#include <common.h>
+#include <console.h>
+#include <malloc.h>
+
+#include <linux/usb/ch9.h>
+#include <linux/usb/gadget.h>
+#include <linux/usb/composite.h>
+
+#include <asm/io.h>
+#include <g_dnl.h>
+#include <sdp.h>
+#include <spl.h>
+#include <image.h>
+#include <imximage.h>
+
+#define HID_REPORT_ID_MASK	0x000000ff
+
+/*
+ * HID class requests
+ */
+#define HID_REQ_GET_REPORT		0x01
+#define HID_REQ_GET_IDLE		0x02
+#define HID_REQ_GET_PROTOCOL		0x03
+#define HID_REQ_SET_REPORT		0x09
+#define HID_REQ_SET_IDLE		0x0A
+#define HID_REQ_SET_PROTOCOL		0x0B
+
+#define HID_USAGE_PAGE_LEN		76
+
+struct hid_report {
+	u8 usage_page[HID_USAGE_PAGE_LEN];
+} __attribute__ ((packed));
+
+#define SDP_READ_REGISTER	0x0101
+#define SDP_WRITE_REGISTER	0x0202
+#define SDP_WRITE_FILE		0x0404
+#define SDP_ERROR_STATUS	0x0505
+#define SDP_DCD_WRITE		0x0a0a
+#define SDP_JUMP_ADDRESS	0x0b0b
+#define SDP_SKIP_DCD_HEADER	0x0c0c
+
+#define SDP_WRITE_FILE_COMPLETE		0x88888888
+#define SDP_WRITE_REGISTER_COMPLETE	0x128A8A12
+#define SDP_SKIP_DCD_HEADER_COMPLETE	0x900DD009
+#define SDP_ERROR_IMXHEADER		0x000a0533
+
+#define SDP_COMMAND_LEN		16
+
+struct sdp_command {
+	u16 cmd;
+	u32 addr;
+	u8 format;
+	u32 cnt;
+	u32 data;
+	u8 rsvd;
+} __attribute__ ((packed));
+
+enum sdp_state {
+	SDP_STATE_IDLE,
+	SDP_STATE_RX_DCD_DATA,
+	SDP_STATE_RX_FILE_DATA,
+	SDP_STATE_TX_SEC_CONF,
+	SDP_STATE_TX_SEC_CONF_BUSY,
+	SDP_STATE_TX_REGISTER,
+	SDP_STATE_TX_REGISTER_BUSY,
+	SDP_STATE_TX_STATUS,
+	SDP_STATE_TX_STATUS_BUSY,
+	SDP_STATE_JUMP,
+};
+
+struct f_sdp {
+	struct usb_function		usb_function;
+
+	struct usb_descriptor_header	**function;
+
+	u8				altsetting;
+	enum sdp_state			state;
+	enum sdp_state			next_state;
+	u32				dnl_address;
+	u32				dnl_bytes_remaining;
+	u32				jmp_address;
+	bool				always_send_status;
+	u32				error_status;
+
+	/* EP0 request */
+	struct usb_request		*req;
+
+	/* EP1 IN */
+	struct usb_ep			*in_ep;
+	struct usb_request		*in_req;
+
+	bool				configuration_done;
+};
+
+static struct f_sdp *sdp_func;
+
+static inline struct f_sdp *func_to_sdp(struct usb_function *f)
+{
+	return container_of(f, struct f_sdp, usb_function);
+}
+
+static struct usb_interface_descriptor sdp_intf_runtime = {
+	.bLength =		sizeof sdp_intf_runtime,
+	.bDescriptorType =	USB_DT_INTERFACE,
+	.bAlternateSetting =	0,
+	.bNumEndpoints =	1,
+	.bInterfaceClass =	USB_CLASS_HID,
+	.bInterfaceSubClass =	0,
+	.bInterfaceProtocol =	0,
+	/* .iInterface = DYNAMIC */
+};
+
+/* HID configuration */
+static struct usb_class_hid_descriptor sdp_hid_desc = {
+	.bLength =		sizeof(sdp_hid_desc),
+	.bDescriptorType =	USB_DT_CS_DEVICE,
+
+	.bcdCDC =		__constant_cpu_to_le16(0x0110),
+	.bCountryCode =		0,
+	.bNumDescriptors =	1,
+
+	.bDescriptorType0	= USB_DT_HID_REPORT,
+	.wDescriptorLength0	= HID_USAGE_PAGE_LEN,
+};
+
+static struct usb_endpoint_descriptor in_desc = {
+	.bLength =		USB_DT_ENDPOINT_SIZE,
+	.bDescriptorType =	USB_DT_ENDPOINT, /*USB_DT_CS_ENDPOINT*/
+
+	.bEndpointAddress =	1 | USB_DIR_IN,
+	.bmAttributes =	USB_ENDPOINT_XFER_INT,
+	.wMaxPacketSize =	64,
+	.bInterval =		1,
+};
+
+static struct usb_descriptor_header *sdp_runtime_descs[] = {
+	(struct usb_descriptor_header *) &sdp_intf_runtime,
+	(struct usb_descriptor_header *) &sdp_hid_desc,
+	(struct usb_descriptor_header *) &in_desc,
+	NULL,
+};
+
+/* This is synchronized with what the SoC implementation reports */
+static struct hid_report sdp_hid_report = {
+	.usage_page = {
+		0x06, 0x00, 0xff, /* Usage Page */
+		0x09, 0x01, /* Usage (Poiter?) */
+		0xa1, 0x01, /* Collection */
+
+		0x85, 0x01, /* Report ID */
+		0x19, 0x01, /* Usage Minimum */
+		0x29, 0x01, /* Usage Maximum */
+		0x15, 0x00, /* Local Minimum */
+		0x26, 0xFF, 0x00, /* Local Maximum? */
+		0x75, 0x08, /* Report Size */
+		0x95, 0x10, /* Report Count */
+		0x91, 0x02, /* Output Data */
+
+		0x85, 0x02, /* Report ID */
+		0x19, 0x01, /* Usage Minimum */
+		0x29, 0x01, /* Usage Maximum */
+		0x15, 0x00, /* Local Minimum */
+		0x26, 0xFF, 0x00, /* Local Maximum? */
+		0x75, 0x80, /* Report Size 128 */
+		0x95, 0x40, /* Report Count */
+		0x91, 0x02, /* Output Data */
+
+		0x85, 0x03, /* Report ID */
+		0x19, 0x01, /* Usage Minimum */
+		0x29, 0x01, /* Usage Maximum */
+		0x15, 0x00, /* Local Minimum */
+		0x26, 0xFF, 0x00, /* Local Maximum? */
+		0x75, 0x08, /* Report Size 8 */
+		0x95, 0x04, /* Report Count */
+		0x81, 0x02, /* Input Data */
+
+		0x85, 0x04, /* Report ID */
+		0x19, 0x01, /* Usage Minimum */
+		0x29, 0x01, /* Usage Maximum */
+		0x15, 0x00, /* Local Minimum */
+		0x26, 0xFF, 0x00, /* Local Maximum? */
+		0x75, 0x08, /* Report Size 8 */
+		0x95, 0x40, /* Report Count */
+		0x81, 0x02, /* Input Data */
+		0xc0
+	},
+};
+
+static const char sdp_name[] = "Serial Downloader Protocol";
+
+/*
+ * static strings, in UTF-8
+ */
+static struct usb_string strings_sdp_generic[] = {
+	[0].s = sdp_name,
+	{  }			/* end of list */
+};
+
+static struct usb_gadget_strings stringtab_sdp_generic = {
+	.language	= 0x0409,	/* en-us */
+	.strings	= strings_sdp_generic,
+};
+
+static struct usb_gadget_strings *sdp_generic_strings[] = {
+	&stringtab_sdp_generic,
+	NULL,
+};
+
+static void sdp_rx_command_complete(struct usb_ep *ep, struct usb_request *req)
+{
+	struct f_sdp *sdp = req->context;
+	int status = req->status;
+	u8 *data = req->buf;
+	u8 report = data[0];
+
+	if (status != 0) {
+		error("Status: %d", status);
+		return;
+	}
+
+	if (report != 1) {
+		error("Unexpected report %d", report);
+		return;
+	}
+
+	struct sdp_command *cmd = req->buf + 1;
+
+	debug("%s: command: %04x, addr: %08x, cnt: %u\n",
+	      __func__, be16_to_cpu(cmd->cmd),
+              be32_to_cpu(cmd->addr), be32_to_cpu(cmd->cnt));
+
+	switch (be16_to_cpu(cmd->cmd)) {
+	case SDP_READ_REGISTER:
+		sdp->always_send_status = false;
+		sdp->error_status = 0x0;
+
+		sdp->state = SDP_STATE_TX_SEC_CONF;
+		sdp->dnl_address = be32_to_cpu(cmd->addr);
+		sdp->dnl_bytes_remaining = be32_to_cpu(cmd->cnt);
+		sdp->next_state = SDP_STATE_TX_REGISTER;
+		printf("Reading %d registers at 0x%08x... ",
+			sdp->dnl_bytes_remaining, sdp->dnl_address);
+		break;
+	case SDP_WRITE_FILE:
+		sdp->always_send_status = true;
+		sdp->error_status = SDP_WRITE_FILE_COMPLETE;
+
+		sdp->state = SDP_STATE_RX_FILE_DATA;
+		sdp->dnl_address = be32_to_cpu(cmd->addr);
+		sdp->dnl_bytes_remaining = be32_to_cpu(cmd->cnt);
+		sdp->next_state = SDP_STATE_IDLE;
+
+		printf("Downloading file of size %d to 0x%08x... ",
+			sdp->dnl_bytes_remaining, sdp->dnl_address);
+
+		break;
+	case SDP_ERROR_STATUS:
+		sdp->always_send_status = true;
+		sdp->error_status = 0;
+
+		sdp->state = SDP_STATE_TX_SEC_CONF;
+		sdp->next_state = SDP_STATE_IDLE;
+		break;
+	case SDP_DCD_WRITE:
+		sdp->always_send_status = true;
+		sdp->error_status = SDP_WRITE_REGISTER_COMPLETE;
+
+		sdp->state = SDP_STATE_RX_DCD_DATA;
+		sdp->dnl_bytes_remaining = be32_to_cpu(cmd->cnt);
+		sdp->next_state = SDP_STATE_IDLE;
+		break;
+	case SDP_JUMP_ADDRESS:
+		sdp->always_send_status = false;
+		sdp->error_status = 0;
+
+		sdp->jmp_address = be32_to_cpu(cmd->addr);
+		sdp->state = SDP_STATE_TX_SEC_CONF;
+		sdp->next_state = SDP_STATE_JUMP;
+		break;
+	case SDP_SKIP_DCD_HEADER:
+		sdp->always_send_status = true;
+		sdp->error_status = SDP_SKIP_DCD_HEADER_COMPLETE;
+
+		/* Ignore command, DCD not supported anyway */
+		sdp->state = SDP_STATE_TX_SEC_CONF;
+		sdp->next_state = SDP_STATE_IDLE;
+		break;
+	default:
+		error("Unknown command: %08x\n", be16_to_cpu(cmd->cmd));
+	}
+}
+
+static void sdp_rx_data_complete(struct usb_ep *ep, struct usb_request *req)
+{
+	struct f_sdp *sdp = req->context;
+	int status = req->status;
+	u8 *data = req->buf;
+	u8 report = data[0];
+	int datalen = req->length - 1;
+
+	if (status != 0) {
+		error("Status: %d", status);
+		return;
+	}
+
+	if (report != 2) {
+		error("Unexpected report %d", report);
+		return;
+	}
+
+	if (sdp->dnl_bytes_remaining < datalen) {
+		/*
+		 * Some USB stacks require to send a complete buffer as
+		 * specified in the HID descriptor. This leads to longer
+		 * transfers than the file length, no problem for us.
+		 */
+		sdp->dnl_bytes_remaining = 0;
+	} else {
+		sdp->dnl_bytes_remaining -= datalen;
+	}
+
+	if (sdp->state == SDP_STATE_RX_FILE_DATA) {
+		memcpy((void *)sdp->dnl_address, req->buf + 1, datalen);
+		sdp->dnl_address += datalen;
+	}
+
+	if (sdp->dnl_bytes_remaining)
+		return;
+
+	printf("done\n");
+
+	switch (sdp->state) {
+	case SDP_STATE_RX_FILE_DATA:
+		sdp->state = SDP_STATE_TX_SEC_CONF;
+		break;
+	case SDP_STATE_RX_DCD_DATA:
+		sdp->state = SDP_STATE_TX_SEC_CONF;
+		break;
+	default:
+		error("Invalid state: %d", sdp->state);
+	}
+}
+
+
+
+static void sdp_tx_complete(struct usb_ep *ep, struct usb_request *req)
+{
+	struct f_sdp *sdp = req->context;
+	int status = req->status;
+
+	if (status != 0) {
+		error("Status: %d", status);
+		return;
+	}
+
+	switch (sdp->state) {
+	case SDP_STATE_TX_SEC_CONF_BUSY:
+		/* Not all commands require status report */
+		if (sdp->always_send_status || sdp->error_status)
+			sdp->state = SDP_STATE_TX_STATUS;
+		else
+			sdp->state = sdp->next_state;
+
+		break;
+	case SDP_STATE_TX_STATUS_BUSY:
+		sdp->state = sdp->next_state;
+		break;
+	case SDP_STATE_TX_REGISTER_BUSY:
+		if (sdp->dnl_bytes_remaining)
+			sdp->state = SDP_STATE_TX_REGISTER;
+		else
+			sdp->state = SDP_STATE_IDLE;
+		break;
+	default:
+		error("Wrong State: %d", sdp->state);
+		sdp->state = SDP_STATE_IDLE;
+		break;
+	}
+	debug("%s complete --> %d, %d/%d\n", ep->name,
+	      status, req->actual, req->length);
+}
+
+static int sdp_setup(struct usb_function *f, const struct usb_ctrlrequest *ctrl)
+{
+	struct usb_gadget *gadget = f->config->cdev->gadget;
+	struct usb_request *req = f->config->cdev->req;
+	struct f_sdp *sdp = f->config->cdev->req->context;
+	u16 len = le16_to_cpu(ctrl->wLength);
+	u16 w_value = le16_to_cpu(ctrl->wValue);
+	int value = 0;
+	u8 req_type = ctrl->bRequestType & USB_TYPE_MASK;
+
+	debug("w_value: 0x%x len: 0x%x\n", w_value, len);
+	debug("req_type: 0x%x ctrl->bRequest: 0x%x sdp->state: %d\n",
+	       req_type, ctrl->bRequest, sdp->state);
+
+	if (req_type == USB_TYPE_STANDARD) {
+		if (ctrl->bRequest == USB_REQ_GET_DESCRIPTOR) {
+			/* Send HID report descriptor */
+			value = min(len, (u16) sizeof(sdp_hid_report));
+			memcpy(req->buf, &sdp_hid_report, value);
+			sdp->configuration_done = true;
+		}
+	}
+
+	if (req_type == USB_TYPE_CLASS) {
+		int report = w_value & HID_REPORT_ID_MASK;
+
+		/* HID (SDP) request */
+		switch (ctrl->bRequest) {
+		case HID_REQ_SET_REPORT:
+			switch (report) {
+			case 1:
+				value = SDP_COMMAND_LEN + 1;
+				req->complete = sdp_rx_command_complete;
+				break;
+			case 2:
+				value = len;
+				req->complete = sdp_rx_data_complete;
+				break;
+			}
+		}
+	}
+
+	if (value >= 0) {
+		req->length = value;
+		req->zero = value < len;
+		value = usb_ep_queue(gadget->ep0, req, 0);
+		if (value < 0) {
+			debug("ep_queue --> %d\n", value);
+			req->status = 0;
+		}
+	}
+
+	return value;
+}
+
+static int sdp_bind(struct usb_configuration *c, struct usb_function *f)
+{
+	struct usb_gadget *gadget = c->cdev->gadget;
+	struct usb_composite_dev *cdev = c->cdev;
+	struct f_sdp *sdp = func_to_sdp(f);
+	int rv = 0, id;
+
+	id = usb_interface_id(c, f);
+	if (id < 0)
+		return id;
+	sdp_intf_runtime.bInterfaceNumber = id;
+
+	struct usb_ep *ep;
+
+	/* allocate instance-specific endpoints */
+	ep = usb_ep_autoconfig(gadget, &in_desc);
+	if (!ep) {
+		rv = -ENODEV;
+		goto error;
+	}
+
+	sdp->in_ep = ep; /* Store IN EP for enabling @ setup */
+
+	cdev->req->context = sdp;
+
+error:
+	return rv;
+}
+
+static void sdp_unbind(struct usb_configuration *c, struct usb_function *f)
+{
+	free(sdp_func);
+	sdp_func = NULL;
+}
+
+static struct usb_request *alloc_ep_req(struct usb_ep *ep, unsigned length)
+{
+	struct usb_request *req;
+
+	req = usb_ep_alloc_request(ep, 0);
+	if (!req)
+		return req;
+
+	req->length = length;
+	req->buf = memalign(CONFIG_SYS_CACHELINE_SIZE, length);
+	if (!req->buf) {
+		usb_ep_free_request(ep, req);
+		req = NULL;
+	}
+
+	return req;
+}
+
+
+static struct usb_request *sdp_start_ep(struct usb_ep *ep)
+{
+	struct usb_request *req;
+
+	req = alloc_ep_req(ep, 64);
+	debug("%s: ep:%p req:%p\n", __func__, ep, req);
+
+	if (!req)
+		return NULL;
+
+	memset(req->buf, 0, req->length);
+	req->complete = sdp_tx_complete;
+
+	return req;
+}
+static int sdp_set_alt(struct usb_function *f, unsigned intf, unsigned alt)
+{
+	struct f_sdp *sdp = func_to_sdp(f);
+	struct usb_composite_dev *cdev = f->config->cdev;
+	int result;
+
+	debug("%s: intf: %d alt: %d\n", __func__, intf, alt);
+
+	result = usb_ep_enable(sdp->in_ep, &in_desc);
+	if (result)
+		return result;
+	sdp->in_req = sdp_start_ep(sdp->in_ep);
+	sdp->in_req->context = sdp;
+
+	sdp->in_ep->driver_data = cdev; /* claim */
+
+	sdp->altsetting = alt;
+	sdp->state = SDP_STATE_IDLE;
+
+	return 0;
+}
+
+static int sdp_get_alt(struct usb_function *f, unsigned intf)
+{
+	struct f_sdp *sdp = func_to_sdp(f);
+
+	return sdp->altsetting;
+}
+
+static void sdp_disable(struct usb_function *f)
+{
+	struct f_sdp *sdp = func_to_sdp(f);
+
+	usb_ep_disable(sdp->in_ep);
+
+	if (sdp->in_req) {
+		free(sdp->in_req);
+		sdp->in_req = NULL;
+	}
+}
+
+static int sdp_bind_config(struct usb_configuration *c)
+{
+	int status;
+
+	if (!sdp_func) {
+		sdp_func = memalign(CONFIG_SYS_CACHELINE_SIZE, sizeof(*sdp_func));
+		if (!sdp_func)
+			return -ENOMEM;
+	}
+
+	memset(sdp_func, 0, sizeof(*sdp_func));
+
+	sdp_func->usb_function.name = "sdp";
+	sdp_func->usb_function.hs_descriptors = sdp_runtime_descs;
+	sdp_func->usb_function.descriptors = sdp_runtime_descs;
+	sdp_func->usb_function.bind = sdp_bind;
+	sdp_func->usb_function.unbind = sdp_unbind;
+	sdp_func->usb_function.set_alt = sdp_set_alt;
+	sdp_func->usb_function.get_alt = sdp_get_alt;
+	sdp_func->usb_function.disable = sdp_disable;
+	sdp_func->usb_function.strings = sdp_generic_strings;
+	sdp_func->usb_function.setup = sdp_setup;
+
+	status = usb_add_function(c, &sdp_func->usb_function);
+
+	return status;
+}
+
+int sdp_init(void)
+{
+	printf("SDP: initialize...\n");
+	while (!sdp_func->configuration_done) {
+		if (ctrlc()) {
+			puts("\rCTRL+C - Operation aborted.\n");
+			return 0;
+		}
+		usb_gadget_handle_interrupts(0);
+	}
+
+	return 0;
+}
+
+static u32 sdp_jump_imxheader(void *address)
+{
+	flash_header_v2_t *headerv2 = address;
+	ulong (*entry)(void);
+
+	if (headerv2->header.tag != IVT_HEADER_TAG) {
+		printf("Header Tag is not a IMX image\n");
+		return SDP_ERROR_IMXHEADER;
+	}
+
+	printf("Jumping to 0x%08x\n", headerv2->entry);
+	entry = (void *)headerv2->entry;
+	entry();
+
+	/* The image probably never returns hence we wont reach that point */
+	return 0;
+}
+
+static void sdp_handle_in_ep(void)
+{
+	u8 *data = sdp_func->in_req->buf;
+	u32 status;
+	int datalen;
+
+	switch (sdp_func->state) {
+	case SDP_STATE_TX_SEC_CONF:
+		debug("Report 3: HAB security\n");
+		data[0] = 3;
+
+		data[1] = 0x56;
+		data[2] = 0x78;
+		data[3] = 0x78;
+		data[4] = 0x56;
+
+		sdp_func->in_req->length = 5;
+		usb_ep_queue(sdp_func->in_ep, sdp_func->in_req, 0);
+		sdp_func->state = SDP_STATE_TX_SEC_CONF_BUSY;
+		break;
+
+	case SDP_STATE_TX_STATUS:
+		debug("Report 4: Status\n");
+		data[0] = 4;
+
+		memcpy(&data[1], &sdp_func->error_status, 4);
+		sdp_func->in_req->length = 65;
+		usb_ep_queue(sdp_func->in_ep, sdp_func->in_req, 0);
+		sdp_func->state = SDP_STATE_TX_STATUS_BUSY;
+		break;
+	case SDP_STATE_TX_REGISTER:
+		debug("Report 4: Register Values\n");
+		data[0] = 4;
+
+		datalen = sdp_func->dnl_bytes_remaining;
+
+		if (datalen > 64)
+			datalen = 64;
+
+		memcpy(&data[1], (void *)sdp_func->dnl_address, datalen);
+		sdp_func->in_req->length = 65;
+
+		sdp_func->dnl_bytes_remaining -= datalen;
+		sdp_func->dnl_address += datalen;
+
+		usb_ep_queue(sdp_func->in_ep, sdp_func->in_req, 0);
+		sdp_func->state = SDP_STATE_TX_REGISTER_BUSY;
+		break;
+	case SDP_STATE_JUMP:
+		printf("Jumping to header at 0x%08x\n", sdp_func->jmp_address);
+		status = sdp_jump_imxheader((void *)sdp_func->jmp_address);
+
+		/* If imx header fails, try some U-Boot specific headers */
+		if (status) {
+#ifdef CONFIG_SPL_BUILD
+			/* In SPL, allow jumps to U-Boot images */
+			struct spl_image_info spl_image = {};
+			spl_parse_image_header(&spl_image,
+				(struct image_header *)sdp_func->jmp_address);
+			jump_to_image_no_args(&spl_image);
+#else
+			/* In U-Boot, allow jumps to scripts */
+			source(sdp_func->jmp_address, "script@1");
+#endif
+		}
+
+		sdp_func->next_state = SDP_STATE_IDLE;
+		sdp_func->error_status = status;
+
+		/* Only send Report 4 if there was an error */
+		if (status)
+			sdp_func->state = SDP_STATE_TX_STATUS;
+		else
+			sdp_func->state = SDP_STATE_IDLE;
+		break;
+	default:
+		break;
+	};
+}
+
+int sdp_handle(void)
+{
+	printf("SDP: handle requests...\n");
+	while (1) {
+		if (ctrlc()) {
+			puts("\rCTRL+C - Operation aborted.\n");
+			return 0;
+		}
+
+		usb_gadget_handle_interrupts(0);
+
+		sdp_handle_in_ep();
+	}
+}
+
+int sdp_add(struct usb_configuration *c)
+{
+	int id;
+
+	id = usb_string_id(c->cdev);
+	if (id < 0)
+		return id;
+	strings_sdp_generic[0].id = id;
+	sdp_intf_runtime.iInterface = id;
+
+	debug("%s: cdev: 0x%p gadget:0x%p gadget->ep0: 0x%p\n", __func__,
+	       c->cdev, c->cdev->gadget, c->cdev->gadget->ep0);
+
+	return sdp_bind_config(c);
+}
+
+DECLARE_GADGET_BIND_CALLBACK(usb_dnl_sdp, sdp_add);
diff --git a/drivers/video/fsl_dcu_fb.c b/drivers/video/fsl_dcu_fb.c
index d4cd382..993309d 100644
--- a/drivers/video/fsl_dcu_fb.c
+++ b/drivers/video/fsl_dcu_fb.c
@@ -8,6 +8,7 @@
 
 #include <asm/io.h>
 #include <common.h>
+#include <fdt_support.h>
 #include <fsl_dcu_fb.h>
 #include <linux/fb.h>
 #include <malloc.h>
@@ -40,7 +41,7 @@
 #define DCU_VSYN_PARA_BP(x)		((x) << 22)
 #define DCU_VSYN_PARA_PW(x)		((x) << 11)
 #define DCU_VSYN_PARA_FP(x)		(x)
-#define DCU_SYN_POL_INV_PXCK_FALL	(0 << 6)
+#define DCU_SYN_POL_INV_PXCK_FALL	(1 << 6)
 #define DCU_SYN_POL_NEG_REMAIN		(0 << 5)
 #define DCU_SYN_POL_INV_VS_LOW		(1 << 1)
 #define DCU_SYN_POL_INV_HS_LOW		(1)
@@ -79,6 +80,8 @@
 #define BPP_24_RGB888			5
 #define BPP_32_ARGB8888			6
 
+DECLARE_GLOBAL_DATA_PTR;
+
 /*
  * This setting is used for the TWR_LCD_RGB card
  */
@@ -101,7 +104,7 @@ static struct fb_videomode fsl_dcu_mode_480_272 = {
 /*
  * This setting is used for Siliconimage SiI9022A HDMI
  */
-static struct fb_videomode fsl_dcu_mode_640_480 = {
+static struct fb_videomode fsl_dcu_cea_mode_640_480 = {
 	.name		= "640x480-60",
 	.refresh	= 60,
 	.xres		= 640,
@@ -117,6 +120,54 @@ static struct fb_videomode fsl_dcu_mode_640_480 = {
 	.vmode		= FB_VMODE_NONINTERLACED,
 };
 
+static struct fb_videomode fsl_dcu_mode_640_480 = {
+	.name		= "640x480-60",
+	.refresh	= 60,
+	.xres		= 640,
+	.yres		= 480,
+	.pixclock	= 25175,
+	.left_margin	= 40,
+	.right_margin	= 24,
+	.upper_margin	= 32,
+	.lower_margin	= 11,
+	.hsync_len	= 96,
+	.vsync_len	= 2,
+	.sync		= 0,
+	.vmode		= FB_VMODE_NONINTERLACED,
+};
+
+static struct fb_videomode fsl_dcu_mode_800_480 = {
+	.name		= "800x480-60",
+	.refresh	= 60,
+	.xres		= 800,
+	.yres		= 480,
+	.pixclock	= 33260,
+	.left_margin	= 216,
+	.right_margin	= 40,
+	.upper_margin	= 35,
+	.lower_margin	= 10,
+	.hsync_len	= 128,
+	.vsync_len	= 2,
+	.sync		= 0,
+	.vmode		= FB_VMODE_NONINTERLACED,
+};
+
+static struct fb_videomode fsl_dcu_mode_1024_600 = {
+	.name		= "1024x600-60",
+	.refresh	= 60,
+	.xres		= 1024,
+	.yres		= 600,
+	.pixclock	= 48000,
+	.left_margin	= 104,
+	.right_margin	= 43,
+	.upper_margin	= 24,
+	.lower_margin	= 20,
+	.hsync_len	= 5,
+	.vsync_len	= 5,
+	.sync		= 0,
+	.vmode		= FB_VMODE_NONINTERLACED,
+};
+
 /*
  * DCU register map
  */
@@ -175,7 +226,7 @@ static void reset_total_layers(void)
 	struct dcu_reg *regs = (struct dcu_reg *)CONFIG_SYS_DCU_ADDR;
 	int i;
 
-	for (i = 0; i < DCU_LAYER_MAX_NUM; i++) {
+	for (i = 0; i < DCU_TOTAL_LAYER_NUM; i++) {
 		dcu_write32(&regs->ctrldescl[i][0], 0);
 		dcu_write32(&regs->ctrldescl[i][1], 0);
 		dcu_write32(&regs->ctrldescl[i][2], 0);
@@ -185,11 +236,11 @@ static void reset_total_layers(void)
 		dcu_write32(&regs->ctrldescl[i][6], 0);
 		dcu_write32(&regs->ctrldescl[i][7], 0);
 		dcu_write32(&regs->ctrldescl[i][8], 0);
+#ifdef CONFIG_LS102XA
 		dcu_write32(&regs->ctrldescl[i][9], 0);
 		dcu_write32(&regs->ctrldescl[i][10], 0);
+#endif
 	}
-
-	dcu_write32(&regs->update_mode, DCU_UPDATE_MODE_READREG);
 }
 
 static int layer_ctrldesc_init(int index, u32 pixel_format)
@@ -243,8 +294,6 @@ static int layer_ctrldesc_init(int index, u32 pixel_format)
 	dcu_write32(&regs->ctrldescl[index][7], DCU_CTRLDESCLN_8_FG_FCOLOR(0));
 	dcu_write32(&regs->ctrldescl[index][8], DCU_CTRLDESCLN_9_BG_BCOLOR(0));
 
-	dcu_write32(&regs->update_mode, DCU_UPDATE_MODE_READREG);
-
 	return 0;
 }
 
@@ -254,16 +303,22 @@ int fsl_dcu_init(unsigned int xres, unsigned int yres,
 	struct dcu_reg *regs = (struct dcu_reg *)CONFIG_SYS_DCU_ADDR;
 	unsigned int div, mode;
 
-	/* Memory allocation for framebuffer */
 	info.screen_size =
 		info.var.xres * info.var.yres * (info.var.bits_per_pixel / 8);
-	info.screen_base = (char *)memalign(ARCH_DMA_MINALIGN,
-			roundup(info.screen_size, ARCH_DMA_MINALIGN));
+
+	if (info.screen_size > CONFIG_FSL_DCU_MAX_FB_SIZE) {
+		info.screen_size = 0;
+		return -ENOMEM;
+	}
+
+	/* Reserve framebuffer at the end of memory */
+	gd->fb_base = gd->bd->bi_dram[0].start +
+		      gd->bd->bi_dram[0].size - info.screen_size;
+	info.screen_base = (char *)gd->fb_base;
+
 	memset(info.screen_base, 0, info.screen_size);
 
 	reset_total_layers();
-	div = dcu_set_pixel_clock(info.var.pixclock);
-	dcu_write32(&regs->div_ratio, (div - 1));
 
 	dcu_write32(&regs->disp_size,
 		    DCU_DISP_SIZE_DELTA_Y(info.var.yres) |
@@ -302,9 +357,19 @@ int fsl_dcu_init(unsigned int xres, unsigned int yres,
 
 	layer_ctrldesc_init(0, pixel_format);
 
+	div = dcu_set_pixel_clock(info.var.pixclock);
+	dcu_write32(&regs->div_ratio, (div - 1));
+
+	dcu_write32(&regs->update_mode, DCU_UPDATE_MODE_READREG);
+
 	return 0;
 }
 
+ulong board_get_usable_ram_top(ulong total_size)
+{
+	return gd->ram_top - CONFIG_FSL_DCU_MAX_FB_SIZE;
+}
+
 void *video_hw_init(void)
 {
 	static GraphicDevice ctfb;
@@ -327,7 +392,16 @@ void *video_hw_init(void)
 		fsl_dcu_mode_db = &fsl_dcu_mode_480_272;
 		break;
 	case RESOLUTION(640, 480):
-		fsl_dcu_mode_db = &fsl_dcu_mode_640_480;
+		if (!strncmp(options, "monitor=hdmi", 12))
+			fsl_dcu_mode_db = &fsl_dcu_cea_mode_640_480;
+		else
+			fsl_dcu_mode_db = &fsl_dcu_mode_640_480;
+		break;
+	case RESOLUTION(800, 480):
+		fsl_dcu_mode_db = &fsl_dcu_mode_800_480;
+		break;
+	case RESOLUTION(1024, 600):
+		fsl_dcu_mode_db = &fsl_dcu_mode_1024_600;
 		break;
 	default:
 		printf("unsupported resolution %ux%u\n",
@@ -363,3 +437,28 @@ void *video_hw_init(void)
 
 	return &ctfb;
 }
+
+#if defined(CONFIG_OF_BOARD_SETUP)
+int fsl_dcu_fixedfb_setup(void *blob)
+{
+	u64 start, size;
+	int ret;
+
+	start = gd->bd->bi_dram[0].start;
+	size = gd->bd->bi_dram[0].size - info.screen_size;
+
+	/*
+	 * Align size on section size (1 MiB). The Linux kernel would crash
+	 * otherwise, this seems to be a limitation/bug of the Linux
+	 * kernel currently (Linux ~4.0)
+	 */
+	size &= 0xfff00000;
+	ret = fdt_fixup_memory_banks(blob, &start, &size, 1);
+	if (ret) {
+		eprintf("Cannot setup fb: Error reserving memory\n");
+		return ret;
+	}
+
+	return 0;
+}
+#endif
diff --git a/drivers/video/tegra.c b/drivers/video/tegra.c
index 92214d6..dfd751f 100644
--- a/drivers/video/tegra.c
+++ b/drivers/video/tegra.c
@@ -303,14 +303,18 @@ static int tegra_lcd_probe(struct udevice *dev)
 	int ret;
 
 	/* Initialize the Tegra display controller */
+#ifdef CONFIG_TEGRA20
 	funcmux_select(PERIPH_ID_DISP1, FUNCMUX_DEFAULT);
+#endif
 	if (tegra_display_probe(blob, priv, (void *)plat->base)) {
 		printf("%s: Failed to probe display driver\n", __func__);
 		return -1;
 	}
 
+#ifdef CONFIG_TEGRA20
 	pinmux_set_func(PMUX_PINGRP_GPU, PMUX_FUNC_PWM);
 	pinmux_tristate_disable(PMUX_PINGRP_GPU);
+#endif
 
 	ret = panel_enable_backlight(priv->panel);
 	if (ret) {
diff --git a/include/config_distro_bootcmd.h b/include/config_distro_bootcmd.h
index 9ecaf38..b227cf4 100644
--- a/include/config_distro_bootcmd.h
+++ b/include/config_distro_bootcmd.h
@@ -212,7 +212,9 @@
 #endif
 
 #ifdef CONFIG_CMD_USB
+#ifndef BOOTENV_RUN_NET_USB_START
 #define BOOTENV_RUN_NET_USB_START "run boot_net_usb_start; "
+#endif
 #define BOOTENV_SHARED_USB \
 	"boot_net_usb_start=usb start\0" \
 	"usb_boot=" \
diff --git a/include/configs/apalis-tk1.h b/include/configs/apalis-tk1.h
new file mode 100644
index 0000000..519da48
--- /dev/null
+++ b/include/configs/apalis-tk1.h
@@ -0,0 +1,178 @@
+/*
+ * Copyright (c) 2016 Toradex, Inc.
+ *
+ * Configuration settings for the Toradex Apalis TK1 modules.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#include <linux/sizes.h>
+
+/* enable PMIC */
+#define CONFIG_AS3722_POWER
+
+#include "tegra124-common.h"
+
+#define CONFIG_ARCH_MISC_INIT
+
+/* High-level configuration options */
+#define CONFIG_DISPLAY_BOARDINFO_LATE	/* Calls show_board_info() */
+
+/* Board-specific serial config */
+#define CONFIG_TEGRA_ENABLE_UARTA
+#define CONFIG_SYS_NS16550_COM1		NV_PA_APB_UARTA_BASE
+
+/* I2C */
+#define CONFIG_SYS_I2C_TEGRA
+
+/* SD/MMC support */
+#define CONFIG_MMC
+#define CONFIG_GENERIC_MMC
+#define CONFIG_SUPPORT_EMMC_BOOT	/* eMMC specific */
+
+/* Environment in eMMC, before config block at the end of 1st "boot sector" */
+#define CONFIG_ENV_IS_IN_MMC
+#define CONFIG_ENV_OFFSET		(-CONFIG_ENV_SIZE + \
+					 CONFIG_TDX_CFG_BLOCK_OFFSET)
+#define CONFIG_SYS_MMC_ENV_DEV		0
+#define CONFIG_SYS_MMC_ENV_PART		1
+
+/* USB host support */
+#define CONFIG_USB_EHCI
+#define CONFIG_USB_EHCI_TEGRA
+
+/* PCI host support */
+#undef CONFIG_PCI_SCAN_SHOW
+#define CONFIG_CMD_PCI
+
+/* PCI networking support */
+#define CONFIG_E1000_NO_NVM
+
+/* General networking support */
+#define CONFIG_IP_DEFRAG
+#define CONFIG_TFTP_BLOCKSIZE		16352
+#define CONFIG_TFTP_TSIZE
+
+/* Miscellaneous commands */
+#define CONFIG_FAT_WRITE
+
+#undef CONFIG_IPADDR
+#define CONFIG_IPADDR		192.168.10.2
+#define CONFIG_NETMASK		255.255.255.0
+#undef CONFIG_SERVERIP
+#define CONFIG_SERVERIP		192.168.10.1
+
+#define CONFIG_BOOTCOMMAND \
+	"run emmcboot; setenv fdtfile ${soc}-apalis-${fdt_board}.dtb && " \
+		"run distro_bootcmd"
+
+#define DFU_ALT_EMMC_INFO	"apalis-tk1.img raw 0x0 0x500 mmcpart 1; " \
+				"boot part 0 1 mmcpart 0; " \
+				"rootfs part 0 2 mmcpart 0; " \
+				"uImage fat 0 1 mmcpart 0; " \
+				"tegra124-apalis-eval.dtb fat 0 1 mmcpart 0"
+
+#define EMMC_BOOTCMD \
+	"emmcargs=ip=off root=/dev/mmcblk0p2 rw rootfstype=ext3 rootwait\0" \
+	"emmcboot=run setup; setenv bootargs ${defargs} ${emmcargs} " \
+		"${setupargs} ${vidargs}; echo Booting from internal eMMC " \
+		"chip...; run emmcdtbload; load mmc 0:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"emmcdtbload=setenv dtbparam; load mmc 0:1 ${fdt_addr_r} " \
+		"${soc}-apalis-${fdt_board}.dtb && " \
+		"setenv dtbparam ${fdt_addr_r}\0"
+
+#define NFS_BOOTCMD \
+	"nfsargs=ip=:::::eth0:on root=/dev/nfs rw\0" \
+	"nfsboot=pci enum; run setup; setenv bootargs ${defargs} ${nfsargs} " \
+		"${setupargs} ${vidargs}; echo Booting via DHCP/TFTP/NFS...; " \
+		"run nfsdtbload; dhcp ${kernel_addr_r} " \
+		"&& run fdt_fixup && bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"nfsdtbload=setenv dtbparam; tftp ${fdt_addr_r} " \
+		"${soc}-apalis-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
+#define SD_BOOTCMD \
+	"sdargs=ip=off root=/dev/mmcblk1p2 rw rootfstype=ext3 rootwait\0" \
+	"sdboot=run setup; setenv bootargs ${defargs} ${sdargs} ${setupargs} " \
+		"${vidargs}; echo Booting from SD card in 8bit slot...; " \
+		"run sddtbload; load mmc 1:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"sddtbload=setenv dtbparam; load mmc 1:1 ${fdt_addr_r} " \
+		"${soc}-apalis-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
+#define USB_BOOTCMD \
+	"usbargs=ip=off root=/dev/sda2 rw rootfstype=ext3 rootwait\0" \
+	"usbboot=run setup; setenv bootargs ${defargs} ${setupargs} " \
+		"${usbargs} ${vidargs}; echo Booting from USB stick...; " \
+		"usb start && run usbdtbload; load usb 0:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"usbdtbload=setenv dtbparam; load usb 0:1 ${fdt_addr_r} " \
+		"${soc}-apalis-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
+#define BOARD_EXTRA_ENV_SETTINGS \
+	"boot_file=uImage\0" \
+	"console=ttyS0\0" \
+	"defargs=lp0_vec=2064@0xf46ff000 core_edp_mv=1150 core_edp_ma=4000 " \
+		"usb_port_owner_info=2 lane_owner_info=6 emc_max_dvfs=0\0" \
+	"dfu_alt_info=" DFU_ALT_EMMC_INFO "\0" \
+	EMMC_BOOTCMD \
+	"fdt_board=eval\0" \
+	"fdt_fixup=;\0" \
+	NFS_BOOTCMD \
+	SD_BOOTCMD \
+	"setethupdate=if env exists ethaddr; then; else setenv ethaddr " \
+		"00:14:2d:00:00:00; fi; pci enum && tftpboot ${loadaddr} " \
+		"flash_eth.img && source ${loadaddr}\0" \
+	"setsdupdate=setenv interface mmc; setenv drive 1; mmc rescan; " \
+		"load ${interface} ${drive}:1 ${loadaddr} flash_blk.img " \
+		"|| setenv drive 2; mmc rescan; load ${interface} ${drive}:1 " \
+		"${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	"setup=setenv setupargs igb_mac=${ethaddr} " \
+		"consoleblank=0 no_console_suspend=1 console=tty1 " \
+		"console=${console},${baudrate}n8 debug_uartport=lsport,0 " \
+		"${memargs}\0" \
+	"setupdate=run setsdupdate || run setusbupdate || run setethupdate\0" \
+	"setusbupdate=usb start && setenv interface usb; setenv drive 0; " \
+		"load ${interface} ${drive}:1 ${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	USB_BOOTCMD \
+	"vidargs=video=tegrafb0:640x480-16@60 fbcon=map:1\0"
+
+/* Increase console I/O buffer size */
+#undef CONFIG_SYS_CBSIZE
+#define CONFIG_SYS_CBSIZE		1024
+
+/* Increase arguments buffer size */
+#undef CONFIG_SYS_BARGSIZE
+#define CONFIG_SYS_BARGSIZE CONFIG_SYS_CBSIZE
+
+/* Increase print buffer size */
+#define CONFIG_SYS_PBSIZE (CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)
+
+/* Increase maximum number of arguments */
+#undef CONFIG_SYS_MAXARGS
+#define CONFIG_SYS_MAXARGS		32
+
+#define CONFIG_CMD_TIME
+
+#define CONFIG_SUPPORT_RAW_INITRD
+#define CONFIG_SYS_BOOT_RAMDISK_HIGH
+
+#include "tegra-common-usb-gadget.h"
+#include "tegra-common-post.h"
+
+/* Reserve top 1M for secure RAM */
+#define CONFIG_ARMV7_SECURE_BASE		0xfff00000
+#define CONFIG_ARMV7_SECURE_RESERVE_SIZE	0x00100000
+
+#endif /* __CONFIG_H */
diff --git a/include/configs/apalis_imx6.h b/include/configs/apalis_imx6.h
new file mode 100644
index 0000000..8dce5af
--- /dev/null
+++ b/include/configs/apalis_imx6.h
@@ -0,0 +1,347 @@
+/*
+ * Copyright 2013-2015 Toradex, Inc.
+ *
+ * Configuration settings for the Toradex Apalis iMX6
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#include "mx6_common.h"
+#define CONFIG_SYS_THUMB_BUILD
+/* These are not provided in SPL and result in a linker error */
+#if !defined(CONFIG_SPL_BUILD)
+#define CONFIG_USE_ARCH_MEMCPY
+#define CONFIG_USE_ARCH_MEMSET
+#endif
+
+#undef CONFIG_DISPLAY_BOARDINFO
+#define CONFIG_DISPLAY_BOARDINFO_LATE	/* Calls show_board_info() */
+
+#define CONFIG_MACH_TYPE		4886
+
+#define CONFIG_SYS_GENERIC_BOARD
+
+#include <asm/arch/imx-regs.h>
+#include <asm/imx-common/gpio.h>
+
+#ifdef CONFIG_SPL
+#include "imx6_spl.h"
+#define CONFIG_SPL_PAD_TO		0x11000 /* 4k IVT/DCD, 64k SPL */
+#endif
+
+#define CONFIG_CMDLINE_TAG
+#define CONFIG_SETUP_MEMORY_TAGS
+#define CONFIG_INITRD_TAG
+#define CONFIG_REVISION_TAG
+#define CONFIG_SERIAL_TAG
+
+/* Size of malloc() pool */
+#define CONFIG_SYS_MALLOC_LEN		(32 * 1024 * 1024)
+
+#define CONFIG_BOARD_EARLY_INIT_F
+#define CONFIG_BOARD_LATE_INIT
+#define CONFIG_MISC_INIT_R
+
+#define CONFIG_MXC_UART
+#define CONFIG_MXC_UART_BASE		UART1_BASE
+
+/* Make the HW version stuff available in U-Boot env */
+#define CONFIG_VERSION_VARIABLE		/* ver environment variable */
+#define CONFIG_ENV_VARS_UBOOT_CONFIG
+#define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
+
+/* I2C Configs */
+#define CONFIG_SYS_I2C
+#define CONFIG_SYS_I2C_MXC
+#define CONFIG_SYS_I2C_MXC_I2C1         /* enable I2C bus 1 */
+#define CONFIG_SYS_I2C_MXC_I2C2         /* enable I2C bus 2 */
+#define CONFIG_SYS_I2C_MXC_I2C3         /* enable I2C bus 3 */
+#define CONFIG_SYS_I2C_SPEED		100000
+
+/* OCOTP Configs */
+#define CONFIG_CMD_FUSE
+#ifdef CONFIG_CMD_FUSE
+#define CONFIG_MXC_OCOTP
+#endif
+
+/* MMC Configs */
+#define CONFIG_FSL_ESDHC
+#define CONFIG_FSL_USDHC
+#define CONFIG_SYS_FSL_ESDHC_ADDR	0
+#define CONFIG_SYS_FSL_USDHC_NUM	3
+
+#define CONFIG_SUPPORT_EMMC_BOOT	/* eMMC specific */
+#define CONFIG_MMC
+#define CONFIG_GENERIC_MMC
+#define CONFIG_BOUNCE_BUFFER
+#define CONFIG_FAT_WRITE
+#define CONFIG_DOS_PARTITION
+
+#ifdef CONFIG_MX6Q
+#define CONFIG_CMD_SATA
+#endif
+
+/*
+ * SATA Configs
+ */
+#ifdef CONFIG_CMD_SATA
+#define CONFIG_DWC_AHSATA
+#define CONFIG_SYS_SATA_MAX_DEVICE	1
+#define CONFIG_DWC_AHSATA_PORT_ID	0
+#define CONFIG_DWC_AHSATA_BASE_ADDR	SATA_ARB_BASE_ADDR
+#define CONFIG_LBA48
+#define CONFIG_LIBATA
+#endif
+
+/* Network */
+#define CONFIG_FEC_MXC
+#define CONFIG_MII
+#define IMX_FEC_BASE			ENET_BASE_ADDR
+#define CONFIG_FEC_XCV_TYPE		RGMII
+#define CONFIG_ETHPRIME			"FEC"
+#define CONFIG_FEC_MXC_PHYADDR		6
+#define CONFIG_PHYLIB
+#define CONFIG_PHY_MICREL
+#define CONFIG_PHY_MICREL_KSZ9031
+#define CONFIG_IP_DEFRAG
+#define CONFIG_TFTP_BLOCKSIZE		4096
+#define CONFIG_TFTP_TSIZE
+
+/* USB Configs */
+/* Host */
+#define CONFIG_USB_HOST_ETHER
+#define CONFIG_USB_MAX_CONTROLLER_COUNT		2
+#define CONFIG_EHCI_HCD_INIT_AFTER_RESET	/* For OTG port */
+#define CONFIG_MXC_USB_PORTSC		(PORT_PTS_UTMI | PORT_PTS_PTW)
+#define CONFIG_MXC_USB_FLAGS		0
+#define CONFIG_USB_KEYBOARD
+#ifdef CONFIG_USB_KEYBOARD
+#define CONFIG_SYS_USB_EVENT_POLL
+#endif /* CONFIG_USB_KEYBOARD */
+/* Client */
+#define CONFIG_USB_GADGET_VBUS_DRAW	2
+#define CONFIG_USBD_HS
+
+#define CONFIG_USB_GADGET_MASS_STORAGE
+#define CONFIG_USB_FUNCTION_MASS_STORAGE
+#define CONFIG_G_DNL_MANUFACTURER	"Toradex"
+/* USB DFU */
+#define CONFIG_DFU_MMC
+
+/* Miscellaneous commands */
+#define CONFIG_CMD_BMODE
+#define CONFIG_MXC_GPIO
+
+/* Framebuffer and LCD */
+#define CONFIG_VIDEO_IPUV3
+#define CONFIG_SYS_CONSOLE_IS_IN_ENV
+#define CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE
+#define CONFIG_VIDEO_BMP_RLE8
+#define CONFIG_SPLASH_SCREEN
+#define CONFIG_SPLASH_SCREEN_ALIGN
+#define CONFIG_BMP_16BPP
+#define CONFIG_VIDEO_LOGO
+#define CONFIG_VIDEO_BMP_LOGO
+#define CONFIG_IPUV3_CLK		260000000
+#define CONFIG_CMD_HDMIDETECT
+#define CONFIG_CONSOLE_MUX
+#define CONFIG_IMX_HDMI
+#define CONFIG_IMX_VIDEO_SKIP
+#define CONFIG_CMD_BMP
+
+/* allow to overwrite serial and ethaddr */
+#define CONFIG_ENV_OVERWRITE
+#define CONFIG_CONS_INDEX		1
+#define CONFIG_BAUDRATE			115200
+
+/* Command definition */
+#undef CONFIG_CMD_LOADB
+#undef CONFIG_CMD_LOADS
+#undef CONFIG_CMD_NFS
+#undef CONFIG_CMD_FLASH
+
+#undef CONFIG_IPADDR
+#define CONFIG_IPADDR			192.168.10.2
+#define CONFIG_NETMASK			255.255.255.0
+#undef CONFIG_SERVERIP
+#define CONFIG_SERVERIP			192.168.10.1
+
+#define CONFIG_LOADADDR			0x12000000
+#define CONFIG_SYS_TEXT_BASE		0x17800000
+
+#ifndef CONFIG_SPL_BUILD
+#define BOOTENV_RUN_NET_USB_START ""
+#define BOOT_TARGET_DEVICES(func) \
+        func(MMC, mmc, 1) \
+        func(MMC, mmc, 2) \
+        func(USB, usb, 0) \
+        func(DHCP, dhcp, na)
+#include <config_distro_bootcmd.h>
+#include <config_distro_defaults.h>
+#else
+#define BOOTENV
+#endif
+
+#define DFU_ALT_EMMC_INFO \
+	"u-boot.imx raw 0x2 0x3ff mmcpart 0;" \
+	"boot part 0 1;" \
+	"rootfs part 0 2;" \
+	"uImage fat 0 1;" \
+	"imx6q-colibri-eval-v3.dtb fat 0 1;" \
+	"imx6q-colibri-cam-eval-v3.dtb fat 0 1"
+
+#define EMMC_BOOTCMD \
+	"emmcargs=ip=off root=/dev/mmcblk0p2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"emmcboot=run setup; " \
+		"setenv bootargs ${defargs} ${emmcargs} ${setupargs} " \
+		"${vidargs}; echo Booting from internal eMMC chip...; "	\
+		"run emmcdtbload; load mmc 0:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} ${dtbparam}\0" \
+	"emmcdtbload=setenv dtbparam; load mmc 0:1 ${fdt_addr_r} " \
+		"${fdt_file} && setenv dtbparam \" - ${fdt_addr_r}\" && true\0"
+
+#define MEM_LAYOUT_ENV_SETTINGS \
+	"bootm_size=0x20000000\0" \
+	"fdt_addr_r=0x12000000\0" \
+	"fdt_high=0xffffffff\0" \
+	"initrd_high=0xffffffff\0" \
+	"kernel_addr_r=0x11000000\0" \
+	"pxefile_addr_r=0x17100000\0" \
+	"ramdisk_addr_r=0x12100000\0" \
+	"scriptaddr=0x17000000\0"
+
+#define NFS_BOOTCMD \
+	"nfsargs=ip=:::::eth0:on root=/dev/nfs rw\0" \
+	"nfsboot=run setup; " \
+		"setenv bootargs ${defargs} ${nfsargs} ${setupargs} " \
+		"${vidargs}; echo Booting via DHCP/TFTP/NFS...; " \
+		"run nfsdtbload; dhcp ${kernel_addr_r} " \
+		"&& run fdt_fixup && bootm ${kernel_addr_r} ${dtbparam}\0" \
+	"nfsdtbload=setenv dtbparam; tftp ${fdt_addr_r} ${fdt_file} " \
+		"&& setenv dtbparam \" - ${fdt_addr_r}\" && true\0"
+
+#define SD_BOOTCMD						\
+	"sdargs=ip=off root=/dev/mmcblk1p2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"sdboot=run setup; " \
+		"setenv bootargs ${defargs} ${sdargs} ${setupargs} " \
+		"${vidargs}; echo Booting from SD card; " \
+		"run sddtbload; load mmc 1:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} ${dtbparam}\0" \
+	"sddtbload=setenv dtbparam; load mmc 1:1 ${fdt_addr_r} " \
+		"${fdt_file} && setenv dtbparam \" - ${fdt_addr_r}\" && true\0"
+
+#define USB_BOOTCMD \
+	"usbargs=ip=off root=/dev/sda2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"usbboot=run setup; setenv bootargs ${defargs} ${setupargs} " \
+		"${usbargs} ${vidargs}; echo Booting from USB stick...; " \
+		"usb start && run usbdtbload; load usb 0:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} ${dtbparam}\0" \
+	"usbdtbload=setenv dtbparam; load usb 0:1 ${fdt_addr_r} " \
+		"${fdt_file} && setenv dtbparam \" - ${fdt_addr_r}\" && true\0"
+
+#ifndef CONFIG_TDX_APALIS_IMX6_V1_0
+#define FDT_FILE "imx6q-apalis-eval.dtb"
+#define FDT_FILE_V1_0 "imx6q-apalis_v1_0-eval.dtb"
+#else
+#define FDT_FILE "imx6q-apalis_v1_0-eval.dtb"
+#endif
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	BOOTENV \
+	"bootcmd=run emmcboot ; echo ; echo emmcboot failed ; " \
+		"run distro_bootcmd ; " \
+		"usb start ;" \
+		"setenv stdout serial,vga ; setenv stdin serial,usbkbd\0" \
+	"boot_file=uImage\0" \
+	"console=ttymxc0\0" \
+	"defargs=enable_wait_mode=off vmalloc=400M\0" \
+	"dfu_alt_info=" DFU_ALT_EMMC_INFO "\0" \
+	EMMC_BOOTCMD \
+	"fdt_file=" FDT_FILE "\0" \
+	"fdt_fixup=;\0" \
+	MEM_LAYOUT_ENV_SETTINGS \
+	NFS_BOOTCMD \
+	SD_BOOTCMD \
+	"setethupdate=if env exists ethaddr; then; else setenv ethaddr " \
+		"00:14:2d:00:00:00; fi; tftpboot ${loadaddr} " \
+		"flash_eth.img && source ${loadaddr}\0" \
+	"setsdupdate=setenv interface mmc; setenv drive 1; mmc rescan; " \
+		"load ${interface} ${drive}:1 ${loadaddr} flash_blk.img " \
+		"|| setenv drive 2; mmc rescan; load ${interface} ${drive}:1" \
+		" ${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	"setup=setenv setupargs fec_mac=${ethaddr} " \
+		"consoleblank=0 no_console_suspend=1 console=tty1 " \
+		"console=${console},${baudrate}n8\0 " \
+	"setupdate=run setsdupdate || run setusbupdate || run setethupdate\0" \
+	"setusbupdate=usb start && setenv interface usb; setenv drive 0; " \
+		"load ${interface} ${drive}:1 ${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	"splashpos=m,m\0" \
+	"vidargs=mxc_hdmi.only_cea=1 " \
+		"video=mxcfb0:dev=hdmi,1920x1080M@60,if=RGB24 " \
+		"video=mxcfb1:off video=mxcfb2:off video=mxcfb3:off " \
+		"fbmem=32M\0 "
+
+/* Miscellaneous configurable options */
+#define CONFIG_SYS_LONGHELP
+#define CONFIG_AUTO_COMPLETE
+#undef CONFIG_SYS_CBSIZE
+#define CONFIG_SYS_CBSIZE		1024
+#undef CONFIG_SYS_MAXARGS
+#define CONFIG_SYS_MAXARGS		48
+
+#define CONFIG_SYS_ALT_MEMTEST
+#define CONFIG_SYS_MEMTEST_START	0x10000000
+#define CONFIG_SYS_MEMTEST_END		0x10010000
+#define CONFIG_SYS_MEMTEST_SCRATCH	0x10800000
+
+#define CONFIG_SYS_LOAD_ADDR		CONFIG_LOADADDR
+
+#define CONFIG_CMDLINE_EDITING
+
+/* Physical Memory Map */
+#define CONFIG_NR_DRAM_BANKS		1
+#define PHYS_SDRAM			MMDC0_ARB_BASE_ADDR
+
+#define CONFIG_SYS_SDRAM_BASE		PHYS_SDRAM
+#define CONFIG_SYS_INIT_RAM_ADDR	IRAM_BASE_ADDR
+#define CONFIG_SYS_INIT_RAM_SIZE	IRAM_SIZE
+
+#define CONFIG_SYS_INIT_SP_OFFSET \
+	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
+#define CONFIG_SYS_INIT_SP_ADDR \
+	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
+
+/* FLASH and environment organization */
+#define CONFIG_SYS_NO_FLASH
+
+#define CONFIG_ENV_SIZE			(8 * 1024)
+
+#define CONFIG_ENV_IS_IN_MMC
+
+#if defined(CONFIG_ENV_IS_IN_MMC)
+/* Environment in eMMC, before config block at the end of 1st "boot sector" */
+#define CONFIG_ENV_OFFSET		(-CONFIG_ENV_SIZE + \
+					 CONFIG_TDX_CFG_BLOCK_OFFSET)
+#define CONFIG_SYS_MMC_ENV_DEV		0
+#define CONFIG_SYS_MMC_ENV_PART		1
+#endif
+
+#define CONFIG_OF_SYSTEM_SETUP
+
+#define CONFIG_CMD_TIME
+
+#define CONFIG_SUPPORT_RAW_INITRD
+
+#define CONFIG_CRC32_VERIFY
+
+#endif	/* __CONFIG_H */
diff --git a/include/configs/apalis_t30.h b/include/configs/apalis_t30.h
index d38302d..3b9c434 100644
--- a/include/configs/apalis_t30.h
+++ b/include/configs/apalis_t30.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014-2015 Marcel Ziswiler
+ * Copyright (c) 2012-2016 Toradex, Inc.
  *
  * Configuration settings for the Toradex Apalis T30 modules.
  *
@@ -15,8 +15,11 @@
 
 #define CONFIG_ARCH_MISC_INIT
 
+/* VDD core PMIC */
+#define CONFIG_TEGRA_VDD_CORE_TPS62362_SET_TPS65911_GPIO1
+
 /* High-level configuration options */
-#define CONFIG_TEGRA_BOARD_STRING	"Toradex Apalis T30"
+#define CONFIG_DISPLAY_BOARDINFO_LATE	/* Calls show_board_info() */
 
 /* Board-specific serial config */
 #define CONFIG_TEGRA_ENABLE_UARTA
@@ -24,26 +27,36 @@
 
 #define CONFIG_MACH_TYPE		MACH_TYPE_APALIS_T30
 
+#define CONFIG_INITRD_TAG
+#define CONFIG_REVISION_TAG
+#define CONFIG_SERIAL_TAG
+
+/* Make the HW version stuff available in U-Boot env */
+#define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
+
 /* I2C */
 #define CONFIG_SYS_I2C_TEGRA
 
 /* SD/MMC support */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
+#define CONFIG_SUPPORT_EMMC_BOOT	/* eMMC specific */
 
-/* Environment in eMMC, at the end of 2nd "boot sector" */
+/* Environment in eMMC, before config block at the end of 1st "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
-#define CONFIG_ENV_OFFSET		(-CONFIG_ENV_SIZE)
+#define CONFIG_ENV_OFFSET		(-CONFIG_ENV_SIZE + \
+					 CONFIG_TDX_CFG_BLOCK_OFFSET)
 #define CONFIG_SYS_MMC_ENV_DEV		0
-#define CONFIG_SYS_MMC_ENV_PART		2
+#define CONFIG_SYS_MMC_ENV_PART		1
 
 /* USB host support */
 #define CONFIG_USB_EHCI
 #define CONFIG_USB_EHCI_TEGRA
 
 /* PCI host support */
+#undef CONFIG_PCI_SCAN_SHOW
 #define CONFIG_CMD_PCI
+#undef APALIS_T30_PCIE_EVALBOARD_INIT
 
 /* PCI networking support */
 #define CONFIG_E1000_NO_NVM
@@ -53,9 +66,105 @@
 #define CONFIG_TFTP_BLOCKSIZE		16352
 #define CONFIG_TFTP_TSIZE
 
+/* LCD support */
+#define CONFIG_SYS_WHITE_ON_BLACK
+#define CONFIG_CMD_BMP
+#define CONFIG_LCD_LOGO
+
 /* Miscellaneous commands */
 #define CONFIG_FAT_WRITE
 
+#undef CONFIG_IPADDR
+#define CONFIG_IPADDR		192.168.10.2
+#define CONFIG_NETMASK		255.255.255.0
+#undef CONFIG_SERVERIP
+#define CONFIG_SERVERIP		192.168.10.1
+
+#define CONFIG_BOOTCOMMAND \
+	"run emmcboot; setenv fdtfile ${soc}-apalis-${fdt_board}.dtb && " \
+		"run distro_bootcmd"
+
+#define DFU_ALT_EMMC_INFO	"apalis_t30.img raw 0x0 0x500 mmcpart 1; " \
+				"boot part 0 1 mmcpart 0; " \
+				"rootfs part 0 2 mmcpart 0; " \
+				"uImage fat 0 1 mmcpart 0; " \
+				"tegra30-apalis-eval.dtb fat 0 1 mmcpart 0"
+
+#define EMMC_BOOTCMD \
+	"emmcargs=ip=off root=/dev/mmcblk0p2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"emmcboot=run setup; setenv bootargs ${defargs} ${emmcargs} " \
+		"${setupargs} ${vidargs}; echo Booting from internal eMMC " \
+		"chip...; run emmcdtbload; load mmc 0:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"emmcdtbload=setenv dtbparam; load mmc 0:1 ${fdt_addr_r} " \
+		"${soc}-apalis-${fdt_board}.dtb && " \
+		"setenv dtbparam ${fdt_addr_r}\0"
+
+#define NFS_BOOTCMD \
+	"nfsargs=ip=:::::eth0:on root=/dev/nfs rw\0" \
+	"nfsboot=pci enum; run setup; setenv bootargs ${defargs} ${nfsargs} " \
+		"${setupargs} ${vidargs}; echo Booting via DHCP/TFTP/NFS...; " \
+		"run nfsdtbload; dhcp ${kernel_addr_r} " \
+		"&& run fdt_fixup && bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"nfsdtbload=setenv dtbparam; tftp ${fdt_addr_r} " \
+		"${soc}-apalis-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
+#define SD_BOOTCMD \
+	"sdargs=ip=off root=/dev/mmcblk1p2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"sdboot=run setup; setenv bootargs ${defargs} ${sdargs} ${setupargs} " \
+		"${vidargs}; echo Booting from SD card in 8bit slot...; " \
+		"run sddtbload; load mmc 1:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"sddtbload=setenv dtbparam; load mmc 1:1 ${fdt_addr_r} " \
+		"${soc}-apalis-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
+#define USB_BOOTCMD \
+	"usbargs=ip=off root=/dev/sda2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"usbboot=run setup; setenv bootargs ${defargs} ${setupargs} " \
+		"${usbargs} ${vidargs}; echo Booting from USB stick...; " \
+		"usb start && run usbdtbload; load usb 0:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"usbdtbload=setenv dtbparam; load usb 0:1 ${fdt_addr_r} " \
+		"${soc}-apalis-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
+#define BOARD_EXTRA_ENV_SETTINGS \
+	"boot_file=uImage\0" \
+	"console=ttyS0\0" \
+	"defargs=core_edp_mv=1300 usb_high_speed=1\0" \
+	"dfu_alt_info=" DFU_ALT_EMMC_INFO "\0" \
+	EMMC_BOOTCMD \
+	"fdt_board=eval\0" \
+	"fdt_fixup=;\0" \
+	NFS_BOOTCMD \
+	SD_BOOTCMD \
+	"setethupdate=if env exists ethaddr; then; else setenv ethaddr " \
+		"00:14:2d:00:00:00; fi; pci enum && tftpboot ${loadaddr} " \
+		"flash_eth.img && source ${loadaddr}\0" \
+	"setsdupdate=setenv interface mmc; setenv drive 1; mmc rescan; " \
+		"load ${interface} ${drive}:1 ${loadaddr} flash_blk.img " \
+		"|| setenv drive 2; mmc rescan; load ${interface} ${drive}:1 " \
+		"${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	"setup=setenv setupargs igb_mac=${ethaddr} " \
+		"consoleblank=0 no_console_suspend=1 console=tty1 " \
+		"console=${console},${baudrate}n8 debug_uartport=lsport,0 " \
+		"${memargs}\0" \
+	"setupdate=run setsdupdate || run setusbupdate || run setethupdate\0" \
+	"setusbupdate=usb start && setenv interface usb; setenv drive 0; " \
+		"load ${interface} ${drive}:1 ${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	USB_BOOTCMD \
+	"vidargs=video=tegrafb0:640x480-16@60 fbcon=map:1\0"
+
 /* Increase console I/O buffer size */
 #undef CONFIG_SYS_CBSIZE
 #define CONFIG_SYS_CBSIZE		1024
@@ -71,6 +180,11 @@
 #undef CONFIG_SYS_MAXARGS
 #define CONFIG_SYS_MAXARGS		32
 
+#define CONFIG_CMD_TIME
+
+#define CONFIG_SUPPORT_RAW_INITRD
+#define CONFIG_SYS_BOOT_RAMDISK_HIGH
+
 #include "tegra-common-usb-gadget.h"
 #include "tegra-common-post.h"
 
diff --git a/include/configs/beaver.h b/include/configs/beaver.h
index ab1ab14..ffa2909 100644
--- a/include/configs/beaver.h
+++ b/include/configs/beaver.h
@@ -30,7 +30,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/cardhu.h b/include/configs/cardhu.h
index 462b784..29a74c7 100644
--- a/include/configs/cardhu.h
+++ b/include/configs/cardhu.h
@@ -33,7 +33,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/cei-tk1-som.h b/include/configs/cei-tk1-som.h
index f3bb279..4688b33 100644
--- a/include/configs/cei-tk1-som.h
+++ b/include/configs/cei-tk1-som.h
@@ -32,7 +32,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/colibri_imx6.h b/include/configs/colibri_imx6.h
new file mode 100644
index 0000000..af49bcc
--- /dev/null
+++ b/include/configs/colibri_imx6.h
@@ -0,0 +1,318 @@
+/*
+ * Copyright 2013-2015 Toradex, Inc.
+ *
+ * Configuration settings for the Toradex Colibri iMX6
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#include "mx6_common.h"
+#define CONFIG_SYS_THUMB_BUILD
+/* These are not provided in SPL and result in a linker error */
+#if !defined(CONFIG_SPL_BUILD)
+#define CONFIG_USE_ARCH_MEMCPY
+#define CONFIG_USE_ARCH_MEMSET
+#endif
+
+#undef CONFIG_DISPLAY_BOARDINFO
+#define CONFIG_DISPLAY_BOARDINFO_LATE	/* Calls show_board_info() */
+
+#define CONFIG_SYS_GENERIC_BOARD
+
+#include <asm/arch/imx-regs.h>
+#include <asm/imx-common/gpio.h>
+
+#ifdef CONFIG_SPL
+#include "imx6_spl.h"
+#define CONFIG_SPL_PAD_TO		0x11000 /* 4k IVT/DCD, 64k SPL */
+#endif
+
+#define CONFIG_CMDLINE_TAG
+#define CONFIG_SETUP_MEMORY_TAGS
+#define CONFIG_INITRD_TAG
+#define CONFIG_REVISION_TAG
+#define CONFIG_SERIAL_TAG
+
+/* Size of malloc() pool */
+#define CONFIG_SYS_MALLOC_LEN		(32 * 1024 * 1024)
+
+#define CONFIG_BOARD_EARLY_INIT_F
+#define CONFIG_BOARD_LATE_INIT
+#define CONFIG_MISC_INIT_R
+
+#define CONFIG_MXC_UART
+#define CONFIG_MXC_UART_BASE		UART1_BASE
+
+/* Make the HW version stuff available in U-Boot env */
+#define CONFIG_VERSION_VARIABLE		/* ver environment variable */
+#define CONFIG_ENV_VARS_UBOOT_CONFIG
+#define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
+
+/* I2C Configs */
+#define CONFIG_SYS_I2C
+#define CONFIG_SYS_I2C_MXC
+#define CONFIG_SYS_I2C_MXC_I2C1         /* enable I2C bus 1 */
+#define CONFIG_SYS_I2C_MXC_I2C2         /* enable I2C bus 2 */
+#define CONFIG_SYS_I2C_MXC_I2C3         /* enable I2C bus 3 */
+#define CONFIG_SYS_I2C_SPEED		100000
+
+/* OCOTP Configs */
+#define CONFIG_CMD_FUSE
+#ifdef CONFIG_CMD_FUSE
+#define CONFIG_MXC_OCOTP
+#endif
+
+/* MMC Configs */
+#define CONFIG_FSL_ESDHC
+#define CONFIG_FSL_USDHC
+#define CONFIG_SYS_FSL_ESDHC_ADDR	0
+#define CONFIG_SYS_FSL_USDHC_NUM	2
+
+#define CONFIG_SUPPORT_EMMC_BOOT	/* eMMC specific */
+#define CONFIG_MMC
+#define CONFIG_GENERIC_MMC
+#define CONFIG_BOUNCE_BUFFER
+#define CONFIG_FAT_WRITE
+#define CONFIG_DOS_PARTITION
+
+/* Network */
+#define CONFIG_FEC_MXC
+#define CONFIG_MII
+#define IMX_FEC_BASE			ENET_BASE_ADDR
+#define CONFIG_FEC_XCV_TYPE		RMII
+#define CONFIG_ETHPRIME			"FEC"
+#define CONFIG_FEC_MXC_PHYADDR		1
+#define CONFIG_PHYLIB
+#define CONFIG_PHY_MICREL
+#define CONFIG_IP_DEFRAG
+#define CONFIG_TFTP_BLOCKSIZE		16352
+#define CONFIG_TFTP_TSIZE
+
+/* USB Configs */
+/* Host */
+#define CONFIG_USB_HOST_ETHER
+#define CONFIG_USB_MAX_CONTROLLER_COUNT		2
+#define CONFIG_EHCI_HCD_INIT_AFTER_RESET	/* For OTG port */
+#define CONFIG_MXC_USB_PORTSC		(PORT_PTS_UTMI | PORT_PTS_PTW)
+#define CONFIG_MXC_USB_FLAGS		0
+#define CONFIG_USB_KEYBOARD
+#ifdef CONFIG_USB_KEYBOARD
+#define CONFIG_SYS_USB_EVENT_POLL
+#endif /* CONFIG_USB_KEYBOARD */
+/* Client */
+#define CONFIG_USB_GADGET_VBUS_DRAW	2
+#define CONFIG_USBD_HS
+
+#define CONFIG_USB_GADGET_MASS_STORAGE
+#define CONFIG_USB_FUNCTION_MASS_STORAGE
+#define CONFIG_G_DNL_MANUFACTURER	"Toradex"
+/* USB DFU */
+#define CONFIG_DFU_MMC
+
+/* Miscellaneous commands */
+#define CONFIG_CMD_BMODE
+#define CONFIG_MXC_GPIO
+
+/* Framebuffer and LCD */
+#define CONFIG_VIDEO_IPUV3
+#define CONFIG_SYS_CONSOLE_IS_IN_ENV
+#define CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE
+#define CONFIG_VIDEO_BMP_RLE8
+#define CONFIG_SPLASH_SCREEN
+#define CONFIG_SPLASH_SCREEN_ALIGN
+#define CONFIG_BMP_16BPP
+#define CONFIG_VIDEO_LOGO
+#define CONFIG_VIDEO_BMP_LOGO
+#define CONFIG_IPUV3_CLK		260000000
+#define CONFIG_CMD_HDMIDETECT
+#define CONFIG_CONSOLE_MUX
+#define CONFIG_IMX_HDMI
+#define CONFIG_IMX_VIDEO_SKIP
+#define CONFIG_CMD_BMP
+
+/* allow to overwrite serial and ethaddr */
+#define CONFIG_ENV_OVERWRITE
+#define CONFIG_CONS_INDEX		1
+#define CONFIG_BAUDRATE			115200
+
+/* Command definition */
+#undef CONFIG_CMD_LOADB
+#undef CONFIG_CMD_LOADS
+#undef CONFIG_CMD_NFS
+#undef CONFIG_CMD_FLASH
+
+#undef CONFIG_IPADDR
+#define CONFIG_IPADDR			192.168.10.2
+#define CONFIG_NETMASK			255.255.255.0
+#undef CONFIG_SERVERIP
+#define CONFIG_SERVERIP			192.168.10.1
+
+#define CONFIG_LOADADDR			0x12000000
+#define CONFIG_SYS_TEXT_BASE		0x17800000
+
+#ifndef CONFIG_SPL_BUILD
+#define BOOTENV_RUN_NET_USB_START ""
+#define BOOT_TARGET_DEVICES(func) \
+        func(MMC, mmc, 1) \
+        func(USB, usb, 0) \
+        func(DHCP, dhcp, na)
+#include <config_distro_bootcmd.h>
+#include <config_distro_defaults.h>
+#else
+#define BOOTENV
+#endif
+
+#define DFU_ALT_EMMC_INFO \
+	"u-boot.imx raw 0x2 0x3ff mmcpart 0;" \
+	"boot part 0 1;" \
+	"rootfs part 0 2;" \
+	"uImage fat 0 1;" \
+	"imx6q-colibri-eval-v3.dtb fat 0 1;" \
+	"imx6q-colibri-cam-eval-v3.dtb fat 0 1"
+
+#define EMMC_BOOTCMD \
+	"emmcargs=ip=off root=/dev/mmcblk0p2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"emmcboot=run setup; " \
+		"setenv bootargs ${defargs} ${emmcargs} ${setupargs} " \
+		"${vidargs}; echo Booting from internal eMMC chip...; "	\
+		"run emmcdtbload; load mmc 0:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} ${dtbparam}\0" \
+	"emmcdtbload=setenv dtbparam; load mmc 0:1 ${fdt_addr_r} " \
+		"${fdt_file} && setenv dtbparam \" - ${fdt_addr_r}\" && true\0"
+
+#define MEM_LAYOUT_ENV_SETTINGS \
+	"bootm_size=0x10000000\0" \
+	"fdt_addr_r=0x12000000\0" \
+	"fdt_high=0xffffffff\0" \
+	"initrd_high=0xffffffff\0" \
+	"kernel_addr_r=0x11000000\0" \
+	"pxefile_addr_r=0x17100000\0" \
+	"ramdisk_addr_r=0x12100000\0" \
+	"scriptaddr=0x17000000\0"
+
+#define NFS_BOOTCMD \
+	"nfsargs=ip=:::::eth0:on root=/dev/nfs rw\0" \
+	"nfsboot=run setup; " \
+		"setenv bootargs ${defargs} ${nfsargs} ${setupargs} " \
+		"${vidargs}; echo Booting via DHCP/TFTP/NFS...; " \
+		"run nfsdtbload; dhcp ${kernel_addr_r} " \
+		"&& run fdt_fixup && bootm ${kernel_addr_r} ${dtbparam}\0" \
+	"nfsdtbload=setenv dtbparam; tftp ${fdt_addr_r} ${fdt_file} " \
+		"&& setenv dtbparam \" - ${fdt_addr_r}\" && true\0"
+
+#define SD_BOOTCMD						\
+	"sdargs=ip=off root=/dev/mmcblk1p2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"sdboot=run setup; " \
+		"setenv bootargs ${defargs} ${sdargs} ${setupargs} " \
+		"${vidargs}; echo Booting from SD card; " \
+		"run sddtbload; load mmc 1:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} ${dtbparam}\0" \
+	"sddtbload=setenv dtbparam; load mmc 1:1 ${fdt_addr_r} " \
+		"${fdt_file} && setenv dtbparam \" - ${fdt_addr_r}\" && true\0"
+
+#define USB_BOOTCMD \
+	"usbargs=ip=off root=/dev/sda2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"usbboot=run setup; setenv bootargs ${defargs} ${setupargs} " \
+		"${usbargs} ${vidargs}; echo Booting from USB stick...; " \
+		"usb start && run usbdtbload; load usb 0:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} ${dtbparam}\0" \
+	"usbdtbload=setenv dtbparam; load usb 0:1 ${fdt_addr_r} " \
+		"${fdt_file} && setenv dtbparam \" - ${fdt_addr_r}\" && true\0"
+
+#define FDT_FILE "imx6dl-colibri-eval-v3.dtb"
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	BOOTENV \
+	"bootcmd=run emmcboot ; echo ; echo emmcboot failed ; " \
+		"run distro_bootcmd ; " \
+		"usb start ;" \
+		"setenv stdout serial,vga ; setenv stdin serial,usbkbd\0" \
+	"boot_file=uImage\0" \
+	"console=ttymxc0\0" \
+	"defargs=enable_wait_mode=off galcore.contiguousSize=50331648\0" \
+	"dfu_alt_info=" DFU_ALT_EMMC_INFO "\0" \
+	EMMC_BOOTCMD \
+	"fdt_file=" FDT_FILE "\0" \
+	"fdt_fixup=;\0" \
+	MEM_LAYOUT_ENV_SETTINGS \
+	NFS_BOOTCMD \
+	SD_BOOTCMD \
+	"setethupdate=if env exists ethaddr; then; else setenv ethaddr " \
+		"00:14:2d:00:00:00; fi; tftpboot ${loadaddr} " \
+		"flash_eth.img && source ${loadaddr}\0" \
+	"setsdupdate=setenv interface mmc; setenv drive 1; mmc rescan; load " \
+		"${interface} ${drive}:1 ${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	"setup=setenv setupargs fec_mac=${ethaddr} " \
+		"consoleblank=0 no_console_suspend=1 console=tty1 " \
+		"console=${console},${baudrate}n8\0 " \
+	"setupdate=run setsdupdate || run setusbupdate || run setethupdate\0" \
+	"setusbupdate=usb start && setenv interface usb; setenv drive 0; " \
+		"load ${interface} ${drive}:1 ${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	"splashpos=m,m\0" \
+	"vidargs=video=mxcfb0:dev=lcd,640x480M@60,if=RGB666 " \
+		"video=mxcfb1:off fbmem=8M\0 "
+
+/* Miscellaneous configurable options */
+#define CONFIG_SYS_LONGHELP
+#define CONFIG_AUTO_COMPLETE
+#undef CONFIG_SYS_CBSIZE
+#define CONFIG_SYS_CBSIZE		1024
+#undef CONFIG_SYS_MAXARGS
+#define CONFIG_SYS_MAXARGS		48
+
+#define CONFIG_SYS_ALT_MEMTEST
+#define CONFIG_SYS_MEMTEST_START	0x10000000
+#define CONFIG_SYS_MEMTEST_END		0x10010000
+#define CONFIG_SYS_MEMTEST_SCRATCH	0x10800000
+
+#define CONFIG_SYS_LOAD_ADDR		CONFIG_LOADADDR
+
+#define CONFIG_CMDLINE_EDITING
+
+/* Physical Memory Map */
+#define CONFIG_NR_DRAM_BANKS		1
+#define PHYS_SDRAM			MMDC0_ARB_BASE_ADDR
+
+#define CONFIG_SYS_SDRAM_BASE		PHYS_SDRAM
+#define CONFIG_SYS_INIT_RAM_ADDR	IRAM_BASE_ADDR
+#define CONFIG_SYS_INIT_RAM_SIZE	IRAM_SIZE
+
+#define CONFIG_SYS_INIT_SP_OFFSET \
+	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
+#define CONFIG_SYS_INIT_SP_ADDR \
+	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
+
+/* FLASH and environment organization */
+#define CONFIG_SYS_NO_FLASH
+
+#define CONFIG_ENV_SIZE			(8 * 1024)
+
+#define CONFIG_ENV_IS_IN_MMC
+
+#if defined(CONFIG_ENV_IS_IN_MMC)
+/* Environment in eMMC, before config block at the end of 1st "boot sector" */
+#define CONFIG_ENV_OFFSET		(-CONFIG_ENV_SIZE + \
+					 CONFIG_TDX_CFG_BLOCK_OFFSET)
+#define CONFIG_SYS_MMC_ENV_DEV		0
+#define CONFIG_SYS_MMC_ENV_PART		1
+#endif
+
+#define CONFIG_OF_SYSTEM_SETUP
+
+#define CONFIG_CMD_TIME
+
+#define CONFIG_SUPPORT_RAW_INITRD
+
+#define CONFIG_CRC32_VERIFY
+
+#endif	/* __CONFIG_H */
diff --git a/include/configs/colibri_imx7.h b/include/configs/colibri_imx7.h
index 309aef8..4cc5189 100644
--- a/include/configs/colibri_imx7.h
+++ b/include/configs/colibri_imx7.h
@@ -21,16 +21,19 @@
 /*#define CONFIG_DBG_MONITOR*/
 #define PHYS_SDRAM_SIZE			SZ_512M
 
+#define CONFIG_ARCH_MISC_INIT
 #define CONFIG_BOARD_EARLY_INIT_F
 #define CONFIG_BOARD_LATE_INIT
 
-#define CONFIG_DISPLAY_BOARDINFO_LATE
+#define CONFIG_DISPLAY_BOARDINFO_LATE	/* Calls show_board_info() */
+
+#define CONFIG_ENV_VARS_UBOOT_CONFIG
+#define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
 
 /* Size of malloc() pool */
 #define CONFIG_SYS_MALLOC_LEN		(32 * SZ_1M)
 
 #define CONFIG_CMD_BMODE
-
 /* Network */
 #define CONFIG_FEC_MXC
 #define CONFIG_MII
@@ -63,11 +66,14 @@
 #define CONFIG_SERVERIP			192.168.10.1
 
 #define MEM_LAYOUT_ENV_SETTINGS \
+	"bootm_size=0x10000000\0" \
 	"fdt_addr_r=0x82000000\0" \
 	"fdt_high=0xffffffff\0" \
 	"initrd_high=0xffffffff\0" \
 	"kernel_addr_r=0x81000000\0" \
-	"ramdisk_addr_r=0x82100000\0"
+	"pxefile_addr_r=0x87100000\0" \
+	"ramdisk_addr_r=0x82100000\0" \
+	"scriptaddr=0x87000000\0"
 
 #define SD_BOOTCMD \
 	"sdargs=root=/dev/mmcblk0p2 rw rootwait\0"	\
@@ -98,9 +104,19 @@
 		"ubi read ${fdt_addr_r} dtb && " \
 		"run fdt_fixup && bootz ${kernel_addr_r} - ${fdt_addr_r}\0" \
 
-#define CONFIG_BOOTCOMMAND "run ubiboot; run sdboot; run nfsboot"
+#define CONFIG_BOOTCOMMAND "run ubiboot; " \
+	"setenv fdtfile ${soc}-colibri-${fdt_board}.dtb && run distro_bootcmd;"
+
+#define BOOTENV_RUN_NET_USB_START ""
+#define BOOT_TARGET_DEVICES(func) \
+	func(MMC, mmc, 0) \
+	func(USB, usb, 0) \
+	func(DHCP, dhcp, na)
+#include <config_distro_bootcmd.h>
+#include <config_distro_defaults.h>
 
 #define CONFIG_EXTRA_ENV_SETTINGS \
+	BOOTENV \
 	MEM_LAYOUT_ENV_SETTINGS \
 	NFS_BOOTCMD \
 	SD_BOOTCMD \
@@ -128,6 +144,7 @@
 		"${board}/flash_blk.img && source ${loadaddr}\0" \
 	"splashpos=m,m\0" \
 	"videomode=video=ctfb:x:640,y:480,depth:18,pclk:39722,le:48,ri:16,up:33,lo:10,hs:96,vs:2,sync:0,vmode:0\0" \
+	"updlevel=2\0"
 
 /* Miscellaneous configurable options */
 #define CONFIG_SYS_LONGHELP
@@ -163,12 +180,14 @@
 #define CONFIG_MMCROOT			"/dev/mmcblk0p2"  /* USDHC1 */
 #define CONFIG_ENV_OFFSET		(8 * SZ_64K)
 #elif defined(CONFIG_ENV_IS_IN_NAND)
-#define CONFIG_ENV_OFFSET		(4 * 1024 * 1024)
 #define CONFIG_ENV_SECT_SIZE		(128 * 1024)
+#define CONFIG_ENV_OFFSET		(28 * CONFIG_ENV_SECT_SIZE)
 #define CONFIG_ENV_SIZE			CONFIG_ENV_SECT_SIZE
 #endif
 
 #define CONFIG_NAND_MXS
+#define CONFIG_BCH
+#define CONFIG_CMD_WRITEBCB_MX7
 #define CONFIG_CMD_NAND_TRIMFFS
 
 /* NAND stuff */
@@ -191,7 +210,8 @@
 #define MTDIDS_DEFAULT		"nand0=gpmi-nand"
 #define MTDPARTS_DEFAULT	"mtdparts=gpmi-nand:"		\
 				"512k(mx7-bcb),"		\
-				"3584k(u-boot)ro,"		\
+				"1536k(u-boot1)ro,"		\
+				"1536k(u-boot2)ro,"		\
 				"512k(u-boot-env),"		\
 				"-(ubi)"
 
diff --git a/include/configs/colibri_pxa270.h b/include/configs/colibri_pxa270.h
index e44a847..51f7877 100644
--- a/include/configs/colibri_pxa270.h
+++ b/include/configs/colibri_pxa270.h
@@ -2,7 +2,7 @@
  * Toradex Colibri PXA270 configuration file
  *
  * Copyright (C) 2010 Marek Vasut <marek.vasut@gmail.com>
- * Copyright (C) 2015 Marcel Ziswiler <marcel@ziswiler.com>
+ * Copyright (C) 2015-2016 Marcel Ziswiler <marcel@ziswiler.com>
  *
  * SPDX-License-Identifier:	GPL-2.0+
  */
@@ -21,10 +21,14 @@
 /* We will never enable dcache because we have to setup MMU first */
 #define CONFIG_SYS_DCACHE_OFF
 
+#define CONFIG_DISPLAY_BOARDINFO_LATE	/* Calls show_board_info() */
+
 /*
  * Environment settings
  */
 #define	CONFIG_ENV_OVERWRITE
+#define CONFIG_ENV_VARS_UBOOT_CONFIG
+#define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
 #define	CONFIG_SYS_MALLOC_LEN		(128 * 1024)
 #define	CONFIG_ARCH_CPU_INIT
 #define	CONFIG_BOOTCOMMAND						\
@@ -43,9 +47,6 @@
 /*
  * Serial Console Configuration
  */
-#define	CONFIG_PXA_SERIAL
-#define	CONFIG_FFUART			1
-#define CONFIG_CONS_INDEX		3
 #define	CONFIG_BAUDRATE			115200
 
 /*
@@ -94,8 +95,8 @@
 #define	CONFIG_SYS_MAXARGS		16
 #define	CONFIG_SYS_BARGSIZE		CONFIG_SYS_CBSIZE
 #define	CONFIG_SYS_DEVICE_NULLDEV	1
-#define	CONFIG_CMDLINE_EDITING		1
-#define	CONFIG_AUTO_COMPLETE		1
+#undef	CONFIG_CMDLINE_EDITING		/* Saves 2.5 KB */
+#undef	CONFIG_AUTO_COMPLETE		/* Saves 2.5 KB */
 
 /*
  * Clock Configuration
diff --git a/include/configs/colibri_t20.h b/include/configs/colibri_t20.h
index 4634989..bd4761b 100644
--- a/include/configs/colibri_t20.h
+++ b/include/configs/colibri_t20.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2012 Lucas Stach
+ * Copyright (c) 2011-2016 Toradex, Inc.
  *
  * Configuration settings for the Toradex Colibri T20 modules.
  *
@@ -11,10 +11,13 @@
 
 #include "tegra20-common.h"
 
+#undef CONFIG_SYS_DCACHE_OFF		/* breaks L4T kernel boot */
 #define CONFIG_ARCH_MISC_INIT
 
+#define CONFIG_TEGRA_EARLY_TPS6586X
+
 /* High-level configuration options */
-#define CONFIG_TEGRA_BOARD_STRING	"Toradex Colibri T20"
+#define CONFIG_DISPLAY_BOARDINFO_LATE	/* Calls show_board_info() */
 
 /* Board-specific serial config */
 #define CONFIG_TEGRA_ENABLE_UARTA
@@ -23,13 +26,19 @@
 
 #define CONFIG_MACH_TYPE		MACH_TYPE_COLIBRI_T20
 
+#define CONFIG_INITRD_TAG
+#define CONFIG_REVISION_TAG
+#define CONFIG_SERIAL_TAG
+
+/* Make the HW version stuff available in U-Boot env */
+#define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
+
 /* I2C */
 #define CONFIG_SYS_I2C_TEGRA
 
 /* SD/MMC support */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* USB host support */
 #define CONFIG_USB_EHCI
@@ -69,8 +78,9 @@
 /* Environment in NAND, 64K is a bit excessive but erase block is 512K anyway */
 #define CONFIG_ENV_IS_IN_NAND
 #define CONFIG_ENV_OFFSET		(SZ_2M)
-#undef CONFIG_ENV_SIZE		/* undef size from tegra20-common.h */
+#undef CONFIG_ENV_SIZE	/* undef size from tegra20-common.h */
 #define CONFIG_ENV_SIZE			(SZ_64K)
+#define CONFIG_ENV_RANGE		(SZ_1M)
 
 /* UBI */
 #define CONFIG_CMD_UBIFS	/* increases size by almost 60 KB */
@@ -82,8 +92,91 @@
 /* Miscellaneous commands */
 #define CONFIG_FAT_WRITE
 
+#undef CONFIG_IPADDR
+#define CONFIG_IPADDR		192.168.10.2
+#define CONFIG_NETMASK		255.255.255.0
+#undef CONFIG_SERVERIP
+#define CONFIG_SERVERIP		192.168.10.1
+
+#define CONFIG_BOOTCOMMAND \
+	"run ubiboot; setenv fdtfile ${soc}-colibri-${fdt_board}.dtb && " \
+		"run distro_bootcmd"
+
+#define DFU_ALT_NAND_INFO	"u-boot part 0,0;ubi part 0,3"
+
+#define NFS_BOOTCMD \
+	"nfsargs=ip=:::::eth0:on root=/dev/nfs rw\0" \
+	"nfsboot=usb start; run setup; setenv bootargs ${defargs} ${mtdparts}" \
+		" ${nfsargs} ${setupargs} ${vidargs}; echo Booting via DHCP/" \
+		"TFTP/NFS...; run nfsdtbload; dhcp ${kernel_addr_r} " \
+		"&& run fdt_fixup && bootz ${kernel_addr_r} - ${dtbparam}\0" \
+	"nfsdtbload=setenv dtbparam; tftp ${fdt_addr_r} " \
+		"${soc}-colibri-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
+#define SD_BOOTCMD \
+	"sdargs=ip=off root=/dev/mmcblk0p2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"sdboot=run setup; setenv bootargs ${defargs} ${mtdparts} ${sdargs} " \
+		"${setupargs} ${vidargs}; echo Booting from SD card...; " \
+		"run sddtbload; load mmc 1:1 ${kernel_addr_r} ${boot_file} " \
+		"&& run fdt_fixup && bootz ${kernel_addr_r} - ${dtbparam}\0" \
+	"sddtbload=setenv dtbparam; load mmc 1:1 ${fdt_addr_r} " \
+		"${soc}-colibri-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
+#define UBI_BOOTCMD \
+	"ubiargs=ubi.mtd=ubi root=ubi0:rootfs rootfstype=ubifs " \
+		"ubi.fm_autoconvert=1\0" \
+	"ubiboot=run setup; setenv bootargs ${defargs} ${ubiargs} ${mtdparts}" \
+		" ${setupargs} ${vidargs}; echo Booting from NAND...; " \
+		"ubi part ubi && ubi read ${kernel_addr_r} kernel &&" \
+		"run ubidtbload && run fdt_fixup; " \
+		"bootz ${kernel_addr_r} - ${dtbparam}; " \
+		"bootz ${kernel_addr_r} - \0" \
+	"ubidtbload=setenv dtbparam; " \
+		"ubi read ${fdt_addr_r} dtb && " \
+		"setenv dtbparam ${fdt_addr_r}\0"
+
+#define USB_BOOTCMD \
+	"usbargs=ip=off root=/dev/sda2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"usbboot=run setup; setenv bootargs ${defargs} ${mtdparts} " \
+		"${setupargs} ${usbargs} ${vidargs}; echo Booting from USB " \
+		"stick...; usb start && run usbdtbload; load usb 0:1 " \
+		"${kernel_addr_r} ${boot_file} && run fdt_fixup && " \
+		"bootz ${kernel_addr_r} - ${dtbparam}\0" \
+	"usbdtbload=setenv dtbparam; load usb 0:1 ${fdt_addr_r} " \
+		"${soc}-colibri-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
 #define BOARD_EXTRA_ENV_SETTINGS \
-	"mtdparts=" MTDPARTS_DEFAULT "\0"
+	"boot_file=zImage\0" \
+	"console=ttyS0\0" \
+	"defargs=vmalloc=128M usb_high_speed=1\0" \
+	"dfu_alt_info=" DFU_ALT_NAND_INFO "\0" \
+	"fdt_board=eval-v3\0" \
+	"fdt_fixup=;\0" \
+	"mtdparts=" MTDPARTS_DEFAULT "\0" \
+	NFS_BOOTCMD \
+	SD_BOOTCMD \
+	"setethupdate=if env exists ethaddr; then; else setenv ethaddr " \
+		"00:14:2d:00:00:00; fi; usb start && tftpboot ${loadaddr} " \
+		"flash_eth.img && source ${loadaddr}\0" \
+	"setsdupdate=setenv interface mmc; setenv drive 0; mmc rescan; " \
+		"load ${interface} ${drive}:1 ${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	"setup=setenv setupargs asix_mac=${ethaddr} " \
+		"consoleblank=0 no_console_suspend=1 console=tty1 " \
+		"console=${console},${baudrate}n8 debug_uartport=lsport,0 " \
+		"${memargs}\0" \
+	"setupdate=run setsdupdate || run setusbupdate || run setethupdate\0" \
+	"setusbupdate=usb start && setenv interface usb; setenv drive 0; " \
+		"load ${interface} ${drive}:1 ${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	UBI_BOOTCMD \
+	USB_BOOTCMD \
+	"vidargs=video=tegrafb0:640x480-16@60\0"
 
 /* Increase console I/O buffer size */
 #undef CONFIG_SYS_CBSIZE
@@ -100,6 +193,11 @@
 #undef CONFIG_SYS_MAXARGS
 #define CONFIG_SYS_MAXARGS		32
 
+#define CONFIG_CMD_TIME
+
+#define CONFIG_SUPPORT_RAW_INITRD
+#define CONFIG_SYS_BOOT_RAMDISK_HIGH
+
 #include "tegra-common-usb-gadget.h"
 #include "tegra-common-post.h"
 
diff --git a/include/configs/colibri_t30.h b/include/configs/colibri_t30.h
index e2a2549..71bbc82 100644
--- a/include/configs/colibri_t30.h
+++ b/include/configs/colibri_t30.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2013-2015 Stefan Agner
+ * Copyright (c) 2012-2016 Toradex, Inc.
  *
  * Configuration settings for the Toradex Colibri T30 modules.
  *
@@ -15,8 +15,11 @@
 
 #define CONFIG_ARCH_MISC_INIT
 
+/* VDD core PMIC */
+#define CONFIG_TEGRA_VDD_CORE_TPS62362_SET_TPS65911_GPIO1
+
 /* High-level configuration options */
-#define CONFIG_TEGRA_BOARD_STRING	"Toradex Colibri T30"
+#define CONFIG_DISPLAY_BOARDINFO_LATE	/* Calls show_board_info() */
 
 /* Board-specific serial config */
 #define CONFIG_TEGRA_ENABLE_UARTA
@@ -24,19 +27,27 @@
 
 #define CONFIG_MACH_TYPE		MACH_TYPE_COLIBRI_T30
 
+#define CONFIG_INITRD_TAG
+#define CONFIG_REVISION_TAG
+#define CONFIG_SERIAL_TAG
+
+/* Make the HW version stuff available in U-Boot env */
+#define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
+
 /* I2C */
 #define CONFIG_SYS_I2C_TEGRA
 
 /* SD/MMC support */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
+#define CONFIG_SUPPORT_EMMC_BOOT	/* eMMC specific */
 
-/* Environment in eMMC, at the end of 2nd "boot sector" */
+/* Environment in eMMC, before config block at the end of 1st "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
-#define CONFIG_ENV_OFFSET		(-CONFIG_ENV_SIZE)
+#define CONFIG_ENV_OFFSET		(-CONFIG_ENV_SIZE + \
+					 CONFIG_TDX_CFG_BLOCK_OFFSET)
 #define CONFIG_SYS_MMC_ENV_DEV		0
-#define CONFIG_SYS_MMC_ENV_PART		2
+#define CONFIG_SYS_MMC_ENV_PART		1
 
 /* USB host support */
 #define CONFIG_USB_EHCI
@@ -51,9 +62,103 @@
 #define CONFIG_TFTP_BLOCKSIZE		16352
 #define CONFIG_TFTP_TSIZE
 
+/* LCD support */
+#define CONFIG_SYS_WHITE_ON_BLACK
+#define CONFIG_CMD_BMP
+#define CONFIG_LCD_LOGO
+
 /* Miscellaneous commands */
 #define CONFIG_FAT_WRITE
 
+#undef CONFIG_IPADDR
+#define CONFIG_IPADDR		192.168.10.2
+#define CONFIG_NETMASK		255.255.255.0
+#undef CONFIG_SERVERIP
+#define CONFIG_SERVERIP		192.168.10.1
+
+#define CONFIG_BOOTCOMMAND \
+	"run emmcboot; setenv fdtfile ${soc}-colibri-${fdt_board}.dtb && " \
+		"run distro_bootcmd"
+
+#define DFU_ALT_EMMC_INFO	"colibri_t30.img raw 0x0 0x500 mmcpart 1; " \
+				"boot part 0 1 mmcpart 0; " \
+				"rootfs part 0 2 mmcpart 0; " \
+				"uImage fat 0 1 mmcpart 0; " \
+				"tegra30-colibri-eval-v3.dtb fat 0 1 mmcpart 0"
+
+#define EMMC_BOOTCMD \
+	"emmcargs=ip=off root=/dev/mmcblk0p2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"emmcboot=run setup; setenv bootargs ${defargs} ${emmcargs} " \
+		"${setupargs} ${vidargs}; echo Booting from internal eMMC " \
+		"chip...; run emmcdtbload; load mmc 0:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"emmcdtbload=setenv dtbparam; load mmc 0:1 ${fdt_addr_r} " \
+		"${soc}-colibri-${fdt_board}.dtb && " \
+		"setenv dtbparam ${fdt_addr_r}\0"
+
+#define NFS_BOOTCMD \
+	"nfsargs=ip=:::::eth0:on root=/dev/nfs rw\0" \
+	"nfsboot=usb start; run setup; setenv bootargs ${defargs} ${nfsargs} " \
+		"${setupargs} ${vidargs}; echo Booting via DHCP/TFTP/NFS...; " \
+		"run nfsdtbload; dhcp ${kernel_addr_r} " \
+		"&& run fdt_fixup && bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"nfsdtbload=setenv dtbparam; tftp ${fdt_addr_r} " \
+		"${soc}-colibri-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
+#define SD_BOOTCMD \
+	"sdargs=ip=off root=/dev/mmcblk1p2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"sdboot=run setup; setenv bootargs ${defargs} ${sdargs} ${setupargs} " \
+		"${vidargs}; echo Booting from SD card in 8bit slot...; " \
+		"run sddtbload; load mmc 1:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"sddtbload=setenv dtbparam; load mmc 1:1 ${fdt_addr_r} " \
+		"${soc}-colibri-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
+#define USB_BOOTCMD \
+	"usbargs=ip=off root=/dev/sda2 rw,noatime rootfstype=ext3 " \
+		"rootwait\0" \
+	"usbboot=run setup; setenv bootargs ${defargs} ${setupargs} " \
+		"${usbargs} ${vidargs}; echo Booting from USB stick...; " \
+		"usb start && run usbdtbload; load usb 0:1 ${kernel_addr_r} " \
+		"${boot_file} && run fdt_fixup && " \
+		"bootm ${kernel_addr_r} - ${dtbparam}\0" \
+	"usbdtbload=setenv dtbparam; load usb 0:1 ${fdt_addr_r} " \
+		"${soc}-colibri-${fdt_board}.dtb " \
+		"&& setenv dtbparam ${fdt_addr_r}\0"
+
+#define BOARD_EXTRA_ENV_SETTINGS \
+	"boot_file=uImage\0" \
+	"console=ttyS0\0" \
+	"defargs=core_edp_mv=1300 usb_high_speed=1\0" \
+	"dfu_alt_info=" DFU_ALT_EMMC_INFO "\0" \
+	EMMC_BOOTCMD \
+	"fdt_board=eval-v3\0" \
+	"fdt_fixup=;\0" \
+	NFS_BOOTCMD \
+	SD_BOOTCMD \
+	"setethupdate=if env exists ethaddr; then; else setenv ethaddr " \
+		"00:14:2d:00:00:00; fi; usb start && tftpboot ${loadaddr} " \
+		"flash_eth.img && source ${loadaddr}\0" \
+	"setsdupdate=setenv interface mmc; setenv drive 1; mmc rescan; " \
+		"load ${interface} ${drive}:1 ${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	"setup=setenv setupargs asix_mac=${ethaddr} " \
+		"consoleblank=0 no_console_suspend=1 console=tty1 " \
+		"console=${console},${baudrate}n8 debug_uartport=lsport,0 " \
+		"vmalloc=128M mem=1012M@2048M fbmem=12M@3060M\0" \
+	"setupdate=run setsdupdate || run setusbupdate || run setethupdate\0" \
+	"setusbupdate=usb start && setenv interface usb; setenv drive 0; " \
+		"load ${interface} ${drive}:1 ${loadaddr} flash_blk.img && " \
+		"source ${loadaddr}\0" \
+	USB_BOOTCMD \
+	"vidargs=video=tegrafb0:640x480-16@60\0"
+
 /* Increase console I/O buffer size */
 #undef CONFIG_SYS_CBSIZE
 #define CONFIG_SYS_CBSIZE		1024
@@ -69,6 +174,11 @@
 #undef CONFIG_SYS_MAXARGS
 #define CONFIG_SYS_MAXARGS		32
 
+#define CONFIG_CMD_TIME
+
+#define CONFIG_SUPPORT_RAW_INITRD
+#define CONFIG_SYS_BOOT_RAMDISK_HIGH
+
 #include "tegra-common-usb-gadget.h"
 #include "tegra-common-post.h"
 
diff --git a/include/configs/colibri_vf.h b/include/configs/colibri_vf.h
index be773a3..9fc65a5 100644
--- a/include/configs/colibri_vf.h
+++ b/include/configs/colibri_vf.h
@@ -1,7 +1,7 @@
 /*
- * Copyright 2015 Toradex, Inc.
+ * Copyright 2015-2016 Toradex, Inc.
  *
- * Configuration settings for the Toradex VF50/VF61 module.
+ * Configuration settings for the Toradex VF50/VF61 modules.
  *
  * Based on vf610twr.h:
  * Copyright 2013 Freescale Semiconductor, Inc.
@@ -13,6 +13,7 @@
 #define __CONFIG_H
 
 #include <asm/arch/imx-regs.h>
+#include <linux/sizes.h>
 
 #define CONFIG_VF610
 #define CONFIG_SYS_THUMB_BUILD
@@ -21,6 +22,7 @@
 #define CONFIG_SYS_FSL_CLK
 
 #define CONFIG_ARCH_MISC_INIT
+#define CONFIG_DISPLAY_BOARDINFO_LATE	/* Calls show_board_info() */
 
 #define CONFIG_SKIP_LOWLEVEL_INIT
 
@@ -29,18 +31,43 @@
 #define CONFIG_MXC_OCOTP
 #endif
 
+#define CONFIG_FSL_DCU_FB
+
+#ifdef CONFIG_FSL_DCU_FB
+#define CONFIG_VIDEO
+#define CONFIG_CMD_BMP
+#define CONFIG_CFB_CONSOLE
+#define CONFIG_VGA_AS_SINGLE_DEVICE
+#define CONFIG_SPLASH_SCREEN_ALIGN
+#define CONFIG_VIDEO_LOGO
+#define CONFIG_VIDEO_BMP_LOGO
+#define CONFIG_SYS_CONSOLE_FG_COL	0x00
+#define CONFIG_SYS_CONSOLE_BG_COL	0x00
+
+#define CONFIG_SYS_CONSOLE_IS_IN_ENV
+#define CONFIG_CONSOLE_MUX
+
+#define CONFIG_SYS_FSL_DCU_LE
+#define CONFIG_SYS_DCU_ADDR		DCU0_BASE_ADDR
+#define CONFIG_FSL_DCU_MAX_FB_SIZE	SZ_4M
+#define DCU_TOTAL_LAYER_NUM		64
+#define DCU_LAYER_MAX_NUM		6
+#endif
+
 /* Size of malloc() pool */
-#define CONFIG_SYS_MALLOC_LEN		(CONFIG_ENV_SIZE + 2 * 1024 * 1024)
+#define CONFIG_SYS_MALLOC_LEN		(CONFIG_ENV_SIZE + 4 * 1024 * 1024)
 
 #define CONFIG_BOARD_EARLY_INIT_F
 
 /* Allow to overwrite serial and ethaddr */
 #define CONFIG_ENV_OVERWRITE
+#define CONFIG_ENV_VARS_UBOOT_CONFIG
 #define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
 #define CONFIG_BAUDRATE			115200
 
 /* NAND support */
 #define CONFIG_CMD_NAND
+#define CONFIG_CMD_WRITEBCB
 #define CONFIG_SYS_NAND_ONFI_DETECTION
 #define CONFIG_SYS_MAX_NAND_DEVICE	1
 #define CONFIG_SYS_NAND_BASE		NFC_BASE_ADDR
@@ -67,8 +94,6 @@
 #define CONFIG_DOS_PARTITION
 
 #define CONFIG_RBTREE
-#define CONFIG_LZO
-#define CONFIG_CMD_UBIFS	/* increases size by almost 60 KB */
 
 #define CONFIG_FEC_MXC
 #define CONFIG_MII
@@ -77,6 +102,9 @@
 #define CONFIG_FEC_MXC_PHYADDR          0
 #define CONFIG_PHYLIB
 #define CONFIG_PHY_MICREL
+#define CONFIG_IP_DEFRAG
+#define CONFIG_TFTP_BLOCKSIZE		16352
+#define CONFIG_TFTP_TSIZE
 
 #define CONFIG_IPADDR		192.168.10.2
 #define CONFIG_NETMASK		255.255.255.0
@@ -89,63 +117,86 @@
 
 /* We boot from the gfxRAM area of the OCRAM. */
 #define CONFIG_SYS_TEXT_BASE		0x3f408000
-#define CONFIG_BOARD_SIZE_LIMIT		524288
+#define CONFIG_BOARD_SIZE_LIMIT		491520
+
+#define MEM_LAYOUT_ENV_SETTINGS \
+	"fdt_addr_r=0x82000000\0" \
+	"fdt_high=0xffffffff\0" \
+	"initrd_high=0xffffffff\0" \
+	"kernel_addr_r=0x81000000\0" \
+	"pxefile_addr_r=0x87100000\0" \
+	"ramdisk_addr_r=0x82100000\0" \
+	"scriptaddr=0x87000000\0"
 
 #define SD_BOOTCMD \
 	"sdargs=root=/dev/mmcblk0p2 rw rootwait\0"	\
-	"sdboot=run setup; setenv bootargs ${defargs} ${sdargs} ${mtdparts} " \
+	"sdboot=run setup; setenv bootargs ${defargs} ${sdargs} " \
 	"${setupargs} ${vidargs}; echo Booting from MMC/SD card...; " \
-	"load mmc 0:2 ${kernel_addr_r} /boot/${kernel_file} && " \
-	"load mmc 0:2 ${fdt_addr_r} /boot/${soc}-colibri-${fdt_board}.dtb && " \
-	"bootz ${kernel_addr_r} - ${fdt_addr_r}\0" \
+		"load mmc 0:2 ${kernel_addr_r} /boot/${kernel_file} && " \
+		"load mmc 0:2 ${fdt_addr_r} /boot/${soc}-colibri-${fdt_board}.dtb && " \
+	"run fdt_fixup && bootz ${kernel_addr_r} - ${fdt_addr_r}\0" \
 
 #define NFS_BOOTCMD \
 	"nfsargs=ip=:::::eth0: root=/dev/nfs\0"	\
 	"nfsboot=run setup; " \
-	"setenv bootargs ${defargs} ${nfsargs} ${mtdparts} " \
-	"${setupargs} ${vidargs}; echo Booting from NFS...;" \
-	"dhcp ${kernel_addr_r} && "	\
-	"tftp ${fdt_addr_r} ${soc}-colibri-${fdt_board}.dtb && " \
-	"bootz ${kernel_addr_r} - ${fdt_addr_r}\0" \
+		"setenv bootargs ${defargs} ${nfsargs} " \
+		"${setupargs} ${vidargs}; echo Booting from NFS...;" \
+		"dhcp ${kernel_addr_r} && "	\
+		"tftp ${fdt_addr_r} ${soc}-colibri-${fdt_board}.dtb && " \
+		"run fdt_fixup && bootz ${kernel_addr_r} - ${fdt_addr_r}\0" \
 
 #define UBI_BOOTCMD	\
 	"ubiargs=ubi.mtd=ubi root=ubi0:rootfs rootfstype=ubifs " \
-	"ubi.fm_autoconvert=1\0" \
+		"ubi.fm_autoconvert=1\0" \
 	"ubiboot=run setup; " \
-	"setenv bootargs ${defargs} ${ubiargs} ${mtdparts} "   \
-	"${setupargs} ${vidargs}; echo Booting from NAND...; " \
-	"ubi part ubi && ubifsmount ubi0:rootfs && " \
-	"ubifsload ${kernel_addr_r} /boot/${kernel_file} && " \
-	"ubifsload ${fdt_addr_r} /boot/${soc}-colibri-${fdt_board}.dtb && " \
-	"bootz ${kernel_addr_r} - ${fdt_addr_r}\0" \
-
-#define CONFIG_BOOTCOMMAND "run ubiboot; run sdboot; run nfsboot"
+		"setenv bootargs ${defargs} ${ubiargs} " \
+		"${setupargs} ${vidargs}; echo Booting from NAND...; " \
+		"ubi part ubi && " \
+		"ubi read ${kernel_addr_r} kernel && " \
+		"ubi read ${fdt_addr_r} dtb && " \
+		"run fdt_fixup && bootz ${kernel_addr_r} - ${fdt_addr_r}\0" \
+
+#define CONFIG_BOOTCOMMAND "run ubiboot; " \
+	"setenv fdtfile ${soc}-colibri-${fdt_board}.dtb && run distro_bootcmd;"
+
+#define BOOTENV_RUN_NET_USB_START ""
+#define BOOT_TARGET_DEVICES(func) \
+	func(MMC, mmc, 0) \
+	func(USB, usb, 0) \
+	func(DHCP, dhcp, na)
+#include <config_distro_bootcmd.h>
+#include <config_distro_defaults.h>
 
 #define DFU_ALT_NAND_INFO "vf-bcb part 0,1;u-boot part 0,2;ubi part 0,4"
 
 #define CONFIG_EXTRA_ENV_SETTINGS \
-	"kernel_addr_r=0x82000000\0" \
-	"fdt_addr_r=0x84000000\0" \
-	"kernel_file=zImage\0" \
-	"fdt_file=${soc}-colibri-${fdt_board}.dtb\0" \
-	"fdt_board=eval-v3\0" \
-	"defargs=\0" \
+	BOOTENV \
+	MEM_LAYOUT_ENV_SETTINGS \
+	NFS_BOOTCMD \
+	SD_BOOTCMD \
+	UBI_BOOTCMD \
 	"console=ttyLP0\0" \
-	"setup=setenv setupargs " \
-	"console=tty1 console=${console}" \
-	",${baudrate}n8 ${memargs}\0" \
-	"setsdupdate=mmc rescan && set interface mmc && " \
-	"fatload ${interface} 0:1 ${loadaddr} flash_blk.img && " \
-	"source ${loadaddr}\0" \
-	"setusbupdate=usb start && set interface usb && " \
-	"fatload ${interface} 0:1 ${loadaddr} flash_blk.img && " \
-	"source ${loadaddr}\0" \
-	"setupdate=run setsdupdate || run setusbupdate\0" \
-	"mtdparts=" MTDPARTS_DEFAULT "\0" \
+	"defargs=\0" \
 	"dfu_alt_info=" DFU_ALT_NAND_INFO "\0" \
-	SD_BOOTCMD \
-	NFS_BOOTCMD \
-	UBI_BOOTCMD
+	"fdt_board=eval-v3\0" \
+	"fdt_fixup=;\0" \
+	"kernel_file=zImage\0" \
+	"mtdparts=" MTDPARTS_DEFAULT "\0" \
+	"setethupdate=if env exists ethaddr; then; else setenv ethaddr " \
+		"00:14:2d:00:00:00; fi; tftpboot ${loadaddr} " \
+		"${board}/flash_eth.img && source ${loadaddr}\0" \
+	"setsdupdate=mmc rescan && setenv interface mmc && " \
+		"fatload ${interface} 0:1 ${loadaddr} " \
+		"${board}/flash_blk.img && source ${loadaddr}\0" \
+	"setup=setenv setupargs " \
+		"console=tty1 console=${console}" \
+		",${baudrate}n8 ${memargs} consoleblank=0 ${mtdparts}\0" \
+	"setupdate=run setsdupdate || run setusbupdate || run setethupdate\0" \
+	"setusbupdate=usb start && setenv interface usb && " \
+		"fatload ${interface} 0:1 ${loadaddr} " \
+		"${board}/flash_blk.img && source ${loadaddr}\0" \
+	"splashpos=m,m\0" \
+	"video-mode=dcufb:640x480-16@60,monitor=lcd\0"
 
 /* Miscellaneous configurable options */
 #define CONFIG_SYS_LONGHELP		/* undef to save memory */
@@ -167,7 +218,7 @@
  * Stack sizes
  * The stack sizes are set up in start.S using the settings below
  */
-#define CONFIG_STACKSIZE		(128 * 1024)	/* regular stack */
+#define CONFIG_STACKSIZE		SZ_256K
 
 /* Physical memory map */
 #define CONFIG_NR_DRAM_BANKS		1
@@ -198,21 +249,12 @@
 #define CONFIG_ENV_OFFSET		(12 * 64 * 2048)
 #endif
 
-#define CONFIG_SYS_NO_FLASH
-
 /* USB Host Support */
 #define CONFIG_USB_EHCI
 #define CONFIG_USB_EHCI_VF
 #define CONFIG_USB_MAX_CONTROLLER_COUNT 2
 #define CONFIG_EHCI_HCD_INIT_AFTER_RESET
 
-/* USB Client Support */
-#define CONFIG_TRDX_VID                  0x1B67
-#define CONFIG_TRDX_PID_COLIBRI_VF50     0x0016
-#define CONFIG_TRDX_PID_COLIBRI_VF61     0x0017
-#define CONFIG_TRDX_PID_COLIBRI_VF61IT   0x0018
-#define CONFIG_TRDX_PID_COLIBRI_VF50IT   0x0019
-
 /* USB DFU */
 #define CONFIG_SYS_DFU_DATA_BUF_SIZE (1024 * 1024)
 
diff --git a/include/configs/dalmore.h b/include/configs/dalmore.h
index b0311bf..45576f4 100644
--- a/include/configs/dalmore.h
+++ b/include/configs/dalmore.h
@@ -26,7 +26,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/dra7xx_evm.h b/include/configs/dra7xx_evm.h
index 798002d..e295a84 100644
--- a/include/configs/dra7xx_evm.h
+++ b/include/configs/dra7xx_evm.h
@@ -133,7 +133,6 @@
 #undef CONFIG_CMD_BOOTD
 #ifdef CONFIG_SPL_DFU_SUPPORT
 #define CONFIG_SPL_LOAD_FIT_ADDRESS 0x80200000
-#define CONFIG_SPL_HASH_SUPPORT
 #define DFU_ALT_INFO_RAM \
 	"dfu_alt_info_ram=" \
 	"kernel ram 0x80200000 0x4000000;" \
diff --git a/include/configs/e2220-1170.h b/include/configs/e2220-1170.h
index c9e8c8e..3de36d7 100644
--- a/include/configs/e2220-1170.h
+++ b/include/configs/e2220-1170.h
@@ -24,7 +24,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/h2200.h b/include/configs/h2200.h
index 8e77982..18b5488 100644
--- a/include/configs/h2200.h
+++ b/include/configs/h2200.h
@@ -107,8 +107,6 @@
 /*
  * Serial port
  */
-
-#define CONFIG_PXA_SERIAL
 #define CONFIG_FFUART
 #define CONFIG_CONS_INDEX		3
 
diff --git a/include/configs/harmony.h b/include/configs/harmony.h
index 3d6b5fc..784fffa 100644
--- a/include/configs/harmony.h
+++ b/include/configs/harmony.h
@@ -29,7 +29,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* NAND support */
 #define CONFIG_CMD_NAND
diff --git a/include/configs/imx6_spl.h b/include/configs/imx6_spl.h
index 76d1ca0..c0af2bc 100644
--- a/include/configs/imx6_spl.h
+++ b/include/configs/imx6_spl.h
@@ -29,6 +29,12 @@
 #define CONFIG_SPL_TEXT_BASE		0x00908000
 #define CONFIG_SPL_MAX_SIZE		0x10000
 #define CONFIG_SPL_STACK		0x0091FFB8
+/*
+ * Pad SPL to 68KB (4KB header + 64KB max size). This allows to write the
+ * SPL/U-Boot combination generated with u-boot-with-spl.imx directly to a
+ * boot media (given that boot media specific offset is configured properly).
+ */
+#define CONFIG_SPL_PAD_TO		0x11000
 
 /* NAND support */
 #if defined(CONFIG_SPL_NAND_SUPPORT)
diff --git a/include/configs/jetson-tk1.h b/include/configs/jetson-tk1.h
index 90e282f..a00f9fa 100644
--- a/include/configs/jetson-tk1.h
+++ b/include/configs/jetson-tk1.h
@@ -28,7 +28,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/medcom-wide.h b/include/configs/medcom-wide.h
index ae7ca3b..d3d0b15 100644
--- a/include/configs/medcom-wide.h
+++ b/include/configs/medcom-wide.h
@@ -22,7 +22,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* NAND support */
 #define CONFIG_CMD_NAND
diff --git a/include/configs/nyan-big.h b/include/configs/nyan-big.h
index c548ee1..95324d8 100644
--- a/include/configs/nyan-big.h
+++ b/include/configs/nyan-big.h
@@ -27,7 +27,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/p2371-0000.h b/include/configs/p2371-0000.h
index 968b89e..b200dc4 100644
--- a/include/configs/p2371-0000.h
+++ b/include/configs/p2371-0000.h
@@ -24,7 +24,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/p2371-2180.h b/include/configs/p2371-2180.h
index 9cf697f..03cbf72 100644
--- a/include/configs/p2371-2180.h
+++ b/include/configs/p2371-2180.h
@@ -24,7 +24,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/p2571.h b/include/configs/p2571.h
index 4fa345d..7ab3c78 100644
--- a/include/configs/p2571.h
+++ b/include/configs/p2571.h
@@ -25,7 +25,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/p2771-0000.h b/include/configs/p2771-0000.h
index 67a1603..1bba51e 100644
--- a/include/configs/p2771-0000.h
+++ b/include/configs/p2771-0000.h
@@ -20,7 +20,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/paz00.h b/include/configs/paz00.h
index a8bb3ff..36a1bb5 100644
--- a/include/configs/paz00.h
+++ b/include/configs/paz00.h
@@ -25,7 +25,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/plutux.h b/include/configs/plutux.h
index 635e439..39e4e4f 100644
--- a/include/configs/plutux.h
+++ b/include/configs/plutux.h
@@ -22,7 +22,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* NAND support */
 #define CONFIG_CMD_NAND
diff --git a/include/configs/seaboard.h b/include/configs/seaboard.h
index 2b6509a..099b2c9 100644
--- a/include/configs/seaboard.h
+++ b/include/configs/seaboard.h
@@ -34,7 +34,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/tec-ng.h b/include/configs/tec-ng.h
index 0e9d98c..953b196 100644
--- a/include/configs/tec-ng.h
+++ b/include/configs/tec-ng.h
@@ -23,7 +23,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/tec.h b/include/configs/tec.h
index 7b14299..0386071 100644
--- a/include/configs/tec.h
+++ b/include/configs/tec.h
@@ -22,7 +22,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* NAND support */
 #define CONFIG_CMD_NAND
diff --git a/include/configs/tegra-common.h b/include/configs/tegra-common.h
index 63b711b..a7c0bb6 100644
--- a/include/configs/tegra-common.h
+++ b/include/configs/tegra-common.h
@@ -33,6 +33,8 @@
 /*
  * NS16550 Configuration
  */
+#define CONFIG_SYS_NS16550_SERIAL
+#define CONFIG_SYS_NS16550_REG_SIZE	(-4)
 #define CONFIG_SYS_NS16550_CLK		V_NS16550_CLK
 
 /*
diff --git a/include/configs/tegra30-common.h b/include/configs/tegra30-common.h
index baf3d00..a1ccb8a 100644
--- a/include/configs/tegra30-common.h
+++ b/include/configs/tegra30-common.h
@@ -67,6 +67,9 @@
 #define CONFIG_SYS_SPL_MALLOC_START	0x80090000
 #define CONFIG_SPL_STACK		0x800ffffc
 
+/* Align LCD to 1MB boundary */
+#define CONFIG_LCD_ALIGNMENT	MMU_SECTION_SIZE
+
 /* For USB EHCI controller */
 #define CONFIG_EHCI_IS_TDI
 #define CONFIG_USB_EHCI_TXFIFO_THRESH	0x10
diff --git a/include/configs/trimslice.h b/include/configs/trimslice.h
index cfc8451..e78a5e6 100644
--- a/include/configs/trimslice.h
+++ b/include/configs/trimslice.h
@@ -30,7 +30,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in SPI */
 #define CONFIG_ENV_IS_IN_SPI_FLASH
diff --git a/include/configs/venice2.h b/include/configs/venice2.h
index 72fa973..f2c8f22 100644
--- a/include/configs/venice2.h
+++ b/include/configs/venice2.h
@@ -25,7 +25,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/ventana.h b/include/configs/ventana.h
index 7a38869..2c88d64 100644
--- a/include/configs/ventana.h
+++ b/include/configs/ventana.h
@@ -23,7 +23,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /* Environment in eMMC, at the end of 2nd "boot sector" */
 #define CONFIG_ENV_IS_IN_MMC
diff --git a/include/configs/whistler.h b/include/configs/whistler.h
index 0cd892e..1c2e166 100644
--- a/include/configs/whistler.h
+++ b/include/configs/whistler.h
@@ -27,7 +27,6 @@
 /* SD/MMC */
 #define CONFIG_MMC
 #define CONFIG_GENERIC_MMC
-#define CONFIG_TEGRA_MMC
 
 /*
  * Environment in eMMC, at the end of 2nd "boot sector". Note: This assumes
diff --git a/include/configs/zipitz2.h b/include/configs/zipitz2.h
index ed2c9ac..97dfc0e 100644
--- a/include/configs/zipitz2.h
+++ b/include/configs/zipitz2.h
@@ -49,7 +49,6 @@
  * Serial Console Configuration
  * STUART - the lower serial port on Colibri board
  */
-#define	CONFIG_PXA_SERIAL
 #define	CONFIG_STUART			1
 #define CONFIG_CONS_INDEX		2
 #define	CONFIG_BAUDRATE			115200
diff --git a/include/dm/platform_data/serial_pxa.h b/include/dm/platform_data/serial_pxa.h
new file mode 100644
index 0000000..b19a4a6
--- /dev/null
+++ b/include/dm/platform_data/serial_pxa.h
@@ -0,0 +1,56 @@
+/*
+ * Copyright (c) 2016 Marcel Ziswiler <marcel.ziswiler@toradex.com>
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+#ifndef __SERIAL_PXA_H
+#define __SERIAL_PXA_H
+
+/*
+ * The numbering scheme differs here for PXA25x, PXA27x and PXA3xx so we can
+ * easily handle enabling of clock.
+ */
+#ifdef CONFIG_CPU_MONAHANS
+#define UART_CLK_BASE	CKENA_21_BTUART
+#define UART_CLK_REG	CKENA
+#define BTUART_INDEX	0
+#define FFUART_INDEX	1
+#define STUART_INDEX	2
+#elif CONFIG_CPU_PXA25X
+#define UART_CLK_BASE	(1 << 4)	/* HWUART */
+#define UART_CLK_REG	CKEN
+#define HWUART_INDEX	0
+#define STUART_INDEX	1
+#define FFUART_INDEX	2
+#define BTUART_INDEX	3
+#else /* PXA27x */
+#define UART_CLK_BASE	CKEN5_STUART
+#define UART_CLK_REG	CKEN
+#define STUART_INDEX	0
+#define FFUART_INDEX	1
+#define BTUART_INDEX	2
+#endif
+
+/*
+ * Only PXA250 has HWUART, to avoid poluting the code with more macros,
+ * artificially introduce this.
+ */
+#ifndef CONFIG_CPU_PXA25X
+#define HWUART_INDEX	0xff
+#endif
+
+/*
+ * struct pxa_serial_platdata - information about a PXA port
+ *
+ * @base:               Uart port base register address
+ * @port:               Uart port index, for cpu with pinmux for uart / gpio
+ * baudrtatre:          Uart port baudrate
+ */
+struct pxa_serial_platdata {
+	struct pxa_uart_regs *base;
+	int port;
+	int baudrate;
+};
+
+#endif /* __SERIAL_PXA_H */
diff --git a/include/fdt_support.h b/include/fdt_support.h
index 506bc5a..57bfbeb 100644
--- a/include/fdt_support.h
+++ b/include/fdt_support.h
@@ -95,6 +95,7 @@ int fdt_fixup_memory(void *blob, u64 start, u64 size);
  */
 int fdt_fixup_memory_banks(void *blob, u64 start[], u64 size[], int banks);
 
+int fdt_set_usable_memory(void *blob, u64 start[], u64 size[], int banks);
 void fdt_fixup_ethernet(void *fdt);
 int fdt_find_and_setprop(void *fdt, const char *node, const char *prop,
 			 const void *val, int len, int create);
diff --git a/include/fsl_dcu_fb.h b/include/fsl_dcu_fb.h
index 4263298..67e29e7 100644
--- a/include/fsl_dcu_fb.h
+++ b/include/fsl_dcu_fb.h
@@ -9,6 +9,7 @@
 
 int fsl_dcu_init(unsigned int xres, unsigned int yres,
 		 unsigned int pixel_format);
+int fsl_dcu_fixedfb_setup(void *blob);
 
 /* Prototypes for external board-specific functions */
 int platform_dcu_init(unsigned int xres, unsigned int yres,
diff --git a/include/imximage.h b/include/imximage.h
new file mode 100644
index 0000000..db8b9a3
--- /dev/null
+++ b/include/imximage.h
@@ -0,0 +1,198 @@
+/*
+ * (C) Copyright 2009
+ * Stefano Babic, DENX Software Engineering, sbabic@denx.de.
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef _IMXIMAGE_H_
+#define _IMXIMAGE_H_
+
+#define MAX_HW_CFG_SIZE_V2 220 /* Max number of registers imx can set for v2 */
+#define MAX_PLUGIN_CODE_SIZE (64 * 1024)
+#define MAX_HW_CFG_SIZE_V1 60  /* Max number of registers imx can set for v1 */
+#define APP_CODE_BARKER	0xB1
+#define DCD_BARKER	0xB17219E9
+
+/*
+ * NOTE: This file must be kept in sync with arch/arm/include/asm/\
+ *       imx-common/imximage.cfg because tools/imximage.c can not
+ *       cross-include headers from arch/arm/ and vice-versa.
+ */
+#define CMD_DATA_STR	"DATA"
+
+/* Initial Vector Table Offset */
+#define FLASH_OFFSET_UNDEFINED	0xFFFFFFFF
+#define FLASH_OFFSET_STANDARD	0x400
+#define FLASH_OFFSET_NAND	FLASH_OFFSET_STANDARD
+#define FLASH_OFFSET_SD		FLASH_OFFSET_STANDARD
+#define FLASH_OFFSET_SPI	FLASH_OFFSET_STANDARD
+#define FLASH_OFFSET_ONENAND	0x100
+#define FLASH_OFFSET_NOR	0x1000
+#define FLASH_OFFSET_SATA	FLASH_OFFSET_STANDARD
+#define FLASH_OFFSET_QSPI	0x1000
+
+/* Initial Load Region Size */
+#define FLASH_LOADSIZE_UNDEFINED	0xFFFFFFFF
+#define FLASH_LOADSIZE_STANDARD		0x1000
+#define FLASH_LOADSIZE_NAND		FLASH_LOADSIZE_STANDARD
+#define FLASH_LOADSIZE_SD		FLASH_LOADSIZE_STANDARD
+#define FLASH_LOADSIZE_SPI		FLASH_LOADSIZE_STANDARD
+#define FLASH_LOADSIZE_ONENAND		0x400
+#define FLASH_LOADSIZE_NOR		0x0 /* entire image */
+#define FLASH_LOADSIZE_SATA		FLASH_LOADSIZE_STANDARD
+#define FLASH_LOADSIZE_QSPI		0x0 /* entire image */
+
+/* Command tags and parameters */
+#define IVT_HEADER_TAG			0xD1
+#define IVT_VERSION			0x40
+#define DCD_HEADER_TAG			0xD2
+#define DCD_VERSION			0x40
+#define DCD_WRITE_DATA_COMMAND_TAG	0xCC
+#define DCD_WRITE_DATA_PARAM		0x4
+#define DCD_WRITE_CLR_BIT_PARAM	0xC
+#define DCD_CHECK_DATA_COMMAND_TAG	0xCF
+#define DCD_CHECK_BITS_SET_PARAM	0x14
+#define DCD_CHECK_BITS_CLR_PARAM	0x04
+
+enum imximage_cmd {
+	CMD_INVALID,
+	CMD_IMAGE_VERSION,
+	CMD_BOOT_FROM,
+	CMD_BOOT_OFFSET,
+	CMD_WRITE_DATA,
+	CMD_WRITE_CLR_BIT,
+	CMD_CHECK_BITS_SET,
+	CMD_CHECK_BITS_CLR,
+	CMD_CSF,
+	CMD_PLUGIN,
+};
+
+enum imximage_fld_types {
+	CFG_INVALID = -1,
+	CFG_COMMAND,
+	CFG_REG_SIZE,
+	CFG_REG_ADDRESS,
+	CFG_REG_VALUE
+};
+
+enum imximage_version {
+	IMXIMAGE_VER_INVALID = -1,
+	IMXIMAGE_V1 = 1,
+	IMXIMAGE_V2
+};
+
+typedef struct {
+	uint32_t type; /* Type of pointer (byte, halfword, word, wait/read) */
+	uint32_t addr; /* Address to write to */
+	uint32_t value; /* Data to write */
+} dcd_type_addr_data_t;
+
+typedef struct {
+	uint32_t barker; /* Barker for sanity check */
+	uint32_t length; /* Device configuration length (without preamble) */
+} dcd_preamble_t;
+
+typedef struct {
+	dcd_preamble_t preamble;
+	dcd_type_addr_data_t addr_data[MAX_HW_CFG_SIZE_V1];
+} dcd_v1_t;
+
+typedef struct {
+	uint32_t app_code_jump_vector;
+	uint32_t app_code_barker;
+	uint32_t app_code_csf;
+	uint32_t dcd_ptr_ptr;
+	uint32_t super_root_key;
+	uint32_t dcd_ptr;
+	uint32_t app_dest_ptr;
+} flash_header_v1_t;
+
+typedef struct {
+	uint32_t length; 	/* Length of data to be read from flash */
+} flash_cfg_parms_t;
+
+typedef struct {
+	flash_header_v1_t fhdr;
+	dcd_v1_t dcd_table;
+	flash_cfg_parms_t ext_header;
+} imx_header_v1_t;
+
+typedef struct {
+	uint32_t addr;
+	uint32_t value;
+} dcd_addr_data_t;
+
+typedef struct {
+	uint8_t tag;
+	uint16_t length;
+	uint8_t version;
+} __attribute__((packed)) ivt_header_t;
+
+typedef struct {
+	uint8_t tag;
+	uint16_t length;
+	uint8_t param;
+} __attribute__((packed)) write_dcd_command_t;
+
+struct dcd_v2_cmd {
+	write_dcd_command_t write_dcd_command;
+	dcd_addr_data_t addr_data[MAX_HW_CFG_SIZE_V2];
+};
+
+typedef struct {
+	ivt_header_t header;
+	struct dcd_v2_cmd dcd_cmd;
+	uint32_t padding[1]; /* end up on an 8-byte boundary */
+} dcd_v2_t;
+
+typedef struct {
+	uint32_t start;
+	uint32_t size;
+	uint32_t plugin;
+} boot_data_t;
+
+typedef struct {
+	ivt_header_t header;
+	uint32_t entry;
+	uint32_t reserved1;
+	uint32_t dcd_ptr;
+	uint32_t boot_data_ptr;
+	uint32_t self;
+	uint32_t csf;
+	uint32_t reserved2;
+} flash_header_v2_t;
+
+typedef struct {
+	flash_header_v2_t fhdr;
+	boot_data_t boot_data;
+	union {
+		dcd_v2_t dcd_table;
+		char plugin_code[MAX_PLUGIN_CODE_SIZE];
+	} data;
+} imx_header_v2_t;
+
+/* The header must be aligned to 4k on MX53 for NAND boot */
+struct imx_header {
+	union {
+		imx_header_v1_t hdr_v1;
+		imx_header_v2_t hdr_v2;
+	} header;
+};
+
+typedef void (*set_dcd_val_t)(struct imx_header *imxhdr,
+					char *name, int lineno,
+					int fld, uint32_t value,
+					uint32_t off);
+
+typedef void (*set_dcd_param_t)(struct imx_header *imxhdr, uint32_t dcd_len,
+					int32_t cmd);
+
+typedef void (*set_dcd_rst_t)(struct imx_header *imxhdr,
+					uint32_t dcd_len,
+					char *name, int lineno);
+
+typedef void (*set_imx_hdr_t)(struct imx_header *imxhdr, uint32_t dcd_len,
+		uint32_t entry_point, uint32_t flash_offset);
+
+#endif /* _IMXIMAGE_H_ */
diff --git a/include/linux/mtd/nand.h b/include/linux/mtd/nand.h
index d55807b..d939896 100644
--- a/include/linux/mtd/nand.h
+++ b/include/linux/mtd/nand.h
@@ -224,6 +224,8 @@ typedef enum {
  * kmap'ed, vmalloc'ed highmem buffers being passed from upper layers
  */
 #define NAND_USE_BOUNCE_BUFFER	0x00100000
+/* Chip needs BBT scan */
+#define NAND_NEED_BBTSCAN	0x00200000
 
 /* Options set by nand scan */
 /* bbt has already been read */
diff --git a/include/rand.h b/include/rand.h
new file mode 100644
index 0000000..85e1894
--- /dev/null
+++ b/include/rand.h
@@ -0,0 +1,16415 @@
+/*
+* Copyright (C) 2014-2015 Freescale Semiconductor, Inc. All Rights Reserved.
+*/
+
+/*
+* This program is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 2 of the License, or
+* (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program; if not, write to the Free Software Foundation, Inc.,
+* 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+*/
+
+#ifndef RAND_H_
+#define RAND_H_
+
+unsigned char RandData[]={
+/* rand data for seed 0 */
+0x2b, 0xd4, 0xd2, 0x2d,
+0x55, 0xaa, 0xac, 0x53,
+0xab, 0x54, 0xd5, 0x2a,
+0xd3, 0x2c, 0xad, 0x52,
+0x33, 0xcc, 0x34, 0xcb,
+0xaa, 0x55, 0x2d, 0xd2,
+0x4c, 0xb3, 0xd2, 0x2d,
+0xb3, 0x4c, 0x35, 0xca,
+0xb4, 0x4b, 0x35, 0xca,
+0x34, 0xcb, 0xb2, 0x4d,
+0x35, 0xca, 0xb2, 0x4d,
+0xad, 0x52, 0xcb, 0x34,
+0xad, 0x52, 0x4b, 0xb4,
+0x52, 0xad, 0x52, 0xad,
+0x52, 0xad, 0x4a, 0xb5,
+0xb2, 0x4d, 0x4d, 0xb2,
+0x32, 0xcd, 0x4a, 0xb5,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x2c, 0xd3, 0xaa, 0x55,
+0x55, 0xaa, 0x2a, 0xd5,
+0x2a, 0xd5, 0xcc, 0x33,
+0x33, 0xcc, 0xd4, 0x2b,
+0xcb, 0x34, 0x33, 0xcc,
+0x4c, 0xb3, 0xb4, 0x4b,
+0xcd, 0x32, 0x33, 0xcc,
+0x54, 0xab, 0x4a, 0xb5,
+0xcc, 0x33, 0xb3, 0x4c,
+0x33, 0xcc, 0x2a, 0xd5,
+0xcc, 0x33, 0x2b, 0xd4,
+0x2c, 0xd3, 0x34, 0xcb,
+0x4c, 0xb3, 0x34, 0xcb,
+0x4a, 0xb5, 0x32, 0xcd,
+0x54, 0xab, 0xd2, 0x2d,
+0xb5, 0x4a, 0xb3, 0x4c,
+0xb3, 0x4c, 0xd5, 0x2a,
+0xd5, 0x2a, 0x2b, 0xd4,
+0x34, 0xcb, 0xd4, 0x2b,
+0x4b, 0xb4, 0xb4, 0x4b,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x55, 0xaa, 0x4a, 0xb5,
+0x54, 0xab, 0xca, 0x35,
+0x33, 0xcc, 0xaa, 0x55,
+0x33, 0xcc, 0x32, 0xcd,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xac, 0x53, 0x33, 0xcc,
+0xca, 0x35, 0x35, 0xca,
+0xd2, 0x2d, 0xd3, 0x2c,
+0x2d, 0xd2, 0x52, 0xad,
+0xca, 0x35, 0x55, 0xaa,
+0xaa, 0x55, 0xcd, 0x32,
+0x2d, 0xd2, 0xcc, 0x33,
+0xb3, 0x4c, 0x53, 0xac,
+0xca, 0x35, 0x33, 0xcc,
+0xd4, 0x2b, 0xcd, 0x32,
+0xcd, 0x32, 0xb3, 0x4c,
+0xab, 0x54, 0x53, 0xac,
+0xcc, 0x33, 0xab, 0x54,
+0xd3, 0x2c, 0x2d, 0xd2,
+0x4c, 0xb3, 0x2c, 0xd3,
+0xaa, 0x55, 0x35, 0xca,
+0xd4, 0x2b, 0xd5, 0x2a,
+0x33, 0xcc, 0xb2, 0x4d,
+0x2b, 0xd4, 0x34, 0xcb,
+0xac, 0x53, 0xab, 0x54,
+0x4b, 0xb4, 0x32, 0xcd,
+0x52, 0xad, 0xac, 0x53,
+0xb5, 0x4a, 0x53, 0xac,
+0xd2, 0x2d, 0xcd, 0x32,
+0xd5, 0x2a, 0x4d, 0xb2,
+0xaa, 0x55, 0xd3, 0x2c,
+0xab, 0x54, 0xcb, 0x34,
+0xd3, 0x2c, 0xb5, 0x4a,
+0x53, 0xac, 0x32, 0xcd,
+0x2a, 0xd5, 0x2a, 0xd5,
+0xb2, 0x4d, 0xd3, 0x2c,
+0x2b, 0xd4, 0x54, 0xab,
+0xd4, 0x2b, 0xb5, 0x4a,
+0x4b, 0xb4, 0xac, 0x53,
+0x2b, 0xd4, 0xaa, 0x55,
+0xd5, 0x2a, 0xad, 0x52,
+0x2b, 0xd4, 0xcc, 0x33,
+0xab, 0x54, 0xad, 0x52,
+0xcb, 0x34, 0xb3, 0x4c,
+0xb3, 0x4c, 0xad, 0x52,
+0xcd, 0x32, 0x2b, 0xd4,
+0xb4, 0x4b, 0x4d, 0xb2,
+0x4c, 0xb3, 0xb4, 0x4b,
+0xb5, 0x4a, 0x2b, 0xd4,
+0x54, 0xab, 0xca, 0x35,
+0x55, 0xaa, 0xb4, 0x4b,
+0x33, 0xcc, 0xd2, 0x2d,
+0x53, 0xac, 0x2a, 0xd5,
+0xac, 0x53, 0x35, 0xca,
+0x32, 0xcd, 0x34, 0xcb,
+0x32, 0xcd, 0x52, 0xad,
+0x4c, 0xb3, 0x52, 0xad,
+0xac, 0x53, 0x2d, 0xd2,
+0xb4, 0x4b, 0x2d, 0xd2,
+0xb2, 0x4d, 0xb5, 0x4a,
+0xb5, 0x4a, 0x55, 0xaa,
+0x34, 0xcb, 0xca, 0x35,
+0x35, 0xca, 0xac, 0x53,
+0x2d, 0xd2, 0xd2, 0x2d,
+0xcd, 0x32, 0x4d, 0xb2,
+0xaa, 0x55, 0x55, 0xaa,
+0xac, 0x53, 0xcb, 0x34,
+0x33, 0xcc, 0x2c, 0xd3,
+0x52, 0xad, 0x32, 0xcd,
+0xcc, 0x33, 0x55, 0xaa,
+0xb2, 0x4d, 0x33, 0xcc,
+0x2c, 0xd3, 0x4c, 0xb3,
+0xd4, 0x2b, 0x33, 0xcc,
+0xca, 0x35, 0xab, 0x54,
+0xcb, 0x34, 0xd3, 0x2c,
+0x4d, 0xb2, 0xac, 0x53,
+0xcd, 0x32, 0x55, 0xaa,
+0xd4, 0x2b, 0x4d, 0xb2,
+0x2c, 0xd3, 0xac, 0x53,
+0xab, 0x54, 0x2b, 0xd4,
+0xca, 0x35, 0xad, 0x52,
+0x53, 0xac, 0xd4, 0x2b,
+0xad, 0x52, 0x2d, 0xd2,
+0x52, 0xad, 0x54, 0xab,
+0xb2, 0x4d, 0x55, 0xaa,
+0x52, 0xad, 0x4c, 0xb3,
+0x34, 0xcb, 0x4c, 0xb3,
+0xd2, 0x2d, 0xab, 0x54,
+0xcd, 0x32, 0x4b, 0xb4,
+0x4a, 0xb5, 0x4c, 0xb3,
+0x4c, 0xb3, 0xca, 0x35,
+0xd5, 0x2a, 0x2b, 0xd4,
+0x34, 0xcb, 0xd2, 0x2d,
+0x4b, 0xb4, 0xb4, 0x4b,
+0xad, 0x52, 0xb5, 0x4a,
+0x55, 0xaa, 0x4a, 0xb5,
+0x32, 0xcd, 0xca, 0x35,
+0x33, 0xcc, 0x4a, 0xb5,
+0x2c, 0xd3, 0x32, 0xcd,
+0x2c, 0xd3, 0x2a, 0xd5,
+0xaa, 0x55, 0x33, 0xcc,
+0x2a, 0xd5, 0xd4, 0x2b,
+0xd3, 0x2c, 0xd3, 0x2c,
+0x4b, 0xb4, 0x34, 0xcb,
+0xca, 0x35, 0xb5, 0x4a,
+0x55, 0xaa, 0xd2, 0x2d,
+0x2d, 0xd2, 0xca, 0x35,
+0xb3, 0x4c, 0x55, 0xaa,
+0x2a, 0xd5, 0x32, 0xcd,
+0x34, 0xcb, 0xcc, 0x33,
+0xab, 0x54, 0xb3, 0x4c,
+0xcd, 0x32, 0xb3, 0x4c,
+0xd3, 0x2c, 0x4b, 0xb4,
+0xcc, 0x33, 0x2b, 0xd4,
+0x4a, 0xb5, 0x2a, 0xd5,
+0x4c, 0xb3, 0xd4, 0x2b,
+0x35, 0xca, 0x34, 0xcb,
+0x54, 0xab, 0xd4, 0x2b,
+0x4d, 0xb2, 0xb2, 0x4d,
+0x53, 0xac, 0x54, 0xab,
+0xb4, 0x4b, 0x2b, 0xd4,
+0x52, 0xad, 0xac, 0x53,
+0x55, 0xaa, 0x54, 0xab,
+0xd2, 0x2d, 0xcd, 0x32,
+0x53, 0xac, 0x4c, 0xb3,
+0xaa, 0x55, 0x33, 0xcc,
+0xd2, 0x2d, 0xcb, 0x34,
+0xd3, 0x2c, 0x53, 0xac,
+0x4a, 0xb5, 0x32, 0xcd,
+0xca, 0x35, 0xcd, 0x32,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xad, 0x52, 0xd3, 0x2c,
+0xd5, 0x2a, 0x55, 0xaa,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x2b, 0xd4, 0x4c, 0xb3,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xcb, 0x34, 0xcb, 0x34,
+0x4b, 0xb4, 0xaa, 0x55,
+0x4d, 0xb2, 0xb2, 0x4d,
+0x35, 0xca, 0x4c, 0xb3,
+0xb4, 0x4b, 0xcb, 0x34,
+0xcd, 0x32, 0xab, 0x54,
+0x55, 0xaa, 0x52, 0xad,
+0x4c, 0xb3, 0xcc, 0x33,
+0xb3, 0x4c, 0x2d, 0xd2,
+0xd4, 0x2b, 0x33, 0xcc,
+0xb4, 0x4b, 0xb5, 0x4a,
+0xcb, 0x34, 0xb3, 0x4c,
+0x35, 0xca, 0xaa, 0x55,
+0xcd, 0x32, 0xcb, 0x34,
+0x2d, 0xd2, 0x4c, 0xb3,
+0x4c, 0xb3, 0x52, 0xad,
+0xca, 0x35, 0x2b, 0xd4,
+0xb4, 0x4b, 0xcd, 0x32,
+0x4d, 0xb2, 0xb4, 0x4b,
+0xb5, 0x4a, 0x53, 0xac,
+0x54, 0xab, 0xca, 0x35,
+0xd5, 0x2a, 0xad, 0x52,
+0x33, 0xcc, 0xd2, 0x2d,
+0xab, 0x54, 0x2d, 0xd2,
+0xac, 0x53, 0xb5, 0x4a,
+0xb3, 0x4c, 0x35, 0xca,
+0x32, 0xcd, 0x2a, 0xd5,
+0x34, 0xcb, 0x52, 0xad,
+0x2c, 0xd3, 0xb4, 0x4b,
+0xad, 0x52, 0x2d, 0xd2,
+0x4a, 0xb5, 0x4a, 0xb5,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x35, 0xca, 0x4a, 0xb5,
+0x34, 0xcb, 0xd4, 0x2b,
+0x2d, 0xd2, 0xaa, 0x55,
+0x4d, 0xb2, 0x54, 0xab,
+0x2a, 0xd5, 0x4c, 0xb3,
+0x54, 0xab, 0xcc, 0x33,
+0xcb, 0x34, 0xab, 0x54,
+0xd3, 0x2c, 0xb3, 0x4c,
+0x4d, 0xb2, 0x2c, 0xd3,
+0xca, 0x35, 0x4b, 0xb4,
+0xd4, 0x2b, 0xd5, 0x2a,
+0x4d, 0xb2, 0xaa, 0x55,
+0x2b, 0xd4, 0x54, 0xab,
+0x34, 0xcb, 0xac, 0x53,
+0x4b, 0xb4, 0xac, 0x53,
+0xcd, 0x32, 0xad, 0x52,
+0xd5, 0x2a, 0x4d, 0xb2,
+0xac, 0x53, 0xcd, 0x32,
+0xab, 0x54, 0x2b, 0xd4,
+0xb2, 0x4d, 0xb3, 0x4c,
+0x53, 0xac, 0x54, 0xab,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x52, 0xad, 0xac, 0x53,
+0x4b, 0xb4, 0x54, 0xab,
+0xd2, 0x2d, 0xad, 0x52,
+0x55, 0xaa, 0x4c, 0xb3,
+0xaa, 0x55, 0xcd, 0x32,
+0xd3, 0x2c, 0xcb, 0x34,
+0xb3, 0x4c, 0x33, 0xcc,
+0x4a, 0xb5, 0x32, 0xcd,
+0xd4, 0x2b, 0xd3, 0x2c,
+0xb5, 0x4a, 0xb3, 0x4c,
+0xcb, 0x34, 0xd5, 0x2a,
+0xd5, 0x2a, 0xab, 0x54,
+0x2d, 0xd2, 0xd4, 0x2b,
+0x4b, 0xb4, 0x4c, 0xb3,
+0x4a, 0xb5, 0xb4, 0x4b,
+0xd5, 0x2a, 0xcb, 0x34,
+0x55, 0xaa, 0xca, 0x35,
+0x4b, 0xb4, 0xd2, 0x2d,
+0x33, 0xcc, 0xb2, 0x4d,
+0xb5, 0x4a, 0x35, 0xca,
+0xac, 0x53, 0xcb, 0x34,
+0x35, 0xca, 0x32, 0xcd,
+0x52, 0xad, 0xd2, 0x2d,
+0xad, 0x52, 0x53, 0xac,
+0xb2, 0x4d, 0x55, 0xaa,
+0xd2, 0x2d, 0x4d, 0xb2,
+0x34, 0xcb, 0x4c, 0xb3,
+0xaa, 0x55, 0xab, 0x54,
+0xcd, 0x32, 0xcb, 0x34,
+0x53, 0xac, 0x4c, 0xb3,
+0x4c, 0xb3, 0x32, 0xcd,
+0xd2, 0x2d, 0x2b, 0xd4,
+0xb4, 0x4b, 0x53, 0xac,
+0x4a, 0xb5, 0xb4, 0x4b,
+0xd5, 0x2a, 0xcd, 0x32,
+0x55, 0xaa, 0xca, 0x35,
+0xab, 0x54, 0xd3, 0x2c,
+0x33, 0xcc, 0xb2, 0x4d,
+0xd3, 0x2c, 0x35, 0xca,
+0xac, 0x53, 0x2b, 0xd4,
+0x2a, 0xd5, 0x32, 0xcd,
+0x52, 0xad, 0xd4, 0x2b,
+0xab, 0x54, 0x53, 0xac,
+0x52, 0xad, 0xb4, 0x4b,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x52, 0xad, 0x2a, 0xd5,
+0xaa, 0x55, 0x4b, 0xb4,
+0x32, 0xcd, 0xd4, 0x2b,
+0x53, 0xac, 0x4a, 0xb5,
+0x4c, 0xb3, 0x34, 0xcb,
+0x32, 0xcd, 0x2a, 0xd5,
+0x54, 0xab, 0x52, 0xad,
+0x2c, 0xd3, 0xb4, 0x4b,
+0xb3, 0x4c, 0x2d, 0xd2,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xb4, 0x4b, 0xd5, 0x2a,
+0x35, 0xca, 0xb4, 0x4b,
+0x35, 0xca, 0xd4, 0x2b,
+0x4d, 0xb2, 0xca, 0x35,
+0x4d, 0xb2, 0x54, 0xab,
+0x34, 0xcb, 0x52, 0xad,
+0x54, 0xab, 0xac, 0x53,
+0xad, 0x52, 0xad, 0x52,
+0xd3, 0x2c, 0x4d, 0xb2,
+0xb2, 0x4d, 0x2d, 0xd2,
+0xaa, 0x55, 0x4b, 0xb4,
+0xb4, 0x4b, 0xd5, 0x2a,
+0x53, 0xac, 0xaa, 0x55,
+0x35, 0xca, 0x34, 0xcb,
+0x32, 0xcd, 0xcc, 0x33,
+0x4d, 0xb2, 0x52, 0xad,
+0xcc, 0x33, 0x53, 0xac,
+0xb4, 0x4b, 0x2d, 0xd2,
+0xcc, 0x33, 0xad, 0x52,
+0xb5, 0x4a, 0x35, 0xca,
+0xac, 0x53, 0xcd, 0x32,
+0x35, 0xca, 0x32, 0xcd,
+0xb2, 0x4d, 0xd3, 0x2c,
+0xad, 0x52, 0x53, 0xac,
+0xd4, 0x2b, 0x55, 0xaa,
+0xd2, 0x2d, 0xad, 0x52,
+0x2b, 0xd4, 0x4c, 0xb3,
+0xaa, 0x55, 0xad, 0x52,
+0xcb, 0x34, 0xcb, 0x34,
+0xb3, 0x4c, 0xad, 0x52,
+0x4d, 0xb2, 0x32, 0xcd,
+0xb4, 0x4b, 0x4d, 0xb2,
+0xb4, 0x4b, 0xb3, 0x4c,
+0xb5, 0x4a, 0xab, 0x54,
+0xd5, 0x2a, 0xcb, 0x34,
+0x55, 0xaa, 0xcc, 0x33,
+0x4b, 0xb4, 0xd2, 0x2d,
+0xd3, 0x2c, 0xb3, 0x4c,
+0xb5, 0x4a, 0x35, 0xca,
+0xca, 0x35, 0xcb, 0x34,
+0x35, 0xca, 0xd2, 0x2d,
+0x4d, 0xb2, 0xd2, 0x2d,
+0xad, 0x52, 0x55, 0xaa,
+0xb4, 0x4b, 0x55, 0xaa,
+0x32, 0xcd, 0xac, 0x53,
+0x35, 0xca, 0x4c, 0xb3,
+0xcc, 0x33, 0xcd, 0x32,
+0xcd, 0x32, 0x2b, 0xd4,
+0xac, 0x53, 0x53, 0xac,
+0x4c, 0xb3, 0x34, 0xcb,
+0xd2, 0x2d, 0x2d, 0xd2,
+0x54, 0xab, 0x52, 0xad,
+0xaa, 0x55, 0xb5, 0x4a,
+0xb3, 0x4c, 0xcd, 0x32,
+0x33, 0xcc, 0x2a, 0xd5,
+0xb4, 0x4b, 0x33, 0xcc,
+0x2c, 0xd3, 0xb4, 0x4b,
+0xd5, 0x2a, 0x33, 0xcc,
+0x4a, 0xb5, 0xca, 0x35,
+0xcb, 0x34, 0xd3, 0x2c,
+0x35, 0xca, 0xb2, 0x4d,
+0xcd, 0x32, 0xd5, 0x2a,
+0xad, 0x52, 0x4b, 0xb4,
+0x2c, 0xd3, 0x54, 0xab,
+0x52, 0xad, 0x2a, 0xd5,
+0x4a, 0xb5, 0x4c, 0xb3,
+0x32, 0xcd, 0xd4, 0x2b,
+0xd5, 0x2a, 0x4b, 0xb4,
+0x4c, 0xb3, 0xd4, 0x2b,
+0x4b, 0xb4, 0x2a, 0xd5,
+0x54, 0xab, 0xb4, 0x4b,
+0x35, 0xca, 0xb4, 0x4b,
+0x53, 0xac, 0xca, 0x35,
+0x4d, 0xb2, 0x2a, 0xd5,
+0x32, 0xcd, 0x52, 0xad,
+0x34, 0xcb, 0x54, 0xab,
+0xac, 0x53, 0xad, 0x52,
+0x4d, 0xb2, 0x2c, 0xd3,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xd4, 0x2b, 0x55, 0xaa,
+0xb4, 0x4b, 0xab, 0x54,
+0x2b, 0xd4, 0xac, 0x53,
+0x55, 0xaa, 0xac, 0x53,
+0xcb, 0x34, 0xcd, 0x32,
+0xd3, 0x2c, 0xad, 0x52,
+0xad, 0x52, 0x33, 0xcc,
+0xaa, 0x55, 0x4d, 0xb2,
+0xd2, 0x2d, 0xd3, 0x2c,
+0xb3, 0x4c, 0x4b, 0xb4,
+0xca, 0x35, 0x35, 0xca,
+0x54, 0xab, 0xca, 0x35,
+0x2d, 0xd2, 0xb2, 0x4d,
+0x33, 0xcc, 0x52, 0xad,
+0xaa, 0x55, 0x2b, 0xd4,
+0xac, 0x53, 0xcd, 0x32,
+0x53, 0xac, 0x34, 0xcb,
+0xb2, 0x4d, 0x33, 0xcc,
+0x52, 0xad, 0x52, 0xad,
+0xd4, 0x2b, 0x53, 0xac,
+0xb2, 0x4d, 0xad, 0x52,
+0xcb, 0x34, 0x4d, 0xb2,
+0xb4, 0x4b, 0xad, 0x52,
+0xad, 0x52, 0xab, 0x54,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x52, 0xad, 0xcc, 0x33,
+0xb5, 0x4a, 0x4b, 0xb4,
+0xd2, 0x2d, 0xd3, 0x2c,
+0x55, 0xaa, 0x4a, 0xb5,
+0xca, 0x35, 0xd5, 0x2a,
+0x33, 0xcc, 0xca, 0x35,
+0x2d, 0xd2, 0x34, 0xcb,
+0x2c, 0xd3, 0x52, 0xad,
+0x4a, 0xb5, 0x32, 0xcd,
+0xaa, 0x55, 0xcd, 0x32,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xb3, 0x4c, 0xd3, 0x2c,
+0xd5, 0x2a, 0x35, 0xca,
+0xd4, 0x2b, 0xd5, 0x2a,
+0x2b, 0xd4, 0xb2, 0x4d,
+0x2b, 0xd4, 0xb4, 0x4b,
+0xab, 0x54, 0xab, 0x54,
+0x4b, 0xb4, 0xaa, 0x55,
+0x53, 0xac, 0xac, 0x53,
+0x35, 0xca, 0x2c, 0xd3,
+0xd2, 0x2d, 0xcd, 0x32,
+0xcd, 0x32, 0x55, 0xaa,
+0xaa, 0x55, 0x53, 0xac,
+0x2c, 0xd3, 0xcc, 0x33,
+0xd3, 0x2c, 0x2d, 0xd2,
+0xca, 0x35, 0x33, 0xcc,
+0xaa, 0x55, 0xd5, 0x2a,
+0xcd, 0x32, 0xd3, 0x2c,
+0x33, 0xcc, 0x54, 0xab,
+0xcc, 0x33, 0x35, 0xca,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x2c, 0xd3, 0x32, 0xcd,
+0xd4, 0x2b, 0x35, 0xca,
+0xaa, 0x55, 0xb3, 0x4c,
+0x2b, 0xd4, 0xd2, 0x2d,
+0xd3, 0x2c, 0xab, 0x54,
+0xab, 0x54, 0x35, 0xca,
+0x4a, 0xb5, 0xac, 0x53,
+0x33, 0xcc, 0xd2, 0x2d,
+0xd5, 0x2a, 0x2d, 0xd2,
+0xac, 0x53, 0xd5, 0x2a,
+0xab, 0x54, 0x35, 0xca,
+0x32, 0xcd, 0xb4, 0x4b,
+0x33, 0xcc, 0x52, 0xad,
+0x4c, 0xb3, 0x2a, 0xd5,
+0xac, 0x53, 0x2d, 0xd2,
+0x34, 0xcb, 0x34, 0xcb,
+0xb2, 0x4d, 0xb5, 0x4a,
+0x4d, 0xb2, 0x52, 0xad,
+0x34, 0xcb, 0x4a, 0xb5,
+0xb4, 0x4b, 0xad, 0x52,
+0x2d, 0xd2, 0xaa, 0x55,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x2a, 0xd5, 0xcc, 0x33,
+0xb5, 0x4a, 0xcb, 0x34,
+0xcb, 0x34, 0xd3, 0x2c,
+0x55, 0xaa, 0xb2, 0x4d,
+0xcd, 0x32, 0xd5, 0x2a,
+0xb3, 0x4c, 0x4b, 0xb4,
+0x2c, 0xd3, 0x34, 0xcb,
+0x54, 0xab, 0x2a, 0xd5,
+0x4a, 0xb5, 0xb2, 0x4d,
+0x33, 0xcc, 0xd4, 0x2b,
+0xb5, 0x4a, 0x2b, 0xd4,
+0x4c, 0xb3, 0xd4, 0x2b,
+0x55, 0xaa, 0x34, 0xcb,
+0x54, 0xab, 0xd4, 0x2b,
+0x53, 0xac, 0xb2, 0x4d,
+0x53, 0xac, 0x34, 0xcb,
+0xb2, 0x4d, 0x2b, 0xd4,
+0x52, 0xad, 0x52, 0xad,
+0x54, 0xab, 0x54, 0xab,
+0xb2, 0x4d, 0xad, 0x52,
+0x53, 0xac, 0x4c, 0xb3,
+0xb4, 0x4b, 0x2d, 0xd2,
+0xd2, 0x2d, 0xab, 0x54,
+0xb5, 0x4a, 0x55, 0xaa,
+0x4a, 0xb5, 0xcc, 0x33,
+0x35, 0xca, 0xcc, 0x33,
+0xd5, 0x2a, 0xd3, 0x2c,
+0xcd, 0x32, 0xd3, 0x2c,
+0xcb, 0x34, 0x55, 0xaa,
+0xcc, 0x33, 0xb5, 0x4a,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x2c, 0xd3, 0x4a, 0xb5,
+0xca, 0x35, 0x35, 0xca,
+0x2a, 0xd5, 0xca, 0x35,
+0x2d, 0xd2, 0xd2, 0x2d,
+0x2b, 0xd4, 0x52, 0xad,
+0xaa, 0x55, 0xb5, 0x4a,
+0xab, 0x54, 0xcd, 0x32,
+0x33, 0xcc, 0xaa, 0x55,
+0xb3, 0x4c, 0x33, 0xcc,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xd4, 0x2b, 0x33, 0xcc,
+0xca, 0x35, 0xb5, 0x4a,
+0xcb, 0x34, 0xd3, 0x2c,
+0x2d, 0xd2, 0xaa, 0x55,
+0xcd, 0x32, 0x55, 0xaa,
+0x2a, 0xd5, 0x4c, 0xb3,
+0x2c, 0xd3, 0xcc, 0x33,
+0xcb, 0x34, 0x2b, 0xd4,
+0xca, 0x35, 0xb3, 0x4c,
+0x4d, 0xb2, 0xd4, 0x2b,
+0xcd, 0x32, 0x4b, 0xb4,
+0x54, 0xab, 0x54, 0xab,
+0x4c, 0xb3, 0xaa, 0x55,
+0x53, 0xac, 0x2c, 0xd3,
+0x34, 0xcb, 0x2c, 0xd3,
+0xd2, 0x2d, 0xb5, 0x4a,
+0xcd, 0x32, 0x55, 0xaa,
+0x2a, 0xd5, 0x4a, 0xb5,
+0x2c, 0xd3, 0xcc, 0x33,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xca, 0x35, 0xb3, 0x4c,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xcd, 0x32, 0xab, 0x54,
+0x4b, 0xb4, 0x54, 0xab,
+0x4c, 0xb3, 0xac, 0x53,
+0x55, 0xaa, 0x2c, 0xd3,
+0xd4, 0x2b, 0xcd, 0x32,
+0xd3, 0x2c, 0xb5, 0x4a,
+0xab, 0x54, 0x33, 0xcc,
+0x2a, 0xd5, 0xaa, 0x55,
+0xd3, 0x2c, 0xd3, 0x2c,
+0x2b, 0xd4, 0x2c, 0xd3,
+0xca, 0x35, 0xb5, 0x4a,
+0xcb, 0x34, 0xd5, 0x2a,
+0x2d, 0xd2, 0xaa, 0x55,
+0x2d, 0xd2, 0x54, 0xab,
+0x2a, 0xd5, 0x4c, 0xb3,
+0x4a, 0xb5, 0xcc, 0x33,
+0xcb, 0x34, 0xcb, 0x34,
+0xd5, 0x2a, 0xb3, 0x4c,
+0x4d, 0xb2, 0xd2, 0x2d,
+0xcb, 0x34, 0x4b, 0xb4,
+0xb4, 0x4b, 0xb5, 0x4a,
+0x4d, 0xb2, 0xaa, 0x55,
+0x35, 0xca, 0x4a, 0xb5,
+0x34, 0xcb, 0xcc, 0x33,
+0x2d, 0xd2, 0xaa, 0x55,
+0xcd, 0x32, 0x53, 0xac,
+0x2a, 0xd5, 0x4c, 0xb3,
+0xcc, 0x33, 0xcd, 0x32,
+0xcb, 0x34, 0x2b, 0xd4,
+0xac, 0x53, 0xb3, 0x4c,
+0x4d, 0xb2, 0x34, 0xcb,
+0xd2, 0x2d, 0x4b, 0xb4,
+0x54, 0xab, 0x52, 0xad,
+0x4a, 0xb5, 0xaa, 0x55,
+0xb3, 0x4c, 0xcd, 0x32,
+0x35, 0xca, 0x2c, 0xd3,
+0xb4, 0x4b, 0xd3, 0x2c,
+0xcd, 0x32, 0xb5, 0x4a,
+0xd5, 0x2a, 0x55, 0xaa,
+0x2c, 0xd3, 0xca, 0x35,
+0x2b, 0xd4, 0x2c, 0xd3,
+0x2a, 0xd5, 0xb2, 0x4d,
+0xcb, 0x34, 0xd5, 0x2a,
+0xab, 0x54, 0xab, 0x54,
+0x2d, 0xd2, 0xb4, 0x4b,
+0x53, 0xac, 0x4c, 0xb3,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xd2, 0x2d, 0xcb, 0x34,
+0x35, 0xca, 0x54, 0xab,
+0x4a, 0xb5, 0xd2, 0x2d,
+0x4d, 0xb2, 0xcc, 0x33,
+0xb5, 0x4a, 0x55, 0xaa,
+0xd4, 0x2b, 0xd3, 0x2c,
+0x35, 0xca, 0xac, 0x53,
+0xcb, 0x34, 0xd5, 0x2a,
+0xcd, 0x32, 0xad, 0x52,
+0x2d, 0xd2, 0x54, 0xab,
+0xac, 0x53, 0x4d, 0xb2,
+0x4a, 0xb5, 0x2c, 0xd3,
+0xb2, 0x4d, 0xcb, 0x34,
+0xd5, 0x2a, 0x55, 0xaa,
+0x54, 0xab, 0xd2, 0x2d,
+0x2b, 0xd4, 0xac, 0x53,
+0xb3, 0x4c, 0xb5, 0x4a,
+0xcb, 0x34, 0x2d, 0xd2,
+0x34, 0xcb, 0xaa, 0x55,
+0xad, 0x52, 0xb5, 0x4a,
+0x2d, 0xd2, 0x4c, 0xb3,
+0x32, 0xcd, 0x4a, 0xb5,
+0xca, 0x35, 0x4b, 0xb4,
+0x2c, 0xd3, 0xca, 0x35,
+0x4d, 0xb2, 0x2a, 0xd5,
+0x2a, 0xd5, 0x52, 0xad,
+0x34, 0xcb, 0xd4, 0x2b,
+0xab, 0x54, 0xad, 0x52,
+0x4d, 0xb2, 0xb4, 0x4b,
+0xb3, 0x4c, 0x4d, 0xb2,
+0x54, 0xab, 0x2a, 0xd5,
+0xb4, 0x4b, 0xab, 0x54,
+0x33, 0xcc, 0xb4, 0x4b,
+0x55, 0xaa, 0x2c, 0xd3,
+0x4c, 0xb3, 0xca, 0x35,
+0xd3, 0x2c, 0x35, 0xca,
+0x34, 0xcb, 0x32, 0xcd,
+0x2a, 0xd5, 0xb2, 0x4d,
+0xad, 0x52, 0xd3, 0x2c,
+0xab, 0x54, 0x4b, 0xb4,
+0xd2, 0x2d, 0xb5, 0x4a,
+0x53, 0xac, 0x4a, 0xb5,
+0x2a, 0xd5, 0x2a, 0xd5,
+0x32, 0xcd, 0xca, 0x35,
+0x2b, 0xd4, 0x54, 0xab,
+0x2c, 0xd3, 0xb2, 0x4d,
+0x4b, 0xb4, 0x2c, 0xd3,
+0xaa, 0x55, 0xab, 0x54,
+0xd5, 0x2a, 0xd5, 0x2a,
+0x53, 0xac, 0xcc, 0x33,
+0x2b, 0xd4, 0x34, 0xcb,
+0xd2, 0x2d, 0xb3, 0x4c,
+0x4b, 0xb4, 0x52, 0xad,
+0xca, 0x35, 0xab, 0x54,
+0xb5, 0x4a, 0xcd, 0x32,
+0x4d, 0xb2, 0xcc, 0x33,
+0xb5, 0x4a, 0x53, 0xac,
+0xd4, 0x2b, 0xd3, 0x2c,
+0xd5, 0x2a, 0xad, 0x52,
+0xcb, 0x34, 0xd5, 0x2a,
+0xab, 0x54, 0xad, 0x52,
+0x2d, 0xd2, 0xb4, 0x4b,
+0xb3, 0x4c, 0x4d, 0xb2,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xb4, 0x4b, 0xcb, 0x34,
+0x35, 0xca, 0xb4, 0x4b,
+0x55, 0xaa, 0xd2, 0x2d,
+0x4d, 0xb2, 0xca, 0x35,
+0xb3, 0x4c, 0x55, 0xaa,
+0x34, 0xcb, 0x32, 0xcd,
+0x34, 0xcb, 0xac, 0x53,
+0xad, 0x52, 0xb3, 0x4c,
+0xcd, 0x32, 0x4d, 0xb2,
+0xd2, 0x2d, 0x4b, 0xb4,
+0xac, 0x53, 0x4b, 0xb4,
+0x4a, 0xb5, 0x2a, 0xd5,
+0x52, 0xad, 0xca, 0x35,
+0x35, 0xca, 0x54, 0xab,
+0x32, 0xcd, 0xd2, 0x2d,
+0x4d, 0xb2, 0x4c, 0xb3,
+0xac, 0x53, 0x55, 0xaa,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x32, 0xcd, 0xac, 0x53,
+0x4b, 0xb4, 0x54, 0xab,
+0xcc, 0x33, 0xad, 0x52,
+0x55, 0xaa, 0x2c, 0xd3,
+0xac, 0x53, 0xcd, 0x32,
+0xd3, 0x2c, 0x35, 0xca,
+0xb2, 0x4d, 0x33, 0xcc,
+0x2a, 0xd5, 0x52, 0xad,
+0xd4, 0x2b, 0xd3, 0x2c,
+0xab, 0x54, 0xad, 0x52,
+0xcb, 0x34, 0xb5, 0x4a,
+0xb3, 0x4c, 0xad, 0x52,
+0x2d, 0xd2, 0x2a, 0xd5,
+0xb4, 0x4b, 0x4d, 0xb2,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xb5, 0x4a, 0xcb, 0x34,
+0x4b, 0xb4, 0xca, 0x35,
+0x55, 0xaa, 0xb2, 0x4d,
+0x35, 0xca, 0xd2, 0x2d,
+0xb3, 0x4c, 0xcb, 0x34,
+0xad, 0x52, 0x35, 0xca,
+0x54, 0xab, 0x52, 0xad,
+0x32, 0xcd, 0xb2, 0x4d,
+0xb3, 0x4c, 0x4d, 0xb2,
+0xac, 0x53, 0x2b, 0xd4,
+0xb4, 0x4b, 0x2b, 0xd4,
+0x52, 0xad, 0xb4, 0x4b,
+0x55, 0xaa, 0x54, 0xab,
+0x52, 0xad, 0xca, 0x35,
+0x53, 0xac, 0x4c, 0xb3,
+0x32, 0xcd, 0x32, 0xcd,
+0xd2, 0x2d, 0x4b, 0xb4,
+0xac, 0x53, 0x53, 0xac,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xd2, 0x2d, 0xcd, 0x32,
+0x35, 0xca, 0x54, 0xab,
+0xaa, 0x55, 0xd3, 0x2c,
+0x4d, 0xb2, 0xcc, 0x33,
+0xd3, 0x2c, 0x55, 0xaa,
+0xd4, 0x2b, 0x33, 0xcc,
+0x2a, 0xd5, 0xac, 0x53,
+0xcb, 0x34, 0xd3, 0x2c,
+0xcb, 0x34, 0xad, 0x52,
+0xcd, 0x32, 0xb5, 0x4a,
+0xad, 0x52, 0x4d, 0xb2,
+0x2c, 0xd3, 0x4a, 0xb5,
+0xb2, 0x4d, 0x2b, 0xd4,
+0x2a, 0xd5, 0x4a, 0xb5,
+0x54, 0xab, 0xd4, 0x2b,
+0x2b, 0xd4, 0xaa, 0x55,
+0x53, 0xac, 0xb4, 0x4b,
+0x2b, 0xd4, 0x2c, 0xd3,
+0x52, 0xad, 0xaa, 0x55,
+0xcb, 0x34, 0x55, 0xaa,
+0x32, 0xcd, 0xac, 0x53,
+0x2d, 0xd2, 0x4c, 0xb3,
+0xcc, 0x33, 0x4d, 0xb2,
+0xca, 0x35, 0x2b, 0xd4,
+0xac, 0x53, 0xcb, 0x34,
+0x4d, 0xb2, 0x34, 0xcb,
+0x52, 0xad, 0x52, 0xad,
+0x54, 0xab, 0x52, 0xad,
+0xb2, 0x4d, 0xad, 0x52,
+0xb3, 0x4c, 0x4d, 0xb2,
+0xb4, 0x4b, 0x2d, 0xd2,
+0xb4, 0x4b, 0xab, 0x54,
+0xb5, 0x4a, 0xb5, 0x4a,
+0x55, 0xaa, 0xcc, 0x33,
+0x35, 0xca, 0xca, 0x35,
+0xd3, 0x2c, 0xd3, 0x2c,
+0x2d, 0xd2, 0x32, 0xcd,
+0xca, 0x35, 0x55, 0xaa,
+0xaa, 0x55, 0xd3, 0x2c,
+0x2d, 0xd2, 0xcc, 0x33,
+0xd3, 0x2c, 0x55, 0xaa,
+0xca, 0x35, 0x33, 0xcc,
+0x2a, 0xd5, 0xcc, 0x33,
+0xcd, 0x32, 0xd3, 0x2c,
+0xcb, 0x34, 0x53, 0xac,
+0xcc, 0x33, 0xb5, 0x4a,
+0xcd, 0x32, 0x2d, 0xd2,
+0x2c, 0xd3, 0x4a, 0xb5,
+0xac, 0x53, 0x35, 0xca,
+0x2a, 0xd5, 0x2a, 0xd5,
+0x32, 0xcd, 0xd2, 0x2d,
+0x2b, 0xd4, 0x54, 0xab,
+0xac, 0x53, 0xb5, 0x4a,
+0x4b, 0xb4, 0x2c, 0xd3,
+0x32, 0xcd, 0xaa, 0x55,
+0xd5, 0x2a, 0x55, 0xaa,
+0x2c, 0xd3, 0xcc, 0x33,
+0x2b, 0xd4, 0x2c, 0xd3,
+0xca, 0x35, 0xb3, 0x4c,
+0xcb, 0x34, 0xd5, 0x2a,
+0xcd, 0x32, 0xab, 0x54,
+0x2d, 0xd2, 0x54, 0xab,
+0x4c, 0xb3, 0x4c, 0xb3,
+0x4a, 0xb5, 0x2c, 0xd3,
+0xd4, 0x2b, 0xcb, 0x34,
+0xd5, 0x2a, 0xb5, 0x4a,
+0x4b, 0xb4, 0xd2, 0x2d,
+0x2b, 0xd4, 0xaa, 0x55,
+0xb5, 0x4a, 0xb5, 0x4a,
+0x2b, 0xd4, 0xcc, 0x33,
+0x35, 0xca, 0xaa, 0x55,
+0xcb, 0x34, 0xd3, 0x2c,
+0x2d, 0xd2, 0xac, 0x53,
+0xcd, 0x32, 0x55, 0xaa,
+0xca, 0x35, 0x4d, 0xb2,
+0x2c, 0xd3, 0xcc, 0x33,
+0xad, 0x52, 0x2b, 0xd4,
+0xca, 0x35, 0x53, 0xac,
+0x52, 0xad, 0xd4, 0x2b,
+0xcd, 0x32, 0x4d, 0xb2,
+0x52, 0xad, 0x54, 0xab,
+0xac, 0x53, 0x4b, 0xb4,
+0x52, 0xad, 0x2c, 0xd3,
+0x52, 0xad, 0x4a, 0xb5,
+0xd2, 0x2d, 0x55, 0xaa,
+0x32, 0xcd, 0x4a, 0xb5,
+0x2a, 0xd5, 0x4c, 0xb3,
+0x2c, 0xd3, 0xca, 0x35,
+0xcb, 0x34, 0x2b, 0xd4,
+0x2a, 0xd5, 0xb2, 0x4d,
+0x4d, 0xb2, 0xd4, 0x2b,
+0xab, 0x54, 0x4b, 0xb4,
+0x54, 0xab, 0xb4, 0x4b,
+0x53, 0xac, 0xaa, 0x55,
+0x53, 0xac, 0x2a, 0xd5,
+0x32, 0xcd, 0x2c, 0xd3,
+0x32, 0xcd, 0x54, 0xab,
+0xcc, 0x33, 0x55, 0xaa,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xd4, 0x2b, 0x35, 0xca,
+0xca, 0x35, 0xb5, 0x4a,
+0x2b, 0xd4, 0xd2, 0x2d,
+0x2d, 0xd2, 0xaa, 0x55,
+0xab, 0x54, 0x55, 0xaa,
+0x2a, 0xd5, 0xac, 0x53,
+0x33, 0xcc, 0xcc, 0x33,
+0xcb, 0x34, 0x2d, 0xd2,
+0xcc, 0x33, 0xb3, 0x4c,
+0xad, 0x52, 0x35, 0xca,
+0xcc, 0x33, 0x4b, 0xb4,
+0x32, 0xcd, 0x32, 0xcd,
+0x4c, 0xb3, 0x4a, 0xb5,
+0xac, 0x53, 0x33, 0xcc,
+0x34, 0xcb, 0x2a, 0xd5,
+0xd2, 0x2d, 0xb3, 0x4c,
+0x2d, 0xd2, 0x54, 0xab,
+0xca, 0x35, 0x4b, 0xb4,
+0x4a, 0xb5, 0xcc, 0x33,
+0x4d, 0xb2, 0xca, 0x35,
+0xd5, 0x2a, 0x53, 0xac,
+0x34, 0xcb, 0xd2, 0x2d,
+0xcb, 0x34, 0xad, 0x52,
+0xad, 0x52, 0xb5, 0x4a,
+0xad, 0x52, 0x4d, 0xb2,
+0x32, 0xcd, 0x4a, 0xb5,
+0xb2, 0x4d, 0x4b, 0xb4,
+0x2c, 0xd3, 0x4a, 0xb5,
+0x54, 0xab, 0x2a, 0xd5,
+0x2a, 0xd5, 0xaa, 0x55,
+0x33, 0xcc, 0xd4, 0x2b,
+0x2b, 0xd4, 0x2c, 0xd3,
+0x4c, 0xb3, 0xb4, 0x4b,
+0xcb, 0x34, 0x35, 0xca,
+0x54, 0xab, 0xaa, 0x55,
+0x2d, 0xd2, 0xb2, 0x4d,
+0x33, 0xcc, 0x4c, 0xb3,
+0xaa, 0x55, 0x2b, 0xd4,
+0xcc, 0x33, 0xcb, 0x34,
+0x53, 0xac, 0x34, 0xcb,
+0x4c, 0xb3, 0x32, 0xcd,
+0x52, 0xad, 0x32, 0xcd,
+0xb4, 0x4b, 0x53, 0xac,
+0xb2, 0x4d, 0xb3, 0x4c,
+0xd5, 0x2a, 0x4d, 0xb2,
+0xd4, 0x2b, 0xcb, 0x34,
+0xab, 0x54, 0xab, 0x54,
+0x4b, 0xb4, 0xb2, 0x4d,
+0x53, 0xac, 0xac, 0x53,
+0xb5, 0x4a, 0x2b, 0xd4,
+0xd2, 0x2d, 0xcd, 0x32,
+0x55, 0xaa, 0x54, 0xab,
+0xaa, 0x55, 0xd3, 0x2c,
+0x53, 0xac, 0xcc, 0x33,
+0xd3, 0x2c, 0x35, 0xca,
+0xd2, 0x2d, 0x33, 0xcc,
+0x2a, 0xd5, 0x52, 0xad,
+0xca, 0x35, 0xd3, 0x2c,
+0xab, 0x54, 0xcd, 0x32,
+0xcd, 0x32, 0xb5, 0x4a,
+0xb3, 0x4c, 0x53, 0xac,
+0x2c, 0xd3, 0x2a, 0xd5,
+0xd4, 0x2b, 0x2d, 0xd2,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xab, 0x54, 0xd5, 0x2a,
+0x4b, 0xb4, 0xaa, 0x55,
+0x33, 0xcc, 0xb4, 0x4b,
+0x35, 0xca, 0x2c, 0xd3,
+0x4c, 0xb3, 0xca, 0x35,
+0xcd, 0x32, 0x35, 0xca,
+0x34, 0xcb, 0x52, 0xad,
+0x2c, 0xd3, 0xb2, 0x4d,
+0xad, 0x52, 0x2d, 0xd2,
+0xaa, 0x55, 0x4b, 0xb4,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x53, 0xac, 0x4a, 0xb5,
+0x34, 0xcb, 0x34, 0xcb,
+0x32, 0xcd, 0xaa, 0x55,
+0x4d, 0xb2, 0x52, 0xad,
+0x2c, 0xd3, 0x4c, 0xb3,
+0xb4, 0x4b, 0x2d, 0xd2,
+0xca, 0x35, 0xab, 0x54,
+0xb5, 0x4a, 0xd5, 0x2a,
+0x4d, 0xb2, 0xcc, 0x33,
+0x35, 0xca, 0x54, 0xab,
+0xd4, 0x2b, 0xd3, 0x2c,
+0x4d, 0xb2, 0xac, 0x53,
+0xcb, 0x34, 0x55, 0xaa,
+0xd4, 0x2b, 0xad, 0x52,
+0x2d, 0xd2, 0xac, 0x53,
+0xab, 0x54, 0x4d, 0xb2,
+0xca, 0x35, 0xad, 0x52,
+0xb3, 0x4c, 0xcb, 0x34,
+0xad, 0x52, 0x2d, 0xd2,
+0x54, 0xab, 0x52, 0xad,
+0xb2, 0x4d, 0xb5, 0x4a,
+0xb3, 0x4c, 0x4d, 0xb2,
+0x34, 0xcb, 0x2a, 0xd5,
+0xb4, 0x4b, 0xab, 0x54,
+0x2d, 0xd2, 0xb4, 0x4b,
+0x55, 0xaa, 0x4c, 0xb3,
+0x4a, 0xb5, 0xca, 0x35,
+0xd3, 0x2c, 0xcb, 0x34,
+0x35, 0xca, 0x32, 0xcd,
+0x4a, 0xb5, 0xd2, 0x2d,
+0xad, 0x52, 0xd3, 0x2c,
+0xb5, 0x4a, 0x55, 0xaa,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x35, 0xca, 0x4c, 0xb3,
+0x2a, 0xd5, 0xd4, 0x2b,
+0xcd, 0x32, 0xcb, 0x34,
+0x4b, 0xb4, 0x54, 0xab,
+0x4c, 0xb3, 0xb2, 0x4d,
+0x55, 0xaa, 0x2c, 0xd3,
+0xb4, 0x4b, 0xcb, 0x34,
+0xd3, 0x2c, 0xb5, 0x4a,
+0x55, 0xaa, 0x32, 0xcd,
+0x2a, 0xd5, 0xca, 0x35,
+0xb3, 0x4c, 0xd3, 0x2c,
+0x2b, 0xd4, 0x32, 0xcd,
+0xd4, 0x2b, 0xb5, 0x4a,
+0xab, 0x54, 0xb3, 0x4c,
+0x2b, 0xd4, 0xaa, 0x55,
+0xd3, 0x2c, 0xab, 0x54,
+0x2b, 0xd4, 0x2c, 0xd3,
+0x4a, 0xb5, 0xac, 0x53,
+0xcb, 0x34, 0xd5, 0x2a,
+0xd5, 0x2a, 0xad, 0x52,
+0x2d, 0xd2, 0xd4, 0x2b,
+0xab, 0x54, 0x4d, 0xb2,
+0x4a, 0xb5, 0xb4, 0x4b,
+0xb3, 0x4c, 0xcb, 0x34,
+0x55, 0xaa, 0x2a, 0xd5,
+0x54, 0xab, 0xd2, 0x2d,
+0x33, 0xcc, 0xb4, 0x4b,
+0xb3, 0x4c, 0x35, 0xca,
+0x4c, 0xb3, 0x2a, 0xd5,
+0x34, 0xcb, 0x32, 0xcd,
+0x34, 0xcb, 0xb4, 0x4b,
+0xad, 0x52, 0xb3, 0x4c,
+0x4d, 0xb2, 0x4a, 0xb5,
+0xd2, 0x2d, 0x4b, 0xb4,
+0x34, 0xcb, 0x4a, 0xb5,
+0x4a, 0xb5, 0xaa, 0x55,
+0x2d, 0xd2, 0xca, 0x35,
+0x35, 0xca, 0x4c, 0xb3,
+0x2a, 0xd5, 0xd2, 0x2d,
+0xcd, 0x32, 0xcb, 0x34,
+0xab, 0x54, 0x55, 0xaa,
+0x4c, 0xb3, 0xb2, 0x4d,
+0x33, 0xcc, 0x2c, 0xd3,
+0xb4, 0x4b, 0x2b, 0xd4,
+0xcc, 0x33, 0xb5, 0x4a,
+0x55, 0xaa, 0x34, 0xcb,
+0x2c, 0xd3, 0xca, 0x35,
+0x53, 0xac, 0x32, 0xcd,
+0x2a, 0xd5, 0x32, 0xcd,
+0xb2, 0x4d, 0xd3, 0x2c,
+0xab, 0x54, 0x53, 0xac,
+0xd4, 0x2b, 0xb5, 0x4a,
+0xd3, 0x2c, 0xad, 0x52,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xaa, 0x55, 0xad, 0x52,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xb3, 0x4c, 0xad, 0x52,
+0x4b, 0xb4, 0x34, 0xcb,
+0xb4, 0x4b, 0xad, 0x52,
+0x55, 0xaa, 0xb2, 0x4d,
+0xb5, 0x4a, 0xcd, 0x32,
+0xb3, 0x4c, 0xcb, 0x34,
+0xb5, 0x4a, 0x33, 0xcc,
+0x54, 0xab, 0xd2, 0x2d,
+0xd5, 0x2a, 0xb3, 0x4c,
+0xb3, 0x4c, 0xd5, 0x2a,
+0xcb, 0x34, 0x2b, 0xd4,
+0x34, 0xcb, 0xb4, 0x4b,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x4d, 0xb2, 0x4a, 0xb5,
+0x54, 0xab, 0x4a, 0xb5,
+0x34, 0xcb, 0xaa, 0x55,
+0x33, 0xcc, 0xaa, 0x55,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x2c, 0xd3, 0x4c, 0xb3,
+0xca, 0x35, 0x35, 0xca,
+0xca, 0x35, 0xcb, 0x34,
+0x2d, 0xd2, 0xd2, 0x2d,
+0x4d, 0xb2, 0x52, 0xad,
+0xaa, 0x55, 0x55, 0xaa,
+0xb4, 0x4b, 0xcd, 0x32,
+0x33, 0xcc, 0xac, 0x53,
+0xb5, 0x4a, 0x33, 0xcc,
+0xcc, 0x33, 0xcd, 0x32,
+0xd5, 0x2a, 0x33, 0xcc,
+0xac, 0x53, 0xd3, 0x2c,
+0xcb, 0x34, 0x33, 0xcc,
+0xd2, 0x2d, 0xb5, 0x4a,
+0xcd, 0x32, 0x53, 0xac,
+0x2a, 0xd5, 0x4a, 0xb5,
+0xcc, 0x33, 0xcd, 0x32,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xac, 0x53, 0xb3, 0x4c,
+0x2b, 0xd4, 0x34, 0xcb,
+0xd2, 0x2d, 0xab, 0x54,
+0x4b, 0xb4, 0x52, 0xad,
+0x4a, 0xb5, 0xac, 0x53,
+0xb5, 0x4a, 0xcd, 0x32,
+0xd5, 0x2a, 0xcd, 0x32,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xab, 0x54, 0xd3, 0x2c,
+0xd5, 0x2a, 0xb5, 0x4a,
+0xd3, 0x2c, 0xd5, 0x2a,
+0x2b, 0xd4, 0x2a, 0xd5,
+0x2a, 0xd5, 0xb4, 0x4b,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x4b, 0xb4, 0xaa, 0x55,
+0x4b, 0xb4, 0xb4, 0x4b,
+0x35, 0xca, 0xac, 0x53,
+0x55, 0xaa, 0xca, 0x35,
+0xcd, 0x32, 0xcd, 0x32,
+0x33, 0xcc, 0x52, 0xad,
+0xac, 0x53, 0x33, 0xcc,
+0xac, 0x53, 0x2d, 0xd2,
+0xd2, 0x2d, 0x33, 0xcc,
+0xb2, 0x4d, 0x55, 0xaa,
+0xca, 0x35, 0x53, 0xac,
+0x34, 0xcb, 0xcc, 0x33,
+0xcd, 0x32, 0xad, 0x52,
+0xcd, 0x32, 0x53, 0xac,
+0xac, 0x53, 0x4d, 0xb2,
+0xcc, 0x33, 0x2d, 0xd2,
+0xb2, 0x4d, 0x2b, 0xd4,
+0xac, 0x53, 0x55, 0xaa,
+0x54, 0xab, 0x34, 0xcb,
+0x32, 0xcd, 0xac, 0x53,
+0x53, 0xac, 0x52, 0xad,
+0xcc, 0x33, 0x2d, 0xd2,
+0xb2, 0x4d, 0x2d, 0xd2,
+0xac, 0x53, 0x55, 0xaa,
+0xb4, 0x4b, 0x35, 0xca,
+0x32, 0xcd, 0xac, 0x53,
+0x35, 0xca, 0x52, 0xad,
+0xcc, 0x33, 0xcd, 0x32,
+0xad, 0x52, 0x2d, 0xd2,
+0xac, 0x53, 0x53, 0xac,
+0xb2, 0x4d, 0x35, 0xca,
+0xd2, 0x2d, 0x4d, 0xb2,
+0x34, 0xcb, 0x52, 0xad,
+0xaa, 0x55, 0xab, 0x54,
+0xad, 0x52, 0xcd, 0x32,
+0x53, 0xac, 0x4c, 0xb3,
+0xb2, 0x4d, 0x33, 0xcc,
+0xd2, 0x2d, 0x4b, 0xb4,
+0xd4, 0x2b, 0x53, 0xac,
+0x4a, 0xb5, 0xaa, 0x55,
+0xcb, 0x34, 0xcd, 0x32,
+0x35, 0xca, 0xac, 0x53,
+0xad, 0x52, 0xd3, 0x2c,
+0xcd, 0x32, 0x4d, 0xb2,
+0xd2, 0x2d, 0x55, 0xaa,
+0xac, 0x53, 0x4b, 0xb4,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x52, 0xad, 0xca, 0x35,
+0xcb, 0x34, 0x55, 0xaa,
+0x32, 0xcd, 0xb2, 0x4d,
+0x2d, 0xd2, 0x4c, 0xb3,
+0xac, 0x53, 0x4b, 0xb4,
+0xca, 0x35, 0x2b, 0xd4,
+0x52, 0xad, 0xca, 0x35,
+0x4d, 0xb2, 0x54, 0xab,
+0x32, 0xcd, 0x52, 0xad,
+0x54, 0xab, 0x4c, 0xb3,
+0xac, 0x53, 0xad, 0x52,
+0xd3, 0x2c, 0x2b, 0xd4,
+0xb2, 0x4d, 0x2d, 0xd2,
+0x4a, 0xb5, 0x54, 0xab,
+0xb4, 0x4b, 0xd5, 0x2a,
+0x55, 0xaa, 0xac, 0x53,
+0x35, 0xca, 0xd4, 0x2b,
+0xd3, 0x2c, 0xcd, 0x32,
+0x4d, 0xb2, 0x34, 0xcb,
+0xaa, 0x55, 0x53, 0xac,
+0x54, 0xab, 0xd2, 0x2d,
+0xd3, 0x2c, 0xad, 0x52,
+0xb3, 0x4c, 0x35, 0xca,
+0xaa, 0x55, 0x2d, 0xd2,
+0x34, 0xcb, 0xd2, 0x2d,
+0xb3, 0x4c, 0xb5, 0x4a,
+0xad, 0x52, 0x35, 0xca,
+0x34, 0xcb, 0x4a, 0xb5,
+0x32, 0xcd, 0xb2, 0x4d,
+0x2d, 0xd2, 0x4a, 0xb5,
+0xac, 0x53, 0x4b, 0xb4,
+0x2a, 0xd5, 0x2a, 0xd5,
+0x52, 0xad, 0xca, 0x35,
+0x2b, 0xd4, 0x54, 0xab,
+0x32, 0xcd, 0xb2, 0x4d,
+0x4b, 0xb4, 0x4c, 0xb3,
+0xac, 0x53, 0xab, 0x54,
+0xd5, 0x2a, 0x2b, 0xd4,
+0x52, 0xad, 0xcc, 0x33,
+0x4b, 0xb4, 0x54, 0xab,
+0xd2, 0x2d, 0xb3, 0x4c,
+0x55, 0xaa, 0x4c, 0xb3,
+0xca, 0x35, 0xcb, 0x34,
+0xd3, 0x2c, 0xcb, 0x34,
+0x4d, 0xb2, 0x32, 0xcd,
+0x4a, 0xb5, 0x52, 0xad,
+0xb4, 0x4b, 0xd3, 0x2c,
+0xb5, 0x4a, 0xad, 0x52,
+0xd5, 0x2a, 0xd5, 0x2a,
+0xb5, 0x4a, 0xcd, 0x32,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xb5, 0x4a, 0xb3, 0x4c,
+0x4b, 0xb4, 0xd4, 0x2b,
+0xd5, 0x2a, 0xab, 0x54,
+0x55, 0xaa, 0xd4, 0x2b,
+0x4b, 0xb4, 0xcc, 0x33,
+0x53, 0xac, 0xb4, 0x4b,
+0xd5, 0x2a, 0x33, 0xcc,
+0x52, 0xad, 0xca, 0x35,
+0xcb, 0x34, 0x53, 0xac,
+0x32, 0xcd, 0xb2, 0x4d,
+0xcd, 0x32, 0x4d, 0xb2,
+0xac, 0x53, 0x4b, 0xb4,
+0xac, 0x53, 0x2b, 0xd4,
+0x52, 0xad, 0x2a, 0xd5,
+0x52, 0xad, 0x54, 0xab,
+0x32, 0xcd, 0x54, 0xab,
+0x52, 0xad, 0x4c, 0xb3,
+0x4c, 0xb3, 0x4c, 0xb3,
+0xd2, 0x2d, 0x2b, 0xd4,
+0xd4, 0x2b, 0x4b, 0xb4,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x4b, 0xb4, 0xca, 0x35,
+0x55, 0xaa, 0xaa, 0x55,
+0x35, 0xca, 0xd2, 0x2d,
+0x33, 0xcc, 0xcc, 0x33,
+0xad, 0x52, 0x35, 0xca,
+0xcc, 0x33, 0x53, 0xac,
+0x32, 0xcd, 0x32, 0xcd,
+0xcc, 0x33, 0x4d, 0xb2,
+0xac, 0x53, 0x33, 0xcc,
+0xac, 0x53, 0x2b, 0xd4,
+0xd2, 0x2d, 0x33, 0xcc,
+0x52, 0xad, 0x54, 0xab,
+0xca, 0x35, 0x53, 0xac,
+0x52, 0xad, 0xcc, 0x33,
+0xcd, 0x32, 0x4d, 0xb2,
+0xd2, 0x2d, 0x53, 0xac,
+0xac, 0x53, 0x4b, 0xb4,
+0xca, 0x35, 0x2d, 0xd2,
+0x52, 0xad, 0xca, 0x35,
+0xad, 0x52, 0x55, 0xaa,
+0x32, 0xcd, 0x52, 0xad,
+0x32, 0xcd, 0x4c, 0xb3,
+0xac, 0x53, 0x4d, 0xb2,
+0xcc, 0x33, 0x2b, 0xd4,
+0xb2, 0x4d, 0x2b, 0xd4,
+0x4c, 0xb3, 0x54, 0xab,
+0x54, 0xab, 0x34, 0xcb,
+0x54, 0xab, 0xac, 0x53,
+0x53, 0xac, 0xb2, 0x4d,
+0xd3, 0x2c, 0x2d, 0xd2,
+0xb2, 0x4d, 0x2b, 0xd4,
+0xaa, 0x55, 0x55, 0xaa,
+0x54, 0xab, 0xd4, 0x2b,
+0x33, 0xcc, 0xac, 0x53,
+0x53, 0xac, 0x34, 0xcb,
+0xcc, 0x33, 0x2d, 0xd2,
+0x52, 0xad, 0x32, 0xcd,
+0xac, 0x53, 0x55, 0xaa,
+0xb2, 0x4d, 0x33, 0xcc,
+0x32, 0xcd, 0x4c, 0xb3,
+0xd4, 0x2b, 0x53, 0xac,
+0xcc, 0x33, 0xab, 0x54,
+0xcb, 0x34, 0x2d, 0xd2,
+0x4c, 0xb3, 0xac, 0x53,
+0xad, 0x52, 0x35, 0xca,
+0xd4, 0x2b, 0x4d, 0xb2,
+0x32, 0xcd, 0xb2, 0x4d,
+0xab, 0x54, 0x4b, 0xb4,
+0xac, 0x53, 0xab, 0x54,
+0x53, 0xac, 0x2a, 0xd5,
+0x52, 0xad, 0x2c, 0xd3,
+0x32, 0xcd, 0x54, 0xab,
+0xd2, 0x2d, 0x55, 0xaa,
+0x4c, 0xb3, 0x4c, 0xb3,
+0x2a, 0xd5, 0x2c, 0xd3,
+0xd4, 0x2b, 0xcb, 0x34,
+0xcb, 0x34, 0xb5, 0x4a,
+0x4b, 0xb4, 0xb2, 0x4d,
+0x2d, 0xd2, 0xaa, 0x55,
+0xb5, 0x4a, 0x4b, 0xb4,
+0x2a, 0xd5, 0xcc, 0x33,
+0x55, 0xaa, 0xca, 0x35,
+0xcb, 0x34, 0xd3, 0x2c,
+0x33, 0xcc, 0xb2, 0x4d,
+0xcd, 0x32, 0x35, 0xca,
+0xac, 0x53, 0x4b, 0xb4,
+0x2c, 0xd3, 0x32, 0xcd,
+0x52, 0xad, 0x2a, 0xd5,
+0xaa, 0x55, 0x53, 0xac,
+0x32, 0xcd, 0xd4, 0x2b,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x4c, 0xb3, 0x34, 0xcb,
+0xaa, 0x55, 0x2b, 0xd4,
+0x54, 0xab, 0xd2, 0x2d,
+0x53, 0xac, 0xb4, 0x4b,
+0xb3, 0x4c, 0x35, 0xca,
+0x52, 0xad, 0x2a, 0xd5,
+0x34, 0xcb, 0x52, 0xad,
+0x32, 0xcd, 0xb4, 0x4b,
+0xad, 0x52, 0x4d, 0xb2,
+0x4c, 0xb3, 0x4a, 0xb5,
+0xb2, 0x4d, 0x2b, 0xd4,
+0x34, 0xcb, 0x4a, 0xb5,
+0x54, 0xab, 0xb4, 0x4b,
+0x2d, 0xd2, 0xaa, 0x55,
+0x53, 0xac, 0x4a, 0xb5,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x32, 0xcd, 0xca, 0x35,
+0xcb, 0x34, 0x55, 0xaa,
+0x2c, 0xd3, 0xb2, 0x4d,
+0x2d, 0xd2, 0x2c, 0xd3,
+0xaa, 0x55, 0x4b, 0xb4,
+0xca, 0x35, 0xd5, 0x2a,
+0x53, 0xac, 0xca, 0x35,
+0x2d, 0xd2, 0x34, 0xcb,
+0x32, 0xcd, 0x52, 0xad,
+0x4a, 0xb5, 0x52, 0xad,
+0xac, 0x53, 0xcd, 0x32,
+0xb5, 0x4a, 0x2d, 0xd2,
+0xb2, 0x4d, 0xd3, 0x2c,
+0xb5, 0x4a, 0x55, 0xaa,
+0xd4, 0x2b, 0xd5, 0x2a,
+0x35, 0xca, 0xac, 0x53,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xcd, 0x32, 0xad, 0x52,
+0x4b, 0xb4, 0x54, 0xab,
+0xac, 0x53, 0xad, 0x52,
+0x55, 0xaa, 0x2c, 0xd3,
+0xb2, 0x4d, 0xcd, 0x32,
+0xd3, 0x2c, 0x55, 0xaa,
+0xb4, 0x4b, 0x33, 0xcc,
+0x2a, 0xd5, 0xac, 0x53,
+0xd5, 0x2a, 0xd3, 0x2c,
+0xcb, 0x34, 0xcd, 0x32,
+0xcb, 0x34, 0xb5, 0x4a,
+0xad, 0x52, 0xb3, 0x4c,
+0x2d, 0xd2, 0x4a, 0xb5,
+0xd2, 0x2d, 0x4b, 0xb4,
+0x2a, 0xd5, 0x4a, 0xb5,
+0x4a, 0xb5, 0xca, 0x35,
+0x2b, 0xd4, 0xca, 0x35,
+0x35, 0xca, 0xb2, 0x4d,
+0x2b, 0xd4, 0xd2, 0x2d,
+0xad, 0x52, 0xab, 0x54,
+0xab, 0x54, 0x55, 0xaa,
+0x52, 0xad, 0xac, 0x53,
+0x33, 0xcc, 0x4c, 0xb3,
+0xd2, 0x2d, 0x2d, 0xd2,
+0xcc, 0x33, 0x4b, 0xb4,
+0xaa, 0x55, 0x35, 0xca,
+0x4c, 0xb3, 0xca, 0x35,
+0x33, 0xcc, 0x32, 0xcd,
+0x34, 0xcb, 0x32, 0xcd,
+0xac, 0x53, 0xb3, 0x4c,
+0xad, 0x52, 0x33, 0xcc,
+0xd2, 0x2d, 0x4b, 0xb4,
+0xd2, 0x2d, 0x53, 0xac,
+0x4a, 0xb5, 0x4a, 0xb5,
+0xca, 0x35, 0xcd, 0x32,
+0x35, 0xca, 0xca, 0x35,
+0xad, 0x52, 0xd3, 0x2c,
+0x2d, 0xd2, 0x52, 0xad,
+0xd2, 0x2d, 0x55, 0xaa,
+0xaa, 0x55, 0x4d, 0xb2,
+0x2a, 0xd5, 0xcc, 0x33,
+0xb3, 0x4c, 0xcb, 0x34,
+0xcb, 0x34, 0x33, 0xcc,
+0x54, 0xab, 0xb2, 0x4d,
+0xcd, 0x32, 0xb3, 0x4c,
+0xb3, 0x4c, 0x4b, 0xb4,
+0xcc, 0x33, 0x2b, 0xd4,
+0x54, 0xab, 0x2a, 0xd5,
+0x4c, 0xb3, 0xb4, 0x4b,
+0x33, 0xcc, 0x34, 0xcb,
+0x54, 0xab, 0x2a, 0xd5,
+0x4c, 0xb3, 0xb2, 0x4d,
+0x33, 0xcc, 0x34, 0xcb,
+0xb4, 0x4b, 0x2b, 0xd4,
+0x4c, 0xb3, 0xb2, 0x4d,
+0x55, 0xaa, 0x34, 0xcb,
+0xb4, 0x4b, 0xcb, 0x34,
+0x53, 0xac, 0xb2, 0x4d,
+0x55, 0xaa, 0x32, 0xcd,
+0xb2, 0x4d, 0xcb, 0x34,
+0xb3, 0x4c, 0x53, 0xac,
+0x54, 0xab, 0x32, 0xcd,
+0xd4, 0x2b, 0xad, 0x52,
+0xb3, 0x4c, 0xb3, 0x4c,
+0xab, 0x54, 0x2d, 0xd2,
+0xd4, 0x2b, 0xab, 0x54,
+0xb3, 0x4c, 0xb5, 0x4a,
+0x4b, 0xb4, 0x2c, 0xd3,
+0x34, 0xcb, 0xaa, 0x55,
+0xd5, 0x2a, 0xb5, 0x4a,
+0x2d, 0xd2, 0xcc, 0x33,
+0x2b, 0xd4, 0x4a, 0xb5,
+0xca, 0x35, 0xb3, 0x4c,
+0x2b, 0xd4, 0xca, 0x35,
+0xcd, 0x32, 0xab, 0x54,
+0x2b, 0xd4, 0x52, 0xad,
+0x4c, 0xb3, 0xac, 0x53,
+0xab, 0x54, 0x2d, 0xd2,
+0xd4, 0x2b, 0xad, 0x52,
+0xb3, 0x4c, 0xb5, 0x4a,
+0xab, 0x54, 0x2d, 0xd2,
+0x34, 0xcb, 0xaa, 0x55,
+0xb3, 0x4c, 0xb5, 0x4a,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x34, 0xcb, 0x4a, 0xb5,
+0xca, 0x35, 0xb5, 0x4a,
+0x2d, 0xd2, 0xca, 0x35,
+0x2d, 0xd2, 0x4a, 0xb5,
+0x2a, 0xd5, 0x52, 0xad,
+0x2a, 0xd5, 0xca, 0x35,
+0xab, 0x54, 0xcd, 0x32,
+0x2b, 0xd4, 0xb2, 0x4d,
+0xb3, 0x4c, 0xb3, 0x4c,
+0xab, 0x54, 0x2b, 0xd4,
+0xd4, 0x2b, 0xab, 0x54,
+0x53, 0xac, 0xb4, 0x4b,
+0x4b, 0xb4, 0x2c, 0xd3,
+0x52, 0xad, 0xaa, 0x55,
+0xd5, 0x2a, 0x55, 0xaa,
+0x32, 0xcd, 0xcc, 0x33,
+0x2b, 0xd4, 0x4c, 0xb3,
+0xcc, 0x33, 0xb3, 0x4c,
+0xcb, 0x34, 0x2b, 0xd4,
+0xcc, 0x33, 0xab, 0x54,
+0x4d, 0xb2, 0x34, 0xcb,
+0x4c, 0xb3, 0x4c, 0xb3,
+0x54, 0xab, 0x32, 0xcd,
+0xd4, 0x2b, 0xab, 0x54,
+0xb3, 0x4c, 0xb3, 0x4c,
+0x4b, 0xb4, 0x2c, 0xd3,
+0xd4, 0x2b, 0xab, 0x54,
+0xd5, 0x2a, 0xb5, 0x4a,
+0x4b, 0xb4, 0xcc, 0x33,
+0x2b, 0xd4, 0xaa, 0x55,
+0xd5, 0x2a, 0xb3, 0x4c,
+0x2b, 0xd4, 0xcc, 0x33,
+0xcb, 0x34, 0xab, 0x54,
+0xcb, 0x34, 0xb3, 0x4c,
+0x4d, 0xb2, 0xac, 0x53,
+0xcd, 0x32, 0x4b, 0xb4,
+0xd4, 0x2b, 0x4d, 0xb2,
+0x4c, 0xb3, 0xaa, 0x55,
+0xab, 0x54, 0x2b, 0xd4,
+0x34, 0xcb, 0xac, 0x53,
+0x53, 0xac, 0xb4, 0x4b,
+0xcd, 0x32, 0x2d, 0xd2,
+0x52, 0xad, 0x4a, 0xb5,
+0xac, 0x53, 0x55, 0xaa,
+0x32, 0xcd, 0x2a, 0xd5,
+0x32, 0xcd, 0x4c, 0xb3,
+0x2c, 0xd3, 0x54, 0xab,
+0xcc, 0x33, 0x2b, 0xd4,
+0x4a, 0xb5, 0x2c, 0xd3,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xd5, 0x2a, 0x35, 0xca,
+0x54, 0xab, 0xd4, 0x2b,
+0x2b, 0xd4, 0xb2, 0x4d,
+0x53, 0xac, 0xb4, 0x4b,
+0xab, 0x54, 0x2b, 0xd4,
+0x52, 0xad, 0xaa, 0x55,
+0x53, 0xac, 0x54, 0xab,
+0x32, 0xcd, 0x2c, 0xd3,
+0x52, 0xad, 0x4c, 0xb3,
+0xcc, 0x33, 0x55, 0xaa,
+0xd2, 0x2d, 0x2b, 0xd4,
+0x2c, 0xd3, 0x4c, 0xb3,
+0x4a, 0xb5, 0x34, 0xcb,
+0xca, 0x35, 0xcb, 0x34,
+0x55, 0xaa, 0xd2, 0x2d,
+0x4d, 0xb2, 0xd2, 0x2d,
+0xb3, 0x4c, 0x55, 0xaa,
+0xb4, 0x4b, 0x35, 0xca,
+0x34, 0xcb, 0xac, 0x53,
+0x35, 0xca, 0xb2, 0x4d,
+0xcd, 0x32, 0xcd, 0x32,
+0xad, 0x52, 0x4b, 0xb4,
+0xac, 0x53, 0x53, 0xac,
+0x52, 0xad, 0x2a, 0xd5,
+0xd2, 0x2d, 0x4d, 0xb2,
+0x32, 0xcd, 0x54, 0xab,
+0xaa, 0x55, 0x4b, 0xb4,
+0x4c, 0xb3, 0xcc, 0x33,
+0x53, 0xac, 0x2a, 0xd5,
+0xd4, 0x2b, 0x33, 0xcc,
+0x32, 0xcd, 0xb4, 0x4b,
+0xcb, 0x34, 0x53, 0xac,
+0x4c, 0xb3, 0xaa, 0x55,
+0xcd, 0x32, 0x2d, 0xd2,
+0x34, 0xcb, 0x4c, 0xb3,
+0xac, 0x53, 0xb5, 0x4a,
+0xcd, 0x32, 0x2b, 0xd4,
+0x32, 0xcd, 0x4a, 0xb5,
+0x4c, 0xb3, 0x54, 0xab,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x54, 0xab, 0x2c, 0xd3,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xd3, 0x2c, 0xd5, 0x2a,
+0x4b, 0xb4, 0x2a, 0xd5,
+0x2a, 0xd5, 0xb4, 0x4b,
+0x35, 0xca, 0xd4, 0x2b,
+0x4b, 0xb4, 0xca, 0x35,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x35, 0xca, 0x52, 0xad,
+0x54, 0xab, 0xca, 0x35,
+0xad, 0x52, 0xad, 0x52,
+0x33, 0xcc, 0x52, 0xad,
+0xb2, 0x4d, 0x2d, 0xd2,
+0xac, 0x53, 0x4d, 0xb2,
+0xb4, 0x4b, 0x35, 0xca,
+0xb2, 0x4d, 0xab, 0x54,
+0x35, 0xca, 0x52, 0xad,
+0x54, 0xab, 0xcc, 0x33,
+0xad, 0x52, 0xad, 0x52,
+0xd3, 0x2c, 0x53, 0xac,
+0xb2, 0x4d, 0x2d, 0xd2,
+0xca, 0x35, 0x4d, 0xb2,
+0xb4, 0x4b, 0xd5, 0x2a,
+0xad, 0x52, 0xab, 0x54,
+0x35, 0xca, 0x54, 0xab,
+0x52, 0xad, 0xcc, 0x33,
+0x4d, 0xb2, 0x4c, 0xb3,
+0xd2, 0x2d, 0x53, 0xac,
+0xd4, 0x2b, 0x4b, 0xb4,
+0xca, 0x35, 0xad, 0x52,
+0x4b, 0xb4, 0xca, 0x35,
+0xad, 0x52, 0xad, 0x52,
+0x35, 0xca, 0x52, 0xad,
+0xb2, 0x4d, 0xcd, 0x32,
+0xad, 0x52, 0x4d, 0xb2,
+0xb4, 0x4b, 0x53, 0xac,
+0xb2, 0x4d, 0xab, 0x54,
+0xd5, 0x2a, 0x4d, 0xb2,
+0x54, 0xab, 0xcc, 0x33,
+0xab, 0x54, 0xab, 0x54,
+0xd3, 0x2c, 0xb3, 0x4c,
+0x53, 0xac, 0x2c, 0xd3,
+0xca, 0x35, 0x2b, 0xd4,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x4d, 0xb2, 0x54, 0xab,
+0x2a, 0xd5, 0x54, 0xab,
+0x54, 0xab, 0xcc, 0x33,
+0x4b, 0xb4, 0xac, 0x53,
+0xd3, 0x2c, 0xb3, 0x4c,
+0xd5, 0x2a, 0x2d, 0xd2,
+0xca, 0x35, 0xcb, 0x34,
+0xab, 0x54, 0xd5, 0x2a,
+0x4d, 0xb2, 0xb2, 0x4d,
+0x33, 0xcc, 0x54, 0xab,
+0xb4, 0x4b, 0x2b, 0xd4,
+0x4c, 0xb3, 0xac, 0x53,
+0x55, 0xaa, 0x34, 0xcb,
+0xd4, 0x2b, 0xcd, 0x32,
+0x53, 0xac, 0xb2, 0x4d,
+0xab, 0x54, 0x33, 0xcc,
+0xb2, 0x4d, 0xab, 0x54,
+0xd3, 0x2c, 0x53, 0xac,
+0x54, 0xab, 0x2c, 0xd3,
+0xca, 0x35, 0xad, 0x52,
+0xd3, 0x2c, 0xd5, 0x2a,
+0xad, 0x52, 0x2d, 0xd2,
+0x2a, 0xd5, 0x54, 0xab,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x4b, 0xb4, 0x4c, 0xb3,
+0x34, 0xcb, 0xb4, 0x4b,
+0xd5, 0x2a, 0xab, 0x54,
+0x4d, 0xb2, 0xca, 0x35,
+0x4b, 0xb4, 0x4c, 0xb3,
+0x34, 0xcb, 0xb2, 0x4d,
+0xd5, 0x2a, 0xab, 0x54,
+0xad, 0x52, 0xcb, 0x34,
+0x4b, 0xb4, 0x4c, 0xb3,
+0x52, 0xad, 0xb2, 0x4d,
+0xd5, 0x2a, 0x4b, 0xb4,
+0xb2, 0x4d, 0xcb, 0x34,
+0x4b, 0xb4, 0x4a, 0xb5,
+0x54, 0xab, 0xb2, 0x4d,
+0x35, 0xca, 0xaa, 0x55,
+0xb3, 0x4c, 0xcb, 0x34,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x54, 0xab, 0x52, 0xad,
+0xca, 0x35, 0xb5, 0x4a,
+0xb3, 0x4c, 0xcd, 0x32,
+0x2d, 0xd2, 0x2a, 0xd5,
+0xb4, 0x4b, 0x53, 0xac,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xd5, 0x2a, 0xcd, 0x32,
+0x4b, 0xb4, 0xca, 0x35,
+0xab, 0x54, 0xb3, 0x4c,
+0x35, 0xca, 0xb2, 0x4d,
+0xd3, 0x2c, 0xcb, 0x34,
+0xad, 0x52, 0x2b, 0xd4,
+0x4a, 0xb5, 0x52, 0xad,
+0x52, 0xad, 0xd4, 0x2b,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x52, 0xad, 0xd4, 0x2b,
+0xb5, 0x4a, 0x4b, 0xb4,
+0x52, 0xad, 0xd4, 0x2b,
+0x55, 0xaa, 0x4a, 0xb5,
+0x52, 0xad, 0xd4, 0x2b,
+0x33, 0xcc, 0x4a, 0xb5,
+0x52, 0xad, 0x34, 0xcb,
+0x2c, 0xd3, 0x4a, 0xb5,
+0x52, 0xad, 0x32, 0xcd,
+0x2a, 0xd5, 0x4a, 0xb5,
+0xb2, 0x4d, 0xd3, 0x2c,
+0x2b, 0xd4, 0x4a, 0xb5,
+0xd4, 0x2b, 0xb5, 0x4a,
+0x2b, 0xd4, 0xaa, 0x55,
+0x2b, 0xd4, 0xaa, 0x55,
+0x2b, 0xd4, 0xac, 0x53,
+0x2b, 0xd4, 0xac, 0x53,
+0xcb, 0x34, 0xad, 0x52,
+0xcb, 0x34, 0xad, 0x52,
+0xad, 0x52, 0xad, 0x52,
+0xad, 0x52, 0x4d, 0xb2,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xb2, 0x4d, 0x4b, 0xb4,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x54, 0xab, 0xaa, 0x55,
+0x55, 0xaa, 0xaa, 0x55,
+0x33, 0xcc, 0xcc, 0x33,
+0x33, 0xcc, 0x2c, 0xd3,
+0xcc, 0x33, 0x33, 0xcc,
+0xcc, 0x33, 0x35, 0xca,
+0xcc, 0x33, 0x33, 0xcc,
+0x2c, 0xd3, 0x32, 0xcd,
+0xcc, 0x33, 0x33, 0xcc,
+0xaa, 0x55, 0x33, 0xcc,
+0xcc, 0x33, 0xd3, 0x2c,
+0xd3, 0x2c, 0x33, 0xcc,
+0xcc, 0x33, 0x35, 0xca,
+0xca, 0x35, 0x33, 0xcc,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xcd, 0x32, 0x33, 0xcc,
+0xaa, 0x55, 0x55, 0xaa,
+0xcc, 0x33, 0xd3, 0x2c,
+0x33, 0xcc, 0x2c, 0xd3,
+0xcc, 0x33, 0x35, 0xca,
+0xcc, 0x33, 0x35, 0xca,
+0x2c, 0xd3, 0x32, 0xcd,
+0x2c, 0xd3, 0x32, 0xcd,
+0xaa, 0x55, 0x33, 0xcc,
+0xaa, 0x55, 0xd3, 0x2c,
+0xd3, 0x2c, 0xd3, 0x2c,
+0xd3, 0x2c, 0x35, 0xca,
+0xca, 0x35, 0x35, 0xca,
+0x2a, 0xd5, 0xd2, 0x2d,
+0x2d, 0xd2, 0xd2, 0x2d,
+0xab, 0x54, 0x55, 0xaa,
+0xaa, 0x55, 0xb5, 0x4a,
+0x33, 0xcc, 0xcc, 0x33,
+0x33, 0xcc, 0x2a, 0xd5,
+0xcc, 0x33, 0x33, 0xcc,
+0x2c, 0xd3, 0x34, 0xcb,
+0xcc, 0x33, 0x33, 0xcc,
+0x4a, 0xb5, 0x32, 0xcd,
+0xcc, 0x33, 0xd3, 0x2c,
+0xb5, 0x4a, 0x33, 0xcc,
+0xcc, 0x33, 0xd5, 0x2a,
+0xd5, 0x2a, 0x33, 0xcc,
+0x2c, 0xd3, 0xd4, 0x2b,
+0xcb, 0x34, 0x33, 0xcc,
+0x4a, 0xb5, 0xb4, 0x4b,
+0xcd, 0x32, 0xd3, 0x2c,
+0x55, 0xaa, 0x4a, 0xb5,
+0xcc, 0x33, 0xd5, 0x2a,
+0x33, 0xcc, 0x2a, 0xd5,
+0x2c, 0xd3, 0x34, 0xcb,
+0x2c, 0xd3, 0x34, 0xcb,
+0x4a, 0xb5, 0x32, 0xcd,
+0x4a, 0xb5, 0xd2, 0x2d,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xb5, 0x4a, 0xd5, 0x2a,
+0xd5, 0x2a, 0xd5, 0x2a,
+0x35, 0xca, 0xd4, 0x2b,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x4b, 0xb4, 0x54, 0xab,
+0x54, 0xab, 0xaa, 0x55,
+0x55, 0xaa, 0xac, 0x53,
+0x33, 0xcc, 0xcc, 0x33,
+0xd3, 0x2c, 0x2d, 0xd2,
+0xcc, 0x33, 0x33, 0xcc,
+0xaa, 0x55, 0x35, 0xca,
+0xcc, 0x33, 0xd3, 0x2c,
+0x33, 0xcc, 0x32, 0xcd,
+0xcc, 0x33, 0x35, 0xca,
+0xac, 0x53, 0x33, 0xcc,
+0x2c, 0xd3, 0x32, 0xcd,
+0xd2, 0x2d, 0x33, 0xcc,
+0xaa, 0x55, 0x53, 0xac,
+0xca, 0x35, 0xd3, 0x2c,
+0xd3, 0x2c, 0xcd, 0x32,
+0xcd, 0x32, 0x35, 0xca,
+0xaa, 0x55, 0x53, 0xac,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xd3, 0x2c, 0x2d, 0xd2,
+0xaa, 0x55, 0x35, 0xca,
+0xaa, 0x55, 0xd5, 0x2a,
+0x33, 0xcc, 0xd2, 0x2d,
+0x33, 0xcc, 0x34, 0xcb,
+0xac, 0x53, 0x35, 0xca,
+0x4c, 0xb3, 0x32, 0xcd,
+0x32, 0xcd, 0x32, 0xcd,
+0xb4, 0x4b, 0x53, 0xac,
+0xac, 0x53, 0xb3, 0x4c,
+0xd5, 0x2a, 0x2d, 0xd2,
+0xd2, 0x2d, 0xcb, 0x34,
+0xab, 0x54, 0x55, 0xaa,
+0x4a, 0xb5, 0xb2, 0x4d,
+0x33, 0xcc, 0xcc, 0x33,
+0xb5, 0x4a, 0x2b, 0xd4,
+0xcc, 0x33, 0xd3, 0x2c,
+0x55, 0xaa, 0x34, 0xcb,
+0xcc, 0x33, 0xd5, 0x2a,
+0x53, 0xac, 0x32, 0xcd,
+0x2c, 0xd3, 0x34, 0xcb,
+0xb2, 0x4d, 0x33, 0xcc,
+0x4a, 0xb5, 0x52, 0xad,
+0xd4, 0x2b, 0xd3, 0x2c,
+0xb5, 0x4a, 0xad, 0x52,
+0xcb, 0x34, 0xd5, 0x2a,
+0xb5, 0x4a, 0xad, 0x52,
+0x2d, 0xd2, 0xd4, 0x2b,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x4a, 0xb5, 0xd4, 0x2b,
+0xb5, 0x4a, 0xcb, 0x34,
+0x55, 0xaa, 0xd4, 0x2b,
+0x55, 0xaa, 0xd2, 0x2d,
+0x53, 0xac, 0xd4, 0x2b,
+0xb3, 0x4c, 0x35, 0xca,
+0x52, 0xad, 0x34, 0xcb,
+0x34, 0xcb, 0x52, 0xad,
+0x52, 0xad, 0xb2, 0x4d,
+0xad, 0x52, 0x4d, 0xb2,
+0xb2, 0x4d, 0x4b, 0xb4,
+0xb2, 0x4d, 0x4b, 0xb4,
+0x54, 0xab, 0x4a, 0xb5,
+0x54, 0xab, 0xaa, 0x55,
+0x33, 0xcc, 0xaa, 0x55,
+0x33, 0xcc, 0x2c, 0xd3,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xcc, 0x33, 0x35, 0xca,
+0xca, 0x35, 0x35, 0xca,
+0x2c, 0xd3, 0xd2, 0x2d,
+0x2d, 0xd2, 0x32, 0xcd,
+0xaa, 0x55, 0x55, 0xaa,
+0xaa, 0x55, 0xd3, 0x2c,
+0x33, 0xcc, 0xcc, 0x33,
+0xd3, 0x2c, 0x35, 0xca,
+0xcc, 0x33, 0x33, 0xcc,
+0x2a, 0xd5, 0x32, 0xcd,
+0xcc, 0x33, 0xd3, 0x2c,
+0xab, 0x54, 0x33, 0xcc,
+0xcc, 0x33, 0xb5, 0x4a,
+0xd3, 0x2c, 0x33, 0xcc,
+0x2c, 0xd3, 0x2a, 0xd5,
+0xca, 0x35, 0x33, 0xcc,
+0x2a, 0xd5, 0xd4, 0x2b,
+0xcd, 0x32, 0xd3, 0x2c,
+0x4b, 0xb4, 0x54, 0xab,
+0xcc, 0x33, 0xb5, 0x4a,
+0x55, 0xaa, 0x2c, 0xd3,
+0x2c, 0xd3, 0xca, 0x35,
+0xd3, 0x2c, 0x35, 0xca,
+0x2a, 0xd5, 0x32, 0xcd,
+0x2a, 0xd5, 0xd2, 0x2d,
+0xab, 0x54, 0xd3, 0x2c,
+0xab, 0x54, 0xb5, 0x4a,
+0xd3, 0x2c, 0xb5, 0x4a,
+0x33, 0xcc, 0x2a, 0xd5,
+0x2a, 0xd5, 0x2a, 0xd5,
+0x2c, 0xd3, 0xd4, 0x2b,
+0x2b, 0xd4, 0x34, 0xcb,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x4b, 0xb4, 0xd2, 0x2d,
+0x55, 0xaa, 0xaa, 0x55,
+0xb5, 0x4a, 0xd5, 0x2a,
+0x33, 0xcc, 0xcc, 0x33,
+0x35, 0xca, 0x34, 0xcb,
+0xcc, 0x33, 0xd3, 0x2c,
+0x4d, 0xb2, 0x32, 0xcd,
+0xcc, 0x33, 0x55, 0xaa,
+0xb4, 0x4b, 0x33, 0xcc,
+0x2c, 0xd3, 0xac, 0x53,
+0xd5, 0x2a, 0x33, 0xcc,
+0xca, 0x35, 0xcd, 0x32,
+0xcb, 0x34, 0xd3, 0x2c,
+0xad, 0x52, 0xb3, 0x4c,
+0xcd, 0x32, 0x55, 0xaa,
+0xd2, 0x2d, 0x4b, 0xb4,
+0x2c, 0xd3, 0x4c, 0xb3,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xca, 0x35, 0xcb, 0x34,
+0x35, 0xca, 0xd4, 0x2b,
+0x4d, 0xb2, 0xd2, 0x2d,
+0x4d, 0xb2, 0x54, 0xab,
+0xb4, 0x4b, 0x55, 0xaa,
+0x54, 0xab, 0xac, 0x53,
+0x35, 0xca, 0xac, 0x53,
+0xd3, 0x2c, 0xcd, 0x32,
+0xcd, 0x32, 0x2d, 0xd2,
+0xaa, 0x55, 0x53, 0xac,
+0xac, 0x53, 0xd5, 0x2a,
+0xd3, 0x2c, 0x2d, 0xd2,
+0x32, 0xcd, 0x34, 0xcb,
+0xaa, 0x55, 0x55, 0xaa,
+0x4c, 0xb3, 0xd2, 0x2d,
+0x33, 0xcc, 0x2c, 0xd3,
+0xb4, 0x4b, 0x35, 0xca,
+0xcc, 0x33, 0xb5, 0x4a,
+0x35, 0xca, 0x32, 0xcd,
+0x2c, 0xd3, 0xca, 0x35,
+0xad, 0x52, 0x33, 0xcc,
+0x2a, 0xd5, 0x52, 0xad,
+0xd2, 0x2d, 0xd3, 0x2c,
+0xab, 0x54, 0x4d, 0xb2,
+0xca, 0x35, 0xb5, 0x4a,
+0xb3, 0x4c, 0xcb, 0x34,
+0x2d, 0xd2, 0x2a, 0xd5,
+0x54, 0xab, 0x52, 0xad,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xb3, 0x4c, 0xcd, 0x32,
+0x4b, 0xb4, 0x2a, 0xd5,
+0xb4, 0x4b, 0xb3, 0x4c,
+0x35, 0xca, 0xb4, 0x4b,
+0xd5, 0x2a, 0xcb, 0x34,
+0x4d, 0xb2, 0xca, 0x35,
+0x4b, 0xb4, 0x52, 0xad,
+0x34, 0xcb, 0xb2, 0x4d,
+0xb5, 0x4a, 0xad, 0x52,
+0xad, 0x52, 0xcb, 0x34,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x52, 0xad, 0xd2, 0x2d,
+0xb5, 0x4a, 0x4b, 0xb4,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x55, 0xaa, 0x4a, 0xb5,
+0x34, 0xcb, 0xd4, 0x2b,
+0x33, 0xcc, 0xaa, 0x55,
+0x4d, 0xb2, 0x34, 0xcb,
+0x2c, 0xd3, 0x4c, 0xb3,
+0x54, 0xab, 0x32, 0xcd,
+0xca, 0x35, 0xab, 0x54,
+0xb3, 0x4c, 0xd3, 0x2c,
+0x4d, 0xb2, 0x2c, 0xd3,
+0xd4, 0x2b, 0x55, 0xaa,
+0xd4, 0x2b, 0xb5, 0x4a,
+0x2b, 0xd4, 0xac, 0x53,
+0x2b, 0xd4, 0xaa, 0x55,
+0xcb, 0x34, 0xad, 0x52,
+0x2b, 0xd4, 0xac, 0x53,
+0xad, 0x52, 0xad, 0x52,
+0xcb, 0x34, 0x4d, 0xb2,
+0xb2, 0x4d, 0xad, 0x52,
+0xad, 0x52, 0x4b, 0xb4,
+0xb4, 0x4b, 0x4d, 0xb2,
+0x52, 0xad, 0xaa, 0x55,
+0xb5, 0x4a, 0x4b, 0xb4,
+0x32, 0xcd, 0xcc, 0x33,
+0x55, 0xaa, 0x4a, 0xb5,
+0xcc, 0x33, 0xd3, 0x2c,
+0x33, 0xcc, 0x2a, 0xd5,
+0xcc, 0x33, 0x35, 0xca,
+0x2c, 0xd3, 0x34, 0xcb,
+0x2c, 0xd3, 0x32, 0xcd,
+0x4a, 0xb5, 0x32, 0xcd,
+0xaa, 0x55, 0xd3, 0x2c,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xd3, 0x2c, 0xd5, 0x2a,
+0xd5, 0x2a, 0x35, 0xca,
+0x2a, 0xd5, 0xd4, 0x2b,
+0x2b, 0xd4, 0xd2, 0x2d,
+0x4b, 0xb4, 0xb4, 0x4b,
+0xab, 0x54, 0xb5, 0x4a,
+0x55, 0xaa, 0xaa, 0x55,
+0x33, 0xcc, 0xca, 0x35,
+0x33, 0xcc, 0x2c, 0xd3,
+0x2c, 0xd3, 0x32, 0xcd,
+0xcc, 0x33, 0x35, 0xca,
+0xaa, 0x55, 0x33, 0xcc,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xd3, 0x2c, 0x33, 0xcc,
+0xaa, 0x55, 0x35, 0xca,
+0xca, 0x35, 0xd3, 0x2c,
+0x33, 0xcc, 0xd2, 0x2d,
+0xcd, 0x32, 0x35, 0xca,
+0xac, 0x53, 0x55, 0xaa,
+0x2c, 0xd3, 0x32, 0xcd,
+0x32, 0xcd, 0x2c, 0xd3,
+0xaa, 0x55, 0x53, 0xac,
+0xcc, 0x33, 0xd5, 0x2a,
+0xd3, 0x2c, 0x2d, 0xd2,
+0x2c, 0xd3, 0x34, 0xcb,
+0xaa, 0x55, 0x35, 0xca,
+0x4a, 0xb5, 0xd2, 0x2d,
+0x33, 0xcc, 0xd2, 0x2d,
+0xb5, 0x4a, 0x35, 0xca,
+0xac, 0x53, 0xd5, 0x2a,
+0x35, 0xca, 0x32, 0xcd,
+0x32, 0xcd, 0xd4, 0x2b,
+0xad, 0x52, 0x53, 0xac,
+0x4c, 0xb3, 0x54, 0xab,
+0xd2, 0x2d, 0x2d, 0xd2,
+0x54, 0xab, 0x4c, 0xb3,
+0xaa, 0x55, 0xb5, 0x4a,
+0xd3, 0x2c, 0xcb, 0x34,
+0x33, 0xcc, 0x2a, 0xd5,
+0x4a, 0xb5, 0x32, 0xcd,
+0x2c, 0xd3, 0xd4, 0x2b,
+0xb5, 0x4a, 0x33, 0xcc,
+0x4a, 0xb5, 0xd4, 0x2b,
+0xd5, 0x2a, 0xd3, 0x2c,
+0x55, 0xaa, 0xd4, 0x2b,
+0xcb, 0x34, 0xd5, 0x2a,
+0x53, 0xac, 0xb4, 0x4b,
+0x2d, 0xd2, 0x34, 0xcb,
+0x52, 0xad, 0x4a, 0xb5,
+0x4a, 0xb5, 0x52, 0xad,
+0x32, 0xcd, 0xca, 0x35,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xb5, 0x4a, 0x2b, 0xd4,
+0xaa, 0x55, 0xd5, 0x2a,
+0x55, 0xaa, 0xd4, 0x2b,
+0x33, 0xcc, 0xd4, 0x2b,
+0x53, 0xac, 0x34, 0xcb,
+0x4c, 0xb3, 0x34, 0xcb,
+0x52, 0xad, 0x32, 0xcd,
+0x54, 0xab, 0x52, 0xad,
+0xb2, 0x4d, 0xb3, 0x4c,
+0xb3, 0x4c, 0x4d, 0xb2,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xb4, 0x4b, 0xab, 0x54,
+0x4b, 0xb4, 0xb4, 0x4b,
+0x55, 0xaa, 0xac, 0x53,
+0x55, 0xaa, 0xca, 0x35,
+0xd3, 0x2c, 0xcd, 0x32,
+0x33, 0xcc, 0x32, 0xcd,
+0xaa, 0x55, 0x33, 0xcc,
+0xac, 0x53, 0xd3, 0x2c,
+0xd3, 0x2c, 0x33, 0xcc,
+0xd2, 0x2d, 0x35, 0xca,
+0xca, 0x35, 0x53, 0xac,
+0x2a, 0xd5, 0xd2, 0x2d,
+0xcd, 0x32, 0xcd, 0x32,
+0xab, 0x54, 0x55, 0xaa,
+0xac, 0x53, 0xb3, 0x4c,
+0x33, 0xcc, 0x2c, 0xd3,
+0xd2, 0x2d, 0x2b, 0xd4,
+0xcc, 0x33, 0x55, 0xaa,
+0x4a, 0xb5, 0x34, 0xcb,
+0x2c, 0xd3, 0xcc, 0x33,
+0x55, 0xaa, 0x32, 0xcd,
+0xca, 0x35, 0xd3, 0x2c,
+0xb3, 0x4c, 0xd3, 0x2c,
+0xcd, 0x32, 0x35, 0xca,
+0xd4, 0x2b, 0x55, 0xaa,
+0x2c, 0xd3, 0xb2, 0x4d,
+0x2b, 0xd4, 0x2c, 0xd3,
+0xaa, 0x55, 0xab, 0x54,
+0xcb, 0x34, 0xd5, 0x2a,
+0x53, 0xac, 0xac, 0x53,
+0x2d, 0xd2, 0x34, 0xcb,
+0xd2, 0x2d, 0x4d, 0xb2,
+0x4a, 0xb5, 0x52, 0xad,
+0xaa, 0x55, 0xcb, 0x34,
+0xb5, 0x4a, 0xcd, 0x32,
+0x53, 0xac, 0xd2, 0x2d,
+0xb5, 0x4a, 0x33, 0xcc,
+0xb2, 0x4d, 0xd5, 0x2a,
+0xd5, 0x2a, 0x53, 0xac,
+0x34, 0xcb, 0xd4, 0x2b,
+0xcb, 0x34, 0xad, 0x52,
+0x4d, 0xb2, 0xb4, 0x4b,
+0xad, 0x52, 0x4d, 0xb2,
+0x54, 0xab, 0x4a, 0xb5,
+0xb2, 0x4d, 0xab, 0x54,
+0x33, 0xcc, 0x4a, 0xb5,
+0x54, 0xab, 0x2c, 0xd3,
+0x2c, 0xd3, 0xaa, 0x55,
+0xd3, 0x2c, 0x35, 0xca,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x2a, 0xd5, 0xd2, 0x2d,
+0xcb, 0x34, 0xd5, 0x2a,
+0xab, 0x54, 0xb5, 0x4a,
+0x2d, 0xd2, 0xb4, 0x4b,
+0x33, 0xcc, 0x4a, 0xb5,
+0x4a, 0xb5, 0x2a, 0xd5,
+0x2c, 0xd3, 0xca, 0x35,
+0x35, 0xca, 0x34, 0xcb,
+0x2a, 0xd5, 0xd2, 0x2d,
+0x4d, 0xb2, 0xd2, 0x2d,
+0xab, 0x54, 0x55, 0xaa,
+0xb4, 0x4b, 0xb5, 0x4a,
+0x33, 0xcc, 0xac, 0x53,
+0x35, 0xca, 0x2a, 0xd5,
+0xcc, 0x33, 0xcd, 0x32,
+0x2d, 0xd2, 0x34, 0xcb,
+0xac, 0x53, 0x53, 0xac,
+0x4a, 0xb5, 0x32, 0xcd,
+0xd2, 0x2d, 0xcd, 0x32,
+0xb5, 0x4a, 0x53, 0xac,
+0xaa, 0x55, 0xd3, 0x2c,
+0xd5, 0x2a, 0xcd, 0x32,
+0xd3, 0x2c, 0xd5, 0x2a,
+0xab, 0x54, 0x33, 0xcc,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xd3, 0x2c, 0xd3, 0x2c,
+0x4b, 0xb4, 0x2a, 0xd5,
+0xca, 0x35, 0xb5, 0x4a,
+0x35, 0xca, 0xd4, 0x2b,
+0x2d, 0xd2, 0xca, 0x35,
+0x4d, 0xb2, 0x54, 0xab,
+0x2a, 0xd5, 0x52, 0xad,
+0x54, 0xab, 0xcc, 0x33,
+0xab, 0x54, 0xad, 0x52,
+0xd3, 0x2c, 0xb3, 0x4c,
+0xb3, 0x4c, 0x2d, 0xd2,
+0xca, 0x35, 0x2b, 0xd4,
+0xb4, 0x4b, 0xd5, 0x2a,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x35, 0xca, 0x54, 0xab,
+0x54, 0xab, 0xca, 0x35,
+0x4d, 0xb2, 0xac, 0x53,
+0x33, 0xcc, 0x52, 0xad,
+0xd4, 0x2b, 0x2d, 0xd2,
+0xac, 0x53, 0xad, 0x52,
+0xab, 0x54, 0x35, 0xca,
+0xb2, 0x4d, 0xad, 0x52,
+0x33, 0xcc, 0x52, 0xad,
+0xb4, 0x4b, 0x2d, 0xd2,
+0xac, 0x53, 0xad, 0x52,
+0xb5, 0x4a, 0x35, 0xca,
+0xb2, 0x4d, 0xcd, 0x32,
+0x35, 0xca, 0x52, 0xad,
+0xb4, 0x4b, 0xd3, 0x2c,
+0xad, 0x52, 0xad, 0x52,
+0xd5, 0x2a, 0x55, 0xaa,
+0xb2, 0x4d, 0xcd, 0x32,
+0x2b, 0xd4, 0x4c, 0xb3,
+0xb4, 0x4b, 0xb3, 0x4c,
+0xcb, 0x34, 0xab, 0x54,
+0xd5, 0x2a, 0xab, 0x54,
+0x4d, 0xb2, 0xcc, 0x33,
+0x4b, 0xb4, 0x4c, 0xb3,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xd5, 0x2a, 0xab, 0x54,
+0xcb, 0x34, 0xcb, 0x34,
+0x4b, 0xb4, 0xac, 0x53,
+0x4d, 0xb2, 0xb2, 0x4d,
+0xd5, 0x2a, 0x4d, 0xb2,
+0xb4, 0x4b, 0xcb, 0x34,
+0xab, 0x54, 0xab, 0x54,
+0x55, 0xaa, 0xb2, 0x4d,
+0x53, 0xac, 0xcc, 0x33,
+0xb3, 0x4c, 0x2b, 0xd4,
+0xd2, 0x2d, 0x33, 0xcc,
+0x54, 0xab, 0x54, 0xab,
+0xca, 0x35, 0xb3, 0x4c,
+0x53, 0xac, 0xcc, 0x33,
+0xcd, 0x32, 0x2b, 0xd4,
+0xd2, 0x2d, 0x53, 0xac,
+0x4c, 0xb3, 0x54, 0xab,
+0xca, 0x35, 0x2d, 0xd2,
+0x54, 0xab, 0xcc, 0x33,
+0xad, 0x52, 0xb5, 0x4a,
+0xd3, 0x2c, 0x53, 0xac,
+0x32, 0xcd, 0x2a, 0xd5,
+0xca, 0x35, 0x4d, 0xb2,
+0x2c, 0xd3, 0xd4, 0x2b,
+0xad, 0x52, 0x2b, 0xd4,
+0x4a, 0xb5, 0x54, 0xab,
+0x52, 0xad, 0xd4, 0x2b,
+0x55, 0xaa, 0x4c, 0xb3,
+0x52, 0xad, 0xd4, 0x2b,
+0xd3, 0x2c, 0x4b, 0xb4,
+0x52, 0xad, 0x34, 0xcb,
+0x4a, 0xb5, 0x4a, 0xb5,
+0x52, 0xad, 0xd2, 0x2d,
+0x35, 0xca, 0x4a, 0xb5,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x2d, 0xd2, 0x4a, 0xb5,
+0x34, 0xcb, 0x54, 0xab,
+0x2a, 0xd5, 0xaa, 0x55,
+0x4d, 0xb2, 0xcc, 0x33,
+0x2b, 0xd4, 0x4c, 0xb3,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xcb, 0x34, 0xab, 0x54,
+0xcb, 0x34, 0xab, 0x54,
+0x4d, 0xb2, 0xac, 0x53,
+0x4d, 0xb2, 0x4c, 0xb3,
+0xd4, 0x2b, 0x4d, 0xb2,
+0xd4, 0x2b, 0xab, 0x54,
+0xab, 0x54, 0xab, 0x54,
+0x4b, 0xb4, 0xac, 0x53,
+0x53, 0xac, 0xac, 0x53,
+0xd5, 0x2a, 0x2d, 0xd2,
+0xd2, 0x2d, 0xcd, 0x32,
+0xab, 0x54, 0x55, 0xaa,
+0xaa, 0x55, 0xb3, 0x4c,
+0x33, 0xcc, 0xcc, 0x33,
+0xd3, 0x2c, 0x2b, 0xd4,
+0xcc, 0x33, 0x33, 0xcc,
+0x4a, 0xb5, 0x34, 0xcb,
+0xcc, 0x33, 0xd3, 0x2c,
+0x55, 0xaa, 0x32, 0xcd,
+0xcc, 0x33, 0xd5, 0x2a,
+0xb3, 0x4c, 0x33, 0xcc,
+0x2c, 0xd3, 0x34, 0xcb,
+0xd4, 0x2b, 0x33, 0xcc,
+0x4a, 0xb5, 0xb2, 0x4d,
+0xcb, 0x34, 0xd3, 0x2c,
+0xb5, 0x4a, 0xab, 0x54,
+0xcd, 0x32, 0xd5, 0x2a,
+0x55, 0xaa, 0x4c, 0xb3,
+0x2c, 0xd3, 0xd4, 0x2b,
+0xd3, 0x2c, 0x2b, 0xd4,
+0x4a, 0xb5, 0x34, 0xcb,
+0x4a, 0xb5, 0xd4, 0x2b,
+0x55, 0xaa, 0xd2, 0x2d,
+0x55, 0xaa, 0xd4, 0x2b,
+0xb3, 0x4c, 0xd5, 0x2a,
+0x53, 0xac, 0x34, 0xcb,
+0x34, 0xcb, 0x34, 0xcb,
+0x52, 0xad, 0xb2, 0x4d,
+0x4d, 0xb2, 0x52, 0xad,
+0xb2, 0x4d, 0x4b, 0xb4,
+0xb4, 0x4b, 0x4d, 0xb2,
+0x54, 0xab, 0xaa, 0x55,
+0xb5, 0x4a, 0xab, 0x54,
+0x33, 0xcc, 0xcc, 0x33,
+0x55, 0xaa, 0x2c, 0xd3,
+0xcc, 0x33, 0xd3, 0x2c,
+0xd3, 0x2c, 0x35, 0xca,
+0xcc, 0x33, 0x35, 0xca,
+0x2a, 0xd5, 0x32, 0xcd,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xab, 0x54, 0x33, 0xcc,
+0xaa, 0x55, 0xb5, 0x4a,
+0xd3, 0x2c, 0xd3, 0x2c,
+0x33, 0xcc, 0x2a, 0xd5,
+0xca, 0x35, 0x35, 0xca,
+0x2c, 0xd3, 0xd4, 0x2b,
+0x2d, 0xd2, 0x32, 0xcd,
+0x4a, 0xb5, 0x54, 0xab,
+0xaa, 0x55, 0xd3, 0x2c,
+0x55, 0xaa, 0xcc, 0x33,
+0xd3, 0x2c, 0xd5, 0x2a,
+0xd3, 0x2c, 0x33, 0xcc,
+0x2a, 0xd5, 0x34, 0xcb,
+0xca, 0x35, 0xd3, 0x2c,
+0x4b, 0xb4, 0xd2, 0x2d,
+0xcd, 0x32, 0xb5, 0x4a,
+0xb5, 0x4a, 0x55, 0xaa,
+0x2c, 0xd3, 0xca, 0x35,
+0x35, 0xca, 0x2c, 0xd3,
+0x2a, 0xd5, 0xd2, 0x2d,
+0xcd, 0x32, 0xd5, 0x2a,
+0xab, 0x54, 0x55, 0xaa,
+0x2c, 0xd3, 0xb4, 0x4b,
+0x33, 0xcc, 0x2c, 0xd3,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xcc, 0x33, 0xd5, 0x2a,
+0x35, 0xca, 0x34, 0xcb,
+0x2c, 0xd3, 0xd4, 0x2b,
+0x4d, 0xb2, 0x32, 0xcd,
+0x4a, 0xb5, 0x54, 0xab,
+0xb4, 0x4b, 0xd3, 0x2c,
+0x55, 0xaa, 0xac, 0x53,
+0xd5, 0x2a, 0xd5, 0x2a,
+0xd3, 0x2c, 0xcd, 0x32,
+0x2b, 0xd4, 0x34, 0xcb,
+0xaa, 0x55, 0xb3, 0x4c,
+0x4b, 0xb4, 0xd2, 0x2d,
+0xd3, 0x2c, 0xab, 0x54,
+0xb5, 0x4a, 0x35, 0xca,
+0x4a, 0xb5, 0xcc, 0x33,
+0x35, 0xca, 0xd2, 0x2d,
+0xd5, 0x2a, 0xd3, 0x2c,
+0xad, 0x52, 0xd5, 0x2a,
+0xcb, 0x34, 0x55, 0xaa,
+0x32, 0xcd, 0xb4, 0x4b,
+0x2d, 0xd2, 0x4c, 0xb3,
+0x4c, 0xb3, 0x4a, 0xb5,
+0xca, 0x35, 0x2b, 0xd4,
+0x34, 0xcb, 0xca, 0x35,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x2d, 0xd2, 0x52, 0xad,
+0x54, 0xab, 0x4a, 0xb5,
+0xaa, 0x55, 0xad, 0x52,
+0x33, 0xcc, 0xca, 0x35,
+0xb3, 0x4c, 0x2d, 0xd2,
+0x2c, 0xd3, 0x32, 0xcd,
+0xb4, 0x4b, 0x35, 0xca,
+0xaa, 0x55, 0xb3, 0x4c,
+0x35, 0xca, 0xd2, 0x2d,
+0xd3, 0x2c, 0xcb, 0x34,
+0xad, 0x52, 0x35, 0xca,
+0x4a, 0xb5, 0x52, 0xad,
+0x32, 0xcd, 0xd2, 0x2d,
+0xb5, 0x4a, 0x4d, 0xb2,
+0xac, 0x53, 0xd5, 0x2a,
+0xb5, 0x4a, 0x2b, 0xd4,
+0x32, 0xcd, 0xd4, 0x2b,
+0x55, 0xaa, 0x54, 0xab,
+0x4c, 0xb3, 0xd4, 0x2b,
+0x53, 0xac, 0x2c, 0xd3,
+0x54, 0xab, 0x34, 0xcb,
+0xd2, 0x2d, 0xb5, 0x4a,
+0x53, 0xac, 0x52, 0xad,
+0x2a, 0xd5, 0x2a, 0xd5,
+0xb2, 0x4d, 0xcd, 0x32,
+0x2b, 0xd4, 0x54, 0xab,
+0xb4, 0x4b, 0xb3, 0x4c,
+0x4b, 0xb4, 0xac, 0x53,
+0xd5, 0x2a, 0xab, 0x54,
+0xd5, 0x2a, 0xcd, 0x32,
+0x4b, 0xb4, 0xcc, 0x33,
+0xab, 0x54, 0xb3, 0x4c,
+0xd5, 0x2a, 0xb3, 0x4c,
+0xd3, 0x2c, 0xcb, 0x34,
+0xcb, 0x34, 0x2b, 0xd4,
+0x4a, 0xb5, 0xb2, 0x4d,
+0x4d, 0xb2, 0xd4, 0x2b,
+0xb5, 0x4a, 0x4b, 0xb4,
+0x54, 0xab, 0xd4, 0x2b,
+0x55, 0xaa, 0xaa, 0x55,
+0x53, 0xac, 0xd4, 0x2b,
+0x33, 0xcc, 0x2c, 0xd3,
+0x52, 0xad, 0x34, 0xcb,
+0xcc, 0x33, 0x55, 0xaa,
+0x52, 0xad, 0x32, 0xcd,
+0x2c, 0xd3, 0x4c, 0xb3,
+0xb2, 0x4d, 0x33, 0xcc,
+0xca, 0x35, 0x4b, 0xb4,
+0xd4, 0x2b, 0xd3, 0x2c,
+0x4d, 0xb2, 0xaa, 0x55,
+0xcb, 0x34, 0x55, 0xaa,
+0x34, 0xcb, 0xac, 0x53,
+0x2d, 0xd2, 0xac, 0x53,
+0xcd, 0x32, 0x4d, 0xb2,
+0xca, 0x35, 0x4d, 0xb2,
+0xac, 0x53, 0xcb, 0x34,
+0xad, 0x52, 0x2b, 0xd4,
+0x52, 0xad, 0x52, 0xad,
+0x52, 0xad, 0x54, 0xab,
+0xb2, 0x4d, 0x4d, 0xb2,
+0x52, 0xad, 0x4c, 0xb3,
+0xb4, 0x4b, 0x4b, 0xb4,
+0xd2, 0x2d, 0xab, 0x54,
+0x55, 0xaa, 0x4a, 0xb5,
+0x4a, 0xb5, 0xcc, 0x33,
+0x33, 0xcc, 0xca, 0x35,
+0xd5, 0x2a, 0x33, 0xcc,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xcb, 0x34, 0x33, 0xcc,
+0xaa, 0x55, 0xb5, 0x4a,
+0xcd, 0x32, 0xd3, 0x2c,
+0x33, 0xcc, 0x4a, 0xb5,
+0xcc, 0x33, 0x35, 0xca,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x2c, 0xd3, 0x32, 0xcd,
+0x2a, 0xd5, 0x34, 0xcb,
+0xaa, 0x55, 0xd3, 0x2c,
+0x4b, 0xb4, 0xd2, 0x2d,
+0xd3, 0x2c, 0xb5, 0x4a,
+0xb5, 0x4a, 0x35, 0xca,
+0x2a, 0xd5, 0xca, 0x35,
+0x35, 0xca, 0xd2, 0x2d,
+0x2b, 0xd4, 0xd2, 0x2d,
+0xad, 0x52, 0xb5, 0x4a,
+0xab, 0x54, 0x55, 0xaa,
+0x32, 0xcd, 0xaa, 0x55,
+0x33, 0xcc, 0x4c, 0xb3,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xcc, 0x33, 0x2b, 0xd4,
+0xca, 0x35, 0x35, 0xca,
+0x4c, 0xb3, 0xd4, 0x2b,
+0x2d, 0xd2, 0x32, 0xcd,
+0x54, 0xab, 0x54, 0xab,
+0xaa, 0x55, 0xb3, 0x4c,
+0x53, 0xac, 0xcc, 0x33,
+0xd3, 0x2c, 0x2b, 0xd4,
+0xd2, 0x2d, 0x33, 0xcc,
+0x4a, 0xb5, 0x54, 0xab,
+0xca, 0x35, 0xd3, 0x2c,
+0x55, 0xaa, 0xcc, 0x33,
+0xcd, 0x32, 0xd5, 0x2a,
+0xd3, 0x2c, 0x53, 0xac,
+0x2c, 0xd3, 0x34, 0xcb,
+0xca, 0x35, 0x2d, 0xd2,
+0x4a, 0xb5, 0xd2, 0x2d,
+0xad, 0x52, 0xd5, 0x2a,
+0xb5, 0x4a, 0x55, 0xaa,
+0x32, 0xcd, 0xd4, 0x2b,
+0x35, 0xca, 0x4c, 0xb3,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xcd, 0x32, 0x2b, 0xd4,
+0x54, 0xab, 0x54, 0xab,
+0x4c, 0xb3, 0xb4, 0x4b,
+0x53, 0xac, 0x2c, 0xd3,
+0x54, 0xab, 0x2a, 0xd5,
+0xd2, 0x2d, 0xb5, 0x4a,
+0x33, 0xcc, 0x54, 0xab,
+0x2a, 0xd5, 0x2a, 0xd5,
+0x4c, 0xb3, 0xcc, 0x33,
+0x2b, 0xd4, 0x34, 0xcb,
+0xd4, 0x2b, 0xb3, 0x4c,
+0x4b, 0xb4, 0xb2, 0x4d,
+0xcb, 0x34, 0xab, 0x54,
+0xb5, 0x4a, 0xab, 0x54,
+0x4d, 0xb2, 0xcc, 0x33,
+0x55, 0xaa, 0x4c, 0xb3,
+0xd4, 0x2b, 0xd3, 0x2c,
+0xd3, 0x2c, 0xab, 0x54,
+0xcb, 0x34, 0x35, 0xca,
+0x4a, 0xb5, 0xac, 0x53,
+0x2d, 0xd2, 0xd2, 0x2d,
+0xd5, 0x2a, 0x4d, 0xb2,
+0xaa, 0x55, 0xd5, 0x2a,
+0xab, 0x54, 0xcb, 0x34,
+0x33, 0xcc, 0xb4, 0x4b,
+0x53, 0xac, 0x32, 0xcd,
+0x4c, 0xb3, 0x2a, 0xd5,
+0xb2, 0x4d, 0x33, 0xcc,
+0x34, 0xcb, 0x54, 0xab,
+0xd4, 0x2b, 0xb3, 0x4c,
+0x4d, 0xb2, 0xac, 0x53,
+0xcb, 0x34, 0x4b, 0xb4,
+0xd4, 0x2b, 0xad, 0x52,
+0x4d, 0xb2, 0xaa, 0x55,
+0xab, 0x54, 0x4d, 0xb2,
+0x34, 0xcb, 0xac, 0x53,
+0xb3, 0x4c, 0xab, 0x54,
+0xcd, 0x32, 0x2d, 0xd2,
+0x54, 0xab, 0x4c, 0xb3,
+0xac, 0x53, 0xb5, 0x4a,
+0xd3, 0x2c, 0x2b, 0xd4,
+0x32, 0xcd, 0x2a, 0xd5,
+0x4a, 0xb5, 0x54, 0xab,
+0x2c, 0xd3, 0xd4, 0x2b,
+0x55, 0xaa, 0x2c, 0xd3,
+0x4a, 0xb5, 0xd4, 0x2b,
+0xd3, 0x2c, 0xd5, 0x2a,
+0x55, 0xaa, 0x34, 0xcb,
+0x2a, 0xd5, 0xd4, 0x2b,
+0x53, 0xac, 0xd2, 0x2d,
+0x4b, 0xb4, 0x34, 0xcb,
+0xb2, 0x4d, 0xb5, 0x4a,
+0x55, 0xaa, 0x52, 0xad,
+0x34, 0xcb, 0xca, 0x35,
+0xb3, 0x4c, 0xad, 0x52,
+0x2d, 0xd2, 0x32, 0xcd,
+0xb4, 0x4b, 0x4d, 0xb2,
+0xaa, 0x55, 0xb3, 0x4c,
+0xb5, 0x4a, 0xcb, 0x34,
+0xd3, 0x2c, 0xcb, 0x34,
+0x55, 0xaa, 0x32, 0xcd,
+0x4a, 0xb5, 0xd2, 0x2d,
+0xb3, 0x4c, 0xd3, 0x2c,
+0xb5, 0x4a, 0x35, 0xca,
+0xd4, 0x2b, 0xd5, 0x2a,
+0x35, 0xca, 0xb2, 0x4d,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xad, 0x52, 0xab, 0x54,
+0x4b, 0xb4, 0x54, 0xab,
+0x52, 0xad, 0xac, 0x53,
+0x55, 0xaa, 0x4c, 0xb3,
+0xd2, 0x2d, 0xcd, 0x32,
+0xd3, 0x2c, 0x4b, 0xb4,
+0xaa, 0x55, 0x33, 0xcc,
+0x4a, 0xb5, 0xca, 0x35,
+0xd3, 0x2c, 0xd3, 0x2c,
+0x35, 0xca, 0x32, 0xcd,
+0xca, 0x35, 0xd5, 0x2a,
+0xad, 0x52, 0xd3, 0x2c,
+0x2d, 0xd2, 0x54, 0xab,
+0xd2, 0x2d, 0x55, 0xaa,
+0x4a, 0xb5, 0x4c, 0xb3,
+0x2a, 0xd5, 0xcc, 0x33,
+0xd5, 0x2a, 0xcb, 0x34,
+0xcb, 0x34, 0xd3, 0x2c,
+0x4b, 0xb4, 0xb2, 0x4d,
+0xcd, 0x32, 0xb5, 0x4a,
+0xb5, 0x4a, 0x4b, 0xb4,
+0x2c, 0xd3, 0xca, 0x35,
+0x55, 0xaa, 0x2a, 0xd5,
+0x2a, 0xd5, 0xd2, 0x2d,
+0x33, 0xcc, 0xd4, 0x2b,
+0xab, 0x54, 0x35, 0xca,
+0x4c, 0xb3, 0xb4, 0x4b,
+0x33, 0xcc, 0x32, 0xcd,
+0x54, 0xab, 0x2a, 0xd5,
+0xac, 0x53, 0xb3, 0x4c,
+0x33, 0xcc, 0x34, 0xcb,
+0xd2, 0x2d, 0x2b, 0xd4,
+0x4c, 0xb3, 0x52, 0xad,
+0x4a, 0xb5, 0x34, 0xcb,
+0xb4, 0x4b, 0xcd, 0x32,
+0x55, 0xaa, 0xb2, 0x4d,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xb3, 0x4c, 0xcb, 0x34,
+0xd5, 0x2a, 0x35, 0xca,
+0x54, 0xab, 0xd2, 0x2d,
+0x2b, 0xd4, 0xb2, 0x4d,
+0xb3, 0x4c, 0xb5, 0x4a,
+0xab, 0x54, 0x2b, 0xd4,
+0x34, 0xcb, 0xaa, 0x55,
+0x53, 0xac, 0xb4, 0x4b,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x52, 0xad, 0x4a, 0xb5,
+0xca, 0x35, 0x55, 0xaa,
+0x32, 0xcd, 0xca, 0x35,
+0x2d, 0xd2, 0x4c, 0xb3,
+0x2c, 0xd3, 0x52, 0xad,
+0xca, 0x35, 0x2b, 0xd4,
+0xaa, 0x55, 0xcd, 0x32,
+0x4d, 0xb2, 0xd4, 0x2b,
+0xb3, 0x4c, 0x53, 0xac,
+0x54, 0xab, 0x34, 0xcb,
+0xd4, 0x2b, 0xad, 0x52,
+0x53, 0xac, 0xb2, 0x4d,
+0xab, 0x54, 0x2d, 0xd2,
+0xb2, 0x4d, 0xab, 0x54,
+0xb3, 0x4c, 0x55, 0xaa,
+0x54, 0xab, 0x2c, 0xd3,
+0x34, 0xcb, 0xac, 0x53,
+0xd3, 0x2c, 0xb5, 0x4a,
+0xcd, 0x32, 0x2d, 0xd2,
+0x2a, 0xd5, 0x4a, 0xb5,
+0xac, 0x53, 0xd5, 0x2a,
+0x2b, 0xd4, 0x2a, 0xd5,
+0x32, 0xcd, 0xb4, 0x4b,
+0x2b, 0xd4, 0x54, 0xab,
+0x4c, 0xb3, 0xaa, 0x55,
+0x4b, 0xb4, 0x2c, 0xd3,
+0x34, 0xcb, 0xac, 0x53,
+0xd5, 0x2a, 0xb5, 0x4a,
+0xcd, 0x32, 0xcd, 0x32,
+0x2b, 0xd4, 0x4a, 0xb5,
+0xac, 0x53, 0xb3, 0x4c,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xd2, 0x2d, 0xab, 0x54,
+0x2b, 0xd4, 0x54, 0xab,
+0x4a, 0xb5, 0xac, 0x53,
+0x4b, 0xb4, 0xcc, 0x33,
+0xd5, 0x2a, 0xad, 0x52,
+0xd5, 0x2a, 0xd3, 0x2c,
+0xab, 0x54, 0xcd, 0x32,
+0xcb, 0x34, 0xb5, 0x4a,
+0xb3, 0x4c, 0xb3, 0x4c,
+0x2d, 0xd2, 0x2a, 0xd5,
+0xd4, 0x2b, 0x4b, 0xb4,
+0x2a, 0xd5, 0xb4, 0x4b,
+0x4b, 0xb4, 0xca, 0x35,
+0x4b, 0xb4, 0xaa, 0x55,
+0x35, 0xca, 0xb2, 0x4d,
+0x35, 0xca, 0xcc, 0x33,
+0xad, 0x52, 0xcb, 0x34,
+0xcd, 0x32, 0x53, 0xac,
+0x52, 0xad, 0x52, 0xad,
+0xcc, 0x33, 0x4d, 0xb2,
+0xb2, 0x4d, 0x2d, 0xd2,
+0xac, 0x53, 0x4b, 0xb4,
+0xb4, 0x4b, 0x35, 0xca,
+0x52, 0xad, 0xaa, 0x55,
+0x35, 0xca, 0x52, 0xad,
+0x32, 0xcd, 0xcc, 0x33,
+0xad, 0x52, 0x4d, 0xb2,
+0xcc, 0x33, 0x53, 0xac,
+0xb2, 0x4d, 0x2b, 0xd4,
+0xcc, 0x33, 0x4d, 0xb2,
+0x54, 0xab, 0x34, 0xcb,
+0xac, 0x53, 0xab, 0x54,
+0x53, 0xac, 0x32, 0xcd,
+0x52, 0xad, 0x2c, 0xd3,
+0xb2, 0x4d, 0x53, 0xac,
+0xd2, 0x2d, 0x55, 0xaa,
+0xd4, 0x2b, 0x4d, 0xb2,
+0x2a, 0xd5, 0xac, 0x53,
+0xab, 0x54, 0xcb, 0x34,
+0xcb, 0x34, 0xad, 0x52,
+0x53, 0xac, 0xb2, 0x4d,
+0xad, 0x52, 0x2d, 0xd2,
+0xb2, 0x4d, 0x4b, 0xb4,
+0xb2, 0x4d, 0x55, 0xaa,
+0x54, 0xab, 0x4a, 0xb5,
+0x34, 0xcb, 0xac, 0x53,
+0x33, 0xcc, 0xaa, 0x55,
+0xcd, 0x32, 0x2d, 0xd2,
+0x2c, 0xd3, 0x4c, 0xb3,
+0xac, 0x53, 0x35, 0xca,
+0xca, 0x35, 0x2b, 0xd4,
+0x32, 0xcd, 0xd2, 0x2d,
+0x4d, 0xb2, 0x54, 0xab,
+0xac, 0x53, 0x55, 0xaa,
+0x54, 0xab, 0x2c, 0xd3,
+0x32, 0xcd, 0xac, 0x53,
+0xd3, 0x2c, 0x55, 0xaa,
+0xcc, 0x33, 0x2d, 0xd2,
+0x2a, 0xd5, 0x2c, 0xd3,
+0xac, 0x53, 0xd5, 0x2a,
+0xcb, 0x34, 0x35, 0xca,
+0x32, 0xcd, 0xb4, 0x4b,
+0x2d, 0xd2, 0x52, 0xad,
+0x4c, 0xb3, 0x4a, 0xb5,
+0xaa, 0x55, 0x2d, 0xd2,
+0x34, 0xcb, 0xca, 0x35,
+0xb3, 0x4c, 0xb5, 0x4a,
+0x2d, 0xd2, 0x32, 0xcd,
+0x34, 0xcb, 0x4a, 0xb5,
+0xaa, 0x55, 0xb3, 0x4c,
+0x2d, 0xd2, 0xca, 0x35,
+0xd3, 0x2c, 0x4b, 0xb4,
+0x2a, 0xd5, 0x32, 0xcd,
+0x4a, 0xb5, 0xca, 0x35,
+0xab, 0x54, 0xd3, 0x2c,
+0x35, 0xca, 0xb2, 0x4d,
+0xd3, 0x2c, 0xd5, 0x2a,
+0xad, 0x52, 0x2b, 0xd4,
+0x2a, 0xd5, 0x54, 0xab,
+0x52, 0xad, 0xd4, 0x2b,
+0x4b, 0xb4, 0x4c, 0xb3,
+0x52, 0xad, 0xb4, 0x4b,
+0xd5, 0x2a, 0x4b, 0xb4,
+0x52, 0xad, 0xca, 0x35,
+0x4b, 0xb4, 0x4a, 0xb5,
+0x32, 0xcd, 0xb2, 0x4d,
+0x35, 0xca, 0x4a, 0xb5,
+0xac, 0x53, 0xcb, 0x34,
+0x2d, 0xd2, 0x2a, 0xd5,
+0x52, 0xad, 0x52, 0xad,
+0x2a, 0xd5, 0x54, 0xab,
+0xb2, 0x4d, 0xcd, 0x32,
+0x4b, 0xb4, 0x4c, 0xb3,
+0xb4, 0x4b, 0xb3, 0x4c,
+0xd5, 0x2a, 0xab, 0x54,
+0xd5, 0x2a, 0xcb, 0x34,
+0x4b, 0xb4, 0xcc, 0x33,
+0x4b, 0xb4, 0xb2, 0x4d,
+0xd5, 0x2a, 0xb3, 0x4c,
+0xb5, 0x4a, 0xcb, 0x34,
+0xcb, 0x34, 0xcb, 0x34,
+0x55, 0xaa, 0xb2, 0x4d,
+0x4d, 0xb2, 0xd2, 0x2d,
+0xb3, 0x4c, 0x4b, 0xb4,
+0xb4, 0x4b, 0x35, 0xca,
+0x54, 0xab, 0xaa, 0x55,
+0x35, 0xca, 0xb2, 0x4d,
+0x33, 0xcc, 0xcc, 0x33,
+0xad, 0x52, 0x2b, 0xd4,
+0xcc, 0x33, 0x53, 0xac,
+0x52, 0xad, 0x34, 0xcb,
+0xcc, 0x33, 0x4d, 0xb2,
+0x52, 0xad, 0x32, 0xcd,
+0xac, 0x53, 0x4b, 0xb4,
+0xb2, 0x4d, 0x33, 0xcc,
+0x52, 0xad, 0x4a, 0xb5,
+0xd4, 0x2b, 0x53, 0xac,
+0x32, 0xcd, 0xaa, 0x55,
+0xcb, 0x34, 0x4d, 0xb2,
+0x2c, 0xd3, 0xac, 0x53,
+0xad, 0x52, 0x2b, 0xd4,
+0xca, 0x35, 0x4d, 0xb2,
+0x52, 0xad, 0xd4, 0x2b,
+0xad, 0x52, 0x4b, 0xb4,
+0x52, 0xad, 0x54, 0xab,
+0x52, 0xad, 0x4a, 0xb5,
+0x52, 0xad, 0x4c, 0xb3,
+0x32, 0xcd, 0x4a, 0xb5,
+0xd2, 0x2d, 0x4b, 0xb4,
+0x2c, 0xd3, 0x4a, 0xb5,
+0x4a, 0xb5, 0x2a, 0xd5,
+0x2a, 0xd5, 0xca, 0x35,
+0x35, 0xca, 0xd4, 0x2b,
+0x2b, 0xd4, 0xd2, 0x2d,
+0x4d, 0xb2, 0xb4, 0x4b,
+0xab, 0x54, 0x55, 0xaa,
+0x54, 0xab, 0xaa, 0x55,
+0x33, 0xcc, 0xac, 0x53,
+0x33, 0xcc, 0x2c, 0xd3,
+0xcc, 0x33, 0x2d, 0xd2,
+0xcc, 0x33, 0x35, 0xca,
+0xac, 0x53, 0x35, 0xca,
+0x2c, 0xd3, 0x32, 0xcd,
+0x32, 0xcd, 0x32, 0xcd,
+0xaa, 0x55, 0x53, 0xac,
+0xac, 0x53, 0xd3, 0x2c,
+0xd3, 0x2c, 0x2d, 0xd2,
+0xd2, 0x2d, 0x35, 0xca,
+0xaa, 0x55, 0x55, 0xaa,
+0x2a, 0xd5, 0xd2, 0x2d,
+0x33, 0xcc, 0xcc, 0x33,
+0xab, 0x54, 0x35, 0xca,
+0xcc, 0x33, 0xb3, 0x4c,
+0x33, 0xcc, 0x32, 0xcd,
+0xcc, 0x33, 0x2b, 0xd4,
+0xac, 0x53, 0x33, 0xcc,
+0x4c, 0xb3, 0x34, 0xcb,
+0xd2, 0x2d, 0x33, 0xcc,
+0x54, 0xab, 0x52, 0xad,
+0xca, 0x35, 0xb3, 0x4c,
+0xb3, 0x4c, 0xcd, 0x32,
+0xcd, 0x32, 0x2b, 0xd4,
+0xb4, 0x4b, 0x53, 0xac,
+0x4c, 0xb3, 0xb4, 0x4b,
+0xd5, 0x2a, 0x2d, 0xd2,
+0x54, 0xab, 0xca, 0x35,
+0xab, 0x54, 0xb5, 0x4a,
+0x33, 0xcc, 0xb2, 0x4d,
+0x33, 0xcc, 0x2a, 0xd5,
+0xac, 0x53, 0x2b, 0xd4,
+0x2c, 0xd3, 0x34, 0xcb,
+0x52, 0xad, 0x34, 0xcb,
+0x4a, 0xb5, 0x52, 0xad,
+0x52, 0xad, 0xd2, 0x2d,
+0xb5, 0x4a, 0x4d, 0xb2,
+0xb2, 0x4d, 0xd5, 0x2a,
+0xb5, 0x4a, 0x4b, 0xb4,
+0x34, 0xcb, 0xd4, 0x2b,
+0x55, 0xaa, 0xaa, 0x55,
+0x4d, 0xb2, 0xd4, 0x2b,
+0x33, 0xcc, 0x4c, 0xb3,
+0x54, 0xab, 0x34, 0xcb,
+0xcc, 0x33, 0xab, 0x54,
+0x53, 0xac, 0x32, 0xcd,
+0x4c, 0xb3, 0x2c, 0xd3,
+0xb2, 0x4d, 0x33, 0xcc,
+0xd4, 0x2b, 0x55, 0xaa,
+0xd4, 0x2b, 0xb3, 0x4c,
+0x2b, 0xd4, 0xac, 0x53,
+0xcb, 0x34, 0xab, 0x54,
+0xcb, 0x34, 0xad, 0x52,
+0x4d, 0xb2, 0xac, 0x53,
+0xad, 0x52, 0x4d, 0xb2,
+0xd4, 0x2b, 0x4d, 0xb2,
+0xb2, 0x4d, 0xab, 0x54,
+0xab, 0x54, 0x4b, 0xb4,
+0x54, 0xab, 0xac, 0x53,
+0x53, 0xac, 0xaa, 0x55,
+0xd3, 0x2c, 0x2d, 0xd2,
+0x32, 0xcd, 0x2c, 0xd3,
+0xaa, 0x55, 0x55, 0xaa,
+0xcc, 0x33, 0xd5, 0x2a,
+0x33, 0xcc, 0x2c, 0xd3,
+0x2c, 0xd3, 0x34, 0xcb,
+0xcc, 0x33, 0x35, 0xca,
+0x4a, 0xb5, 0x32, 0xcd,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xb5, 0x4a, 0x33, 0xcc,
+0xaa, 0x55, 0xd5, 0x2a,
+0xd5, 0x2a, 0xd3, 0x2c,
+0x33, 0xcc, 0xd4, 0x2b,
+0xcb, 0x34, 0x35, 0xca,
+0x4c, 0xb3, 0xb4, 0x4b,
+0x2d, 0xd2, 0x32, 0xcd,
+0x54, 0xab, 0x4a, 0xb5,
+0xaa, 0x55, 0xb3, 0x4c,
+0x33, 0xcc, 0xca, 0x35,
+0xd3, 0x2c, 0x2b, 0xd4,
+0x2c, 0xd3, 0x32, 0xcd,
+0x4a, 0xb5, 0x34, 0xcb,
+0xaa, 0x55, 0xd3, 0x2c,
+0x55, 0xaa, 0xd2, 0x2d,
+0xd3, 0x2c, 0xd5, 0x2a,
+0xb3, 0x4c, 0x35, 0xca,
+0x2a, 0xd5, 0x34, 0xcb,
+0x34, 0xcb, 0xd2, 0x2d,
+0x4b, 0xb4, 0xb2, 0x4d,
+0xad, 0x52, 0xb5, 0x4a,
+0xb5, 0x4a, 0x4b, 0xb4,
+0x32, 0xcd, 0xca, 0x35,
+0x55, 0xaa, 0x4a, 0xb5,
+0x2c, 0xd3, 0xd2, 0x2d,
+0x33, 0xcc, 0x2a, 0xd5,
+0xaa, 0x55, 0x35, 0xca,
+0x2c, 0xd3, 0xd4, 0x2b,
+0x33, 0xcc, 0x32, 0xcd,
+0x4a, 0xb5, 0x34, 0xcb,
+0xac, 0x53, 0xd3, 0x2c,
+0x55, 0xaa, 0x32, 0xcd,
+0xd2, 0x2d, 0xd5, 0x2a,
+0xb3, 0x4c, 0x53, 0xac,
+0x2a, 0xd5, 0x34, 0xcb,
+0xd4, 0x2b, 0xcd, 0x32,
+0x4b, 0xb4, 0xb2, 0x4d,
+0xab, 0x54, 0xb3, 0x4c,
+0xb5, 0x4a, 0xab, 0x54,
+0xd3, 0x2c, 0xcb, 0x34,
+0x55, 0xaa, 0x2c, 0xd3,
+0x4a, 0xb5, 0xd2, 0x2d,
+0xd3, 0x2c, 0xd5, 0x2a,
+0xb5, 0x4a, 0x35, 0xca,
+0x2a, 0xd5, 0xd4, 0x2b,
+0x35, 0xca, 0xd2, 0x2d,
+0x4b, 0xb4, 0xd4, 0x2b,
+0xad, 0x52, 0xb5, 0x4a,
+0x55, 0xaa, 0x54, 0xab,
+0x32, 0xcd, 0xca, 0x35,
+0x53, 0xac, 0x4c, 0xb3,
+0x2c, 0xd3, 0x32, 0xcd,
+0xd2, 0x2d, 0x2b, 0xd4,
+0xaa, 0x55, 0x53, 0xac,
+0x4a, 0xb5, 0xd4, 0x2b,
+0xd3, 0x2c, 0xcd, 0x32,
+0x55, 0xaa, 0x34, 0xcb,
+0xaa, 0x55, 0xd3, 0x2c,
+0x53, 0xac, 0xd2, 0x2d,
+0xd3, 0x2c, 0x35, 0xca,
+0xb2, 0x4d, 0x35, 0xca,
+0x2a, 0xd5, 0x52, 0xad,
+0x34, 0xcb, 0xd2, 0x2d,
+0xab, 0x54, 0xad, 0x52,
+0xad, 0x52, 0xb5, 0x4a,
+0xb3, 0x4c, 0x4d, 0xb2,
+0x32, 0xcd, 0x2a, 0xd5,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x2c, 0xd3, 0xb4, 0x4b,
+0x55, 0xaa, 0x2a, 0xd5,
+0x4a, 0xb5, 0xca, 0x35,
+0x33, 0xcc, 0xd4, 0x2b,
+0x35, 0xca, 0x32, 0xcd,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xad, 0x52, 0x33, 0xcc,
+0x54, 0xab, 0x54, 0xab,
+0xd2, 0x2d, 0xb3, 0x4c,
+0x53, 0xac, 0x4c, 0xb3,
+0xca, 0x35, 0x2b, 0xd4,
+0xd2, 0x2d, 0xcb, 0x34,
+0x4d, 0xb2, 0x54, 0xab,
+0x4a, 0xb5, 0x52, 0xad,
+0x54, 0xab, 0xcc, 0x33,
+0xb5, 0x4a, 0xad, 0x52,
+0xd3, 0x2c, 0xd3, 0x2c,
+0xb5, 0x4a, 0x2d, 0xd2,
+0xca, 0x35, 0xd5, 0x2a,
+0xb5, 0x4a, 0xd5, 0x2a,
+0x2d, 0xd2, 0xd4, 0x2b,
+0x35, 0xca, 0x54, 0xab,
+0x4a, 0xb5, 0xd4, 0x2b,
+0x4d, 0xb2, 0xcc, 0x33,
+0x55, 0xaa, 0x54, 0xab,
+0xd4, 0x2b, 0xd3, 0x2c,
+0x53, 0xac, 0xac, 0x53,
+0xcb, 0x34, 0x35, 0xca,
+0xd2, 0x2d, 0xad, 0x52,
+0x2d, 0xd2, 0x52, 0xad,
+0xaa, 0x55, 0x4d, 0xb2,
+0xaa, 0x55, 0xcd, 0x32,
+0xb3, 0x4c, 0xcb, 0x34,
+0xb3, 0x4c, 0x33, 0xcc,
+0x54, 0xab, 0x32, 0xcd,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xb3, 0x4c, 0xb3, 0x4c,
+0xcb, 0x34, 0x2b, 0xd4,
+0xd4, 0x2b, 0xab, 0x54,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x4b, 0xb4, 0x4c, 0xb3,
+0x54, 0xab, 0xaa, 0x55,
+0xd5, 0x2a, 0xab, 0x54,
+0x33, 0xcc, 0xcc, 0x33,
+0x4b, 0xb4, 0x2c, 0xd3,
+0xcc, 0x33, 0xb3, 0x4c,
+0xd5, 0x2a, 0x35, 0xca,
+0xcc, 0x33, 0xcb, 0x34,
+0x2b, 0xd4, 0x32, 0xcd,
+0x4c, 0xb3, 0xb2, 0x4d,
+0xab, 0x54, 0x33, 0xcc,
+0xb4, 0x4b, 0xab, 0x54,
+0xd3, 0x2c, 0xb3, 0x4c,
+0x55, 0xaa, 0x2c, 0xd3,
+0xca, 0x35, 0xcb, 0x34,
+0xd3, 0x2c, 0xd5, 0x2a,
+0x4d, 0xb2, 0x32, 0xcd,
+0x2a, 0xd5, 0x54, 0xab,
+0xb4, 0x4b, 0xd3, 0x2c,
+0x4b, 0xb4, 0xac, 0x53,
+0xd5, 0x2a, 0xb5, 0x4a,
+0xd5, 0x2a, 0xcd, 0x32,
+0x2b, 0xd4, 0xca, 0x35,
+0xab, 0x54, 0xb3, 0x4c,
+0x2b, 0xd4, 0xb2, 0x4d,
+0xd3, 0x2c, 0xab, 0x54,
+0xab, 0x54, 0x2b, 0xd4,
+0x4a, 0xb5, 0xac, 0x53,
+0x53, 0xac, 0xd4, 0x2b,
+0xd5, 0x2a, 0x2d, 0xd2,
+0x52, 0xad, 0xd4, 0x2b,
+0xab, 0x54, 0x55, 0xaa,
+0x52, 0xad, 0xb4, 0x4b,
+0x33, 0xcc, 0x4c, 0xb3,
+0x52, 0xad, 0x2a, 0xd5,
+0xcc, 0x33, 0x4b, 0xb4,
+0x32, 0xcd, 0x34, 0xcb,
+0x4c, 0xb3, 0x4a, 0xb5,
+0x4c, 0xb3, 0x32, 0xcd,
+0x34, 0xcb, 0x2a, 0xd5,
+0xb4, 0x4b, 0xb3, 0x4c,
+0x2d, 0xd2, 0xb4, 0x4b,
+0xd5, 0x2a, 0x4b, 0xb4,
+0x4a, 0xb5, 0xca, 0x35,
+0x4b, 0xb4, 0xca, 0x35,
+0x35, 0xca, 0xb2, 0x4d,
+0x35, 0xca, 0xd2, 0x2d,
+0xad, 0x52, 0xcb, 0x34,
+0xad, 0x52, 0x55, 0xaa,
+0x52, 0xad, 0x52, 0xad,
+0x32, 0xcd, 0x4c, 0xb3,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xcc, 0x33, 0x4b, 0xb4,
+0xb4, 0x4b, 0x2b, 0xd4,
+0x4c, 0xb3, 0xaa, 0x55,
+0x55, 0xaa, 0x34, 0xcb,
+0x34, 0xcb, 0xcc, 0x33,
+0x53, 0xac, 0xb2, 0x4d,
+0xcd, 0x32, 0x33, 0xcc,
+0xb2, 0x4d, 0x4b, 0xb4,
+0xcc, 0x33, 0x53, 0xac,
+0x54, 0xab, 0x2a, 0xd5,
+0xcc, 0x33, 0xad, 0x52,
+0x33, 0xcc, 0x34, 0xcb,
+0xac, 0x53, 0x2d, 0xd2,
+0x4c, 0xb3, 0x32, 0xcd,
+0xb2, 0x4d, 0x35, 0xca,
+0xb4, 0x4b, 0x53, 0xac,
+0x34, 0xcb, 0xb2, 0x4d,
+0xd5, 0x2a, 0xad, 0x52,
+0xad, 0x52, 0xcb, 0x34,
+0xab, 0x54, 0x4d, 0xb2,
+0x52, 0xad, 0xb2, 0x4d,
+0xb3, 0x4c, 0x4b, 0xb4,
+0xb2, 0x4d, 0x2b, 0xd4,
+0x54, 0xab, 0x4a, 0xb5,
+0x54, 0xab, 0xb4, 0x4b,
+0x33, 0xcc, 0xaa, 0x55,
+0x53, 0xac, 0x2a, 0xd5,
+0x2c, 0xd3, 0x2c, 0xd3,
+0x32, 0xcd, 0x34, 0xcb,
+0xca, 0x35, 0x55, 0xaa,
+0x4c, 0xb3, 0xd2, 0x2d,
+0x2d, 0xd2, 0x2c, 0xd3,
+0xb4, 0x4b, 0x55, 0xaa,
+0xca, 0x35, 0xb5, 0x4a,
+0x35, 0xca, 0xcc, 0x33,
+0x2d, 0xd2, 0xca, 0x35,
+0xcd, 0x32, 0x53, 0xac,
+0x2a, 0xd5, 0x52, 0xad,
+0xcc, 0x33, 0xcd, 0x32,
+0xab, 0x54, 0x2d, 0xd2,
+0xac, 0x53, 0xb3, 0x4c,
+0xb3, 0x4c, 0x35, 0xca,
+0xd2, 0x2d, 0x2b, 0xd4,
+0x34, 0xcb, 0x52, 0xad,
+0x4a, 0xb5, 0xb4, 0x4b,
+0xad, 0x52, 0xcd, 0x32,
+0x55, 0xaa, 0x4a, 0xb5,
+0xb2, 0x4d, 0xd3, 0x2c,
+0x33, 0xcc, 0x4a, 0xb5,
+0xd4, 0x2b, 0x35, 0xca,
+0x2c, 0xd3, 0xaa, 0x55,
+0x2b, 0xd4, 0x32, 0xcd,
+0x2a, 0xd5, 0xac, 0x53,
+0xab, 0x54, 0xd3, 0x2c,
+0xcb, 0x34, 0xad, 0x52,
+0xd3, 0x2c, 0xb5, 0x4a,
+0xad, 0x52, 0x2d, 0xd2,
+0x2a, 0xd5, 0x4a, 0xb5,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x2b, 0xd4, 0x4a, 0xb5,
+0x34, 0xcb, 0xb4, 0x4b,
+0x2b, 0xd4, 0xaa, 0x55,
+0x4d, 0xb2, 0xaa, 0x55,
+0x2b, 0xd4, 0x4c, 0xb3,
+0x34, 0xcb, 0xac, 0x53,
+0xcb, 0x34, 0xab, 0x54,
+0xcd, 0x32, 0xad, 0x52,
+0x4d, 0xb2, 0x4c, 0xb3,
+0xac, 0x53, 0x4d, 0xb2,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xb2, 0x4d, 0xab, 0x54,
+0x4b, 0xb4, 0x54, 0xab,
+0x54, 0xab, 0xac, 0x53,
+0x55, 0xaa, 0xac, 0x53,
+0xd3, 0x2c, 0xcd, 0x32,
+0xd3, 0x2c, 0x2d, 0xd2,
+0xaa, 0x55, 0x33, 0xcc,
+0xaa, 0x55, 0xd5, 0x2a,
+0xd3, 0x2c, 0xd3, 0x2c,
+0x33, 0xcc, 0x34, 0xcb,
+0xca, 0x35, 0x35, 0xca,
+0x4c, 0xb3, 0xd2, 0x2d,
+0x2d, 0xd2, 0x32, 0xcd,
+0xb4, 0x4b, 0x55, 0xaa,
+0xaa, 0x55, 0xb3, 0x4c,
+0x35, 0xca, 0xcc, 0x33,
+0xd3, 0x2c, 0xcb, 0x34,
+0xcd, 0x32, 0x33, 0xcc,
+0x4a, 0xb5, 0x52, 0xad,
+0xcc, 0x33, 0xd3, 0x2c,
+0xb5, 0x4a, 0x2d, 0xd2,
+0xcc, 0x33, 0xd5, 0x2a,
+0xb5, 0x4a, 0x35, 0xca,
+0x2c, 0xd3, 0xd4, 0x2b,
+0x35, 0xca, 0x32, 0xcd,
+0x4a, 0xb5, 0xd4, 0x2b,
+0xad, 0x52, 0xd3, 0x2c,
+0x55, 0xaa, 0x54, 0xab,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x53, 0xac, 0x4c, 0xb3,
+0x2a, 0xd5, 0x34, 0xcb,
+0xd2, 0x2d, 0xcb, 0x34,
+0x4b, 0xb4, 0x52, 0xad,
+0x4a, 0xb5, 0xb2, 0x4d,
+0xb5, 0x4a, 0xcd, 0x32,
+0xb5, 0x4a, 0xcb, 0x34,
+0xb5, 0x4a, 0xd3, 0x2c,
+0x55, 0xaa, 0xd2, 0x2d,
+0xd5, 0x2a, 0xd5, 0x2a,
+0xb3, 0x4c, 0xd5, 0x2a,
+0x2b, 0xd4, 0x34, 0xcb,
+0x34, 0xcb, 0xb4, 0x4b,
+0x4b, 0xb4, 0xb2, 0x4d,
+0x4d, 0xb2, 0xaa, 0x55,
+0xb5, 0x4a, 0x4b, 0xb4,
+0x34, 0xcb, 0xcc, 0x33,
+0x55, 0xaa, 0xaa, 0x55,
+0xcd, 0x32, 0xd3, 0x2c,
+0x33, 0xcc, 0x4c, 0xb3,
+0xcc, 0x33, 0x35, 0xca,
+0xcc, 0x33, 0x2b, 0xd4,
+0x2c, 0xd3, 0x32, 0xcd,
+0x4c, 0xb3, 0x34, 0xcb,
+0xaa, 0x55, 0x33, 0xcc,
+0x54, 0xab, 0xd2, 0x2d,
+0xd3, 0x2c, 0xb3, 0x4c,
+0xb3, 0x4c, 0x35, 0xca,
+0xca, 0x35, 0x2b, 0xd4,
+0x34, 0xcb, 0xd2, 0x2d,
+0x4d, 0xb2, 0xb4, 0x4b,
+0xad, 0x52, 0x55, 0xaa,
+0x54, 0xab, 0x4a, 0xb5,
+0x32, 0xcd, 0xac, 0x53,
+0x33, 0xcc, 0x4a, 0xb5,
+0xcc, 0x33, 0x2d, 0xd2,
+0x2c, 0xd3, 0x2a, 0xd5,
+0xac, 0x53, 0x35, 0xca,
+0x2a, 0xd5, 0x34, 0xcb,
+0x32, 0xcd, 0xd2, 0x2d,
+0x4b, 0xb4, 0x52, 0xad,
+0xac, 0x53, 0xb5, 0x4a,
+0xb5, 0x4a, 0x2d, 0xd2,
+0x32, 0xcd, 0xca, 0x35,
+0xb5, 0x4a, 0x55, 0xaa,
+0x2c, 0xd3, 0xd2, 0x2d,
+0x35, 0xca, 0x2c, 0xd3,
+0xaa, 0x55, 0xd5, 0x2a,
+0xcd, 0x32, 0xd5, 0x2a,
+0x33, 0xcc, 0x54, 0xab,
+0x2c, 0xd3, 0x34, 0xcb,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x4a, 0xb5, 0x32, 0xcd,
+0xd4, 0x2b, 0xd5, 0x2a,
+0xb5, 0x4a, 0xb3, 0x4c,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xd5, 0x2a, 0xab, 0x54,
+0x4b, 0xb4, 0xd4, 0x2b,
+0x4b, 0xb4, 0xac, 0x53,
+0x55, 0xaa, 0xb4, 0x4b,
+0xd5, 0x2a, 0xcd, 0x32,
+0x53, 0xac, 0xca, 0x35,
+0xab, 0x54, 0x33, 0xcc,
+0x32, 0xcd, 0xb2, 0x4d,
+0xd3, 0x2c, 0x53, 0xac,
+0xac, 0x53, 0x2b, 0xd4,
+0xca, 0x35, 0x2d, 0xd2,
+0x52, 0xad, 0xd4, 0x2b,
+0xad, 0x52, 0x55, 0xaa,
+0x52, 0xad, 0x54, 0xab,
+0x32, 0xcd, 0x4c, 0xb3,
+0x52, 0xad, 0x4c, 0xb3,
+0xcc, 0x33, 0x4b, 0xb4,
+0xd2, 0x2d, 0x2b, 0xd4,
+0x4c, 0xb3, 0x4a, 0xb5,
+0x4a, 0xb5, 0x34, 0xcb,
+0x34, 0xcb, 0xca, 0x35,
+0x55, 0xaa, 0xb2, 0x4d,
+0x2d, 0xd2, 0xd2, 0x2d,
+0xb3, 0x4c, 0x4b, 0xb4,
+0xaa, 0x55, 0x35, 0xca,
+0x54, 0xab, 0xca, 0x35,
+0x33, 0xcc, 0xb2, 0x4d,
+0x33, 0xcc, 0x32, 0xcd,
+0xac, 0x53, 0x2b, 0xd4,
+0xac, 0x53, 0x33, 0xcc,
+0x52, 0xad, 0x34, 0xcb,
+0xd2, 0x2d, 0x53, 0xac,
+0x52, 0xad, 0x52, 0xad,
+0xca, 0x35, 0x4d, 0xb2,
+0xb2, 0x4d, 0xcd, 0x32,
+0xad, 0x52, 0x4b, 0xb4,
+0xb4, 0x4b, 0x53, 0xac,
+0x52, 0xad, 0xaa, 0x55,
+0xd5, 0x2a, 0x4d, 0xb2,
+0x32, 0xcd, 0xcc, 0x33,
+0xab, 0x54, 0x4b, 0xb4,
+0xcc, 0x33, 0xb3, 0x4c,
+0x53, 0xac, 0x2a, 0xd5,
+0xcc, 0x33, 0x2b, 0xd4,
+0x32, 0xcd, 0x34, 0xcb,
+0x4c, 0xb3, 0x54, 0xab,
+0x4c, 0xb3, 0x32, 0xcd,
+0x54, 0xab, 0x2c, 0xd3,
+0xb4, 0x4b, 0xb3, 0x4c,
+0xd3, 0x2c, 0xb5, 0x4a,
+0xd5, 0x2a, 0x2b, 0xd4,
+0x2a, 0xd5, 0xca, 0x35,
+0x4b, 0xb4, 0xd4, 0x2b,
+0x2b, 0xd4, 0xb2, 0x4d,
+0x55, 0xaa, 0xb4, 0x4b,
+0xab, 0x54, 0xcb, 0x34,
+0x53, 0xac, 0xaa, 0x55,
+0x53, 0xac, 0x32, 0xcd,
+0x32, 0xcd, 0x2c, 0xd3,
+0xb2, 0x4d, 0x53, 0xac,
+0xcc, 0x33, 0x55, 0xaa,
+0xd4, 0x2b, 0x2d, 0xd2,
+0x2c, 0xd3, 0xac, 0x53,
+0xab, 0x54, 0x35, 0xca,
+0xca, 0x35, 0xad, 0x52,
+0x33, 0xcc, 0xd2, 0x2d,
+0xad, 0x52, 0x2d, 0xd2,
+0xac, 0x53, 0x55, 0xaa,
+0xb2, 0x4d, 0x35, 0xca,
+0x32, 0xcd, 0x4c, 0xb3,
+0x34, 0xcb, 0x52, 0xad,
+0xcc, 0x33, 0xab, 0x54,
+0xad, 0x52, 0x2d, 0xd2,
+0x4c, 0xb3, 0x4c, 0xb3,
+0xb2, 0x4d, 0x35, 0xca,
+0xd4, 0x2b, 0x4b, 0xb4,
+0x34, 0xcb, 0xb2, 0x4d,
+0x4b, 0xb4, 0xaa, 0x55,
+0xad, 0x52, 0xab, 0x54,
+0x35, 0xca, 0x4c, 0xb3,
+0x52, 0xad, 0xcc, 0x33,
+0xcd, 0x32, 0x4b, 0xb4,
+0xd2, 0x2d, 0x53, 0xac,
+0x4c, 0xb3, 0x4a, 0xb5,
+0xca, 0x35, 0x2d, 0xd2,
+0x34, 0xcb, 0xca, 0x35,
+0xad, 0x52, 0xb5, 0x4a,
+0x2d, 0xd2, 0x52, 0xad,
+0x32, 0xcd, 0x4a, 0xb5,
+0xaa, 0x55, 0x4d, 0xb2,
+0x2c, 0xd3, 0xca, 0x35,
+0xb3, 0x4c, 0x2b, 0xd4,
+0x2a, 0xd5, 0x32, 0xcd,
+0x54, 0xab, 0xd4, 0x2b,
+0xab, 0x54, 0xb3, 0x4c,
+0x53, 0xac, 0xb4, 0x4b,
+0xd3, 0x2c, 0x2b, 0xd4,
+0x52, 0xad, 0x2a, 0xd5,
+0x4a, 0xb5, 0x54, 0xab,
+0x32, 0xcd, 0xd4, 0x2b,
+0x55, 0xaa, 0x4c, 0xb3,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xd3, 0x2c, 0x2b, 0xd4,
+0x54, 0xab, 0x34, 0xcb,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x53, 0xac, 0xd2, 0x2d,
+0x55, 0xaa, 0x2a, 0xd5,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x33, 0xcc, 0x54, 0xab,
+0x34, 0xcb, 0x34, 0xcb,
+0x4c, 0xb3, 0xac, 0x53,
+0x4d, 0xb2, 0x32, 0xcd,
+0xd4, 0x2b, 0x4d, 0xb2,
+0xb4, 0x4b, 0xb3, 0x4c,
+0xab, 0x54, 0xab, 0x54,
+0xd5, 0x2a, 0xab, 0x54,
+0x53, 0xac, 0xcc, 0x33,
+0x4b, 0xb4, 0x2c, 0xd3,
+0xd2, 0x2d, 0xb3, 0x4c,
+0xd5, 0x2a, 0x55, 0xaa,
+0xca, 0x35, 0xcb, 0x34,
+0x2b, 0xd4, 0xcc, 0x33,
+0x4d, 0xb2, 0xb2, 0x4d,
+0xcb, 0x34, 0x53, 0xac,
+0xb4, 0x4b, 0xab, 0x54,
+0xcd, 0x32, 0xad, 0x52,
+0x55, 0xaa, 0x4c, 0xb3,
+0xac, 0x53, 0xcd, 0x32,
+0xd3, 0x2c, 0x2b, 0xd4,
+0xb2, 0x4d, 0x33, 0xcc,
+0x4a, 0xb5, 0x54, 0xab,
+0xd4, 0x2b, 0xd3, 0x2c,
+0x55, 0xaa, 0xac, 0x53,
+0xcb, 0x34, 0xd5, 0x2a,
+0xd3, 0x2c, 0xad, 0x52,
+0x2d, 0xd2, 0x34, 0xcb,
+0xaa, 0x55, 0x4d, 0xb2,
+0x4a, 0xb5, 0xd2, 0x2d,
+0xb3, 0x4c, 0xcb, 0x34,
+0xb5, 0x4a, 0x35, 0xca,
+0x54, 0xab, 0xd2, 0x2d,
+0x35, 0xca, 0xb2, 0x4d,
+0xb3, 0x4c, 0xd5, 0x2a,
+0xad, 0x52, 0x2b, 0xd4,
+0x34, 0xcb, 0x54, 0xab,
+0x52, 0xad, 0xb4, 0x4b,
+0x4d, 0xb2, 0x4c, 0xb3,
+0x52, 0xad, 0x4a, 0xb5,
+0xd4, 0x2b, 0x4b, 0xb4,
+0x32, 0xcd, 0xaa, 0x55,
+0x4b, 0xb4, 0x4a, 0xb5,
+0x2c, 0xd3, 0xac, 0x53,
+0x35, 0xca, 0x2a, 0xd5,
+0xca, 0x35, 0xcd, 0x32,
+0x2d, 0xd2, 0xd4, 0x2b,
+0xad, 0x52, 0x53, 0xac,
+0x4a, 0xb5, 0x54, 0xab,
+0xd2, 0x2d, 0xcd, 0x32,
+0x55, 0xaa, 0x4c, 0xb3,
+0xaa, 0x55, 0xd3, 0x2c,
+0xd3, 0x2c, 0xcb, 0x34,
+0xd3, 0x2c, 0x35, 0xca,
+0x4a, 0xb5, 0x32, 0xcd,
+0x2a, 0xd5, 0xd2, 0x2d,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xab, 0x54, 0xd5, 0x2a,
+0xd5, 0x2a, 0xb5, 0x4a,
+0x33, 0xcc, 0xd4, 0x2b,
+0x2b, 0xd4, 0x2a, 0xd5,
+0x4c, 0xb3, 0xb4, 0x4b,
+0x2b, 0xd4, 0x34, 0xcb,
+0x54, 0xab, 0xaa, 0x55,
+0x4b, 0xb4, 0xb2, 0x4d,
+0x33, 0xcc, 0xac, 0x53,
+0xb5, 0x4a, 0x2b, 0xd4,
+0xcc, 0x33, 0xcd, 0x32,
+0x55, 0xaa, 0x34, 0xcb,
+0xac, 0x53, 0xd3, 0x2c,
+0x53, 0xac, 0x32, 0xcd,
+0xd2, 0x2d, 0x35, 0xca,
+0xb2, 0x4d, 0x53, 0xac,
+0x2a, 0xd5, 0x52, 0xad,
+0xd4, 0x2b, 0xcd, 0x32,
+0xab, 0x54, 0xad, 0x52,
+0xab, 0x54, 0xb3, 0x4c,
+0xb3, 0x4c, 0xad, 0x52,
+0xd3, 0x2c, 0x2b, 0xd4,
+0xb4, 0x4b, 0x2d, 0xd2,
+0x4a, 0xb5, 0xb4, 0x4b,
+0xb5, 0x4a, 0xd5, 0x2a,
+0x55, 0xaa, 0xca, 0x35,
+0x35, 0xca, 0xd4, 0x2b,
+0x33, 0xcc, 0xd2, 0x2d,
+0x4d, 0xb2, 0x34, 0xcb,
+0xac, 0x53, 0x55, 0xaa,
+0x54, 0xab, 0x32, 0xcd,
+0x32, 0xcd, 0xac, 0x53,
+0xb3, 0x4c, 0x53, 0xac,
+0xcc, 0x33, 0x2d, 0xd2,
+0xd4, 0x2b, 0x2d, 0xd2,
+0xac, 0x53, 0xb5, 0x4a,
+0xab, 0x54, 0x35, 0xca,
+0x32, 0xcd, 0xaa, 0x55,
+0x33, 0xcc, 0x52, 0xad,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xac, 0x53, 0x2d, 0xd2,
+0xca, 0x35, 0x35, 0xca,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x2d, 0xd2, 0x52, 0xad,
+0x34, 0xcb, 0x54, 0xab,
+0xaa, 0x55, 0xad, 0x52,
+0x4d, 0xb2, 0xcc, 0x33,
+0xb3, 0x4c, 0x4d, 0xb2,
+0xd4, 0x2b, 0x33, 0xcc,
+0xb4, 0x4b, 0xab, 0x54,
+0xcb, 0x34, 0xb3, 0x4c,
+0x55, 0xaa, 0xac, 0x53,
+0xcd, 0x32, 0xcb, 0x34,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x4c, 0xb3, 0x32, 0xcd,
+0xaa, 0x55, 0x2b, 0xd4,
+0xb4, 0x4b, 0xd3, 0x2c,
+0x53, 0xac, 0xb4, 0x4b,
+0xd5, 0x2a, 0x35, 0xca,
+0x52, 0xad, 0xca, 0x35,
+0x2b, 0xd4, 0x52, 0xad,
+0x32, 0xcd, 0xb2, 0x4d,
+0xab, 0x54, 0x4d, 0xb2,
+0xac, 0x53, 0xab, 0x54,
+0xb3, 0x4c, 0x2b, 0xd4,
+0x52, 0xad, 0x2c, 0xd3,
+0x54, 0xab, 0x54, 0xab,
+0xd2, 0x2d, 0xb5, 0x4a,
+0x53, 0xac, 0x4c, 0xb3,
+0x2a, 0xd5, 0x2a, 0xd5,
+0xd2, 0x2d, 0xcb, 0x34,
+0x2b, 0xd4, 0x54, 0xab,
+0x4a, 0xb5, 0xb2, 0x4d,
+0x4b, 0xb4, 0xcc, 0x33,
+0xb5, 0x4a, 0xab, 0x54,
+0xd5, 0x2a, 0xd3, 0x2c,
+0x55, 0xaa, 0xcc, 0x33,
+0xcb, 0x34, 0xd5, 0x2a,
+0xd3, 0x2c, 0xb3, 0x4c,
+0x2d, 0xd2, 0x34, 0xcb,
+0xca, 0x35, 0x4b, 0xb4,
+0x4a, 0xb5, 0xd2, 0x2d,
+0x4d, 0xb2, 0xca, 0x35,
+0xb5, 0x4a, 0x55, 0xaa,
+0x34, 0xcb, 0xd2, 0x2d,
+0x35, 0xca, 0xac, 0x53,
+0xad, 0x52, 0xd5, 0x2a,
+0xcd, 0x32, 0x4d, 0xb2,
+0x32, 0xcd, 0x54, 0xab,
+0xac, 0x53, 0x4b, 0xb4,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x52, 0xad, 0x2a, 0xd5,
+0xd4, 0x2b, 0x55, 0xaa,
+0x32, 0xcd, 0xb4, 0x4b,
+0x2b, 0xd4, 0x4c, 0xb3,
+0x4c, 0xb3, 0xaa, 0x55,
+0xcb, 0x34, 0x2b, 0xd4,
+0x34, 0xcb, 0xac, 0x53,
+0x4d, 0xb2, 0xb4, 0x4b,
+0xcd, 0x32, 0x4d, 0xb2,
+0x54, 0xab, 0x4a, 0xb5,
+0xac, 0x53, 0xab, 0x54,
+0x33, 0xcc, 0x2a, 0xd5,
+0x52, 0xad, 0x2c, 0xd3,
+0x2c, 0xd3, 0x54, 0xab,
+0xd2, 0x2d, 0x35, 0xca,
+0x4a, 0xb5, 0x4c, 0xb3,
+0x2a, 0xd5, 0xd2, 0x2d,
+0xd5, 0x2a, 0xcb, 0x34,
+0xab, 0x54, 0xd5, 0x2a,
+0x4b, 0xb4, 0xb2, 0x4d,
+0x33, 0xcc, 0xb4, 0x4b,
+0xb5, 0x4a, 0x2b, 0xd4,
+0x4c, 0xb3, 0xca, 0x35,
+0x55, 0xaa, 0x34, 0xcb,
+0x34, 0xcb, 0xd2, 0x2d,
+0x53, 0xac, 0xb2, 0x4d,
+0xad, 0x52, 0x35, 0xca,
+0xb2, 0x4d, 0x4b, 0xb4,
+0x32, 0xcd, 0x52, 0xad,
+0x54, 0xab, 0x4a, 0xb5,
+0xac, 0x53, 0xad, 0x52,
+0x33, 0xcc, 0x2a, 0xd5,
+0xb2, 0x4d, 0x2d, 0xd2,
+0x2c, 0xd3, 0x54, 0xab,
+0xb4, 0x4b, 0x35, 0xca,
+0x4a, 0xb5, 0xac, 0x53,
+0x35, 0xca, 0xd2, 0x2d,
+0xd5, 0x2a, 0xcd, 0x32,
+0xad, 0x52, 0xd5, 0x2a,
+0xab, 0x54, 0x53, 0xac,
+0x32, 0xcd, 0xb4, 0x4b,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x4c, 0xb3, 0x2a, 0xd5,
+0xaa, 0x55, 0x2b, 0xd4,
+0x34, 0xcb, 0xd4, 0x2b,
+0x53, 0xac, 0xb4, 0x4b,
+0x4d, 0xb2, 0x34, 0xcb,
+0x52, 0xad, 0x4a, 0xb5,
+0x54, 0xab, 0x52, 0xad,
+0x32, 0xcd, 0xaa, 0x55,
+0xb3, 0x4c, 0x4d, 0xb2,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xb4, 0x4b, 0x2b, 0xd4,
+0xca, 0x35, 0xb5, 0x4a,
+0x55, 0xaa, 0xd4, 0x2b,
+0x2d, 0xd2, 0xca, 0x35,
+0x53, 0xac, 0x54, 0xab,
+0x2a, 0xd5, 0x32, 0xcd,
+0x52, 0xad, 0xcc, 0x33,
+0xab, 0x54, 0x53, 0xac,
+0xd2, 0x2d, 0xb3, 0x4c,
+0xd3, 0x2c, 0x4d, 0xb2,
+0xca, 0x35, 0x2b, 0xd4,
+0xaa, 0x55, 0xcb, 0x34,
+0x4d, 0xb2, 0xd4, 0x2b,
+0x53, 0xac, 0x52, 0xad,
+0x54, 0xab, 0x34, 0xcb,
+0xb2, 0x4d, 0xad, 0x52,
+0x53, 0xac, 0x52, 0xad,
+0xb4, 0x4b, 0x2d, 0xd2,
+0xb2, 0x4d, 0xad, 0x52,
+0xb5, 0x4a, 0x55, 0xaa,
+0xb4, 0x4b, 0xcd, 0x32,
+0x35, 0xca, 0xac, 0x53,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xcd, 0x32, 0xcd, 0x32,
+0xd5, 0x2a, 0x55, 0xaa,
+0xac, 0x53, 0xd3, 0x2c,
+0x2b, 0xd4, 0x2c, 0xd3,
+0xd2, 0x2d, 0xb5, 0x4a,
+0xcb, 0x34, 0x55, 0xaa,
+0x2a, 0xd5, 0xaa, 0x55,
+0x2d, 0xd2, 0xcc, 0x33,
+0x2b, 0xd4, 0x4c, 0xb3,
+0xca, 0x35, 0xb3, 0x4c,
+0xcb, 0x34, 0xcb, 0x34,
+0xcd, 0x32, 0xab, 0x54,
+0x4d, 0xb2, 0x52, 0xad,
+0x4c, 0xb3, 0x4c, 0xb3,
+0xb4, 0x4b, 0x2d, 0xd2,
+0xd4, 0x2b, 0xab, 0x54,
+0xb5, 0x4a, 0xb5, 0x4a,
+0x4b, 0xb4, 0xcc, 0x33,
+0x35, 0xca, 0xaa, 0x55,
+0xd5, 0x2a, 0xd3, 0x2c,
+0x2d, 0xd2, 0xcc, 0x33,
+0xcb, 0x34, 0x55, 0xaa,
+0xca, 0x35, 0xb3, 0x4c,
+0x2d, 0xd2, 0xcc, 0x33,
+0xcd, 0x32, 0x4b, 0xb4,
+0xca, 0x35, 0x53, 0xac,
+0x4c, 0xb3, 0xca, 0x35,
+0xcd, 0x32, 0x2d, 0xd2,
+0x34, 0xcb, 0x52, 0xad,
+0xac, 0x53, 0xb5, 0x4a,
+0xad, 0x52, 0x2d, 0xd2,
+0x32, 0xcd, 0x4a, 0xb5,
+0xb2, 0x4d, 0x55, 0xaa,
+0x2c, 0xd3, 0x4a, 0xb5,
+0x34, 0xcb, 0x2c, 0xd3,
+0x2a, 0xd5, 0xaa, 0x55,
+0xcd, 0x32, 0xd5, 0x2a,
+0x2b, 0xd4, 0x4c, 0xb3,
+0x2c, 0xd3, 0xb4, 0x4b,
+0xcb, 0x34, 0x2b, 0xd4,
+0x4a, 0xb5, 0xaa, 0x55,
+0x4d, 0xb2, 0xd4, 0x2b,
+0x35, 0xca, 0x4c, 0xb3,
+0x54, 0xab, 0xd4, 0x2b,
+0xcd, 0x32, 0xab, 0x54,
+0x53, 0xac, 0x54, 0xab,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x52, 0xad, 0x2c, 0xd3,
+0xd4, 0x2b, 0x55, 0xaa,
+0xd2, 0x2d, 0xb5, 0x4a,
+0x2b, 0xd4, 0x4c, 0xb3,
+0x2a, 0xd5, 0xaa, 0x55,
+0xcb, 0x34, 0xcb, 0x34,
+0x2b, 0xd4, 0xac, 0x53,
+0x4d, 0xb2, 0xb2, 0x4d,
+0xcb, 0x34, 0x4d, 0xb2,
+0xb4, 0x4b, 0xab, 0x54,
+0xad, 0x52, 0xab, 0x54,
+0x55, 0xaa, 0x4c, 0xb3,
+0x52, 0xad, 0xcc, 0x33,
+0xd3, 0x2c, 0x4b, 0xb4,
+0xd2, 0x2d, 0x33, 0xcc,
+0x4a, 0xb5, 0x4a, 0xb5,
+0xca, 0x35, 0xd3, 0x2c,
+0x35, 0xca, 0xca, 0x35,
+0xcd, 0x32, 0xd5, 0x2a,
+0x2d, 0xd2, 0x52, 0xad,
+0x2c, 0xd3, 0x54, 0xab,
+0xaa, 0x55, 0x2d, 0xd2,
+0x4a, 0xb5, 0xcc, 0x33,
+0xb3, 0x4c, 0xd5, 0x2a,
+0xd5, 0x2a, 0x33, 0xcc,
+0x34, 0xcb, 0xd4, 0x2b,
+0xcb, 0x34, 0xb3, 0x4c,
+0x4d, 0xb2, 0xb4, 0x4b,
+0xcd, 0x32, 0x4b, 0xb4,
+0x54, 0xab, 0x4a, 0xb5,
+0x4c, 0xb3, 0xaa, 0x55,
+0x33, 0xcc, 0x2a, 0xd5,
+0x34, 0xcb, 0x2c, 0xd3,
+0x2c, 0xd3, 0xb4, 0x4b,
+0xcd, 0x32, 0x35, 0xca,
+0x4a, 0xb5, 0x4a, 0xb5,
+0x2c, 0xd3, 0xd2, 0x2d,
+0x35, 0xca, 0x2a, 0xd5,
+0xaa, 0x55, 0xd5, 0x2a,
+0x2d, 0xd2, 0xd4, 0x2b,
+0x33, 0xcc, 0x54, 0xab,
+0x4a, 0xb5, 0x34, 0xcb,
+0x4c, 0xb3, 0xcc, 0x33,
+0x55, 0xaa, 0x32, 0xcd,
+0xd4, 0x2b, 0xd3, 0x2c,
+0xb3, 0x4c, 0xb3, 0x4c,
+0xcb, 0x34, 0x35, 0xca,
+0xd4, 0x2b, 0xab, 0x54,
+0x2d, 0xd2, 0xb2, 0x4d,
+0x4b, 0xb4, 0x4c, 0xb3,
+0xaa, 0x55, 0xab, 0x54,
+0xd5, 0x2a, 0xcb, 0x34,
+0x53, 0xac, 0xcc, 0x33,
+0x4b, 0xb4, 0x32, 0xcd,
+0xd2, 0x2d, 0xb3, 0x4c,
+0xb5, 0x4a, 0x53, 0xac,
+0xca, 0x35, 0xcb, 0x34,
+0xd5, 0x2a, 0xcd, 0x32,
+0x4d, 0xb2, 0xd2, 0x2d,
+0xab, 0x54, 0x53, 0xac,
+0xb4, 0x4b, 0xb5, 0x4a,
+0xd3, 0x2c, 0xad, 0x52,
+0x35, 0xca, 0x2a, 0xd5,
+0xaa, 0x55, 0xcd, 0x32,
+0x2d, 0xd2, 0xd4, 0x2b,
+0xb3, 0x4c, 0x53, 0xac,
+0x4a, 0xb5, 0x34, 0xcb,
+0xd4, 0x2b, 0xcd, 0x32,
+0x55, 0xaa, 0xb2, 0x4d,
+0xab, 0x54, 0xd3, 0x2c,
+0xb3, 0x4c, 0xab, 0x54,
+0xd3, 0x2c, 0x35, 0xca,
+0x54, 0xab, 0x2c, 0xd3,
+0x2a, 0xd5, 0xb2, 0x4d,
+0xd3, 0x2c, 0xd5, 0x2a,
+0xab, 0x54, 0x2b, 0xd4,
+0x2a, 0xd5, 0xb4, 0x4b,
+0x53, 0xac, 0xd4, 0x2b,
+0x4b, 0xb4, 0x2a, 0xd5,
+0x52, 0xad, 0xb4, 0x4b,
+0x35, 0xca, 0x54, 0xab,
+0x52, 0xad, 0xca, 0x35,
+0x4d, 0xb2, 0x4c, 0xb3,
+0x32, 0xcd, 0x52, 0xad,
+0xd4, 0x2b, 0x4b, 0xb4,
+0xac, 0x53, 0xad, 0x52,
+0x4b, 0xb4, 0x2a, 0xd5,
+0xb2, 0x4d, 0xad, 0x52,
+0x35, 0xca, 0x54, 0xab,
+0xb4, 0x4b, 0xcd, 0x32,
+0x4d, 0xb2, 0xac, 0x53,
+0xb5, 0x4a, 0x53, 0xac,
+0xd4, 0x2b, 0xcd, 0x32,
+0xd5, 0x2a, 0xad, 0x52,
+0xab, 0x54, 0xd3, 0x2c,
+0xab, 0x54, 0xad, 0x52,
+0xd3, 0x2c, 0xb5, 0x4a,
+0xb3, 0x4c, 0x2d, 0xd2,
+0x2a, 0xd5, 0x2a, 0xd5,
+0xb4, 0x4b, 0xd5, 0x2a,
+0x2b, 0xd4, 0xb4, 0x4b,
+0x35, 0xca, 0xb4, 0x4b,
+0x4b, 0xb4, 0xca, 0x35,
+0x4d, 0xb2, 0xaa, 0x55,
+0x35, 0xca, 0x52, 0xad,
+0x34, 0xcb, 0xcc, 0x33,
+0xad, 0x52, 0xad, 0x52,
+0xcd, 0x32, 0x53, 0xac,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xcc, 0x33, 0x4d, 0xb2,
+0xb4, 0x4b, 0x2b, 0xd4,
+0xac, 0x53, 0xab, 0x54,
+0x55, 0xaa, 0x34, 0xcb,
+0x52, 0xad, 0xcc, 0x33,
+0x53, 0xac, 0x52, 0xad,
+0xd2, 0x2d, 0x33, 0xcc,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xca, 0x35, 0x53, 0xac,
+0xb4, 0x4b, 0xcb, 0x34,
+0xcd, 0x32, 0xad, 0x52,
+0x55, 0xaa, 0x52, 0xad,
+0xac, 0x53, 0xcd, 0x32,
+0xb3, 0x4c, 0x2d, 0xd2,
+0xb2, 0x4d, 0x33, 0xcc,
+0xb4, 0x4b, 0x55, 0xaa,
+0xd4, 0x2b, 0xb3, 0x4c,
+0x35, 0xca, 0xac, 0x53,
+0xcb, 0x34, 0xcb, 0x34,
+0xcd, 0x32, 0xad, 0x52,
+0x4d, 0xb2, 0x52, 0xad,
+0xac, 0x53, 0x4d, 0xb2,
+0xb4, 0x4b, 0x2d, 0xd2,
+0xb2, 0x4d, 0xab, 0x54,
+0xb5, 0x4a, 0x55, 0xaa,
+0x54, 0xab, 0xcc, 0x33,
+0x35, 0xca, 0xac, 0x53,
+0xd3, 0x2c, 0xd3, 0x2c,
+0xcd, 0x32, 0x2d, 0xd2,
+0xca, 0x35, 0x55, 0xaa,
+0xac, 0x53, 0xd5, 0x2a,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x32, 0xcd, 0x54, 0xab,
+0xca, 0x35, 0x55, 0xaa,
+0x4c, 0xb3, 0xcc, 0x33,
+0x2d, 0xd2, 0x2c, 0xd3,
+0xd4, 0x2b, 0x53, 0xac,
+0xca, 0x35, 0xb5, 0x4a,
+0xcb, 0x34, 0xcd, 0x32,
+0x2d, 0xd2, 0xaa, 0x55,
+0xad, 0x52, 0x53, 0xac,
+0x2a, 0xd5, 0x4c, 0xb3,
+0xd2, 0x2d, 0xcd, 0x32,
+0xcb, 0x34, 0x4b, 0xb4,
+0xaa, 0x55, 0xb3, 0x4c,
+0x4d, 0xb2, 0xca, 0x35,
+0xd3, 0x2c, 0x4b, 0xb4,
+0x34, 0xcb, 0x32, 0xcd,
+0x4a, 0xb5, 0xaa, 0x55,
+0xad, 0x52, 0xd3, 0x2c,
+0x35, 0xca, 0x4c, 0xb3,
+0xd2, 0x2d, 0xd5, 0x2a,
+0xcd, 0x32, 0x4b, 0xb4,
+0x2a, 0xd5, 0x54, 0xab,
+0x4c, 0xb3, 0xca, 0x35,
+0x4b, 0xb4, 0x2c, 0xd3,
+0x34, 0xcb, 0xb2, 0x4d,
+0xd5, 0x2a, 0xb5, 0x4a,
+0xad, 0x52, 0xcb, 0x34,
+0x2b, 0xd4, 0x4a, 0xb5,
+0x52, 0xad, 0xb2, 0x4d,
+0x2b, 0xd4, 0x4a, 0xb5,
+0xb2, 0x4d, 0xab, 0x54,
+0x2b, 0xd4, 0x4a, 0xb5,
+0x54, 0xab, 0xac, 0x53,
+0x2b, 0xd4, 0xaa, 0x55,
+0xd3, 0x2c, 0xad, 0x52,
+0x2b, 0xd4, 0x2c, 0xd3,
+0xaa, 0x55, 0xad, 0x52,
+0xcb, 0x34, 0xd5, 0x2a,
+0xb3, 0x4c, 0xad, 0x52,
+0x2d, 0xd2, 0x34, 0xcb,
+0xb4, 0x4b, 0x4d, 0xb2,
+0x4a, 0xb5, 0xb2, 0x4d,
+0xb5, 0x4a, 0xcb, 0x34,
+0xb5, 0x4a, 0xcb, 0x34,
+0x55, 0xaa, 0xd2, 0x2d,
+0x55, 0xaa, 0xd2, 0x2d,
+0xb3, 0x4c, 0xd5, 0x2a,
+0xb3, 0x4c, 0x35, 0xca,
+0x34, 0xcb, 0x34, 0xcb,
+0x34, 0xcb, 0xb2, 0x4d,
+0x4d, 0xb2, 0xb2, 0x4d,
+0xad, 0x52, 0x4b, 0xb4,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x52, 0xad, 0xaa, 0x55,
+0x55, 0xaa, 0x4a, 0xb5,
+0x32, 0xcd, 0xcc, 0x33,
+0x33, 0xcc, 0x4a, 0xb5,
+0xcc, 0x33, 0x33, 0xcc,
+0x2c, 0xd3, 0x2a, 0xd5,
+0xcc, 0x33, 0x33, 0xcc,
+0x2a, 0xd5, 0x34, 0xcb,
+0xcc, 0x33, 0xd3, 0x2c,
+0x4b, 0xb4, 0x32, 0xcd,
+0xcc, 0x33, 0xb5, 0x4a,
+0xb5, 0x4a, 0x33, 0xcc,
+0x2c, 0xd3, 0xca, 0x35,
+0xd5, 0x2a, 0x33, 0xcc,
+0x2a, 0xd5, 0xd2, 0x2d,
+0xcb, 0x34, 0xd3, 0x2c,
+0xab, 0x54, 0xb5, 0x4a,
+0xcd, 0x32, 0xb5, 0x4a,
+0x33, 0xcc, 0x4a, 0xb5,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x2a, 0xd5, 0x34, 0xcb,
+0x2a, 0xd5, 0xd4, 0x2b,
+0x4b, 0xb4, 0xd2, 0x2d,
+0x4b, 0xb4, 0xb4, 0x4b,
+0xb5, 0x4a, 0xb5, 0x4a,
+0x55, 0xaa, 0xca, 0x35,
+0x35, 0xca, 0xca, 0x35,
+0x33, 0xcc, 0xd2, 0x2d,
+0x2d, 0xd2, 0x32, 0xcd,
+0xac, 0x53, 0x55, 0xaa,
+0xaa, 0x55, 0x33, 0xcc,
+0x32, 0xcd, 0xcc, 0x33,
+0xd3, 0x2c, 0x53, 0xac,
+0xcc, 0x33, 0x33, 0xcc,
+0xca, 0x35, 0x2d, 0xd2,
+0xcc, 0x33, 0xd3, 0x2c,
+0xad, 0x52, 0x35, 0xca,
+0xcc, 0x33, 0x55, 0xaa,
+0x32, 0xcd, 0x32, 0xcd,
+0x2c, 0xd3, 0x4c, 0xb3,
+0xac, 0x53, 0x33, 0xcc,
+0xca, 0x35, 0x2b, 0xd4,
+0xd2, 0x2d, 0xd3, 0x2c,
+0x4d, 0xb2, 0x54, 0xab,
+0xca, 0x35, 0x55, 0xaa,
+0x54, 0xab, 0xcc, 0x33,
+0x2d, 0xd2, 0xac, 0x53,
+0xd3, 0x2c, 0x53, 0xac,
+0xca, 0x35, 0x2d, 0xd2,
+0xca, 0x35, 0xcd, 0x32,
+0xad, 0x52, 0xd5, 0x2a,
+0xad, 0x52, 0x53, 0xac,
+0x32, 0xcd, 0x54, 0xab,
+0xd2, 0x2d, 0x4d, 0xb2,
+0x4c, 0xb3, 0x4c, 0xb3,
+0xaa, 0x55, 0x2b, 0xd4,
+0xd4, 0x2b, 0xcb, 0x34,
+0x53, 0xac, 0xb4, 0x4b,
+0x4b, 0xb4, 0x32, 0xcd,
+0x52, 0xad, 0xaa, 0x55,
+0xb5, 0x4a, 0x53, 0xac,
+0x32, 0xcd, 0xcc, 0x33,
+0xd5, 0x2a, 0x4d, 0xb2,
+0xcc, 0x33, 0xd3, 0x2c,
+0xab, 0x54, 0x2b, 0xd4,
+0xcc, 0x33, 0xb5, 0x4a,
+0x53, 0xac, 0x34, 0xcb,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x52, 0xad, 0x32, 0xcd,
+0x2a, 0xd5, 0x54, 0xab,
+0xb2, 0x4d, 0xd3, 0x2c,
+0x4b, 0xb4, 0x4c, 0xb3,
+0xd4, 0x2b, 0xb5, 0x4a,
+0xd5, 0x2a, 0xab, 0x54,
+0x2b, 0xd4, 0xca, 0x35,
+0x4b, 0xb4, 0xac, 0x53,
+0x2b, 0xd4, 0xb2, 0x4d,
+0xd5, 0x2a, 0xad, 0x52,
+0xab, 0x54, 0xcb, 0x34,
+0xab, 0x54, 0xad, 0x52,
+0x53, 0xac, 0xb2, 0x4d,
+0xb3, 0x4c, 0x2d, 0xd2,
+0xb2, 0x4d, 0x2b, 0xd4,
+0xb4, 0x4b, 0x55, 0xaa,
+0x54, 0xab, 0xb4, 0x4b,
+0x35, 0xca, 0xac, 0x53,
+0x53, 0xac, 0xca, 0x35,
+0xcd, 0x32, 0x2d, 0xd2,
+0x32, 0xcd, 0x52, 0xad,
+0xac, 0x53, 0x55, 0xaa,
+0xac, 0x53, 0x2d, 0xd2,
+0x32, 0xcd, 0x2c, 0xd3,
+0xb2, 0x4d, 0x55, 0xaa,
+0xcc, 0x33, 0x55, 0xaa,
+0x34, 0xcb, 0x2c, 0xd3,
+0x2c, 0xd3, 0xac, 0x53,
+0xcd, 0x32, 0x35, 0xca,
+0xca, 0x35, 0x4d, 0xb2,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xad, 0x52, 0x2b, 0xd4,
+0xaa, 0x55, 0x55, 0xaa,
+0x52, 0xad, 0xd4, 0x2b,
+0x33, 0xcc, 0x4c, 0xb3,
+0x52, 0xad, 0x34, 0xcb,
+0xcc, 0x33, 0x4b, 0xb4,
+0x52, 0xad, 0x32, 0xcd,
+0x4c, 0xb3, 0x4a, 0xb5,
+0xb2, 0x4d, 0x33, 0xcc,
+0x34, 0xcb, 0x4a, 0xb5,
+0xd4, 0x2b, 0xb3, 0x4c,
+0x2d, 0xd2, 0xaa, 0x55,
+0xcb, 0x34, 0x4b, 0xb4,
+0x2a, 0xd5, 0xac, 0x53,
+0x4d, 0xb2, 0xca, 0x35,
+0xcb, 0x34, 0x4d, 0xb2,
+0x34, 0xcb, 0xb2, 0x4d,
+0xad, 0x52, 0xab, 0x54,
+0xad, 0x52, 0x4b, 0xb4,
+0x52, 0xad, 0x4c, 0xb3,
+0x52, 0xad, 0x4a, 0xb5,
+0xd2, 0x2d, 0x4b, 0xb4,
+0x32, 0xcd, 0x4a, 0xb5,
+0x4a, 0xb5, 0x4a, 0xb5,
+0x2c, 0xd3, 0xca, 0x35,
+0x35, 0xca, 0x2a, 0xd5,
+0x2a, 0xd5, 0xd2, 0x2d,
+0x2d, 0xd2, 0xd4, 0x2b,
+0xab, 0x54, 0x55, 0xaa,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x33, 0xcc, 0xcc, 0x33,
+0x55, 0xaa, 0x2a, 0xd5,
+0xcc, 0x33, 0xd3, 0x2c,
+0x33, 0xcc, 0x34, 0xcb,
+0xcc, 0x33, 0x35, 0xca,
+0x4c, 0xb3, 0x32, 0xcd,
+0x2c, 0xd3, 0x32, 0xcd,
+0xb4, 0x4b, 0x33, 0xcc,
+0xaa, 0x55, 0xb3, 0x4c,
+0xd5, 0x2a, 0xd3, 0x2c,
+0xd3, 0x2c, 0xcb, 0x34,
+0xcb, 0x34, 0x35, 0xca,
+0x4a, 0xb5, 0xb2, 0x4d,
+0x2d, 0xd2, 0xd2, 0x2d,
+0xb5, 0x4a, 0x4b, 0xb4,
+0xaa, 0x55, 0xd5, 0x2a,
+0x55, 0xaa, 0xca, 0x35,
+0x33, 0xcc, 0xd4, 0x2b,
+0x33, 0xcc, 0x32, 0xcd,
+0x4c, 0xb3, 0x34, 0xcb,
+0xac, 0x53, 0x33, 0xcc,
+0x54, 0xab, 0x32, 0xcd,
+0xd2, 0x2d, 0xb3, 0x4c,
+0xb3, 0x4c, 0x53, 0xac,
+0xca, 0x35, 0x2b, 0xd4,
+0xd4, 0x2b, 0xcd, 0x32,
+0x4d, 0xb2, 0xb4, 0x4b,
+0xab, 0x54, 0x53, 0xac,
+0x54, 0xab, 0xaa, 0x55,
+0xd3, 0x2c, 0xad, 0x52,
+0x33, 0xcc, 0x2c, 0xd3,
+0xaa, 0x55, 0x2d, 0xd2,
+0xcc, 0x33, 0xd5, 0x2a,
+0xb3, 0x4c, 0x35, 0xca,
+0x2c, 0xd3, 0x34, 0xcb,
+0x34, 0xcb, 0x32, 0xcd,
+0x4a, 0xb5, 0xb2, 0x4d,
+0xad, 0x52, 0xd3, 0x2c,
+0xb5, 0x4a, 0x4b, 0xb4,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x55, 0xaa, 0x4a, 0xb5,
+0x2a, 0xd5, 0xd4, 0x2b,
+0x33, 0xcc, 0xca, 0x35,
+0x4b, 0xb4, 0x34, 0xcb,
+0x2c, 0xd3, 0xb2, 0x4d,
+0x55, 0xaa, 0x32, 0xcd,
+0xaa, 0x55, 0xcb, 0x34,
+0xb3, 0x4c, 0xd3, 0x2c,
+0x53, 0xac, 0x32, 0xcd,
+0xd4, 0x2b, 0x35, 0xca,
+0xb2, 0x4d, 0xb3, 0x4c,
+0x2b, 0xd4, 0x52, 0xad,
+0xd4, 0x2b, 0xab, 0x54,
+0xab, 0x54, 0xad, 0x52,
+0x4b, 0xb4, 0xac, 0x53,
+0xb3, 0x4c, 0xad, 0x52,
+0xd5, 0x2a, 0x2d, 0xd2,
+0xb4, 0x4b, 0xcd, 0x32,
+0xab, 0x54, 0xb5, 0x4a,
+0xb5, 0x4a, 0xb3, 0x4c,
+0x33, 0xcc, 0xca, 0x35,
+0xd5, 0x2a, 0x2b, 0xd4,
+0x2c, 0xd3, 0xd2, 0x2d,
+0x4b, 0xb4, 0x34, 0xcb,
+0xaa, 0x55, 0xb5, 0x4a,
+0x55, 0xaa, 0xd2, 0x2d,
+0x33, 0xcc, 0xca, 0x35,
+0xb3, 0x4c, 0x35, 0xca,
+0x2c, 0xd3, 0x32, 0xcd,
+0x34, 0xcb, 0x32, 0xcd,
+0xaa, 0x55, 0xb3, 0x4c,
+0xad, 0x52, 0xd3, 0x2c,
+0xd3, 0x2c, 0x4b, 0xb4,
+0xd2, 0x2d, 0x35, 0xca,
+0x4a, 0xb5, 0x4a, 0xb5,
+0x2a, 0xd5, 0xd2, 0x2d,
+0x35, 0xca, 0xca, 0x35,
+0xab, 0x54, 0xd5, 0x2a,
+0x2d, 0xd2, 0xb2, 0x4d,
+0x33, 0xcc, 0x54, 0xab,
+0xaa, 0x55, 0x2b, 0xd4,
+0x4c, 0xb3, 0xcc, 0x33,
+0x53, 0xac, 0x34, 0xcb,
+0xd4, 0x2b, 0x33, 0xcc,
+0x52, 0xad, 0xb2, 0x4d,
+0xcb, 0x34, 0x53, 0xac,
+0xb2, 0x4d, 0xab, 0x54,
+0xcd, 0x32, 0x4d, 0xb2,
+0x54, 0xab, 0x4c, 0xb3,
+0xac, 0x53, 0xab, 0x54,
+0xd3, 0x2c, 0x2b, 0xd4,
+0x52, 0xad, 0x2c, 0xd3,
+0x4a, 0xb5, 0x54, 0xab,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x55, 0xaa, 0x4c, 0xb3,
+0x2a, 0xd5, 0xd4, 0x2b,
+0xd3, 0x2c, 0xcb, 0x34,
+0x4b, 0xb4, 0x34, 0xcb,
+0x4a, 0xb5, 0xb2, 0x4d,
+0x55, 0xaa, 0xd2, 0x2d,
+0xb5, 0x4a, 0xcb, 0x34,
+0xb3, 0x4c, 0xd5, 0x2a,
+0x55, 0xaa, 0x32, 0xcd,
+0x34, 0xcb, 0xd4, 0x2b,
+0xb3, 0x4c, 0xb3, 0x4c,
+0x4d, 0xb2, 0x34, 0xcb,
+0xd4, 0x2b, 0x4b, 0xb4,
+0x54, 0xab, 0xb2, 0x4d,
+0x4b, 0xb4, 0xaa, 0x55,
+0xb3, 0x4c, 0xab, 0x54,
+0x35, 0xca, 0x2c, 0xd3,
+0x54, 0xab, 0xcc, 0x33,
+0xcd, 0x32, 0xb5, 0x4a,
+0xd3, 0x2c, 0x53, 0xac,
+0x2c, 0xd3, 0x2a, 0xd5,
+0xca, 0x35, 0x2d, 0xd2,
+0x2a, 0xd5, 0xd4, 0x2b,
+0xad, 0x52, 0xd5, 0x2a,
+0x4b, 0xb4, 0x54, 0xab,
+0x32, 0xcd, 0xb4, 0x4b,
+0x55, 0xaa, 0x4c, 0xb3,
+0x4c, 0xb3, 0xca, 0x35,
+0xd3, 0x2c, 0x2b, 0xd4,
+0x34, 0xcb, 0x32, 0xcd,
+0x4a, 0xb5, 0xb4, 0x4b,
+0xad, 0x52, 0xd3, 0x2c,
+0x55, 0xaa, 0x4a, 0xb5,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x33, 0xcc, 0x4a, 0xb5,
+0x2a, 0xd5, 0x34, 0xcb,
+0x2c, 0xd3, 0xca, 0x35,
+0x4b, 0xb4, 0x32, 0xcd,
+0x2a, 0xd5, 0xb2, 0x4d,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xab, 0x54, 0xcb, 0x34,
+0xd5, 0x2a, 0xb5, 0x4a,
+0x53, 0xac, 0xd2, 0x2d,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xb2, 0x4d, 0xb5, 0x4a,
+0x2b, 0xd4, 0x54, 0xab,
+0x34, 0xcb, 0xaa, 0x55,
+0x4b, 0xb4, 0xac, 0x53,
+0x2d, 0xd2, 0xac, 0x53,
+0xd5, 0x2a, 0x4d, 0xb2,
+0xca, 0x35, 0xcd, 0x32,
+0xab, 0x54, 0xcb, 0x34,
+0xad, 0x52, 0xb3, 0x4c,
+0x53, 0xac, 0x52, 0xad,
+0xd2, 0x2d, 0x2b, 0xd4,
+0xb2, 0x4d, 0x4d, 0xb2,
+0x4a, 0xb5, 0x54, 0xab,
+0xb4, 0x4b, 0xcb, 0x34,
+0x55, 0xaa, 0xac, 0x53,
+0x55, 0xaa, 0xd2, 0x2d,
+0xd3, 0x2c, 0xcd, 0x32,
+0xb3, 0x4c, 0x35, 0xca,
+0xaa, 0x55, 0x33, 0xcc,
+0x34, 0xcb, 0xd2, 0x2d,
+0xd3, 0x2c, 0xb3, 0x4c,
+0xad, 0x52, 0x35, 0xca,
+0xca, 0x35, 0x4b, 0xb4,
+0x32, 0xcd, 0xd2, 0x2d,
+0x4d, 0xb2, 0x4a, 0xb5,
+0xac, 0x53, 0x55, 0xaa,
+0x34, 0xcb, 0x2a, 0xd5,
+0x32, 0xcd, 0xac, 0x53,
+0x2d, 0xd2, 0x54, 0xab,
+0xcc, 0x33, 0x4d, 0xb2,
+0x4a, 0xb5, 0x2c, 0xd3,
+0xac, 0x53, 0xcb, 0x34,
+0xd5, 0x2a, 0x35, 0xca,
+0x52, 0xad, 0xd2, 0x2d,
+0x2b, 0xd4, 0x52, 0xad,
+0xb2, 0x4d, 0xb5, 0x4a,
+0xab, 0x54, 0x4d, 0xb2,
+0x34, 0xcb, 0xaa, 0x55,
+0xb3, 0x4c, 0xab, 0x54,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x54, 0xab, 0x4c, 0xb3,
+0xca, 0x35, 0xb5, 0x4a,
+0xd3, 0x2c, 0xcb, 0x34,
+0x2d, 0xd2, 0x2a, 0xd5,
+0x4a, 0xb5, 0x52, 0xad,
+0x2a, 0xd5, 0xd4, 0x2b,
+0xb5, 0x4a, 0xcd, 0x32,
+0x4b, 0xb4, 0xd4, 0x2b,
+0xb5, 0x4a, 0xb3, 0x4c,
+0x55, 0xaa, 0xd4, 0x2b,
+0xd5, 0x2a, 0xcb, 0x34,
+0x53, 0xac, 0xd4, 0x2b,
+0x4b, 0xb4, 0x32, 0xcd,
+0x52, 0xad, 0xb4, 0x4b,
+0xb5, 0x4a, 0x53, 0xac,
+0x52, 0xad, 0xca, 0x35,
+0xd5, 0x2a, 0x4d, 0xb2,
+0x32, 0xcd, 0xd2, 0x2d,
+0xab, 0x54, 0x4b, 0xb4,
+0xac, 0x53, 0xb5, 0x4a,
+0x53, 0xac, 0x2a, 0xd5,
+0x32, 0xcd, 0x2a, 0xd5,
+0x32, 0xcd, 0x54, 0xab,
+0x2c, 0xd3, 0x54, 0xab,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x4a, 0xb5, 0x2c, 0xd3,
+0xd4, 0x2b, 0xd5, 0x2a,
+0xd5, 0x2a, 0xb5, 0x4a,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x2b, 0xd4, 0xaa, 0x55,
+0x4b, 0xb4, 0xb4, 0x4b,
+0x2b, 0xd4, 0xac, 0x53,
+0x55, 0xaa, 0xaa, 0x55,
+0xcb, 0x34, 0xcd, 0x32,
+0x33, 0xcc, 0xac, 0x53,
+0xad, 0x52, 0x33, 0xcc,
+0xcc, 0x33, 0x4d, 0xb2,
+0xd2, 0x2d, 0x33, 0xcc,
+0xac, 0x53, 0x4b, 0xb4,
+0xca, 0x35, 0x33, 0xcc,
+0x52, 0xad, 0xca, 0x35,
+0xcd, 0x32, 0x53, 0xac,
+0x32, 0xcd, 0x52, 0xad,
+0xcc, 0x33, 0x4d, 0xb2,
+0xac, 0x53, 0x2d, 0xd2,
+0xac, 0x53, 0x2b, 0xd4,
+0xb2, 0x4d, 0x35, 0xca,
+0x52, 0xad, 0x54, 0xab,
+0x34, 0xcb, 0x52, 0xad,
+0x52, 0xad, 0xac, 0x53,
+0xad, 0x52, 0x4d, 0xb2,
+0xd2, 0x2d, 0x4d, 0xb2,
+0xb2, 0x4d, 0x4b, 0xb4,
+0xaa, 0x55, 0x4b, 0xb4,
+0x54, 0xab, 0xca, 0x35,
+0x53, 0xac, 0xaa, 0x55,
+0x33, 0xcc, 0x32, 0xcd,
+0x32, 0xcd, 0x2c, 0xd3,
+0xac, 0x53, 0x53, 0xac,
+0xcc, 0x33, 0x35, 0xca,
+0xd2, 0x2d, 0x2d, 0xd2,
+0x2c, 0xd3, 0x52, 0xad,
+0xaa, 0x55, 0x35, 0xca,
+0xaa, 0x55, 0xcd, 0x32,
+0x33, 0xcc, 0xd2, 0x2d,
+0xb3, 0x4c, 0x33, 0xcc,
+0xac, 0x53, 0x35, 0xca,
+0xd4, 0x2b, 0x33, 0xcc,
+0x32, 0xcd, 0xb2, 0x4d,
+0xcb, 0x34, 0x53, 0xac,
+0xac, 0x53, 0xab, 0x54,
+0xcd, 0x32, 0x2d, 0xd2,
+0x52, 0xad, 0x4c, 0xb3,
+0xac, 0x53, 0x55, 0xaa,
+0xd2, 0x2d, 0x2b, 0xd4,
+0x32, 0xcd, 0x4c, 0xb3,
+0x4a, 0xb5, 0x54, 0xab,
+0xcc, 0x33, 0xcb, 0x34,
+0x55, 0xaa, 0x2c, 0xd3,
+0x4c, 0xb3, 0xd2, 0x2d,
+0xd3, 0x2c, 0x35, 0xca,
+0xb4, 0x4b, 0x35, 0xca,
+0x2a, 0xd5, 0xb2, 0x4d,
+0x35, 0xca, 0xd2, 0x2d,
+0xab, 0x54, 0xcb, 0x34,
+0xad, 0x52, 0xb5, 0x4a,
+0x53, 0xac, 0x52, 0xad,
+0x32, 0xcd, 0x2a, 0xd5,
+0xb2, 0x4d, 0x4d, 0xb2,
+0x2c, 0xd3, 0x54, 0xab,
+0xb4, 0x4b, 0x2b, 0xd4,
+0x4a, 0xb5, 0xac, 0x53,
+0x55, 0xaa, 0xd4, 0x2b,
+0xd5, 0x2a, 0xcd, 0x32,
+0x53, 0xac, 0xd4, 0x2b,
+0xab, 0x54, 0x33, 0xcc,
+0x52, 0xad, 0xb4, 0x4b,
+0xd3, 0x2c, 0x53, 0xac,
+0x52, 0xad, 0x2a, 0xd5,
+0xca, 0x35, 0x4d, 0xb2,
+0x32, 0xcd, 0xd4, 0x2b,
+0xad, 0x52, 0x4b, 0xb4,
+0x4c, 0xb3, 0x54, 0xab,
+0x52, 0xad, 0x2a, 0xd5,
+0x54, 0xab, 0x4c, 0xb3,
+0x32, 0xcd, 0xb4, 0x4b,
+0xd3, 0x2c, 0x4b, 0xb4,
+0x4c, 0xb3, 0x2a, 0xd5,
+0x4a, 0xb5, 0x2a, 0xd5,
+0x34, 0xcb, 0xd4, 0x2b,
+0x35, 0xca, 0xb4, 0x4b,
+0x4d, 0xb2, 0xd4, 0x2b,
+0x4d, 0xb2, 0x4a, 0xb5,
+0x54, 0xab, 0x54, 0xab,
+0x34, 0xcb, 0xaa, 0x55,
+0x53, 0xac, 0xac, 0x53,
+0x2d, 0xd2, 0x2c, 0xd3,
+0xd2, 0x2d, 0x4d, 0xb2,
+0xca, 0x35, 0x55, 0xaa,
+0xaa, 0x55, 0xcb, 0x34,
+0x2d, 0xd2, 0xcc, 0x33,
+0x53, 0xac, 0x52, 0xad,
+0xca, 0x35, 0x33, 0xcc,
+0xb2, 0x4d, 0xcd, 0x32,
+0xcd, 0x32, 0x53, 0xac,
+0xb4, 0x4b, 0x53, 0xac,
+0xcc, 0x33, 0xad, 0x52,
+0xd5, 0x2a, 0x2d, 0xd2,
+0xac, 0x53, 0xcd, 0x32,
+0xab, 0x54, 0x35, 0xca,
+0xb2, 0x4d, 0xb3, 0x4c,
+0x33, 0xcc, 0x52, 0xad,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xac, 0x53, 0xad, 0x52,
+0x4b, 0xb4, 0x34, 0xcb,
+0xb2, 0x4d, 0xad, 0x52,
+0x55, 0xaa, 0x52, 0xad,
+0xb4, 0x4b, 0xcd, 0x32,
+0xb3, 0x4c, 0xad, 0x52,
+0xb5, 0x4a, 0x33, 0xcc,
+0xb4, 0x4b, 0xcd, 0x32,
+0xd5, 0x2a, 0xb3, 0x4c,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xcb, 0x34, 0xcb, 0x34,
+0xd5, 0x2a, 0xb5, 0x4a,
+0x4d, 0xb2, 0xd2, 0x2d,
+0x2b, 0xd4, 0x4a, 0xb5,
+0xb4, 0x4b, 0xb5, 0x4a,
+0x2b, 0xd4, 0xaa, 0x55,
+0x35, 0xca, 0xaa, 0x55,
+0x2b, 0xd4, 0xcc, 0x33,
+0x2d, 0xd2, 0xac, 0x53,
+0xcb, 0x34, 0x53, 0xac,
+0xca, 0x35, 0xad, 0x52,
+0xcd, 0x32, 0xcd, 0x32,
+0xad, 0x52, 0x4d, 0xb2,
+0xac, 0x53, 0x53, 0xac,
+0xb2, 0x4d, 0x2b, 0xd4,
+0xd2, 0x2d, 0x4d, 0xb2,
+0x54, 0xab, 0x54, 0xab,
+0xaa, 0x55, 0xab, 0x54,
+0x53, 0xac, 0xcc, 0x33,
+0x53, 0xac, 0x2c, 0xd3,
+0xd2, 0x2d, 0x33, 0xcc,
+0xd2, 0x2d, 0x55, 0xaa,
+0xca, 0x35, 0x53, 0xac,
+0x2a, 0xd5, 0xcc, 0x33,
+0xcd, 0x32, 0xcd, 0x32,
+0xcb, 0x34, 0x53, 0xac,
+0xac, 0x53, 0xb3, 0x4c,
+0xcd, 0x32, 0x2d, 0xd2,
+0xd2, 0x2d, 0x4b, 0xb4,
+0xac, 0x53, 0x55, 0xaa,
+0x4a, 0xb5, 0x2a, 0xd5,
+0x32, 0xcd, 0xcc, 0x33,
+0x35, 0xca, 0x54, 0xab,
+0xcc, 0x33, 0xd3, 0x2c,
+0x4d, 0xb2, 0x2c, 0xd3,
+0xcc, 0x33, 0x55, 0xaa,
+0xd4, 0x2b, 0x35, 0xca,
+0x2c, 0xd3, 0xac, 0x53,
+0x2b, 0xd4, 0x32, 0xcd,
+0xca, 0x35, 0xad, 0x52,
+0xab, 0x54, 0xd3, 0x2c,
+0xad, 0x52, 0xad, 0x52,
+0xd3, 0x2c, 0x55, 0xaa,
+0xb2, 0x4d, 0x2d, 0xd2,
+0x2a, 0xd5, 0x4c, 0xb3,
+0xb4, 0x4b, 0xd5, 0x2a,
+0xcb, 0x34, 0xab, 0x54,
+0x35, 0xca, 0xb4, 0x4b,
+0x4d, 0xb2, 0xcc, 0x33,
+0x4d, 0xb2, 0x4a, 0xb5,
+0xd4, 0x2b, 0x53, 0xac,
+0x34, 0xcb, 0xaa, 0x55,
+0xcb, 0x34, 0xad, 0x52,
+0x2d, 0xd2, 0xac, 0x53,
+0xad, 0x52, 0x4d, 0xb2,
+0xca, 0x35, 0x4d, 0xb2,
+0xb2, 0x4d, 0xcb, 0x34,
+0xad, 0x52, 0x4b, 0xb4,
+0x54, 0xab, 0x52, 0xad,
+0x52, 0xad, 0xaa, 0x55,
+0xb3, 0x4c, 0x4d, 0xb2,
+0x32, 0xcd, 0x2c, 0xd3,
+0xb4, 0x4b, 0x4b, 0xb4,
+0xcc, 0x33, 0xb5, 0x4a,
+0x55, 0xaa, 0x2a, 0xd5,
+0x2c, 0xd3, 0xca, 0x35,
+0x33, 0xcc, 0x34, 0xcb,
+0x2a, 0xd5, 0x32, 0xcd,
+0x4c, 0xb3, 0xd2, 0x2d,
+0xab, 0x54, 0x33, 0xcc,
+0xb4, 0x4b, 0xb5, 0x4a,
+0xd3, 0x2c, 0xb3, 0x4c,
+0x35, 0xca, 0x2a, 0xd5,
+0xca, 0x35, 0xcb, 0x34,
+0x2d, 0xd2, 0xd4, 0x2b,
+0x4d, 0xb2, 0x52, 0xad,
+0x4a, 0xb5, 0x54, 0xab,
+0xb4, 0x4b, 0xcd, 0x32,
+0x55, 0xaa, 0xac, 0x53,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xd3, 0x2c, 0xcd, 0x32,
+0xd5, 0x2a, 0x35, 0xca,
+0xaa, 0x55, 0xd3, 0x2c,
+0x2b, 0xd4, 0xd2, 0x2d,
+0xd3, 0x2c, 0xb5, 0x4a,
+0xab, 0x54, 0x35, 0xca,
+0x2a, 0xd5, 0xaa, 0x55,
+0x33, 0xcc, 0xd2, 0x2d,
+0x2b, 0xd4, 0x2c, 0xd3,
+0xac, 0x53, 0xb5, 0x4a,
+0xcb, 0x34, 0x35, 0xca,
+0x32, 0xcd, 0xaa, 0x55,
+0x2d, 0xd2, 0x52, 0xad,
+0x2c, 0xd3, 0x4c, 0xb3,
+0xaa, 0x55, 0x2d, 0xd2,
+0xca, 0x35, 0xcb, 0x34,
+0xb3, 0x4c, 0xd5, 0x2a,
+0x4d, 0xb2, 0x32, 0xcd,
+0x34, 0xcb, 0x54, 0xab,
+0xb4, 0x4b, 0xb3, 0x4c,
+0x4d, 0xb2, 0xac, 0x53,
+0xd5, 0x2a, 0x4b, 0xb4,
+0xd4, 0x2b, 0xcd, 0x32,
+0x4b, 0xb4, 0xaa, 0x55,
+0xab, 0x54, 0xb3, 0x4c,
+0x35, 0xca, 0xac, 0x53,
+0xd3, 0x2c, 0xcb, 0x34,
+0xcd, 0x32, 0x2d, 0xd2,
+0x4a, 0xb5, 0x52, 0xad,
+0xac, 0x53, 0xd5, 0x2a,
+0xb5, 0x4a, 0x2d, 0xd2,
+0x32, 0xcd, 0xd4, 0x2b,
+0xb5, 0x4a, 0x55, 0xaa,
+0x4c, 0xb3, 0xd4, 0x2b,
+0x35, 0xca, 0x2c, 0xd3,
+0x54, 0xab, 0xd4, 0x2b,
+0xcd, 0x32, 0xb5, 0x4a,
+0x53, 0xac, 0x54, 0xab,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x52, 0xad, 0x2c, 0xd3,
+0x2a, 0xd5, 0x54, 0xab,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x4b, 0xb4, 0x4c, 0xb3,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xd5, 0x2a, 0xcb, 0x34,
+0x4b, 0xb4, 0xca, 0x35,
+0x4b, 0xb4, 0xb2, 0x4d,
+0x35, 0xca, 0xb2, 0x4d,
+0xb5, 0x4a, 0xcb, 0x34,
+0xad, 0x52, 0xcb, 0x34,
+0x55, 0xaa, 0x52, 0xad,
+0x52, 0xad, 0xd2, 0x2d,
+0xb3, 0x4c, 0x4d, 0xb2,
+0xb2, 0x4d, 0x35, 0xca,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x34, 0xcb, 0xb2, 0x4d,
+0x55, 0xaa, 0xaa, 0x55,
+0xad, 0x52, 0xcb, 0x34,
+0x33, 0xcc, 0x4c, 0xb3,
+0x52, 0xad, 0x32, 0xcd,
+0xcc, 0x33, 0x4b, 0xb4,
+0xb2, 0x4d, 0x33, 0xcc,
+0x4c, 0xb3, 0x4a, 0xb5,
+0xd4, 0x2b, 0x33, 0xcc,
+0x34, 0xcb, 0xaa, 0x55,
+0xcb, 0x34, 0xb3, 0x4c,
+0x2d, 0xd2, 0xac, 0x53,
+0xcd, 0x32, 0x4b, 0xb4,
+0xca, 0x35, 0x4d, 0xb2,
+0x4c, 0xb3, 0xca, 0x35,
+0xad, 0x52, 0x2b, 0xd4,
+0x34, 0xcb, 0x52, 0xad,
+0x52, 0xad, 0xb4, 0x4b,
+0xad, 0x52, 0x4d, 0xb2,
+0x52, 0xad, 0x4a, 0xb5,
+0xb2, 0x4d, 0x4b, 0xb4,
+0x32, 0xcd, 0x4a, 0xb5,
+0x54, 0xab, 0x4a, 0xb5,
+0x2c, 0xd3, 0xaa, 0x55,
+0x33, 0xcc, 0x2a, 0xd5,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x2c, 0xd3, 0xd4, 0x2b,
+0xcb, 0x34, 0x35, 0xca,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x2d, 0xd2, 0xd2, 0x2d,
+0x55, 0xaa, 0x4a, 0xb5,
+0xaa, 0x55, 0xd5, 0x2a,
+0x33, 0xcc, 0xca, 0x35,
+0x33, 0xcc, 0x34, 0xcb,
+0x2c, 0xd3, 0x32, 0xcd,
+0x4c, 0xb3, 0x32, 0xcd,
+0xaa, 0x55, 0x33, 0xcc,
+0xb4, 0x4b, 0xd3, 0x2c,
+0xd3, 0x2c, 0xb3, 0x4c,
+0xd5, 0x2a, 0x35, 0xca,
+0xca, 0x35, 0xcb, 0x34,
+0x2b, 0xd4, 0xd2, 0x2d,
+0x4d, 0xb2, 0xb2, 0x4d,
+0xab, 0x54, 0x55, 0xaa,
+0xb4, 0x4b, 0xab, 0x54,
+0x33, 0xcc, 0xac, 0x53,
+0x55, 0xaa, 0x2c, 0xd3,
+0xcc, 0x33, 0xcd, 0x32,
+0xd3, 0x2c, 0x35, 0xca,
+0xac, 0x53, 0x33, 0xcc,
+0x2a, 0xd5, 0x32, 0xcd,
+0xd2, 0x2d, 0xd3, 0x2c,
+0xab, 0x54, 0x53, 0xac,
+0xca, 0x35, 0xb5, 0x4a,
+0xd3, 0x2c, 0xcd, 0x32,
+0x2d, 0xd2, 0x2a, 0xd5,
+0xaa, 0x55, 0x53, 0xac,
+0x2a, 0xd5, 0xd4, 0x2b,
+0xd3, 0x2c, 0xcd, 0x32,
+0x4b, 0xb4, 0x34, 0xcb,
+0xaa, 0x55, 0xb3, 0x4c,
+0x55, 0xaa, 0xd2, 0x2d,
+0xd3, 0x2c, 0xcb, 0x34,
+0xb3, 0x4c, 0x35, 0xca,
+0x4a, 0xb5, 0x32, 0xcd,
+0x34, 0xcb, 0xd2, 0x2d,
+0xb5, 0x4a, 0xb3, 0x4c,
+0xad, 0x52, 0xd5, 0x2a,
+0xd5, 0x2a, 0x4b, 0xb4,
+0x32, 0xcd, 0xd4, 0x2b,
+0x4b, 0xb4, 0x4a, 0xb5,
+0x4c, 0xb3, 0xb4, 0x4b,
+0x35, 0xca, 0x2a, 0xd5,
+0x54, 0xab, 0xca, 0x35,
+0x2d, 0xd2, 0xb4, 0x4b,
+0x33, 0xcc, 0x52, 0xad,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xac, 0x53, 0xcd, 0x32,
+0x35, 0xca, 0x34, 0xcb,
+0xb2, 0x4d, 0xd3, 0x2c,
+0x4d, 0xb2, 0x52, 0xad,
+0xd4, 0x2b, 0x55, 0xaa,
+0xb4, 0x4b, 0xad, 0x52,
+0x2b, 0xd4, 0xac, 0x53,
+0xb5, 0x4a, 0xad, 0x52,
+0xcb, 0x34, 0xcd, 0x32,
+0xb5, 0x4a, 0xad, 0x52,
+0xad, 0x52, 0xd3, 0x2c,
+0xb5, 0x4a, 0x4d, 0xb2,
+0xd2, 0x2d, 0xd5, 0x2a,
+/* rand data for seed 64 */
+0x33, 0xcc, 0x52, 0xad,
+0x52, 0xad, 0x2a, 0xd5,
+0xac, 0x53, 0x4d, 0xb2,
+0x32, 0xcd, 0x34, 0xcb,
+0xb2, 0x4d, 0x4b, 0xb4,
+0x4c, 0xb3, 0x52, 0xad,
+0x54, 0xab, 0x2a, 0xd5,
+0xb4, 0x4b, 0xad, 0x52,
+0x33, 0xcc, 0xb4, 0x4b,
+0xb5, 0x4a, 0x2d, 0xd2,
+0x4c, 0xb3, 0xca, 0x35,
+0xb5, 0x4a, 0x35, 0xca,
+0x34, 0xcb, 0xd2, 0x2d,
+0x35, 0xca, 0xb2, 0x4d,
+0xad, 0x52, 0xd5, 0x2a,
+0xad, 0x52, 0x4b, 0xb4,
+0x32, 0xcd, 0x54, 0xab,
+0x52, 0xad, 0x4a, 0xb5,
+0x4c, 0xb3, 0x4c, 0xb3,
+0x32, 0xcd, 0x2a, 0xd5,
+0xd4, 0x2b, 0x4b, 0xb4,
+0x2c, 0xd3, 0xb4, 0x4b,
+0x4b, 0xb4, 0x2a, 0xd5,
+0x4a, 0xb5, 0xaa, 0x55,
+0x35, 0xca, 0xd4, 0x2b,
+0x35, 0xca, 0xcc, 0x33,
+0x4d, 0xb2, 0xd4, 0x2b,
+0xcd, 0x32, 0x53, 0xac,
+0x54, 0xab, 0x54, 0xab,
+0xcc, 0x33, 0xad, 0x52,
+0x53, 0xac, 0x2c, 0xd3,
+0xac, 0x53, 0x2d, 0xd2,
+0xd2, 0x2d, 0x35, 0xca,
+0xb2, 0x4d, 0x55, 0xaa,
+0x2a, 0xd5, 0x52, 0xad,
+0x34, 0xcb, 0xcc, 0x33,
+0xab, 0x54, 0xad, 0x52,
+0xcd, 0x32, 0xb3, 0x4c,
+0xb3, 0x4c, 0x4d, 0xb2,
+0xcc, 0x33, 0x2b, 0xd4,
+0xb4, 0x4b, 0x2b, 0xd4,
+0x4c, 0xb3, 0xb4, 0x4b,
+0x55, 0xaa, 0x34, 0xcb,
+0x54, 0xab, 0xca, 0x35,
+0x53, 0xac, 0xb2, 0x4d,
+0x33, 0xcc, 0x32, 0xcd,
+0xb2, 0x4d, 0x2b, 0xd4,
+0xac, 0x53, 0x53, 0xac,
+0x54, 0xab, 0x34, 0xcb,
+0xd2, 0x2d, 0xad, 0x52,
+0x53, 0xac, 0x52, 0xad,
+0xaa, 0x55, 0x2d, 0xd2,
+0xb2, 0x4d, 0xcd, 0x32,
+0xb3, 0x4c, 0x55, 0xaa,
+0xb4, 0x4b, 0x33, 0xcc,
+0x34, 0xcb, 0xac, 0x53,
+0xd5, 0x2a, 0xb3, 0x4c,
+0xcd, 0x32, 0xcd, 0x32,
+0xcb, 0x34, 0x4b, 0xb4,
+0xac, 0x53, 0xb3, 0x4c,
+0x4d, 0xb2, 0x2a, 0xd5,
+0xd2, 0x2d, 0x4b, 0xb4,
+0x34, 0xcb, 0x54, 0xab,
+0x4a, 0xb5, 0xaa, 0x55,
+0x4d, 0xb2, 0xcc, 0x33,
+0x35, 0xca, 0x4c, 0xb3,
+0xd4, 0x2b, 0xd3, 0x2c,
+0xcd, 0x32, 0xab, 0x54,
+0xcb, 0x34, 0x55, 0xaa,
+0x4c, 0xb3, 0xac, 0x53,
+0x2d, 0xd2, 0x2c, 0xd3,
+0xd4, 0x2b, 0x4d, 0xb2,
+0xca, 0x35, 0xb5, 0x4a,
+0xab, 0x54, 0xcb, 0x34,
+0x2d, 0xd2, 0xaa, 0x55,
+0x53, 0xac, 0x52, 0xad,
+0x2a, 0xd5, 0x2c, 0xd3,
+0xb2, 0x4d, 0xcd, 0x32,
+0xcb, 0x34, 0x55, 0xaa,
+0xb4, 0x4b, 0xb3, 0x4c,
+0x2d, 0xd2, 0xac, 0x53,
+0xd5, 0x2a, 0x4b, 0xb4,
+0xca, 0x35, 0xcd, 0x32,
+0x4b, 0xb4, 0xca, 0x35,
+0xad, 0x52, 0xb3, 0x4c,
+0x35, 0xca, 0x52, 0xad,
+0xd2, 0x2d, 0xcb, 0x34,
+0xad, 0x52, 0x4d, 0xb2,
+0x4a, 0xb5, 0x52, 0xad,
+0xb2, 0x4d, 0xcb, 0x34,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x54, 0xab, 0xd2, 0x2d,
+0xb5, 0x4a, 0xab, 0x54,
+0xb3, 0x4c, 0xd5, 0x2a,
+0x55, 0xaa, 0x2c, 0xd3,
+0x34, 0xcb, 0xd4, 0x2b,
+0xd3, 0x2c, 0xb5, 0x4a,
+0x4d, 0xb2, 0x34, 0xcb,
+0x2a, 0xd5, 0x4a, 0xb5,
+0x54, 0xab, 0xd2, 0x2d,
+0x2b, 0xd4, 0xaa, 0x55,
+0xb3, 0x4c, 0xb5, 0x4a,
+0x2b, 0xd4, 0x2c, 0xd3,
+0x34, 0xcb, 0xaa, 0x55,
+0xcb, 0x34, 0xb5, 0x4a,
+0x2d, 0xd2, 0xac, 0x53,
+0x2d, 0xd2, 0x4a, 0xb5,
+0xca, 0x35, 0x4d, 0xb2,
+0x2a, 0xd5, 0xca, 0x35,
+0xad, 0x52, 0xcb, 0x34,
+0x2b, 0xd4, 0x52, 0xad,
+0x52, 0xad, 0xb2, 0x4d,
+0xab, 0x54, 0x4d, 0xb2,
+0xb2, 0x4d, 0xab, 0x54,
+0xb3, 0x4c, 0x4b, 0xb4,
+0x54, 0xab, 0x2c, 0xd3,
+0x54, 0xab, 0xaa, 0x55,
+0xd3, 0x2c, 0xb5, 0x4a,
+0x33, 0xcc, 0x2c, 0xd3,
+0x2a, 0xd5, 0x2a, 0xd5,
+0xcc, 0x33, 0xd5, 0x2a,
+0x2b, 0xd4, 0x34, 0xcb,
+0x2c, 0xd3, 0xb4, 0x4b,
+0x4b, 0xb4, 0x32, 0xcd,
+0x4a, 0xb5, 0xaa, 0x55,
+0xb5, 0x4a, 0xd3, 0x2c,
+0x35, 0xca, 0xcc, 0x33,
+0xd5, 0x2a, 0xd5, 0x2a,
+0xcd, 0x32, 0xd3, 0x2c,
+0x2b, 0xd4, 0x54, 0xab,
+0xcc, 0x33, 0xb5, 0x4a,
+0x4b, 0xb4, 0x2c, 0xd3,
+0x2c, 0xd3, 0xaa, 0x55,
+0xd5, 0x2a, 0x35, 0xca,
+0x2a, 0xd5, 0xcc, 0x33,
+0x2b, 0xd4, 0xd2, 0x2d,
+0xcb, 0x34, 0xb3, 0x4c,
+0xab, 0x54, 0xb5, 0x4a,
+0xcd, 0x32, 0xab, 0x54,
+0x33, 0xcc, 0x4a, 0xb5,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x2c, 0xd3, 0x2a, 0xd5,
+0xd4, 0x2b, 0x35, 0xca,
+0x2a, 0xd5, 0xb4, 0x4b,
+0x2b, 0xd4, 0xd2, 0x2d,
+0x4b, 0xb4, 0xaa, 0x55,
+0xab, 0x54, 0xb5, 0x4a,
+0x35, 0xca, 0xac, 0x53,
+0x33, 0xcc, 0xca, 0x35,
+0xcd, 0x32, 0x2d, 0xd2,
+0x2c, 0xd3, 0x52, 0xad,
+0xac, 0x53, 0x35, 0xca,
+0xaa, 0x55, 0x2d, 0xd2,
+0x32, 0xcd, 0xd2, 0x2d,
+0xb3, 0x4c, 0x55, 0xaa,
+0xac, 0x53, 0x35, 0xca,
+0x34, 0xcb, 0x2c, 0xd3,
+0x32, 0xcd, 0xb2, 0x4d,
+0xcd, 0x32, 0x55, 0xaa,
+0xac, 0x53, 0x4b, 0xb4,
+0x2c, 0xd3, 0x2c, 0xd3,
+0x52, 0xad, 0x2a, 0xd5,
+0xca, 0x35, 0x55, 0xaa,
+0x32, 0xcd, 0xd4, 0x2b,
+0x2d, 0xd2, 0x4c, 0xb3,
+0x4c, 0xb3, 0x54, 0xab,
+0xca, 0x35, 0x2b, 0xd4,
+0x54, 0xab, 0xcc, 0x33,
+0x4d, 0xb2, 0xb4, 0x4b,
+0xd3, 0x2c, 0x53, 0xac,
+0x54, 0xab, 0x2a, 0xd5,
+0xca, 0x35, 0xad, 0x52,
+0x33, 0xcc, 0xd4, 0x2b,
+0xad, 0x52, 0x2d, 0xd2,
+0x4c, 0xb3, 0x54, 0xab,
+0xb2, 0x4d, 0x35, 0xca,
+0x54, 0xab, 0x4c, 0xb3,
+0x34, 0xcb, 0xb2, 0x4d,
+0xd3, 0x2c, 0xab, 0x54,
+0xad, 0x52, 0x2b, 0xd4,
+0x4a, 0xb5, 0x4c, 0xb3,
+0x52, 0xad, 0xd4, 0x2b,
+0xd5, 0x2a, 0x4b, 0xb4,
+0x52, 0xad, 0xd4, 0x2b,
+0x4b, 0xb4, 0x4a, 0xb5,
+0x52, 0xad, 0xb4, 0x4b,
+0x35, 0xca, 0x4a, 0xb5,
+0x52, 0xad, 0xca, 0x35,
+0x2d, 0xd2, 0x4a, 0xb5,
+0x32, 0xcd, 0x52, 0xad,
+0x2a, 0xd5, 0x4a, 0xb5,
+0xac, 0x53, 0xcd, 0x32,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xb2, 0x4d, 0xb3, 0x4c,
+0x2b, 0xd4, 0x54, 0xab,
+0xd4, 0x2b, 0xab, 0x54,
+0x4b, 0xb4, 0xac, 0x53,
+0x4b, 0xb4, 0xac, 0x53,
+0xd5, 0x2a, 0xad, 0x52,
+0xd5, 0x2a, 0xcd, 0x32,
+0xab, 0x54, 0xcd, 0x32,
+0xab, 0x54, 0xb3, 0x4c,
+0xb3, 0x4c, 0xb3, 0x4c,
+0xd3, 0x2c, 0x2b, 0xd4,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x4b, 0xb4, 0xd4, 0x2b,
+0x55, 0xaa, 0xaa, 0x55,
+0x55, 0xaa, 0xd4, 0x2b,
+0x33, 0xcc, 0xcc, 0x33,
+0x53, 0xac, 0x34, 0xcb,
+0xcc, 0x33, 0x33, 0xcc,
+0x52, 0xad, 0x32, 0xcd,
+0xcc, 0x33, 0x53, 0xac,
+0xb2, 0x4d, 0x33, 0xcc,
+0xcc, 0x33, 0x4d, 0xb2,
+0xd4, 0x2b, 0x33, 0xcc,
+0xac, 0x53, 0xab, 0x54,
+0xcb, 0x34, 0x33, 0xcc,
+0x52, 0xad, 0xac, 0x53,
+0xcd, 0x32, 0x53, 0xac,
+0xd2, 0x2d, 0x4d, 0xb2,
+0xcc, 0x33, 0x4d, 0xb2,
+0xaa, 0x55, 0x2b, 0xd4,
+0xac, 0x53, 0xcb, 0x34,
+0x53, 0xac, 0x34, 0xcb,
+0x52, 0xad, 0x32, 0xcd,
+0x52, 0xad, 0x52, 0xad,
+0xb2, 0x4d, 0x53, 0xac,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xd4, 0x2b, 0x4d, 0xb2,
+0xb4, 0x4b, 0xab, 0x54,
+0xab, 0x54, 0xab, 0x54,
+0x55, 0xaa, 0xac, 0x53,
+0x53, 0xac, 0xcc, 0x33,
+0xd3, 0x2c, 0x2d, 0xd2,
+0xd2, 0x2d, 0x33, 0xcc,
+0xaa, 0x55, 0x55, 0xaa,
+0xca, 0x35, 0xd3, 0x2c,
+0x33, 0xcc, 0xcc, 0x33,
+0xcd, 0x32, 0x35, 0xca,
+0xcc, 0x33, 0x53, 0xac,
+0x2c, 0xd3, 0x32, 0xcd,
+0xcc, 0x33, 0x2d, 0xd2,
+0xaa, 0x55, 0x33, 0xcc,
+0xac, 0x53, 0xd5, 0x2a,
+0xd3, 0x2c, 0x33, 0xcc,
+0x32, 0xcd, 0x34, 0xcb,
+0xca, 0x35, 0x53, 0xac,
+0x4c, 0xb3, 0xd2, 0x2d,
+0xcd, 0x32, 0x2d, 0xd2,
+0xb4, 0x4b, 0x55, 0xaa,
+0xac, 0x53, 0xb5, 0x4a,
+0x35, 0xca, 0x2c, 0xd3,
+0x32, 0xcd, 0xca, 0x35,
+0xcd, 0x32, 0x55, 0xaa,
+0x2c, 0xd3, 0x52, 0xad,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xaa, 0x55, 0x2d, 0xd2,
+0xca, 0x35, 0xd5, 0x2a,
+0xb3, 0x4c, 0xd5, 0x2a,
+0x2d, 0xd2, 0x34, 0xcb,
+0x34, 0xcb, 0x54, 0xab,
+0x4a, 0xb5, 0xb2, 0x4d,
+0x4d, 0xb2, 0xcc, 0x33,
+0xb5, 0x4a, 0x4b, 0xb4,
+0xd4, 0x2b, 0xd3, 0x2c,
+0x55, 0xaa, 0xaa, 0x55,
+0xcb, 0x34, 0xd5, 0x2a,
+0x33, 0xcc, 0xac, 0x53,
+0x2d, 0xd2, 0x34, 0xcb,
+0xcc, 0x33, 0x4d, 0xb2,
+0x4a, 0xb5, 0x32, 0xcd,
+0xac, 0x53, 0xcb, 0x34,
+0xb5, 0x4a, 0x33, 0xcc,
+0x52, 0xad, 0xd2, 0x2d,
+0xd5, 0x2a, 0x53, 0xac,
+0xb2, 0x4d, 0xd5, 0x2a,
+0xcb, 0x34, 0x4d, 0xb2,
+0x34, 0xcb, 0xb4, 0x4b,
+0xad, 0x52, 0xab, 0x54,
+0x4d, 0xb2, 0x4a, 0xb5,
+0x52, 0xad, 0x4c, 0xb3,
+0x34, 0xcb, 0x4a, 0xb5,
+0xd2, 0x2d, 0xab, 0x54,
+0x2d, 0xd2, 0x4a, 0xb5,
+0x4a, 0xb5, 0x4c, 0xb3,
+0x2a, 0xd5, 0xca, 0x35,
+0xd5, 0x2a, 0xcb, 0x34,
+0x2b, 0xd4, 0xd2, 0x2d,
+0x4b, 0xb4, 0xb2, 0x4d,
+0xab, 0x54, 0xb5, 0x4a,
+0xb5, 0x4a, 0xab, 0x54,
+0x33, 0xcc, 0xca, 0x35,
+0x55, 0xaa, 0x2c, 0xd3,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xd3, 0x2c, 0x35, 0xca,
+0xaa, 0x55, 0x35, 0xca,
+0x2a, 0xd5, 0xd2, 0x2d,
+0x33, 0xcc, 0xd2, 0x2d,
+0xab, 0x54, 0x35, 0xca,
+0xac, 0x53, 0xb5, 0x4a,
+0x33, 0xcc, 0x32, 0xcd,
+0x32, 0xcd, 0x2a, 0xd5,
+0xac, 0x53, 0x53, 0xac,
+0x2c, 0xd3, 0x34, 0xcb,
+0xd2, 0x2d, 0x2d, 0xd2,
+0x4a, 0xb5, 0x52, 0xad,
+0xaa, 0x55, 0xd5, 0x2a,
+0xb5, 0x4a, 0xcd, 0x32,
+0x33, 0xcc, 0xd4, 0x2b,
+0xb5, 0x4a, 0x33, 0xcc,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xd5, 0x2a, 0x33, 0xcc,
+0x54, 0xab, 0xd4, 0x2b,
+0xcb, 0x34, 0xb3, 0x4c,
+0x53, 0xac, 0xb4, 0x4b,
+0xcd, 0x32, 0x2b, 0xd4,
+0x52, 0xad, 0x4a, 0xb5,
+0x4c, 0xb3, 0x54, 0xab,
+0x32, 0xcd, 0x2a, 0xd5,
+0x54, 0xab, 0x4c, 0xb3,
+0x2c, 0xd3, 0xb4, 0x4b,
+0xd3, 0x2c, 0x2b, 0xd4,
+0x4a, 0xb5, 0x2a, 0xd5,
+0x4a, 0xb5, 0xd4, 0x2b,
+0x35, 0xca, 0xd4, 0x2b,
+0x55, 0xaa, 0xd4, 0x2b,
+0x4d, 0xb2, 0xd4, 0x2b,
+0x53, 0xac, 0x54, 0xab,
+0x54, 0xab, 0x34, 0xcb,
+0x52, 0xad, 0xac, 0x53,
+0x53, 0xac, 0x52, 0xad,
+0xd2, 0x2d, 0x2d, 0xd2,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xaa, 0x55, 0x55, 0xaa,
+0xb4, 0x4b, 0xcb, 0x34,
+0x33, 0xcc, 0xac, 0x53,
+0x55, 0xaa, 0x32, 0xcd,
+0xcc, 0x33, 0xcd, 0x32,
+0xb3, 0x4c, 0x33, 0xcc,
+0xac, 0x53, 0x33, 0xcc,
+0xd4, 0x2b, 0x33, 0xcc,
+0xd2, 0x2d, 0xb3, 0x4c,
+0xcb, 0x34, 0x53, 0xac,
+0xca, 0x35, 0xab, 0x54,
+0xcd, 0x32, 0xcd, 0x32,
+0x4d, 0xb2, 0x4c, 0xb3,
+0xac, 0x53, 0x53, 0xac,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xd2, 0x2d, 0xad, 0x52,
+0x4b, 0xb4, 0x54, 0xab,
+0xaa, 0x55, 0xad, 0x52,
+0x55, 0xaa, 0xcc, 0x33,
+0xb3, 0x4c, 0xcd, 0x32,
+0xd3, 0x2c, 0x33, 0xcc,
+0xb4, 0x4b, 0x33, 0xcc,
+0xca, 0x35, 0xb3, 0x4c,
+0xd5, 0x2a, 0xd3, 0x2c,
+0xcd, 0x32, 0xcb, 0x34,
+0xcb, 0x34, 0x55, 0xaa,
+0x4c, 0xb3, 0xb2, 0x4d,
+0x2d, 0xd2, 0x2c, 0xd3,
+0xb4, 0x4b, 0x4b, 0xb4,
+0xca, 0x35, 0xb5, 0x4a,
+0x55, 0xaa, 0xca, 0x35,
+0x2d, 0xd2, 0xca, 0x35,
+0x33, 0xcc, 0x52, 0xad,
+0x2a, 0xd5, 0x32, 0xcd,
+0xac, 0x53, 0xcd, 0x32,
+0xab, 0x54, 0x33, 0xcc,
+0xb2, 0x4d, 0xb3, 0x4c,
+0xd3, 0x2c, 0x53, 0xac,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xca, 0x35, 0xad, 0x52,
+0x4b, 0xb4, 0xd4, 0x2b,
+0xad, 0x52, 0xad, 0x52,
+0x55, 0xaa, 0x54, 0xab,
+0xb2, 0x4d, 0xcd, 0x32,
+0x53, 0xac, 0x4c, 0xb3,
+0xb4, 0x4b, 0x33, 0xcc,
+0xd2, 0x2d, 0xab, 0x54,
+0xd5, 0x2a, 0x53, 0xac,
+0x4a, 0xb5, 0xcc, 0x33,
+0xcb, 0x34, 0xcd, 0x32,
+0xd5, 0x2a, 0xb3, 0x4c,
+0xad, 0x52, 0xd3, 0x2c,
+0xcb, 0x34, 0x4b, 0xb4,
+0xd2, 0x2d, 0xb5, 0x4a,
+0x4d, 0xb2, 0x4a, 0xb5,
+0x2a, 0xd5, 0x4a, 0xb5,
+0x34, 0xcb, 0xca, 0x35,
+0x2b, 0xd4, 0xaa, 0x55,
+0x2d, 0xd2, 0xb2, 0x4d,
+0x2b, 0xd4, 0x4c, 0xb3,
+0xaa, 0x55, 0xab, 0x54,
+0xcb, 0x34, 0xcb, 0x34,
+0x53, 0xac, 0xac, 0x53,
+0x4d, 0xb2, 0x32, 0xcd,
+0xd2, 0x2d, 0x4d, 0xb2,
+0xb4, 0x4b, 0x53, 0xac,
+0xaa, 0x55, 0xab, 0x54,
+0xd5, 0x2a, 0xcd, 0x32,
+0x53, 0xac, 0xcc, 0x33,
+0xab, 0x54, 0x33, 0xcc,
+0xd2, 0x2d, 0xb3, 0x4c,
+0xd3, 0x2c, 0x53, 0xac,
+0xca, 0x35, 0x2b, 0xd4,
+0xca, 0x35, 0xcd, 0x32,
+0x4d, 0xb2, 0xd4, 0x2b,
+0xad, 0x52, 0x53, 0xac,
+0x54, 0xab, 0x54, 0xab,
+0xd2, 0x2d, 0xad, 0x52,
+0x53, 0xac, 0x4c, 0xb3,
+0xaa, 0x55, 0x2d, 0xd2,
+0xd2, 0x2d, 0xcb, 0x34,
+0xb3, 0x4c, 0x55, 0xaa,
+0x4a, 0xb5, 0x32, 0xcd,
+0x34, 0xcb, 0xcc, 0x33,
+0xb5, 0x4a, 0xb3, 0x4c,
+0xcd, 0x32, 0xd3, 0x2c,
+0xd5, 0x2a, 0x4b, 0xb4,
+0xcc, 0x33, 0xd5, 0x2a,
+0x4b, 0xb4, 0x2a, 0xd5,
+0x2c, 0xd3, 0xb4, 0x4b,
+0x35, 0xca, 0x34, 0xcb,
+0x4a, 0xb5, 0xca, 0x35,
+0x4d, 0xb2, 0xd2, 0x2d,
+0x35, 0xca, 0x52, 0xad,
+0xb4, 0x4b, 0xd5, 0x2a,
+0xad, 0x52, 0xad, 0x52,
+0x35, 0xca, 0x54, 0xab,
+0xb2, 0x4d, 0xcd, 0x32,
+0x4d, 0xb2, 0x4c, 0xb3,
+0xb4, 0x4b, 0x53, 0xac,
+0xd4, 0x2b, 0xab, 0x54,
+0xd5, 0x2a, 0xad, 0x52,
+0x4b, 0xb4, 0xcc, 0x33,
+0xab, 0x54, 0xad, 0x52,
+0xd5, 0x2a, 0xb3, 0x4c,
+0xb3, 0x4c, 0xcd, 0x32,
+0xcb, 0x34, 0x2b, 0xd4,
+0xb4, 0x4b, 0xb3, 0x4c,
+0x4d, 0xb2, 0xb4, 0x4b,
+0xd5, 0x2a, 0x4b, 0xb4,
+0x54, 0xab, 0xca, 0x35,
+0x4b, 0xb4, 0xaa, 0x55,
+0x33, 0xcc, 0xb2, 0x4d,
+0x35, 0xca, 0x2c, 0xd3,
+0xac, 0x53, 0xcb, 0x34,
+0xcd, 0x32, 0x35, 0xca,
+0x52, 0xad, 0x52, 0xad,
+0x2c, 0xd3, 0x52, 0xad,
+0xb2, 0x4d, 0x2d, 0xd2,
+0xaa, 0x55, 0x4d, 0xb2,
+0xb4, 0x4b, 0xd5, 0x2a,
+0xb3, 0x4c, 0xab, 0x54,
+0x35, 0xca, 0x34, 0xcb,
+0x54, 0xab, 0xcc, 0x33,
+0x4d, 0xb2, 0xb2, 0x4d,
+0xd3, 0x2c, 0x53, 0xac,
+0xb4, 0x4b, 0x2b, 0xd4,
+0xca, 0x35, 0xad, 0x52,
+0x55, 0xaa, 0xd4, 0x2b,
+0xad, 0x52, 0xcd, 0x32,
+0x53, 0xac, 0x54, 0xab,
+0xb2, 0x4d, 0x33, 0xcc,
+0x52, 0xad, 0x4c, 0xb3,
+0xd4, 0x2b, 0x53, 0xac,
+0xd2, 0x2d, 0xab, 0x54,
+0xcb, 0x34, 0x4d, 0xb2,
+0x4a, 0xb5, 0xac, 0x53,
+0xad, 0x52, 0xcb, 0x34,
+0xd5, 0x2a, 0x4d, 0xb2,
+0x52, 0xad, 0xd2, 0x2d,
+0xab, 0x54, 0x4b, 0xb4,
+0xb2, 0x4d, 0xb5, 0x4a,
+0x53, 0xac, 0x4a, 0xb5,
+0x34, 0xcb, 0x2a, 0xd5,
+0x32, 0xcd, 0xaa, 0x55,
+0x2d, 0xd2, 0x54, 0xab,
+0x2c, 0xd3, 0x4c, 0xb3,
+0x4a, 0xb5, 0x2c, 0xd3,
+0xca, 0x35, 0xcb, 0x34,
+0xd5, 0x2a, 0xd5, 0x2a,
+0x4d, 0xb2, 0xd2, 0x2d,
+0x2b, 0xd4, 0x54, 0xab,
+0xb4, 0x4b, 0xb5, 0x4a,
+0x4b, 0xb4, 0xac, 0x53,
+0x35, 0xca, 0xaa, 0x55,
+0xd5, 0x2a, 0xcd, 0x32,
+0x2d, 0xd2, 0xcc, 0x33,
+0xab, 0x54, 0x53, 0xac,
+0xca, 0x35, 0xb3, 0x4c,
+0xd3, 0x2c, 0xcd, 0x32,
+0xcd, 0x32, 0x2b, 0xd4,
+0xaa, 0x55, 0x53, 0xac,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xd3, 0x2c, 0x2d, 0xd2,
+0x54, 0xab, 0x34, 0xcb,
+0xaa, 0x55, 0xb5, 0x4a,
+0x53, 0xac, 0xd2, 0x2d,
+0x33, 0xcc, 0x2a, 0xd5,
+0xb2, 0x4d, 0x35, 0xca,
+0x2c, 0xd3, 0x54, 0xab,
+0x34, 0xcb, 0x32, 0xcd,
+0x4a, 0xb5, 0xac, 0x53,
+0xad, 0x52, 0xd3, 0x2c,
+0xd5, 0x2a, 0x4d, 0xb2,
+0xd2, 0x2d, 0xd5, 0x2a,
+0xab, 0x54, 0x4b, 0xb4,
+0x2a, 0xd5, 0xb4, 0x4b,
+0x53, 0xac, 0xca, 0x35,
+0x4b, 0xb4, 0x2a, 0xd5,
+0x32, 0xcd, 0xb2, 0x4d,
+0x35, 0xca, 0x54, 0xab,
+0xac, 0x53, 0xcb, 0x34,
+0x4d, 0xb2, 0x2c, 0xd3,
+0x52, 0xad, 0x52, 0xad,
+0xd4, 0x2b, 0x55, 0xaa,
+0xb2, 0x4d, 0xad, 0x52,
+0x2b, 0xd4, 0x4c, 0xb3,
+0xb4, 0x4b, 0xad, 0x52,
+0xcb, 0x34, 0xab, 0x54,
+0xb5, 0x4a, 0xad, 0x52,
+0x4d, 0xb2, 0xcc, 0x33,
+0xb5, 0x4a, 0x4d, 0xb2,
+0xd4, 0x2b, 0xd3, 0x2c,
+0xb5, 0x4a, 0xab, 0x54,
+0xcb, 0x34, 0xd5, 0x2a,
+0x55, 0xaa, 0xac, 0x53,
+0x2d, 0xd2, 0xd4, 0x2b,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x4a, 0xb5, 0x34, 0xcb,
+0xaa, 0x55, 0xcb, 0x34,
+0x55, 0xaa, 0xd2, 0x2d,
+0x53, 0xac, 0xd2, 0x2d,
+0xb3, 0x4c, 0x35, 0xca,
+0xb2, 0x4d, 0x35, 0xca,
+0x34, 0xcb, 0x52, 0xad,
+0x34, 0xcb, 0xb2, 0x4d,
+0xad, 0x52, 0xad, 0x52,
+0xad, 0x52, 0x4b, 0xb4,
+0xb2, 0x4d, 0x4d, 0xb2,
+0x52, 0xad, 0x4a, 0xb5,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x32, 0xcd, 0xaa, 0x55,
+0x55, 0xaa, 0x4a, 0xb5,
+0x2c, 0xd3, 0xcc, 0x33,
+0x33, 0xcc, 0x2a, 0xd5,
+0xca, 0x35, 0x33, 0xcc,
+0x2c, 0xd3, 0xd4, 0x2b,
+0xcd, 0x32, 0x33, 0xcc,
+0x4a, 0xb5, 0x54, 0xab,
+0xcc, 0x33, 0xd3, 0x2c,
+0x55, 0xaa, 0x2c, 0xd3,
+0xcc, 0x33, 0xd5, 0x2a,
+0xd3, 0x2c, 0x35, 0xca,
+0x2c, 0xd3, 0x34, 0xcb,
+0x2a, 0xd5, 0x32, 0xcd,
+0x4a, 0xb5, 0xd2, 0x2d,
+0xab, 0x54, 0xd3, 0x2c,
+0xb5, 0x4a, 0xb5, 0x4a,
+0xd3, 0x2c, 0xd5, 0x2a,
+0x35, 0xca, 0x2a, 0xd5,
+0x2a, 0xd5, 0xd4, 0x2b,
+0x2d, 0xd2, 0xd4, 0x2b,
+0x4b, 0xb4, 0x54, 0xab,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x55, 0xaa, 0xcc, 0x33,
+0x55, 0xaa, 0xca, 0x35,
+0xd3, 0x2c, 0xd3, 0x2c,
+0x33, 0xcc, 0x32, 0xcd,
+0xca, 0x35, 0x35, 0xca,
+0xac, 0x53, 0xd3, 0x2c,
+0x2d, 0xd2, 0x32, 0xcd,
+0xd2, 0x2d, 0x55, 0xaa,
+0xaa, 0x55, 0x53, 0xac,
+0x2a, 0xd5, 0xcc, 0x33,
+0xd3, 0x2c, 0xcd, 0x32,
+0xcb, 0x34, 0x33, 0xcc,
+0xaa, 0x55, 0xb3, 0x4c,
+0xcd, 0x32, 0xd3, 0x2c,
+0xd3, 0x2c, 0x4b, 0xb4,
+0xcc, 0x33, 0x35, 0xca,
+0x4a, 0xb5, 0x2a, 0xd5,
+0x2c, 0xd3, 0xd2, 0x2d,
+0x35, 0xca, 0x34, 0xcb,
+0xaa, 0x55, 0xd5, 0x2a,
+0x4d, 0xb2, 0xd2, 0x2d,
+0x33, 0xcc, 0x54, 0xab,
+0xb4, 0x4b, 0x35, 0xca,
+0x4c, 0xb3, 0xac, 0x53,
+0x35, 0xca, 0x32, 0xcd,
+0xd4, 0x2b, 0xcd, 0x32,
+0xad, 0x52, 0xb3, 0x4c,
+0xab, 0x54, 0x53, 0xac,
+0xd2, 0x2d, 0xab, 0x54,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x4a, 0xb5, 0x2c, 0xd3,
+0xaa, 0x55, 0xcb, 0x34,
+0xd5, 0x2a, 0xd5, 0x2a,
+0x53, 0xac, 0xd2, 0x2d,
+0x2b, 0xd4, 0x34, 0xcb,
+0xb2, 0x4d, 0xb5, 0x4a,
+0x4b, 0xb4, 0x52, 0xad,
+0x34, 0xcb, 0xaa, 0x55,
+0xb5, 0x4a, 0xad, 0x52,
+0x2d, 0xd2, 0xcc, 0x33,
+0xb5, 0x4a, 0x4d, 0xb2,
+0xca, 0x35, 0xd3, 0x2c,
+0xb5, 0x4a, 0xcb, 0x34,
+0xcd, 0x32, 0xd5, 0x2a,
+0x55, 0xaa, 0x52, 0xad,
+0x2c, 0xd3, 0xd4, 0x2b,
+0xb3, 0x4c, 0x2d, 0xd2,
+0x4a, 0xb5, 0x34, 0xcb,
+0xb4, 0x4b, 0xd5, 0x2a,
+0x55, 0xaa, 0xb2, 0x4d,
+0x35, 0xca, 0xd4, 0x2b,
+0xb3, 0x4c, 0xcb, 0x34,
+0x4d, 0xb2, 0x34, 0xcb,
+0x54, 0xab, 0x52, 0xad,
+0x54, 0xab, 0xb2, 0x4d,
+0xb3, 0x4c, 0xad, 0x52,
+0xb3, 0x4c, 0x2b, 0xd4,
+0xb4, 0x4b, 0x2d, 0xd2,
+0x54, 0xab, 0xb4, 0x4b,
+0xb5, 0x4a, 0xb5, 0x4a,
+0x53, 0xac, 0xca, 0x35,
+0x35, 0xca, 0x2a, 0xd5,
+0x32, 0xcd, 0xd2, 0x2d,
+0x2d, 0xd2, 0x54, 0xab,
+0xac, 0x53, 0x55, 0xaa,
+0x4a, 0xb5, 0x2c, 0xd3,
+0x32, 0xcd, 0xcc, 0x33,
+0xd5, 0x2a, 0x55, 0xaa,
+0xcc, 0x33, 0xd3, 0x2c,
+0x2b, 0xd4, 0x2c, 0xd3,
+0xcc, 0x33, 0xb5, 0x4a,
+0xcb, 0x34, 0x35, 0xca,
+0x2c, 0xd3, 0xaa, 0x55,
+0x2d, 0xd2, 0x32, 0xcd,
+0x2a, 0xd5, 0x4c, 0xb3,
+0xaa, 0x55, 0xd3, 0x2c,
+0xcb, 0x34, 0xcb, 0x34,
+0xd3, 0x2c, 0xb5, 0x4a,
+0x4d, 0xb2, 0x32, 0xcd,
+0x2a, 0xd5, 0x4a, 0xb5,
+0xb4, 0x4b, 0xd3, 0x2c,
+0x2b, 0xd4, 0xaa, 0x55,
+0xd5, 0x2a, 0xb5, 0x4a,
+0x2b, 0xd4, 0xcc, 0x33,
+0x2b, 0xd4, 0xaa, 0x55,
+0xcb, 0x34, 0xb3, 0x4c,
+0x2b, 0xd4, 0xac, 0x53,
+0xcd, 0x32, 0xab, 0x54,
+0xcb, 0x34, 0x4d, 0xb2,
+0x4c, 0xb3, 0xac, 0x53,
+0xad, 0x52, 0x2b, 0xd4,
+0xd4, 0x2b, 0x4d, 0xb2,
+0x52, 0xad, 0xb4, 0x4b,
+0xab, 0x54, 0x4b, 0xb4,
+0x52, 0xad, 0xaa, 0x55,
+0x53, 0xac, 0x4a, 0xb5,
+0x32, 0xcd, 0x2c, 0xd3,
+0x32, 0xcd, 0x4a, 0xb5,
+0xcc, 0x33, 0x55, 0xaa,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x2c, 0xd3, 0x2c, 0xd3,
+0x2a, 0xd5, 0x34, 0xcb,
+0xca, 0x35, 0xd5, 0x2a,
+0x4b, 0xb4, 0xd2, 0x2d,
+0x2d, 0xd2, 0xb4, 0x4b,
+0xb5, 0x4a, 0x55, 0xaa,
+0x4a, 0xb5, 0xca, 0x35,
+0x35, 0xca, 0xcc, 0x33,
+0x35, 0xca, 0xd2, 0x2d,
+0xcd, 0x32, 0xd3, 0x2c,
+0xad, 0x52, 0x55, 0xaa,
+0xcc, 0x33, 0x55, 0xaa,
+0x32, 0xcd, 0x2c, 0xd3,
+0x2c, 0xd3, 0x4c, 0xb3,
+0xcc, 0x33, 0x35, 0xca,
+0xca, 0x35, 0x2b, 0xd4,
+0x2c, 0xd3, 0xd2, 0x2d,
+0x4d, 0xb2, 0x34, 0xcb,
+0xaa, 0x55, 0x55, 0xaa,
+0x54, 0xab, 0xd2, 0x2d,
+0x33, 0xcc, 0xac, 0x53,
+0xb3, 0x4c, 0x35, 0xca,
+0xcc, 0x33, 0x2d, 0xd2,
+0x34, 0xcb, 0x32, 0xcd,
+0xac, 0x53, 0xb5, 0x4a,
+0xad, 0x52, 0x33, 0xcc,
+0x32, 0xcd, 0x4a, 0xb5,
+0xd2, 0x2d, 0x53, 0xac,
+0x2c, 0xd3, 0x4a, 0xb5,
+0xca, 0x35, 0x2d, 0xd2,
+0x2a, 0xd5, 0xca, 0x35,
+0xad, 0x52, 0xd5, 0x2a,
+0x2b, 0xd4, 0x52, 0xad,
+0x32, 0xcd, 0xb4, 0x4b,
+0xab, 0x54, 0x4d, 0xb2,
+0x4c, 0xb3, 0xaa, 0x55,
+0xb3, 0x4c, 0x2b, 0xd4,
+0x34, 0xcb, 0x2c, 0xd3,
+0x54, 0xab, 0xb4, 0x4b,
+0xcd, 0x32, 0xb5, 0x4a,
+0x53, 0xac, 0x4a, 0xb5,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x32, 0xcd, 0x2a, 0xd5,
+0x2a, 0xd5, 0x54, 0xab,
+0x2c, 0xd3, 0xd4, 0x2b,
+0x4b, 0xb4, 0x2c, 0xd3,
+0x4a, 0xb5, 0xb4, 0x4b,
+0xd5, 0x2a, 0xd5, 0x2a,
+0x55, 0xaa, 0xca, 0x35,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x33, 0xcc, 0xb2, 0x4d,
+0x4b, 0xb4, 0x34, 0xcb,
+0xac, 0x53, 0xab, 0x54,
+0x55, 0xaa, 0x32, 0xcd,
+0x52, 0xad, 0xcc, 0x33,
+0xb3, 0x4c, 0x53, 0xac,
+0xd2, 0x2d, 0x33, 0xcc,
+0xd4, 0x2b, 0x4d, 0xb2,
+0xca, 0x35, 0xb3, 0x4c,
+0xab, 0x54, 0xcb, 0x34,
+0xcd, 0x32, 0xab, 0x54,
+0x53, 0xac, 0x52, 0xad,
+0x4c, 0xb3, 0x2c, 0xd3,
+0xb2, 0x4d, 0x2d, 0xd2,
+0xd4, 0x2b, 0x55, 0xaa,
+0xb4, 0x4b, 0xb5, 0x4a,
+0x2b, 0xd4, 0xac, 0x53,
+0x35, 0xca, 0xaa, 0x55,
+0xcb, 0x34, 0xcd, 0x32,
+0x2d, 0xd2, 0xac, 0x53,
+0xad, 0x52, 0x53, 0xac,
+0xca, 0x35, 0x4d, 0xb2,
+0xd2, 0x2d, 0xcd, 0x32,
+0xad, 0x52, 0x4b, 0xb4,
+0xaa, 0x55, 0x53, 0xac,
+0x52, 0xad, 0xca, 0x35,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x32, 0xcd, 0x32, 0xcd,
+0xaa, 0x55, 0x4b, 0xb4,
+0xac, 0x53, 0xd3, 0x2c,
+0x53, 0xac, 0x2a, 0xd5,
+0xd2, 0x2d, 0x35, 0xca,
+0x32, 0xcd, 0x54, 0xab,
+0x2a, 0xd5, 0x52, 0xad,
+0x4c, 0xb3, 0xcc, 0x33,
+0xab, 0x54, 0x2d, 0xd2,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xb3, 0x4c, 0xb5, 0x4a,
+0xcb, 0x34, 0x2b, 0xd4,
+0x34, 0xcb, 0xaa, 0x55,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x2d, 0xd2, 0x4c, 0xb3,
+0x54, 0xab, 0x4a, 0xb5,
+0xca, 0x35, 0xab, 0x54,
+0x33, 0xcc, 0xca, 0x35,
+0x4d, 0xb2, 0x2c, 0xd3,
+0x2c, 0xd3, 0x52, 0xad,
+0xd4, 0x2b, 0x35, 0xca,
+0xaa, 0x55, 0xad, 0x52,
+0x2b, 0xd4, 0xd2, 0x2d,
+0xb3, 0x4c, 0xad, 0x52,
+0xab, 0x54, 0x35, 0xca,
+0xb4, 0x4b, 0xad, 0x52,
+0x33, 0xcc, 0xb2, 0x4d,
+0xb5, 0x4a, 0x2d, 0xd2,
+0xac, 0x53, 0xcb, 0x34,
+0xb5, 0x4a, 0x35, 0xca,
+0x52, 0xad, 0xd2, 0x2d,
+0x35, 0xca, 0x52, 0xad,
+0xb2, 0x4d, 0xd5, 0x2a,
+0xad, 0x52, 0x4d, 0xb2,
+0x34, 0xcb, 0x54, 0xab,
+0xb2, 0x4d, 0xab, 0x54,
+0x4d, 0xb2, 0x4c, 0xb3,
+0x54, 0xab, 0x4c, 0xb3,
+0xd4, 0x2b, 0xab, 0x54,
+0xd3, 0x2c, 0xab, 0x54,
+0x4b, 0xb4, 0x2c, 0xd3,
+0x4a, 0xb5, 0xac, 0x53,
+0xd5, 0x2a, 0xd5, 0x2a,
+0xd5, 0x2a, 0xcd, 0x32,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xab, 0x54, 0xb3, 0x4c,
+0x4b, 0xb4, 0xb4, 0x4b,
+0xd3, 0x2c, 0xab, 0x54,
+0x55, 0xaa, 0x2a, 0xd5,
+0x4a, 0xb5, 0xcc, 0x33,
+0x33, 0xcc, 0xd4, 0x2b,
+0xd5, 0x2a, 0x33, 0xcc,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xcb, 0x34, 0x33, 0xcc,
+0x54, 0xab, 0xb4, 0x4b,
+0xcd, 0x32, 0xb3, 0x4c,
+0x53, 0xac, 0x4a, 0xb5,
+0xcc, 0x33, 0x2b, 0xd4,
+0x32, 0xcd, 0x2a, 0xd5,
+0x4c, 0xb3, 0x54, 0xab,
+0x2c, 0xd3, 0x34, 0xcb,
+0x54, 0xab, 0x2c, 0xd3,
+0x4a, 0xb5, 0xb2, 0x4d,
+0xd3, 0x2c, 0xd5, 0x2a,
+0xb5, 0x4a, 0x2b, 0xd4,
+0x2a, 0xd5, 0xd4, 0x2b,
+0x55, 0xaa, 0xd4, 0x2b,
+0x4b, 0xb4, 0xd4, 0x2b,
+0x53, 0xac, 0xb4, 0x4b,
+0x55, 0xaa, 0x34, 0xcb,
+0x52, 0xad, 0xca, 0x35,
+0x53, 0xac, 0x52, 0xad,
+0x32, 0xcd, 0x32, 0xcd,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xac, 0x53, 0x53, 0xac,
+0xb4, 0x4b, 0x2b, 0xd4,
+0xd2, 0x2d, 0xad, 0x52,
+0x55, 0xaa, 0x54, 0xab,
+0xaa, 0x55, 0xcd, 0x32,
+0x53, 0xac, 0xcc, 0x33,
+0xb3, 0x4c, 0x33, 0xcc,
+0xd2, 0x2d, 0x33, 0xcc,
+0xd4, 0x2b, 0x53, 0xac,
+0xca, 0x35, 0xb3, 0x4c,
+0xcb, 0x34, 0xcd, 0x32,
+0xcd, 0x32, 0xab, 0x54,
+0xad, 0x52, 0x53, 0xac,
+0x4c, 0xb3, 0x4c, 0xb3,
+0xd2, 0x2d, 0x2d, 0xd2,
+0xd4, 0x2b, 0x4b, 0xb4,
+0xaa, 0x55, 0xb5, 0x4a,
+0x4b, 0xb4, 0xca, 0x35,
+0x33, 0xcc, 0xaa, 0x55,
+0x35, 0xca, 0x32, 0xcd,
+0x2c, 0xd3, 0xcc, 0x33,
+0xad, 0x52, 0x33, 0xcc,
+0xca, 0x35, 0x53, 0xac,
+0xd2, 0x2d, 0xd3, 0x2c,
+0xcd, 0x32, 0x4d, 0xb2,
+0xca, 0x35, 0x55, 0xaa,
+0xac, 0x53, 0xcb, 0x34,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x52, 0xad, 0x52, 0xad,
+0xca, 0x35, 0x55, 0xaa,
+0xb2, 0x4d, 0xcd, 0x32,
+0x2d, 0xd2, 0x4c, 0xb3,
+0xb4, 0x4b, 0x53, 0xac,
+0xca, 0x35, 0xab, 0x54,
+0xd5, 0x2a, 0xcd, 0x32,
+0x4d, 0xb2, 0xcc, 0x33,
+0xab, 0x54, 0x53, 0xac,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xd3, 0x2c, 0xad, 0x52,
+0xcb, 0x34, 0x2b, 0xd4,
+0xaa, 0x55, 0xad, 0x52,
+0x4d, 0xb2, 0xd4, 0x2b,
+0xb3, 0x4c, 0x4d, 0xb2,
+0x54, 0xab, 0x34, 0xcb,
+0xb4, 0x4b, 0xab, 0x54,
+0x53, 0xac, 0xb2, 0x4d,
+0x55, 0xaa, 0x2c, 0xd3,
+0xb2, 0x4d, 0xcb, 0x34,
+0xd3, 0x2c, 0x55, 0xaa,
+0x54, 0xab, 0x32, 0xcd,
+0x2a, 0xd5, 0xac, 0x53,
+0xb3, 0x4c, 0xd3, 0x2c,
+0xcb, 0x34, 0x2d, 0xd2,
+0xd4, 0x2b, 0xb5, 0x4a,
+0xad, 0x52, 0xb5, 0x4a,
+0x2b, 0xd4, 0x4a, 0xb5,
+0x32, 0xcd, 0xaa, 0x55,
+0x2b, 0xd4, 0x4a, 0xb5,
+0x2c, 0xd3, 0xac, 0x53,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xca, 0x35, 0xad, 0x52,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xad, 0x52, 0xad, 0x52,
+0x4b, 0xb4, 0x54, 0xab,
+0xb2, 0x4d, 0xad, 0x52,
+0x55, 0xaa, 0x4c, 0xb3,
+0xb4, 0x4b, 0xcd, 0x32,
+0xd3, 0x2c, 0xab, 0x54,
+0xb5, 0x4a, 0x33, 0xcc,
+0x4a, 0xb5, 0xcc, 0x33,
+0xd5, 0x2a, 0xd3, 0x2c,
+0xd5, 0x2a, 0xd3, 0x2c,
+0xcb, 0x34, 0xd5, 0x2a,
+0xcb, 0x34, 0xb5, 0x4a,
+0x2d, 0xd2, 0xb4, 0x4b,
+0x2d, 0xd2, 0x4a, 0xb5,
+0x4a, 0xb5, 0x4a, 0xb5,
+0x2a, 0xd5, 0xca, 0x35,
+0x35, 0xca, 0xca, 0x35,
+0x2b, 0xd4, 0xd2, 0x2d,
+0x2d, 0xd2, 0xb2, 0x4d,
+0xab, 0x54, 0x55, 0xaa,
+0xaa, 0x55, 0xab, 0x54,
+0x33, 0xcc, 0xcc, 0x33,
+0x53, 0xac, 0x2c, 0xd3,
+0xcc, 0x33, 0x33, 0xcc,
+0xd2, 0x2d, 0x35, 0xca,
+0xcc, 0x33, 0x53, 0xac,
+0x2a, 0xd5, 0x32, 0xcd,
+0xcc, 0x33, 0xcd, 0x32,
+0xab, 0x54, 0x33, 0xcc,
+0xac, 0x53, 0xb3, 0x4c,
+0xd3, 0x2c, 0x33, 0xcc,
+0xd2, 0x2d, 0x2b, 0xd4,
+0xca, 0x35, 0x53, 0xac,
+0x4a, 0xb5, 0xd4, 0x2b,
+0xcd, 0x32, 0xcd, 0x32,
+0x55, 0xaa, 0x54, 0xab,
+0xac, 0x53, 0xd3, 0x2c,
+0x53, 0xac, 0x2c, 0xd3,
+0xd2, 0x2d, 0x35, 0xca,
+0xd2, 0x2d, 0x55, 0xaa,
+0x2a, 0xd5, 0x52, 0xad,
+0x2a, 0xd5, 0xcc, 0x33,
+0xab, 0x54, 0xcd, 0x32,
+0xcb, 0x34, 0xb3, 0x4c,
+0xb3, 0x4c, 0xb3, 0x4c,
+0xcd, 0x32, 0x2b, 0xd4,
+0xd4, 0x2b, 0x4b, 0xb4,
+0x4c, 0xb3, 0xb4, 0x4b,
+0x4b, 0xb4, 0x2a, 0xd5,
+0x54, 0xab, 0xaa, 0x55,
+0x35, 0xca, 0xb4, 0x4b,
+0x33, 0xcc, 0xcc, 0x33,
+0x4d, 0xb2, 0x2a, 0xd5,
+0xcc, 0x33, 0x53, 0xac,
+0x34, 0xcb, 0x34, 0xcb,
+0xcc, 0x33, 0xad, 0x52,
+0x4d, 0xb2, 0x32, 0xcd,
+0xac, 0x53, 0x4d, 0xb2,
+0xb4, 0x4b, 0x33, 0xcc,
+0xb2, 0x4d, 0xab, 0x54,
+0xd5, 0x2a, 0x53, 0xac,
+0x54, 0xab, 0xcc, 0x33,
+0xcb, 0x34, 0xad, 0x52,
+0xd3, 0x2c, 0xb3, 0x4c,
+0xad, 0x52, 0x2d, 0xd2,
+0xca, 0x35, 0x4b, 0xb4,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x4d, 0xb2, 0x4a, 0xb5,
+0x34, 0xcb, 0x54, 0xab,
+0x34, 0xcb, 0xaa, 0x55,
+0x4d, 0xb2, 0xac, 0x53,
+0x2d, 0xd2, 0x4c, 0xb3,
+0xd4, 0x2b, 0x4d, 0xb2,
+0xca, 0x35, 0xab, 0x54,
+0xab, 0x54, 0xcb, 0x34,
+0x4d, 0xb2, 0xac, 0x53,
+0x53, 0xac, 0x52, 0xad,
+0xd4, 0x2b, 0x2d, 0xd2,
+0xb2, 0x4d, 0xad, 0x52,
+0xab, 0x54, 0x55, 0xaa,
+0xb4, 0x4b, 0xad, 0x52,
+0x33, 0xcc, 0xac, 0x53,
+0xb5, 0x4a, 0x2d, 0xd2,
+0xcc, 0x33, 0xcd, 0x32,
+0xb5, 0x4a, 0x35, 0xca,
+0xac, 0x53, 0xd3, 0x2c,
+0x35, 0xca, 0x32, 0xcd,
+0xd2, 0x2d, 0xd5, 0x2a,
+0xad, 0x52, 0x53, 0xac,
+0x2a, 0xd5, 0x54, 0xab,
+0xd2, 0x2d, 0xcd, 0x32,
+0x4b, 0xb4, 0x4c, 0xb3,
+0xaa, 0x55, 0xb3, 0x4c,
+0xd5, 0x2a, 0xcb, 0x34,
+0xd3, 0x2c, 0xcb, 0x34,
+0x4b, 0xb4, 0x32, 0xcd,
+0x4a, 0xb5, 0xb2, 0x4d,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xb5, 0x4a, 0xcb, 0x34,
+0xd5, 0x2a, 0xd5, 0x2a,
+0x55, 0xaa, 0xd2, 0x2d,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xb3, 0x4c, 0xb5, 0x4a,
+0x4b, 0xb4, 0x34, 0xcb,
+0x34, 0xcb, 0xaa, 0x55,
+0x55, 0xaa, 0xb2, 0x4d,
+0x2d, 0xd2, 0xcc, 0x33,
+0xb3, 0x4c, 0x4b, 0xb4,
+0xca, 0x35, 0x33, 0xcc,
+0x54, 0xab, 0xca, 0x35,
+0xcd, 0x32, 0xb3, 0x4c,
+0x33, 0xcc, 0x52, 0xad,
+0xcc, 0x33, 0x2b, 0xd4,
+0xac, 0x53, 0x2d, 0xd2,
+0x4c, 0xb3, 0x34, 0xcb,
+0xb2, 0x4d, 0x35, 0xca,
+0x54, 0xab, 0x52, 0xad,
+0x34, 0xcb, 0xb2, 0x4d,
+0xb3, 0x4c, 0xad, 0x52,
+0xad, 0x52, 0x2b, 0xd4,
+0xb4, 0x4b, 0x4d, 0xb2,
+0x52, 0xad, 0xb4, 0x4b,
+0xb5, 0x4a, 0x4b, 0xb4,
+0x52, 0xad, 0xca, 0x35,
+0x55, 0xaa, 0x4a, 0xb5,
+0x32, 0xcd, 0xd2, 0x2d,
+0x33, 0xcc, 0x4a, 0xb5,
+0xac, 0x53, 0x35, 0xca,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x32, 0xcd, 0x32, 0xcd,
+0x2a, 0xd5, 0x54, 0xab,
+0xac, 0x53, 0xd3, 0x2c,
+0x4b, 0xb4, 0x2c, 0xd3,
+0xd2, 0x2d, 0xb5, 0x4a,
+0xd5, 0x2a, 0x55, 0xaa,
+0x2a, 0xd5, 0xca, 0x35,
+0x2b, 0xd4, 0xcc, 0x33,
+0x2b, 0xd4, 0xb2, 0x4d,
+0xcb, 0x34, 0xb3, 0x4c,
+0xab, 0x54, 0xab, 0x54,
+0xcd, 0x32, 0xab, 0x54,
+0x53, 0xac, 0x4c, 0xb3,
+0x4c, 0xb3, 0x2c, 0xd3,
+0xd2, 0x2d, 0x2b, 0xd4,
+0xd4, 0x2b, 0x55, 0xaa,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x2b, 0xd4, 0xcc, 0x33,
+0x55, 0xaa, 0xaa, 0x55,
+0xcb, 0x34, 0xd3, 0x2c,
+0x33, 0xcc, 0xac, 0x53,
+0xcd, 0x32, 0x35, 0xca,
+0xcc, 0x33, 0x4d, 0xb2,
+0x2c, 0xd3, 0x32, 0xcd,
+0xac, 0x53, 0x2b, 0xd4,
+0xaa, 0x55, 0x33, 0xcc,
+0x52, 0xad, 0xd4, 0x2b,
+0xd3, 0x2c, 0x53, 0xac,
+0x52, 0xad, 0x34, 0xcb,
+0xca, 0x35, 0x4d, 0xb2,
+0x52, 0xad, 0xd2, 0x2d,
+0xad, 0x52, 0x4b, 0xb4,
+0xb2, 0x4d, 0x55, 0xaa,
+0x52, 0xad, 0x4a, 0xb5,
+0x34, 0xcb, 0x4c, 0xb3,
+0x32, 0xcd, 0xaa, 0x55,
+0xcd, 0x32, 0x4b, 0xb4,
+0x2c, 0xd3, 0x4c, 0xb3,
+0x4c, 0xb3, 0x2a, 0xd5,
+0xca, 0x35, 0x2b, 0xd4,
+0x34, 0xcb, 0xd4, 0x2b,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x4d, 0xb2, 0x54, 0xab,
+0x54, 0xab, 0x4a, 0xb5,
+0x54, 0xab, 0xac, 0x53,
+0x33, 0xcc, 0xaa, 0x55,
+0xd3, 0x2c, 0x2d, 0xd2,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xaa, 0x55, 0x35, 0xca,
+0xca, 0x35, 0xd5, 0x2a,
+0x33, 0xcc, 0xd2, 0x2d,
+0x2d, 0xd2, 0x34, 0xcb,
+0xac, 0x53, 0x55, 0xaa,
+0x4a, 0xb5, 0x32, 0xcd,
+0x32, 0xcd, 0xcc, 0x33,
+0xb5, 0x4a, 0x53, 0xac,
+0xcc, 0x33, 0xd3, 0x2c,
+0xd5, 0x2a, 0x2d, 0xd2,
+0xcc, 0x33, 0xd5, 0x2a,
+0xab, 0x54, 0x35, 0xca,
+0x2c, 0xd3, 0xb4, 0x4b,
+0x33, 0xcc, 0x32, 0xcd,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xac, 0x53, 0xd3, 0x2c,
+0x35, 0xca, 0x34, 0xcb,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x4d, 0xb2, 0x52, 0xad,
+0x2a, 0xd5, 0x54, 0xab,
+0xb4, 0x4b, 0xcd, 0x32,
+0x4b, 0xb4, 0xac, 0x53,
+0xb5, 0x4a, 0xb3, 0x4c,
+0xd5, 0x2a, 0xcd, 0x32,
+0xd5, 0x2a, 0xcb, 0x34,
+0xab, 0x54, 0xd3, 0x2c,
+0x4b, 0xb4, 0xb2, 0x4d,
+0xd3, 0x2c, 0xb5, 0x4a,
+0xb5, 0x4a, 0x2b, 0xd4,
+0x2a, 0xd5, 0xca, 0x35,
+0x55, 0xaa, 0xd4, 0x2b,
+0x2b, 0xd4, 0xd2, 0x2d,
+0x53, 0xac, 0xb4, 0x4b,
+0xab, 0x54, 0x35, 0xca,
+0x52, 0xad, 0xaa, 0x55,
+0x33, 0xcc, 0x52, 0xad,
+0x32, 0xcd, 0x2c, 0xd3,
+0xac, 0x53, 0x4d, 0xb2,
+0xcc, 0x33, 0x35, 0xca,
+0xb2, 0x4d, 0x2b, 0xd4,
+0x2c, 0xd3, 0x52, 0xad,
+0x54, 0xab, 0x34, 0xcb,
+0xaa, 0x55, 0xad, 0x52,
+0x53, 0xac, 0xd2, 0x2d,
+0xb3, 0x4c, 0x2d, 0xd2,
+0xb2, 0x4d, 0x35, 0xca,
+0xb4, 0x4b, 0x55, 0xaa,
+0x34, 0xcb, 0xb2, 0x4d,
+0x35, 0xca, 0xac, 0x53,
+0xad, 0x52, 0xcb, 0x34,
+0xcd, 0x32, 0x4d, 0xb2,
+0x52, 0xad, 0x52, 0xad,
+0xac, 0x53, 0x4b, 0xb4,
+0xb2, 0x4d, 0x2d, 0xd2,
+0x52, 0xad, 0x4a, 0xb5,
+0xb4, 0x4b, 0x55, 0xaa,
+0x32, 0xcd, 0xaa, 0x55,
+0x35, 0xca, 0x4c, 0xb3,
+0x2c, 0xd3, 0xcc, 0x33,
+0xcd, 0x32, 0x2b, 0xd4,
+0xca, 0x35, 0x53, 0xac,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xcd, 0x32, 0x2d, 0xd2,
+0x54, 0xab, 0x54, 0xab,
+0xac, 0x53, 0xb5, 0x4a,
+0x53, 0xac, 0x2c, 0xd3,
+0x32, 0xcd, 0x2a, 0xd5,
+0xd2, 0x2d, 0x55, 0xaa,
+0x2c, 0xd3, 0x54, 0xab,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x4a, 0xb5, 0xcc, 0x33,
+0xcb, 0x34, 0xd5, 0x2a,
+0xd5, 0x2a, 0xb3, 0x4c,
+0x2d, 0xd2, 0xd4, 0x2b,
+0xcb, 0x34, 0x4b, 0xb4,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x4d, 0xb2, 0xca, 0x35,
+0x55, 0xaa, 0x4a, 0xb5,
+0x34, 0xcb, 0xd2, 0x2d,
+0x33, 0xcc, 0xaa, 0x55,
+0xad, 0x52, 0x35, 0xca,
+0x2c, 0xd3, 0x4c, 0xb3,
+0x32, 0xcd, 0x32, 0xcd,
+0xca, 0x35, 0x4b, 0xb4,
+0xac, 0x53, 0xd3, 0x2c,
+0x4d, 0xb2, 0x2a, 0xd5,
+0xd2, 0x2d, 0x55, 0xaa,
+0x34, 0xcb, 0x54, 0xab,
+0x2a, 0xd5, 0xac, 0x53,
+0x4d, 0xb2, 0xcc, 0x33,
+0xcb, 0x34, 0x4d, 0xb2,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xad, 0x52, 0xab, 0x54,
+0xcb, 0x34, 0x4b, 0xb4,
+0x52, 0xad, 0xac, 0x53,
+0x4d, 0xb2, 0x4a, 0xb5,
+0xd2, 0x2d, 0x4d, 0xb2,
+0x34, 0xcb, 0x4a, 0xb5,
+0xaa, 0x55, 0xab, 0x54,
+0x2d, 0xd2, 0xca, 0x35,
+0x53, 0xac, 0x4c, 0xb3,
+0x2a, 0xd5, 0x32, 0xcd,
+0xd2, 0x2d, 0xcb, 0x34,
+0xab, 0x54, 0x53, 0xac,
+0x4a, 0xb5, 0xb2, 0x4d,
+0xd3, 0x2c, 0xcd, 0x32,
+0xb5, 0x4a, 0x2b, 0xd4,
+0xaa, 0x55, 0xd3, 0x2c,
+0x55, 0xaa, 0xd4, 0x2b,
+0xd3, 0x2c, 0xd5, 0x2a,
+0x53, 0xac, 0x34, 0xcb,
+0x2a, 0xd5, 0x34, 0xcb,
+0x52, 0xad, 0xd2, 0x2d,
+0x4b, 0xb4, 0x52, 0xad,
+0xb2, 0x4d, 0xb5, 0x4a,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x34, 0xcb, 0xca, 0x35,
+0xb5, 0x4a, 0xab, 0x54,
+0x2d, 0xd2, 0xd2, 0x2d,
+0x55, 0xaa, 0x4c, 0xb3,
+0xaa, 0x55, 0xd5, 0x2a,
+0xd3, 0x2c, 0xcb, 0x34,
+0x33, 0xcc, 0x34, 0xcb,
+0x4a, 0xb5, 0x32, 0xcd,
+0x4c, 0xb3, 0xd2, 0x2d,
+0xb5, 0x4a, 0x33, 0xcc,
+0xb4, 0x4b, 0xd5, 0x2a,
+0xd5, 0x2a, 0xb3, 0x4c,
+0x35, 0xca, 0xd4, 0x2b,
+0xcb, 0x34, 0xcb, 0x34,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x4d, 0xb2, 0x52, 0xad,
+0x54, 0xab, 0x4a, 0xb5,
+0xb4, 0x4b, 0xad, 0x52,
+0x33, 0xcc, 0xaa, 0x55,
+0xb5, 0x4a, 0x2d, 0xd2,
+0x2c, 0xd3, 0xcc, 0x33,
+0xb5, 0x4a, 0x35, 0xca,
+0xca, 0x35, 0xd3, 0x2c,
+0x35, 0xca, 0xd2, 0x2d,
+0xcd, 0x32, 0xd5, 0x2a,
+0xad, 0x52, 0x55, 0xaa,
+0x2c, 0xd3, 0x54, 0xab,
+0x32, 0xcd, 0x2c, 0xd3,
+0x4a, 0xb5, 0x4c, 0xb3,
+0xcc, 0x33, 0xd5, 0x2a,
+0xd5, 0x2a, 0x2b, 0xd4,
+0x2c, 0xd3, 0xd4, 0x2b,
+0x4b, 0xb4, 0x34, 0xcb,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x55, 0xaa, 0xd2, 0x2d,
+0x55, 0xaa, 0xca, 0x35,
+0xb3, 0x4c, 0xd5, 0x2a,
+0x33, 0xcc, 0x32, 0xcd,
+0x34, 0xcb, 0x34, 0xcb,
+0xac, 0x53, 0xb3, 0x4c,
+0x4d, 0xb2, 0x32, 0xcd,
+0xd2, 0x2d, 0x4b, 0xb4,
+0xb4, 0x4b, 0x53, 0xac,
+0x4a, 0xb5, 0xaa, 0x55,
+0xd5, 0x2a, 0xcd, 0x32,
+0x35, 0xca, 0xcc, 0x33,
+0xab, 0x54, 0xd3, 0x2c,
+0xcd, 0x32, 0xb3, 0x4c,
+0xd3, 0x2c, 0x55, 0xaa,
+0xcc, 0x33, 0x2b, 0xd4,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xcb, 0x34, 0x35, 0xca,
+0x54, 0xab, 0xb4, 0x4b,
+0x2d, 0xd2, 0xb2, 0x4d,
+0x53, 0xac, 0x4a, 0xb5,
+0xaa, 0x55, 0x2b, 0xd4,
+0x32, 0xcd, 0xca, 0x35,
+0x53, 0xac, 0x54, 0xab,
+0x2c, 0xd3, 0x32, 0xcd,
+0x52, 0xad, 0x2c, 0xd3,
+0xaa, 0x55, 0x53, 0xac,
+0xd2, 0x2d, 0xd5, 0x2a,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x2a, 0xd5, 0x34, 0xcb,
+0xaa, 0x55, 0xcb, 0x34,
+0x4b, 0xb4, 0xd2, 0x2d,
+0x53, 0xac, 0xb2, 0x4d,
+0xb5, 0x4a, 0x35, 0xca,
+0xb2, 0x4d, 0xcb, 0x34,
+0x35, 0xca, 0x52, 0xad,
+0x54, 0xab, 0xd2, 0x2d,
+0xad, 0x52, 0xad, 0x52,
+0xb3, 0x4c, 0x55, 0xaa,
+0xb2, 0x4d, 0x2d, 0xd2,
+0x34, 0xcb, 0x4c, 0xb3,
+0xb4, 0x4b, 0xb5, 0x4a,
+0xcd, 0x32, 0xab, 0x54,
+0x35, 0xca, 0x4a, 0xb5,
+0x4c, 0xb3, 0xcc, 0x33,
+0x2d, 0xd2, 0x2a, 0xd5,
+0xd4, 0x2b, 0x53, 0xac,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xcb, 0x34, 0xcd, 0x32,
+0x4b, 0xb4, 0xaa, 0x55,
+0xad, 0x52, 0xb3, 0x4c,
+0x35, 0xca, 0x4c, 0xb3,
+0xd2, 0x2d, 0xcb, 0x34,
+0xcd, 0x32, 0x4b, 0xb4,
+0x4a, 0xb5, 0x52, 0xad,
+0x4c, 0xb3, 0xca, 0x35,
+0xb5, 0x4a, 0x2d, 0xd2,
+0x34, 0xcb, 0xd2, 0x2d,
+0xb5, 0x4a, 0xb5, 0x4a,
+0xad, 0x52, 0xd5, 0x2a,
+0x35, 0xca, 0x4a, 0xb5,
+0x32, 0xcd, 0xd4, 0x2b,
+0x2d, 0xd2, 0x4a, 0xb5,
+0x4c, 0xb3, 0x54, 0xab,
+0x2a, 0xd5, 0x2a, 0xd5,
+0x54, 0xab, 0xcc, 0x33,
+0x2b, 0xd4, 0xb4, 0x4b,
+0xd3, 0x2c, 0xb3, 0x4c,
+0x4b, 0xb4, 0x2a, 0xd5,
+0xca, 0x35, 0xab, 0x54,
+0x35, 0xca, 0xd4, 0x2b,
+0x4d, 0xb2, 0xcc, 0x33,
+0x4d, 0xb2, 0x54, 0xab,
+0xd4, 0x2b, 0x53, 0xac,
+0x54, 0xab, 0xac, 0x53,
+0xcb, 0x34, 0xad, 0x52,
+0xd3, 0x2c, 0xad, 0x52,
+0xad, 0x52, 0x2d, 0xd2,
+0xaa, 0x55, 0x4d, 0xb2,
+0xb2, 0x4d, 0xd5, 0x2a,
+0xb3, 0x4c, 0x4b, 0xb4,
+0x34, 0xcb, 0x34, 0xcb,
+0x54, 0xab, 0xaa, 0x55,
+0x4d, 0xb2, 0xb2, 0x4d,
+0x33, 0xcc, 0x4c, 0xb3,
+0xb4, 0x4b, 0x2b, 0xd4,
+0xcc, 0x33, 0xab, 0x54,
+0x55, 0xaa, 0x34, 0xcb,
+0x4c, 0xb3, 0xcc, 0x33,
+0x53, 0xac, 0x32, 0xcd,
+0xd4, 0x2b, 0x33, 0xcc,
+0xb2, 0x4d, 0xb3, 0x4c,
+0xcb, 0x34, 0x53, 0xac,
+0xd4, 0x2b, 0xab, 0x54,
+0xcd, 0x32, 0xad, 0x52,
+0x4b, 0xb4, 0x4c, 0xb3,
+0xac, 0x53, 0xad, 0x52,
+0xd5, 0x2a, 0x2b, 0xd4,
+0xb2, 0x4d, 0xcd, 0x32,
+0x4b, 0xb4, 0x54, 0xab,
+0xb4, 0x4b, 0xb3, 0x4c,
+0x55, 0xaa, 0xac, 0x53,
+0xd5, 0x2a, 0xcb, 0x34,
+0xd3, 0x2c, 0xcd, 0x32,
+0x4b, 0xb4, 0x32, 0xcd,
+0xaa, 0x55, 0xb3, 0x4c,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xd3, 0x2c, 0xcb, 0x34,
+0xd5, 0x2a, 0x35, 0xca,
+0x4a, 0xb5, 0xd2, 0x2d,
+0x2b, 0xd4, 0xd2, 0x2d,
+0xb5, 0x4a, 0xb5, 0x4a,
+0xab, 0x54, 0xd5, 0x2a,
+0x35, 0xca, 0xaa, 0x55,
+0x33, 0xcc, 0xd4, 0x2b,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x4c, 0xb3, 0x54, 0xab,
+0xca, 0x35, 0x35, 0xca,
+0x54, 0xab, 0xcc, 0x33,
+0x2d, 0xd2, 0xb2, 0x4d,
+0xd3, 0x2c, 0x53, 0xac,
+0xaa, 0x55, 0x2b, 0xd4,
+0xca, 0x35, 0xcd, 0x32,
+0x53, 0xac, 0xd4, 0x2b,
+0xad, 0x52, 0x33, 0xcc,
+0x52, 0xad, 0x54, 0xab,
+0xd2, 0x2d, 0x53, 0xac,
+0x52, 0xad, 0x4c, 0xb3,
+0xca, 0x35, 0x4d, 0xb2,
+0xd2, 0x2d, 0xcb, 0x34,
+0xad, 0x52, 0x4b, 0xb4,
+0x4a, 0xb5, 0x52, 0xad,
+0x52, 0xad, 0xca, 0x35,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x32, 0xcd, 0xd2, 0x2d,
+0xb5, 0x4a, 0x4b, 0xb4,
+0xac, 0x53, 0xd5, 0x2a,
+0x55, 0xaa, 0x2a, 0xd5,
+0x32, 0xcd, 0xd4, 0x2b,
+0x33, 0xcc, 0x54, 0xab,
+0x4c, 0xb3, 0x34, 0xcb,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x54, 0xab, 0x32, 0xcd,
+0xd4, 0x2b, 0xb5, 0x4a,
+0xb3, 0x4c, 0xb3, 0x4c,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xd4, 0x2b, 0xab, 0x54,
+0x2b, 0xd4, 0xb4, 0x4b,
+0x4b, 0xb4, 0xac, 0x53,
+0x4b, 0xb4, 0xaa, 0x55,
+0xd5, 0x2a, 0xad, 0x52,
+0x35, 0xca, 0xcc, 0x33,
+0xab, 0x54, 0xcd, 0x32,
+0xcd, 0x32, 0xb3, 0x4c,
+0xb3, 0x4c, 0x53, 0xac,
+0xcc, 0x33, 0x2b, 0xd4,
+0xd4, 0x2b, 0x2d, 0xd2,
+0x4c, 0xb3, 0xb4, 0x4b,
+0xab, 0x54, 0x35, 0xca,
+0x54, 0xab, 0xaa, 0x55,
+0x33, 0xcc, 0xb2, 0x4d,
+0x33, 0xcc, 0x2c, 0xd3,
+0xac, 0x53, 0x2b, 0xd4,
+0xcc, 0x33, 0x35, 0xca,
+0x52, 0xad, 0x34, 0xcb,
+0x2c, 0xd3, 0x52, 0xad,
+0x52, 0xad, 0x32, 0xcd,
+0xaa, 0x55, 0x4d, 0xb2,
+0xb2, 0x4d, 0xd3, 0x2c,
+0xb3, 0x4c, 0x4b, 0xb4,
+0xd4, 0x2b, 0x35, 0xca,
+0x54, 0xab, 0xaa, 0x55,
+0x2b, 0xd4, 0xb2, 0x4d,
+0x33, 0xcc, 0xac, 0x53,
+0xab, 0x54, 0x2b, 0xd4,
+0xcc, 0x33, 0xad, 0x52,
+0x53, 0xac, 0x34, 0xcb,
+0xac, 0x53, 0x2d, 0xd2,
+0x52, 0xad, 0x32, 0xcd,
+0xb2, 0x4d, 0x55, 0xaa,
+0xb2, 0x4d, 0x53, 0xac,
+0x34, 0xcb, 0x4c, 0xb3,
+0xd4, 0x2b, 0xad, 0x52,
+0xcd, 0x32, 0xab, 0x54,
+0xab, 0x54, 0x4d, 0xb2,
+0x4c, 0xb3, 0xac, 0x53,
+0xb3, 0x4c, 0x2b, 0xd4,
+0xd4, 0x2b, 0x2d, 0xd2,
+0x54, 0xab, 0xb4, 0x4b,
+0xab, 0x54, 0xb5, 0x4a,
+0x53, 0xac, 0xaa, 0x55,
+0x33, 0xcc, 0x2a, 0xd5,
+0x32, 0xcd, 0x2c, 0xd3,
+0x2c, 0xd3, 0x54, 0xab,
+0xcc, 0x33, 0x35, 0xca,
+0x4a, 0xb5, 0x2c, 0xd3,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xd5, 0x2a, 0x35, 0xca,
+0xaa, 0x55, 0xd5, 0x2a,
+0x2b, 0xd4, 0xd2, 0x2d,
+0x33, 0xcc, 0xb4, 0x4b,
+0xab, 0x54, 0x35, 0xca,
+0x4c, 0xb3, 0xaa, 0x55,
+0x33, 0xcc, 0x32, 0xcd,
+0x34, 0xcb, 0x2c, 0xd3,
+0xac, 0x53, 0xb3, 0x4c,
+0xcd, 0x32, 0x35, 0xca,
+0xd2, 0x2d, 0x4b, 0xb4,
+0x2c, 0xd3, 0x52, 0xad,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xaa, 0x55, 0xcd, 0x32,
+0x35, 0xca, 0xd4, 0x2b,
+0xb3, 0x4c, 0xd3, 0x2c,
+0x4d, 0xb2, 0x34, 0xcb,
+0xd4, 0x2b, 0x55, 0xaa,
+0x54, 0xab, 0xb2, 0x4d,
+0x2b, 0xd4, 0xac, 0x53,
+0xb3, 0x4c, 0xab, 0x54,
+0xcb, 0x34, 0x2d, 0xd2,
+0x54, 0xab, 0xac, 0x53,
+0xad, 0x52, 0xb5, 0x4a,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x32, 0xcd, 0x2a, 0xd5,
+0xaa, 0x55, 0x4b, 0xb4,
+0x2c, 0xd3, 0xd4, 0x2b,
+0x53, 0xac, 0x2a, 0xd5,
+0x4a, 0xb5, 0x34, 0xcb,
+0x32, 0xcd, 0xd4, 0x2b,
+0x55, 0xaa, 0x52, 0xad,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xb3, 0x4c, 0x2d, 0xd2,
+0x54, 0xab, 0x34, 0xcb,
+0xb4, 0x4b, 0xb5, 0x4a,
+0x53, 0xac, 0xb2, 0x4d,
+0x35, 0xca, 0x2a, 0xd5,
+0xb2, 0x4d, 0xcb, 0x34,
+0x2d, 0xd2, 0x54, 0xab,
+0x54, 0xab, 0x52, 0xad,
+0x4a, 0xb5, 0xac, 0x53,
+0xb3, 0x4c, 0xcd, 0x32,
+0xd5, 0x2a, 0x2d, 0xd2,
+0xb4, 0x4b, 0xd3, 0x2c,
+0xab, 0x54, 0xb5, 0x4a,
+0xd5, 0x2a, 0xb5, 0x4a,
+0x33, 0xcc, 0xca, 0x35,
+0x2b, 0xd4, 0x2a, 0xd5,
+0x2c, 0xd3, 0xb2, 0x4d,
+0x2b, 0xd4, 0x34, 0xcb,
+0xaa, 0x55, 0xab, 0x54,
+0x4b, 0xb4, 0xd2, 0x2d,
+0x53, 0xac, 0xac, 0x53,
+0xb5, 0x4a, 0x35, 0xca,
+0xd2, 0x2d, 0xcd, 0x32,
+0x35, 0xca, 0x52, 0xad,
+0xaa, 0x55, 0xd3, 0x2c,
+0xad, 0x52, 0xcd, 0x32,
+0xd3, 0x2c, 0x55, 0xaa,
+0xb2, 0x4d, 0x33, 0xcc,
+0x2a, 0xd5, 0x4c, 0xb3,
+0xd4, 0x2b, 0xd3, 0x2c,
+0xcb, 0x34, 0xab, 0x54,
+0xcb, 0x34, 0xb5, 0x4a,
+0x4d, 0xb2, 0xac, 0x53,
+0x2d, 0xd2, 0x4a, 0xb5,
+0xd4, 0x2b, 0x4d, 0xb2,
+0x2a, 0xd5, 0xaa, 0x55,
+0xab, 0x54, 0xcb, 0x34,
+0x2b, 0xd4, 0xac, 0x53,
+0x53, 0xac, 0xb2, 0x4d,
+0xcb, 0x34, 0x2d, 0xd2,
+0xb2, 0x4d, 0xab, 0x54,
+0xad, 0x52, 0x55, 0xaa,
+0x54, 0xab, 0x4c, 0xb3,
+0x32, 0xcd, 0xac, 0x53,
+0xd3, 0x2c, 0x4b, 0xb4,
+0xcc, 0x33, 0x2d, 0xd2,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xac, 0x53, 0xd5, 0x2a,
+0x35, 0xca, 0x34, 0xcb,
+0x32, 0xcd, 0xd4, 0x2b,
+0x4d, 0xb2, 0x52, 0xad,
+0x4c, 0xb3, 0x54, 0xab,
+0xb4, 0x4b, 0x2d, 0xd2,
+0x54, 0xab, 0xac, 0x53,
+0xb5, 0x4a, 0xb5, 0x4a,
+0xd3, 0x2c, 0xcd, 0x32,
+0x35, 0xca, 0x2a, 0xd5,
+0xaa, 0x55, 0xd3, 0x2c,
+0x2d, 0xd2, 0xd4, 0x2b,
+0xd3, 0x2c, 0x55, 0xaa,
+0x4a, 0xb5, 0x34, 0xcb,
+0x2a, 0xd5, 0xcc, 0x33,
+0x55, 0xaa, 0xd2, 0x2d,
+0xcb, 0x34, 0xd3, 0x2c,
+0xb3, 0x4c, 0xb5, 0x4a,
+0xcd, 0x32, 0x35, 0xca,
+0x34, 0xcb, 0x4a, 0xb5,
+0x2c, 0xd3, 0xb2, 0x4d,
+0x2d, 0xd2, 0x2a, 0xd5,
+0xaa, 0x55, 0x4b, 0xb4,
+0x2a, 0xd5, 0xd4, 0x2b,
+0x53, 0xac, 0xca, 0x35,
+0x4b, 0xb4, 0x34, 0xcb,
+0x32, 0xcd, 0xb2, 0x4d,
+0x55, 0xaa, 0x52, 0xad,
+0xac, 0x53, 0xcb, 0x34,
+0xb3, 0x4c, 0x2d, 0xd2,
+0x52, 0xad, 0x32, 0xcd,
+0xb4, 0x4b, 0x55, 0xaa,
+0xb2, 0x4d, 0xb3, 0x4c,
+0x35, 0xca, 0x4c, 0xb3,
+0xd4, 0x2b, 0xcb, 0x34,
+0xcd, 0x32, 0xab, 0x54,
+0x4b, 0xb4, 0x52, 0xad,
+0x4c, 0xb3, 0xac, 0x53,
+0xb5, 0x4a, 0x2d, 0xd2,
+0xd4, 0x2b, 0xcd, 0x32,
+0xb5, 0x4a, 0xb5, 0x4a,
+0xab, 0x54, 0xd3, 0x2c,
+0x35, 0xca, 0xaa, 0x55,
+0xd3, 0x2c, 0xd5, 0x2a,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x2a, 0xd5, 0x54, 0xab,
+0xca, 0x35, 0xd5, 0x2a,
+0x4b, 0xb4, 0xcc, 0x33,
+0x2d, 0xd2, 0xb4, 0x4b,
+0xd5, 0x2a, 0x53, 0xac,
+0x4a, 0xb5, 0xca, 0x35,
+0xcb, 0x34, 0xcd, 0x32,
+0x35, 0xca, 0xb2, 0x4d,
+0xad, 0x52, 0xd3, 0x2c,
+0xad, 0x52, 0x4b, 0xb4,
+0xd2, 0x2d, 0x55, 0xaa,
+0x52, 0xad, 0x4a, 0xb5,
+0x2a, 0xd5, 0x4c, 0xb3,
+0x32, 0xcd, 0xca, 0x35,
+0xcb, 0x34, 0x4b, 0xb4,
+0x2c, 0xd3, 0xb2, 0x4d,
+0x4d, 0xb2, 0x2a, 0xd5,
+0xaa, 0x55, 0x4b, 0xb4,
+0x34, 0xcb, 0xd4, 0x2b,
+0x53, 0xac, 0xaa, 0x55,
+0x4d, 0xb2, 0x34, 0xcb,
+0x32, 0xcd, 0x4c, 0xb3,
+0x54, 0xab, 0x52, 0xad,
+0xcc, 0x33, 0xab, 0x54,
+0xb3, 0x4c, 0x2d, 0xd2,
+0x4c, 0xb3, 0x2c, 0xd3,
+0xb4, 0x4b, 0x35, 0xca,
+0xd4, 0x2b, 0xb5, 0x4a,
+0x35, 0xca, 0xb2, 0x4d,
+0x2b, 0xd4, 0xca, 0x35,
+0xad, 0x52, 0xab, 0x54,
+0x2b, 0xd4, 0x52, 0xad,
+0x52, 0xad, 0xac, 0x53,
+0xab, 0x54, 0x4d, 0xb2,
+0xd2, 0x2d, 0xad, 0x52,
+0xb3, 0x4c, 0x4b, 0xb4,
+0xaa, 0x55, 0x2d, 0xd2,
+0x54, 0xab, 0xca, 0x35,
+0xb3, 0x4c, 0xb5, 0x4a,
+0x33, 0xcc, 0x32, 0xcd,
+0x34, 0xcb, 0x2a, 0xd5,
+0xac, 0x53, 0xb3, 0x4c,
+0x2d, 0xd2, 0x34, 0xcb,
+0xd2, 0x2d, 0x4b, 0xb4,
+0x4a, 0xb5, 0x52, 0xad,
+0x4a, 0xb5, 0xca, 0x35,
+0xb5, 0x4a, 0xcd, 0x32,
+0x35, 0xca, 0xd2, 0x2d,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xad, 0x52, 0xd5, 0x2a,
+0xd5, 0x2a, 0x55, 0xaa,
+0x32, 0xcd, 0xd4, 0x2b,
+0x2b, 0xd4, 0x4c, 0xb3,
+0x4c, 0xb3, 0xb4, 0x4b,
+0xcb, 0x34, 0x2b, 0xd4,
+0x54, 0xab, 0xaa, 0x55,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x33, 0xcc, 0x4c, 0xb3,
+0x54, 0xab, 0x2a, 0xd5,
+0xcc, 0x33, 0xab, 0x54,
+0x33, 0xcc, 0x34, 0xcb,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x4c, 0xb3, 0x32, 0xcd,
+0xd4, 0x2b, 0x35, 0xca,
+0xb4, 0x4b, 0xb3, 0x4c,
+0x2b, 0xd4, 0xb2, 0x4d,
+0xd5, 0x2a, 0xab, 0x54,
+0xab, 0x54, 0xcb, 0x34,
+0x4b, 0xb4, 0xac, 0x53,
+0x53, 0xac, 0xb2, 0x4d,
+0xd5, 0x2a, 0x2d, 0xd2,
+0xb2, 0x4d, 0xcb, 0x34,
+0xab, 0x54, 0x55, 0xaa,
+0x54, 0xab, 0xb2, 0x4d,
+0x33, 0xcc, 0xac, 0x53,
+0xb3, 0x4c, 0x2b, 0xd4,
+0xcc, 0x33, 0x2d, 0xd2,
+0x54, 0xab, 0x34, 0xcb,
+0xac, 0x53, 0xb5, 0x4a,
+0x53, 0xac, 0x32, 0xcd,
+0x32, 0xcd, 0x2a, 0xd5,
+0xb2, 0x4d, 0x53, 0xac,
+0x2c, 0xd3, 0x54, 0xab,
+0xd4, 0x2b, 0x2d, 0xd2,
+0x4a, 0xb5, 0xac, 0x53,
+0xab, 0x54, 0xd5, 0x2a,
+0xd5, 0x2a, 0xad, 0x52,
+0x33, 0xcc, 0xd4, 0x2b,
+0xab, 0x54, 0x2d, 0xd2,
+0x4c, 0xb3, 0xb4, 0x4b,
+0xb3, 0x4c, 0x35, 0xca,
+0x54, 0xab, 0x2a, 0xd5,
+0x34, 0xcb, 0xb2, 0x4d,
+0x33, 0xcc, 0xb4, 0x4b,
+0xad, 0x52, 0x2b, 0xd4,
+0x4c, 0xb3, 0x4a, 0xb5,
+0x52, 0xad, 0x34, 0xcb,
+0x34, 0xcb, 0x4a, 0xb5,
+0x52, 0xad, 0xb2, 0x4d,
+0x2d, 0xd2, 0x4a, 0xb5,
+0xb2, 0x4d, 0x4b, 0xb4,
+0x2a, 0xd5, 0x4a, 0xb5,
+0x54, 0xab, 0xca, 0x35,
+0x2b, 0xd4, 0xaa, 0x55,
+0x33, 0xcc, 0xb2, 0x4d,
+0x2b, 0xd4, 0x2c, 0xd3,
+0xac, 0x53, 0xab, 0x54,
+0xcb, 0x34, 0x35, 0xca,
+0x52, 0xad, 0xac, 0x53,
+0x2d, 0xd2, 0x52, 0xad,
+0xd2, 0x2d, 0x4d, 0xb2,
+0xaa, 0x55, 0x4d, 0xb2,
+0xaa, 0x55, 0xcb, 0x34,
+0xb3, 0x4c, 0xcb, 0x34,
+0x53, 0xac, 0x32, 0xcd,
+0x54, 0xab, 0x32, 0xcd,
+0xb2, 0x4d, 0xb3, 0x4c,
+0xb3, 0x4c, 0x53, 0xac,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xd4, 0x2b, 0xad, 0x52,
+0x4b, 0xb4, 0xb4, 0x4b,
+0xab, 0x54, 0xad, 0x52,
+0x55, 0xaa, 0xaa, 0x55,
+0xb3, 0x4c, 0xcd, 0x32,
+0x33, 0xcc, 0x2c, 0xd3,
+0xb4, 0x4b, 0x33, 0xcc,
+0xcc, 0x33, 0xb5, 0x4a,
+0xd5, 0x2a, 0x33, 0xcc,
+0x2c, 0xd3, 0xca, 0x35,
+0xcb, 0x34, 0x33, 0xcc,
+0x2a, 0xd5, 0xb2, 0x4d,
+0xcd, 0x32, 0xd3, 0x2c,
+0xab, 0x54, 0x4b, 0xb4,
+0xcc, 0x33, 0xb5, 0x4a,
+0x53, 0xac, 0x2a, 0xd5,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x32, 0xcd, 0x34, 0xcb,
+0x2a, 0xd5, 0x54, 0xab,
+0x4c, 0xb3, 0xd2, 0x2d,
+0x4b, 0xb4, 0x2c, 0xd3,
+0xb4, 0x4b, 0xb5, 0x4a,
+0xd5, 0x2a, 0xb5, 0x4a,
+0x35, 0xca, 0xca, 0x35,
+0x2b, 0xd4, 0xca, 0x35,
+0x2d, 0xd2, 0xb2, 0x4d,
+0x2b, 0xd4, 0x52, 0xad,
+0xaa, 0x55, 0xab, 0x54,
+0xab, 0x54, 0xcd, 0x32,
+0x53, 0xac, 0xac, 0x53,
+0xb3, 0x4c, 0x33, 0xcc,
+0xd2, 0x2d, 0x2d, 0xd2,
+0xd4, 0x2b, 0x53, 0xac,
+0xaa, 0x55, 0xb5, 0x4a,
+0xcb, 0x34, 0xcd, 0x32,
+0x33, 0xcc, 0xaa, 0x55,
+0xad, 0x52, 0x33, 0xcc,
+0x2c, 0xd3, 0x4c, 0xb3,
+0xd2, 0x2d, 0x33, 0xcc,
+0xca, 0x35, 0x4b, 0xb4,
+0xca, 0x35, 0xd3, 0x2c,
+0x4d, 0xb2, 0xca, 0x35,
+0xcd, 0x32, 0x55, 0xaa,
+0x34, 0xcb, 0x52, 0xad,
+0x2c, 0xd3, 0xac, 0x53,
+0xad, 0x52, 0x2d, 0xd2,
+0xca, 0x35, 0x4d, 0xb2,
+0xb2, 0x4d, 0xd5, 0x2a,
+0xad, 0x52, 0x4b, 0xb4,
+0x34, 0xcb, 0x54, 0xab,
+0x52, 0xad, 0xaa, 0x55,
+0x4d, 0xb2, 0x4c, 0xb3,
+0x32, 0xcd, 0x4c, 0xb3,
+0xd4, 0x2b, 0x4b, 0xb4,
+0xcc, 0x33, 0xab, 0x54,
+0x4b, 0xb4, 0x2a, 0xd5,
+0x4c, 0xb3, 0xac, 0x53,
+0x35, 0xca, 0x34, 0xcb,
+0xd4, 0x2b, 0xcd, 0x32,
+0x4d, 0xb2, 0xb2, 0x4d,
+0xab, 0x54, 0x53, 0xac,
+0xb4, 0x4b, 0xab, 0x54,
+0xd3, 0x2c, 0xad, 0x52,
+0x55, 0xaa, 0x2c, 0xd3,
+0xaa, 0x55, 0xcd, 0x32,
+0xd3, 0x2c, 0xd5, 0x2a,
+0xb3, 0x4c, 0x33, 0xcc,
+0x2a, 0xd5, 0x34, 0xcb,
+0xd4, 0x2b, 0xd3, 0x2c,
+0x4b, 0xb4, 0xb2, 0x4d,
+0xcb, 0x34, 0xb5, 0x4a,
+0xb5, 0x4a, 0xab, 0x54,
+0x2d, 0xd2, 0xca, 0x35,
+0x55, 0xaa, 0x4c, 0xb3,
+0x2a, 0xd5, 0xd2, 0x2d,
+0xd3, 0x2c, 0xcb, 0x34,
+0xab, 0x54, 0x35, 0xca,
+0x4a, 0xb5, 0xb2, 0x4d,
+0x33, 0xcc, 0xd2, 0x2d,
+0xb5, 0x4a, 0x2b, 0xd4,
+0xac, 0x53, 0xd5, 0x2a,
+0x55, 0xaa, 0x34, 0xcb,
+0x32, 0xcd, 0xd4, 0x2b,
+0x53, 0xac, 0x52, 0xad,
+0x4c, 0xb3, 0x34, 0xcb,
+0xb2, 0x4d, 0x2d, 0xd2,
+0x54, 0xab, 0x52, 0xad,
+0xb4, 0x4b, 0xb5, 0x4a,
+0xb3, 0x4c, 0xad, 0x52,
+0x35, 0xca, 0x2a, 0xd5,
+0xb4, 0x4b, 0xcd, 0x32,
+0x2d, 0xd2, 0xb4, 0x4b,
+0xb5, 0x4a, 0x53, 0xac,
+0x4a, 0xb5, 0xca, 0x35,
+0xd5, 0x2a, 0xcd, 0x32,
+0x35, 0xca, 0xd2, 0x2d,
+0xab, 0x54, 0xd3, 0x2c,
+0xad, 0x52, 0xb5, 0x4a,
+0xd3, 0x2c, 0x55, 0xaa,
+0x32, 0xcd, 0x2a, 0xd5,
+0x2a, 0xd5, 0x4c, 0xb3,
+0x2c, 0xd3, 0xd4, 0x2b,
+0xcb, 0x34, 0x2b, 0xd4,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x4d, 0xb2, 0xd4, 0x2b,
+0x55, 0xaa, 0x4a, 0xb5,
+0x54, 0xab, 0xd4, 0x2b,
+0x33, 0xcc, 0xaa, 0x55,
+0x53, 0xac, 0x34, 0xcb,
+0x2c, 0xd3, 0x2c, 0xd3,
+0x52, 0xad, 0x32, 0xcd,
+0xca, 0x35, 0x55, 0xaa,
+0xb2, 0x4d, 0xd3, 0x2c,
+0x2d, 0xd2, 0x4c, 0xb3,
+0xd4, 0x2b, 0x55, 0xaa,
+0xca, 0x35, 0xab, 0x54,
+0x2b, 0xd4, 0xcc, 0x33,
+0x4d, 0xb2, 0xac, 0x53,
+0xcb, 0x34, 0x53, 0xac,
+0xd4, 0x2b, 0xad, 0x52,
+0xcd, 0x32, 0xad, 0x52,
+0xab, 0x54, 0x4d, 0xb2,
+0xac, 0x53, 0xad, 0x52,
+0xb3, 0x4c, 0x2b, 0xd4,
+0xb2, 0x4d, 0x2d, 0xd2,
+0x54, 0xab, 0x54, 0xab,
+0xb4, 0x4b, 0xb5, 0x4a,
+0x53, 0xac, 0xac, 0x53,
+0x35, 0xca, 0x2a, 0xd5,
+0xd2, 0x2d, 0xcd, 0x32,
+0x2d, 0xd2, 0x54, 0xab,
+0xaa, 0x55, 0x53, 0xac,
+0x4a, 0xb5, 0xcc, 0x33,
+0xd3, 0x2c, 0xcd, 0x32,
+0xd5, 0x2a, 0x33, 0xcc,
+0xaa, 0x55, 0xd3, 0x2c,
+0xcb, 0x34, 0xd3, 0x2c,
+0xd3, 0x2c, 0xb5, 0x4a,
+0xcd, 0x32, 0x35, 0xca,
+0x2a, 0xd5, 0x4a, 0xb5,
+0x2c, 0xd3, 0xd2, 0x2d,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xaa, 0x55, 0xb5, 0x4a,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x33, 0xcc, 0xaa, 0x55,
+0x4b, 0xb4, 0x34, 0xcb,
+0x2c, 0xd3, 0xac, 0x53,
+0x55, 0xaa, 0x32, 0xcd,
+0xca, 0x35, 0xcd, 0x32,
+0xb3, 0x4c, 0xd3, 0x2c,
+0xad, 0x52, 0x33, 0xcc,
+0xd4, 0x2b, 0x55, 0xaa,
+0xd2, 0x2d, 0xb3, 0x4c,
+0x2b, 0xd4, 0x4c, 0xb3,
+0xca, 0x35, 0xab, 0x54,
+0xcb, 0x34, 0xcb, 0x34,
+0x4d, 0xb2, 0xac, 0x53,
+0x4d, 0xb2, 0x52, 0xad,
+0xd4, 0x2b, 0x4d, 0xb2,
+0xb4, 0x4b, 0xad, 0x52,
+0xab, 0x54, 0xab, 0x54,
+0xb5, 0x4a, 0xad, 0x52,
+0x53, 0xac, 0xcc, 0x33,
+0xb5, 0x4a, 0x2d, 0xd2,
+0xd2, 0x2d, 0xd3, 0x2c,
+0xb5, 0x4a, 0x55, 0xaa,
+0xca, 0x35, 0xd5, 0x2a,
+0x35, 0xca, 0xcc, 0x33,
+0x2d, 0xd2, 0xd4, 0x2b,
+0xcd, 0x32, 0x53, 0xac,
+0x4a, 0xb5, 0x54, 0xab,
+0xcc, 0x33, 0xcd, 0x32,
+0x55, 0xaa, 0x2c, 0xd3,
+0xac, 0x53, 0xd3, 0x2c,
+0xd3, 0x2c, 0x35, 0xca,
+0xd2, 0x2d, 0x35, 0xca,
+0x2a, 0xd5, 0x52, 0xad,
+0x2a, 0xd5, 0xd2, 0x2d,
+0xab, 0x54, 0xcd, 0x32,
+0xab, 0x54, 0xb5, 0x4a,
+0xb3, 0x4c, 0xb3, 0x4c,
+0x33, 0xcc, 0x2a, 0xd5,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x2c, 0xd3, 0xb4, 0x4b,
+0x4b, 0xb4, 0x34, 0xcb,
+0x4a, 0xb5, 0xaa, 0x55,
+0x55, 0xaa, 0xd2, 0x2d,
+0x35, 0xca, 0xcc, 0x33,
+0xb3, 0x4c, 0xd5, 0x2a,
+0xcd, 0x32, 0x33, 0xcc,
+0x34, 0xcb, 0x54, 0xab,
+0xcc, 0x33, 0xb3, 0x4c,
+0x4d, 0xb2, 0x2c, 0xd3,
+0xcc, 0x33, 0x4b, 0xb4,
+0xd4, 0x2b, 0x35, 0xca,
+0x4c, 0xb3, 0xaa, 0x55,
+0x2b, 0xd4, 0x32, 0xcd,
+0x34, 0xcb, 0xac, 0x53,
+0xab, 0x54, 0xb3, 0x4c,
+0xcd, 0x32, 0xad, 0x52,
+0xd3, 0x2c, 0x4b, 0xb4,
+0xac, 0x53, 0x2d, 0xd2,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x35, 0xca, 0x54, 0xab,
+0x34, 0xcb, 0xd4, 0x2b,
+0x4d, 0xb2, 0xac, 0x53,
+0x4d, 0xb2, 0x54, 0xab,
+0xd4, 0x2b, 0x4d, 0xb2,
+0x54, 0xab, 0xac, 0x53,
+0xab, 0x54, 0xab, 0x54,
+0xd3, 0x2c, 0xad, 0x52,
+0x53, 0xac, 0x2c, 0xd3,
+0xaa, 0x55, 0x2d, 0xd2,
+0xd2, 0x2d, 0xd5, 0x2a,
+0xb3, 0x4c, 0x55, 0xaa,
+0x2a, 0xd5, 0x34, 0xcb,
+0x34, 0xcb, 0xcc, 0x33,
+0x4b, 0xb4, 0xb2, 0x4d,
+0xcd, 0x32, 0xb3, 0x4c,
+0xb5, 0x4a, 0x4b, 0xb4,
+0xcc, 0x33, 0xcb, 0x34,
+0x55, 0xaa, 0x2a, 0xd5,
+0x4c, 0xb3, 0xd2, 0x2d,
+0x33, 0xcc, 0x34, 0xcb,
+0xb4, 0x4b, 0x35, 0xca,
+0x4c, 0xb3, 0xb2, 0x4d,
+0x35, 0xca, 0x32, 0xcd,
+0xb4, 0x4b, 0xcb, 0x34,
+0xad, 0x52, 0xb3, 0x4c,
+0x55, 0xaa, 0x52, 0xad,
+0xd2, 0x2d, 0xcb, 0x34,
+0xb3, 0x4c, 0x4d, 0xb2,
+0x4a, 0xb5, 0x32, 0xcd,
+0xb4, 0x4b, 0xcb, 0x34,
+0xb5, 0x4a, 0xb3, 0x4c,
+0x55, 0xaa, 0xd2, 0x2d,
+0xd5, 0x2a, 0xcb, 0x34,
+0xb3, 0x4c, 0xd5, 0x2a,
+0x4b, 0xb4, 0x32, 0xcd,
+0x34, 0xcb, 0xb4, 0x4b,
+0xb5, 0x4a, 0xb3, 0x4c,
+0x4d, 0xb2, 0xca, 0x35,
+0xd5, 0x2a, 0x4b, 0xb4,
+0x34, 0xcb, 0xd2, 0x2d,
+0x4b, 0xb4, 0xaa, 0x55,
+0xad, 0x52, 0xb5, 0x4a,
+0x35, 0xca, 0x4c, 0xb3,
+0x32, 0xcd, 0xca, 0x35,
+0xcd, 0x32, 0x4b, 0xb4,
+0x2c, 0xd3, 0x52, 0xad,
+0x4c, 0xb3, 0x2a, 0xd5,
+0xaa, 0x55, 0x2d, 0xd2,
+0x34, 0xcb, 0xd4, 0x2b,
+0xb3, 0x4c, 0xb5, 0x4a,
+0x4d, 0xb2, 0x34, 0xcb,
+0x34, 0xcb, 0x4a, 0xb5,
+0x54, 0xab, 0xb2, 0x4d,
+0x2d, 0xd2, 0xaa, 0x55,
+0xb3, 0x4c, 0x4b, 0xb4,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x54, 0xab, 0xca, 0x35,
+0xcb, 0x34, 0xb5, 0x4a,
+0x33, 0xcc, 0xb2, 0x4d,
+0x2d, 0xd2, 0x2a, 0xd5,
+0xac, 0x53, 0x4b, 0xb4,
+0x2a, 0xd5, 0x34, 0xcb,
+0x52, 0xad, 0xca, 0x35,
+0x4b, 0xb4, 0x52, 0xad,
+0x32, 0xcd, 0xb2, 0x4d,
+0xb5, 0x4a, 0x4d, 0xb2,
+0xac, 0x53, 0xcb, 0x34,
+0xb5, 0x4a, 0x2b, 0xd4,
+0x52, 0xad, 0xd2, 0x2d,
+0x55, 0xaa, 0x54, 0xab,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x53, 0xac, 0x4c, 0xb3,
+0x34, 0xcb, 0x34, 0xcb,
+0xd2, 0x2d, 0xab, 0x54,
+0x4d, 0xb2, 0x52, 0xad,
+0x4a, 0xb5, 0x4c, 0xb3,
+0xb4, 0x4b, 0xcd, 0x32,
+0xd5, 0x2a, 0xab, 0x54,
+0xb5, 0x4a, 0xd3, 0x2c,
+0x4b, 0xb4, 0xcc, 0x33,
+0xd5, 0x2a, 0xb5, 0x4a,
+0xd5, 0x2a, 0xd3, 0x2c,
+0x2b, 0xd4, 0xca, 0x35,
+0xcb, 0x34, 0xb5, 0x4a,
+0x2b, 0xd4, 0xb2, 0x4d,
+0x2d, 0xd2, 0xaa, 0x55,
+0xab, 0x54, 0x4b, 0xb4,
+0x2a, 0xd5, 0xac, 0x53,
+0x53, 0xac, 0xca, 0x35,
+0xcb, 0x34, 0x2d, 0xd2,
+0x32, 0xcd, 0xb2, 0x4d,
+0xad, 0x52, 0x55, 0xaa,
+0xac, 0x53, 0x4b, 0xb4,
+0x32, 0xcd, 0x2c, 0xd3,
+0x52, 0xad, 0x4a, 0xb5,
+0xcc, 0x33, 0x55, 0xaa,
+0x32, 0xcd, 0x2a, 0xd5,
+0x2c, 0xd3, 0x4c, 0xb3,
+0x2c, 0xd3, 0x34, 0xcb,
+0xca, 0x35, 0x2b, 0xd4,
+0x4a, 0xb5, 0xd2, 0x2d,
+0x4d, 0xb2, 0xd4, 0x2b,
+0xb5, 0x4a, 0x55, 0xaa,
+0x54, 0xab, 0xd4, 0x2b,
+0x35, 0xca, 0xac, 0x53,
+0x53, 0xac, 0xd4, 0x2b,
+0xcd, 0x32, 0x2d, 0xd2,
+0x52, 0xad, 0x54, 0xab,
+0xac, 0x53, 0x55, 0xaa,
+0x52, 0xad, 0x2c, 0xd3,
+0x32, 0xcd, 0x4c, 0xb3,
+0xd2, 0x2d, 0x55, 0xaa,
+0xcc, 0x33, 0x4b, 0xb4,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x4c, 0xb3, 0xca, 0x35,
+0xcb, 0x34, 0x35, 0xca,
+0x34, 0xcb, 0xb2, 0x4d,
+0x2d, 0xd2, 0xb2, 0x4d,
+0xad, 0x52, 0x4b, 0xb4,
+0xaa, 0x55, 0x4b, 0xb4,
+0x52, 0xad, 0xca, 0x35,
+0x53, 0xac, 0x4a, 0xb5,
+0x32, 0xcd, 0x32, 0xcd,
+0x32, 0xcd, 0x4a, 0xb5,
+0xac, 0x53, 0x53, 0xac,
+0x2c, 0xd3, 0x2a, 0xd5,
+0xd2, 0x2d, 0x2d, 0xd2,
+0x2a, 0xd5, 0x54, 0xab,
+0xaa, 0x55, 0xd5, 0x2a,
+0x4b, 0xb4, 0xcc, 0x33,
+0x33, 0xcc, 0xb4, 0x4b,
+0xd5, 0x2a, 0x33, 0xcc,
+0x4c, 0xb3, 0xca, 0x35,
+0xcb, 0x34, 0x33, 0xcc,
+0x34, 0xcb, 0xb2, 0x4d,
+0xcd, 0x32, 0xb3, 0x4c,
+0xad, 0x52, 0x4b, 0xb4,
+0xcc, 0x33, 0x4b, 0xb4,
+0x52, 0xad, 0x2a, 0xd5,
+0x4c, 0xb3, 0x4a, 0xb5,
+0x32, 0xcd, 0x34, 0xcb,
+0x34, 0xcb, 0x4a, 0xb5,
+0x4c, 0xb3, 0xb2, 0x4d,
+0x2d, 0xd2, 0x2a, 0xd5,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x2a, 0xd5, 0xb4, 0x4b,
+0x55, 0xaa, 0xca, 0x35,
+0x4b, 0xb4, 0xca, 0x35,
+0x33, 0xcc, 0xb2, 0x4d,
+0x35, 0xca, 0x32, 0xcd,
+0xac, 0x53, 0xcb, 0x34,
+0xad, 0x52, 0x33, 0xcc,
+0x52, 0xad, 0x52, 0xad,
+0xd2, 0x2d, 0x53, 0xac,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xca, 0x35, 0x4d, 0xb2,
+0xb4, 0x4b, 0xcb, 0x34,
+0xad, 0x52, 0xab, 0x54,
+0x55, 0xaa, 0x52, 0xad,
+0x52, 0xad, 0xcc, 0x33,
+0xb3, 0x4c, 0x4d, 0xb2,
+0xd2, 0x2d, 0x33, 0xcc,
+0xb4, 0x4b, 0x4b, 0xb4,
+0xca, 0x35, 0xb3, 0x4c,
+0x55, 0xaa, 0xca, 0x35,
+0xcd, 0x32, 0xcb, 0x34,
+0x33, 0xcc, 0x52, 0xad,
+0x4c, 0xb3, 0x32, 0xcd,
+0xac, 0x53, 0x2d, 0xd2,
+0xb4, 0x4b, 0x33, 0xcc,
+0xb2, 0x4d, 0xb5, 0x4a,
+0xd5, 0x2a, 0x53, 0xac,
+0x34, 0xcb, 0xca, 0x35,
+0xcb, 0x34, 0xad, 0x52,
+0x2d, 0xd2, 0xb2, 0x4d,
+0xad, 0x52, 0x4d, 0xb2,
+0xaa, 0x55, 0x4b, 0xb4,
+0xb2, 0x4d, 0xcb, 0x34,
+0x53, 0xac, 0x4a, 0xb5,
+0x54, 0xab, 0x32, 0xcd,
+0x32, 0xcd, 0xaa, 0x55,
+0xb3, 0x4c, 0x53, 0xac,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xd4, 0x2b, 0x2d, 0xd2,
+0xca, 0x35, 0xb5, 0x4a,
+0xab, 0x54, 0xd5, 0x2a,
+0x2d, 0xd2, 0xaa, 0x55,
+0x33, 0xcc, 0x54, 0xab,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x4c, 0xb3, 0xcc, 0x33,
+0xcb, 0x34, 0x35, 0xca,
+0xd4, 0x2b, 0xb3, 0x4c,
+0x2d, 0xd2, 0xb2, 0x4d,
+0xcb, 0x34, 0x4b, 0xb4,
+0xaa, 0x55, 0xab, 0x54,
+0x4d, 0xb2, 0xca, 0x35,
+0x53, 0xac, 0x4c, 0xb3,
+0x34, 0xcb, 0x32, 0xcd,
+0xd2, 0x2d, 0xab, 0x54,
+0xad, 0x52, 0x53, 0xac,
+0x4a, 0xb5, 0x4c, 0xb3,
+0xd2, 0x2d, 0xcd, 0x32,
+0xd5, 0x2a, 0x4b, 0xb4,
+0xaa, 0x55, 0xd3, 0x2c,
+0x4b, 0xb4, 0xca, 0x35,
+0xd3, 0x2c, 0xb5, 0x4a,
+0x35, 0xca, 0x32, 0xcd,
+0x2a, 0xd5, 0xca, 0x35,
+0xad, 0x52, 0xd3, 0x2c,
+0x2b, 0xd4, 0x52, 0xad,
+0xd2, 0x2d, 0xb5, 0x4a,
+0xab, 0x54, 0x4d, 0xb2,
+0x2a, 0xd5, 0xaa, 0x55,
+0xb3, 0x4c, 0xcb, 0x34,
+0x2b, 0xd4, 0x2c, 0xd3,
+0x54, 0xab, 0xb2, 0x4d,
+0xcb, 0x34, 0xb5, 0x4a,
+0xb3, 0x4c, 0xab, 0x54,
+0x2d, 0xd2, 0x2a, 0xd5,
+0x54, 0xab, 0x4c, 0xb3,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xd3, 0x2c, 0xcb, 0x34,
+0x4b, 0xb4, 0x2a, 0xd5,
+0x4a, 0xb5, 0xb2, 0x4d,
+0x35, 0xca, 0xd4, 0x2b,
+0xb5, 0x4a, 0xcb, 0x34,
+0x4d, 0xb2, 0xd4, 0x2b,
+0x55, 0xaa, 0x52, 0xad,
+0x54, 0xab, 0xd4, 0x2b,
+0xb3, 0x4c, 0xad, 0x52,
+0x53, 0xac, 0x34, 0xcb,
+0xb4, 0x4b, 0x2d, 0xd2,
+0x52, 0xad, 0xb2, 0x4d,
+0xb5, 0x4a, 0x55, 0xaa,
+0xb2, 0x4d, 0xcb, 0x34,
+0x35, 0xca, 0x4c, 0xb3,
+0x54, 0xab, 0xd2, 0x2d,
+0xcd, 0x32, 0xab, 0x54,
+0xb3, 0x4c, 0x55, 0xaa,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x34, 0xcb, 0x2c, 0xd3,
+0xd4, 0x2b, 0xb5, 0x4a,
+0xcd, 0x32, 0xb5, 0x4a,
+0x2b, 0xd4, 0x4a, 0xb5,
+0x2c, 0xd3, 0xaa, 0x55,
+0x2b, 0xd4, 0x2a, 0xd5,
+0x2a, 0xd5, 0xac, 0x53,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xcb, 0x34, 0xad, 0x52,
+0x4b, 0xb4, 0xb4, 0x4b,
+0xad, 0x52, 0xad, 0x52,
+0x55, 0xaa, 0x4a, 0xb5,
+0xb2, 0x4d, 0xcd, 0x32,
+0x33, 0xcc, 0x4a, 0xb5,
+0xb4, 0x4b, 0x33, 0xcc,
+0x2c, 0xd3, 0xaa, 0x55,
+0xd5, 0x2a, 0x33, 0xcc,
+0x2a, 0xd5, 0xcc, 0x33,
+0xcb, 0x34, 0xd3, 0x2c,
+0xcb, 0x34, 0xb3, 0x4c,
+0xcd, 0x32, 0xb5, 0x4a,
+0xcd, 0x32, 0x4b, 0xb4,
+0x2c, 0xd3, 0x4a, 0xb5,
+0x4c, 0xb3, 0x2a, 0xd5,
+0x2a, 0xd5, 0x2a, 0xd5,
+0x34, 0xcb, 0xd4, 0x2b,
+0x2b, 0xd4, 0xb4, 0x4b,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x4b, 0xb4, 0x4a, 0xb5,
+0x54, 0xab, 0xaa, 0x55,
+0x35, 0xca, 0xaa, 0x55,
+0x33, 0xcc, 0xcc, 0x33,
+0x2d, 0xd2, 0x2c, 0xd3,
+0xcc, 0x33, 0x53, 0xac,
+0xca, 0x35, 0x35, 0xca,
+0xcc, 0x33, 0xcd, 0x32,
+0x2d, 0xd2, 0x32, 0xcd,
+0xac, 0x53, 0x53, 0xac,
+0xaa, 0x55, 0x33, 0xcc,
+0xd2, 0x2d, 0xcd, 0x32,
+0xd3, 0x2c, 0x53, 0xac,
+0xaa, 0x55, 0x33, 0xcc,
+0xca, 0x35, 0xcd, 0x32,
+0xd3, 0x2c, 0xd3, 0x2c,
+0xad, 0x52, 0x33, 0xcc,
+0xca, 0x35, 0x55, 0xaa,
+0xd2, 0x2d, 0xd3, 0x2c,
+0x2d, 0xd2, 0x4c, 0xb3,
+0xca, 0x35, 0x55, 0xaa,
+0xca, 0x35, 0xcb, 0x34,
+0x2d, 0xd2, 0xcc, 0x33,
+0x4d, 0xb2, 0x52, 0xad,
+0xca, 0x35, 0x53, 0xac,
+0xb4, 0x4b, 0xcd, 0x32,
+0xcd, 0x32, 0xad, 0x52,
+0xb5, 0x4a, 0x53, 0xac,
+0xac, 0x53, 0xcd, 0x32,
+0xd5, 0x2a, 0x2d, 0xd2,
+0xb2, 0x4d, 0xd3, 0x2c,
+0xab, 0x54, 0x55, 0xaa,
+0xd4, 0x2b, 0xb5, 0x4a,
+0x33, 0xcc, 0xac, 0x53,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xcc, 0x33, 0xad, 0x52,
+0x2b, 0xd4, 0x34, 0xcb,
+0xac, 0x53, 0xad, 0x52,
+0x4b, 0xb4, 0x32, 0xcd,
+0xb2, 0x4d, 0xad, 0x52,
+0xb5, 0x4a, 0x53, 0xac,
+0xb4, 0x4b, 0xcd, 0x32,
+0xd5, 0x2a, 0xad, 0x52,
+0xb5, 0x4a, 0xd3, 0x2c,
+0xab, 0x54, 0xcd, 0x32,
+0xd5, 0x2a, 0xb5, 0x4a,
+0xb3, 0x4c, 0xd3, 0x2c,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xd4, 0x2b, 0xb5, 0x4a,
+0x2b, 0xd4, 0xb4, 0x4b,
+0x2b, 0xd4, 0xaa, 0x55,
+0x4b, 0xb4, 0xaa, 0x55,
+0x2b, 0xd4, 0xac, 0x53,
+0x35, 0xca, 0xac, 0x53,
+0xcb, 0x34, 0xcd, 0x32,
+0xcd, 0x32, 0xad, 0x52,
+0xad, 0x52, 0x53, 0xac,
+0xac, 0x53, 0x4d, 0xb2,
+0xd2, 0x2d, 0x2d, 0xd2,
+0xb2, 0x4d, 0x4b, 0xb4,
+0xaa, 0x55, 0x55, 0xaa,
+0x54, 0xab, 0xca, 0x35,
+0x33, 0xcc, 0xac, 0x53,
+0x33, 0xcc, 0x32, 0xcd,
+0xcc, 0x33, 0x2d, 0xd2,
+0xac, 0x53, 0x33, 0xcc,
+0xac, 0x53, 0x35, 0xca,
+0xd2, 0x2d, 0x33, 0xcc,
+0x32, 0xcd, 0x52, 0xad,
+0xca, 0x35, 0x53, 0xac,
+0xac, 0x53, 0xcd, 0x32,
+0xcd, 0x32, 0x2d, 0xd2,
+0xb2, 0x4d, 0x53, 0xac,
+0xac, 0x53, 0x55, 0xaa,
+0xd4, 0x2b, 0x2d, 0xd2,
+0x32, 0xcd, 0xac, 0x53,
+0xab, 0x54, 0x55, 0xaa,
+0xcc, 0x33, 0xad, 0x52,
+0x33, 0xcc, 0x2c, 0xd3,
+0xac, 0x53, 0x2d, 0xd2,
+0xcc, 0x33, 0x35, 0xca,
+0xb2, 0x4d, 0x35, 0xca,
+0x2c, 0xd3, 0x52, 0xad,
+0x34, 0xcb, 0x32, 0xcd,
+0xaa, 0x55, 0xad, 0x52,
+0xad, 0x52, 0xd3, 0x2c,
+0xb3, 0x4c, 0x4d, 0xb2,
+0xd2, 0x2d, 0x35, 0xca,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x2a, 0xd5, 0xb2, 0x4d,
+0x55, 0xaa, 0xca, 0x35,
+0xab, 0x54, 0xcb, 0x34,
+0x33, 0xcc, 0xb2, 0x4d,
+0x53, 0xac, 0x32, 0xcd,
+0xac, 0x53, 0x2b, 0xd4,
+0xb2, 0x4d, 0x33, 0xcc,
+0x52, 0xad, 0x54, 0xab,
+0xd4, 0x2b, 0x53, 0xac,
+0x52, 0xad, 0xac, 0x53,
+0xcb, 0x34, 0x4d, 0xb2,
+0xd2, 0x2d, 0xad, 0x52,
+0xad, 0x52, 0x4b, 0xb4,
+0xaa, 0x55, 0x4d, 0xb2,
+0x52, 0xad, 0xca, 0x35,
+0xb3, 0x4c, 0x4b, 0xb4,
+0x32, 0xcd, 0x32, 0xcd,
+0x54, 0xab, 0x4a, 0xb5,
+0xac, 0x53, 0xb3, 0x4c,
+0x33, 0xcc, 0x2a, 0xd5,
+0xd2, 0x2d, 0x2b, 0xd4,
+0x2c, 0xd3, 0x54, 0xab,
+0x4a, 0xb5, 0x34, 0xcb,
+0x4a, 0xb5, 0xcc, 0x33,
+0x55, 0xaa, 0xd2, 0x2d,
+0xd5, 0x2a, 0xd3, 0x2c,
+0xb3, 0x4c, 0xd5, 0x2a,
+0xcb, 0x34, 0x35, 0xca,
+0x34, 0xcb, 0xb4, 0x4b,
+0x2d, 0xd2, 0xb2, 0x4d,
+0x4d, 0xb2, 0x4a, 0xb5,
+0xaa, 0x55, 0x4b, 0xb4,
+0x34, 0xcb, 0xca, 0x35,
+0x53, 0xac, 0xaa, 0x55,
+0x2d, 0xd2, 0x32, 0xcd,
+0x32, 0xcd, 0x4c, 0xb3,
+0xaa, 0x55, 0x53, 0xac,
+0xcc, 0x33, 0xcb, 0x34,
+0xd3, 0x2c, 0x2d, 0xd2,
+0x4c, 0xb3, 0x32, 0xcd,
+0xaa, 0x55, 0x35, 0xca,
+0xb4, 0x4b, 0xd3, 0x2c,
+0x33, 0xcc, 0xb2, 0x4d,
+0xd5, 0x2a, 0x35, 0xca,
+0xac, 0x53, 0xcb, 0x34,
+0x2b, 0xd4, 0x32, 0xcd,
+0x52, 0xad, 0xb2, 0x4d,
+0xab, 0x54, 0x53, 0xac,
+0xb2, 0x4d, 0xab, 0x54,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x54, 0xab, 0x2c, 0xd3,
+0xaa, 0x55, 0xab, 0x54,
+0xd3, 0x2c, 0xd5, 0x2a,
+0x53, 0xac, 0x2c, 0xd3,
+0x2a, 0xd5, 0x34, 0xcb,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x4b, 0xb4, 0x52, 0xad,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xb5, 0x4a, 0xcd, 0x32,
+0x4b, 0xb4, 0xca, 0x35,
+0xb5, 0x4a, 0xb3, 0x4c,
+0x35, 0xca, 0xd2, 0x2d,
+0xd5, 0x2a, 0xcb, 0x34,
+0xad, 0x52, 0xd5, 0x2a,
+0x4b, 0xb4, 0x52, 0xad,
+0x32, 0xcd, 0xb4, 0x4b,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x4c, 0xb3, 0xca, 0x35,
+0xb5, 0x4a, 0x2b, 0xd4,
+0x34, 0xcb, 0xd2, 0x2d,
+0x55, 0xaa, 0xb4, 0x4b,
+0xad, 0x52, 0xd5, 0x2a,
+0x53, 0xac, 0x4a, 0xb5,
+0x32, 0xcd, 0x34, 0xcb,
+0x32, 0xcd, 0x4a, 0xb5,
+0x4c, 0xb3, 0x52, 0xad,
+0x2c, 0xd3, 0x2a, 0xd5,
+0xb4, 0x4b, 0x2d, 0xd2,
+0x2a, 0xd5, 0xb4, 0x4b,
+0xb5, 0x4a, 0xd5, 0x2a,
+0x4b, 0xb4, 0xca, 0x35,
+0x35, 0xca, 0xb4, 0x4b,
+0x35, 0xca, 0xd2, 0x2d,
+0x4d, 0xb2, 0xca, 0x35,
+0xad, 0x52, 0x55, 0xaa,
+0x34, 0xcb, 0x52, 0xad,
+0x32, 0xcd, 0xac, 0x53,
+0xad, 0x52, 0x4d, 0xb2,
+0xcc, 0x33, 0x4d, 0xb2,
+0xb2, 0x4d, 0x2b, 0xd4,
+0xac, 0x53, 0x4b, 0xb4,
+0x54, 0xab, 0x34, 0xcb,
+0x52, 0xad, 0xaa, 0x55,
+0x53, 0xac, 0x52, 0xad,
+0x32, 0xcd, 0x2c, 0xd3,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xcc, 0x33, 0x55, 0xaa,
+0xb4, 0x4b, 0x2b, 0xd4,
+0x2c, 0xd3, 0xac, 0x53,
+0x55, 0xaa, 0x34, 0xcb,
+0xca, 0x35, 0xcd, 0x32,
+0x53, 0xac, 0xd2, 0x2d,
+0xad, 0x52, 0x33, 0xcc,
+0xb2, 0x4d, 0x55, 0xaa,
+0xd2, 0x2d, 0x53, 0xac,
+0x34, 0xcb, 0x4c, 0xb3,
+0xca, 0x35, 0xad, 0x52,
+0xcd, 0x32, 0xcb, 0x34,
+0xad, 0x52, 0x4d, 0xb2,
+0x4c, 0xb3, 0x52, 0xad,
+0xb2, 0x4d, 0x2b, 0xd4,
+0xb4, 0x4b, 0x4d, 0xb2,
+0x54, 0xab, 0xb4, 0x4b,
+0xb5, 0x4a, 0xab, 0x54,
+0x53, 0xac, 0xca, 0x35,
+0x55, 0xaa, 0x2c, 0xd3,
+0x32, 0xcd, 0xd2, 0x2d,
+0xd3, 0x2c, 0x55, 0xaa,
+0xac, 0x53, 0x35, 0xca,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x32, 0xcd, 0xd2, 0x2d,
+0xcb, 0x34, 0x55, 0xaa,
+0xac, 0x53, 0xb5, 0x4a,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x32, 0xcd, 0x4a, 0xb5,
+0xca, 0x35, 0x55, 0xaa,
+0x2c, 0xd3, 0xca, 0x35,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x2a, 0xd5, 0x52, 0xad,
+0xca, 0x35, 0xd5, 0x2a,
+0xab, 0x54, 0xcd, 0x32,
+0x2d, 0xd2, 0xb4, 0x4b,
+0xb3, 0x4c, 0x53, 0xac,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xd4, 0x2b, 0xcd, 0x32,
+0x35, 0xca, 0xb4, 0x4b,
+0xab, 0x54, 0xd3, 0x2c,
+0x4d, 0xb2, 0xaa, 0x55,
+0xd3, 0x2c, 0x55, 0xaa,
+0x34, 0xcb, 0x2c, 0xd3,
+0x2a, 0xd5, 0xac, 0x53,
+0xcd, 0x32, 0xd5, 0x2a,
+0xcb, 0x34, 0x4d, 0xb2,
+0x2c, 0xd3, 0xb4, 0x4b,
+0xad, 0x52, 0x2b, 0xd4,
+0x4a, 0xb5, 0x4a, 0xb5,
+0x52, 0xad, 0xd4, 0x2b,
+0x35, 0xca, 0x4a, 0xb5,
+0x52, 0xad, 0xd4, 0x2b,
+0x2d, 0xd2, 0x4a, 0xb5,
+0x52, 0xad, 0x54, 0xab,
+0x2a, 0xd5, 0x4a, 0xb5,
+0x52, 0xad, 0xcc, 0x33,
+0x2b, 0xd4, 0x4a, 0xb5,
+0xd2, 0x2d, 0xb3, 0x4c,
+0x2b, 0xd4, 0x4a, 0xb5,
+0xca, 0x35, 0xab, 0x54,
+0x2b, 0xd4, 0xca, 0x35,
+0x4d, 0xb2, 0xac, 0x53,
+0x2b, 0xd4, 0x52, 0xad,
+0xd4, 0x2b, 0xad, 0x52,
+0xab, 0x54, 0xad, 0x52,
+0xab, 0x54, 0xad, 0x52,
+0xb3, 0x4c, 0xad, 0x52,
+0xb3, 0x4c, 0x2d, 0xd2,
+0xb4, 0x4b, 0x2d, 0xd2,
+0xb4, 0x4b, 0xb5, 0x4a,
+0xb5, 0x4a, 0xb5, 0x4a,
+0x35, 0xca, 0xca, 0x35,
+0x35, 0xca, 0xca, 0x35,
+0x2d, 0xd2, 0xd2, 0x2d,
+0x2d, 0xd2, 0x52, 0xad,
+0xaa, 0x55, 0x55, 0xaa,
+0xaa, 0x55, 0xcd, 0x32,
+0x33, 0xcc, 0xcc, 0x33,
+0xb3, 0x4c, 0x33, 0xcc,
+0xcc, 0x33, 0x33, 0xcc,
+0xd4, 0x2b, 0x33, 0xcc,
+0xcc, 0x33, 0xb3, 0x4c,
+0xcb, 0x34, 0x33, 0xcc,
+0xcc, 0x33, 0xab, 0x54,
+0xcd, 0x32, 0x33, 0xcc,
+0x4c, 0xb3, 0x4c, 0xb3,
+0xcc, 0x33, 0x33, 0xcc,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xcc, 0x33, 0xb3, 0x4c,
+0x4b, 0xb4, 0x34, 0xcb,
+0xcc, 0x33, 0xab, 0x54,
+0x55, 0xaa, 0x32, 0xcd,
+0x4c, 0xb3, 0xcc, 0x33,
+0xb3, 0x4c, 0x33, 0xcc,
+0xd4, 0x2b, 0x33, 0xcc,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xcb, 0x34, 0xb3, 0x4c,
+0xcb, 0x34, 0xab, 0x54,
+0xcd, 0x32, 0xab, 0x54,
+0x4d, 0xb2, 0x4c, 0xb3,
+0x4c, 0xb3, 0x4c, 0xb3,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xd4, 0x2b, 0xab, 0x54,
+0x4b, 0xb4, 0xb4, 0x4b,
+0x4b, 0xb4, 0xac, 0x53,
+0x55, 0xaa, 0xaa, 0x55,
+0xd5, 0x2a, 0xcd, 0x32,
+0x33, 0xcc, 0xcc, 0x33,
+0xab, 0x54, 0x33, 0xcc,
+0xcc, 0x33, 0xb3, 0x4c,
+0xd3, 0x2c, 0x33, 0xcc,
+0xcc, 0x33, 0x2b, 0xd4,
+0xca, 0x35, 0x33, 0xcc,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xcd, 0x32, 0x33, 0xcc,
+0x54, 0xab, 0x54, 0xab,
+0xcc, 0x33, 0xb3, 0x4c,
+0x53, 0xac, 0x2c, 0xd3,
+0xcc, 0x33, 0x2b, 0xd4,
+0xd2, 0x2d, 0x35, 0xca,
+0x4c, 0xb3, 0x54, 0xab,
+0x2a, 0xd5, 0x32, 0xcd,
+0x54, 0xab, 0xcc, 0x33,
+0xab, 0x54, 0xb3, 0x4c,
+0xd3, 0x2c, 0xb3, 0x4c,
+0xd3, 0x2c, 0x2b, 0xd4,
+0xca, 0x35, 0x2b, 0xd4,
+0x4a, 0xb5, 0xd4, 0x2b,
+0x4d, 0xb2, 0xd4, 0x2b,
+0x55, 0xaa, 0x54, 0xab,
+0x54, 0xab, 0xd4, 0x2b,
+0x53, 0xac, 0xac, 0x53,
+0x53, 0xac, 0x34, 0xcb,
+0xd2, 0x2d, 0x2d, 0xd2,
+0x52, 0xad, 0x52, 0xad,
+0xaa, 0x55, 0x55, 0xaa,
+0xb2, 0x4d, 0xcd, 0x32,
+0x33, 0xcc, 0x4c, 0xb3,
+0xb4, 0x4b, 0x33, 0xcc,
+0xcc, 0x33, 0xab, 0x54,
+0xd5, 0x2a, 0x33, 0xcc,
+0x4c, 0xb3, 0xcc, 0x33,
+0xcb, 0x34, 0x33, 0xcc,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xcd, 0x32, 0xb3, 0x4c,
+0xcb, 0x34, 0x4b, 0xb4,
+0xcc, 0x33, 0xab, 0x54,
+0x4d, 0xb2, 0x2a, 0xd5,
+0x4c, 0xb3, 0x4c, 0xb3,
+0x34, 0xcb, 0x34, 0xcb,
+0xd4, 0x2b, 0xab, 0x54,
+0x4d, 0xb2, 0xb2, 0x4d,
+0x4b, 0xb4, 0x4c, 0xb3,
+0xb4, 0x4b, 0xab, 0x54,
+0xd5, 0x2a, 0xab, 0x54,
+0x55, 0xaa, 0xcc, 0x33,
+0x4b, 0xb4, 0xcc, 0x33,
+0xd3, 0x2c, 0xb3, 0x4c,
+0xd5, 0x2a, 0x33, 0xcc,
+0xca, 0x35, 0xcb, 0x34,
+0xcb, 0x34, 0xd3, 0x2c,
+0x4d, 0xb2, 0xb2, 0x4d,
+0xcd, 0x32, 0x55, 0xaa,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x2c, 0xd3, 0xac, 0x53,
+0x55, 0xaa, 0x2a, 0xd5,
+0xca, 0x35, 0xcd, 0x32,
+0x33, 0xcc, 0xd4, 0x2b,
+0xad, 0x52, 0x33, 0xcc,
+0x4c, 0xb3, 0x54, 0xab,
+0xd2, 0x2d, 0x33, 0xcc,
+0x54, 0xab, 0x4c, 0xb3,
+0xca, 0x35, 0xb3, 0x4c,
+0xd3, 0x2c, 0xcb, 0x34,
+0xcd, 0x32, 0x2b, 0xd4,
+0x4a, 0xb5, 0x52, 0xad,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xb5, 0x4a, 0x2d, 0xd2,
+0x54, 0xab, 0xd4, 0x2b,
+0xb5, 0x4a, 0xb5, 0x4a,
+0x53, 0xac, 0xd4, 0x2b,
+0x35, 0xca, 0x2a, 0xd5,
+0x52, 0xad, 0xd4, 0x2b,
+0x2d, 0xd2, 0x54, 0xab,
+0x52, 0xad, 0x54, 0xab,
+0x4a, 0xb5, 0x4c, 0xb3,
+0x52, 0xad, 0xcc, 0x33,
+0xd5, 0x2a, 0x4b, 0xb4,
+0xd2, 0x2d, 0xd3, 0x2c,
+0x4b, 0xb4, 0x4a, 0xb5,
+0xca, 0x35, 0xb5, 0x4a,
+0x35, 0xca, 0xca, 0x35,
+0x2d, 0xd2, 0xca, 0x35,
+0x2d, 0xd2, 0x52, 0xad,
+0x2a, 0xd5, 0x52, 0xad,
+0xaa, 0x55, 0xcd, 0x32,
+0xab, 0x54, 0xcd, 0x32,
+0xb3, 0x4c, 0xb3, 0x4c,
+0xb3, 0x4c, 0x33, 0xcc,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xd4, 0x2b, 0xb3, 0x4c,
+0x4b, 0xb4, 0xb4, 0x4b,
+0xcb, 0x34, 0xab, 0x54,
+0x55, 0xaa, 0xaa, 0x55,
+0x4d, 0xb2, 0xcc, 0x33,
+0x33, 0xcc, 0x4c, 0xb3,
+0xd4, 0x2b, 0x33, 0xcc,
+0xcc, 0x33, 0xab, 0x54,
+0xcb, 0x34, 0x33, 0xcc,
+0x4c, 0xb3, 0xac, 0x53,
+0xcd, 0x32, 0x33, 0xcc,
+0xd4, 0x2b, 0x4d, 0xb2,
+0xcc, 0x33, 0xb3, 0x4c,
+0xab, 0x54, 0x2b, 0xd4,
+0xcc, 0x33, 0xab, 0x54,
+0x53, 0xac, 0x34, 0xcb,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x52, 0xad, 0x32, 0xcd,
+0xd4, 0x2b, 0x55, 0xaa,
+0xb2, 0x4d, 0xb3, 0x4c,
+0x2b, 0xd4, 0x4c, 0xb3,
+0xd4, 0x2b, 0xab, 0x54,
+0xcb, 0x34, 0xab, 0x54,
+0x4b, 0xb4, 0xac, 0x53,
+0x4d, 0xb2, 0xac, 0x53,
+0xd5, 0x2a, 0x4d, 0xb2,
+0xd4, 0x2b, 0xcd, 0x32,
+0xab, 0x54, 0xab, 0x54,
+0xab, 0x54, 0xb3, 0x4c,
+0x53, 0xac, 0xac, 0x53,
+0xd3, 0x2c, 0x2b, 0xd4,
+0xd2, 0x2d, 0x2d, 0xd2,
+0x4a, 0xb5, 0x54, 0xab,
+0xaa, 0x55, 0xd5, 0x2a,
+0x55, 0xaa, 0xcc, 0x33,
+0x33, 0xcc, 0xd4, 0x2b,
+0xd3, 0x2c, 0x33, 0xcc,
+0x4c, 0xb3, 0x34, 0xcb,
+0xca, 0x35, 0x33, 0xcc,
+0x54, 0xab, 0xd2, 0x2d,
+0xcd, 0x32, 0xb3, 0x4c,
+0xb3, 0x4c, 0x55, 0xaa,
+0xcc, 0x33, 0x2b, 0xd4,
+0x34, 0xcb, 0x2c, 0xd3,
+0x4c, 0xb3, 0xb4, 0x4b,
+0xcd, 0x32, 0x35, 0xca,
+0x54, 0xab, 0x4a, 0xb5,
+0x2c, 0xd3, 0xb2, 0x4d,
+0x33, 0xcc, 0x2a, 0xd5,
+0xaa, 0x55, 0x2b, 0xd4,
+0x2c, 0xd3, 0xd4, 0x2b,
+0x53, 0xac, 0x34, 0xcb,
+0x4a, 0xb5, 0x34, 0xcb,
+0x52, 0xad, 0xd2, 0x2d,
+0x55, 0xaa, 0x52, 0xad,
+0xb2, 0x4d, 0xd5, 0x2a,
+0xb3, 0x4c, 0x4d, 0xb2,
+0x34, 0xcb, 0x34, 0xcb,
+0xb4, 0x4b, 0xab, 0x54,
+0x4d, 0xb2, 0xb2, 0x4d,
+0x55, 0xaa, 0x4c, 0xb3,
+0xb4, 0x4b, 0xcb, 0x34,
+0xd3, 0x2c, 0xab, 0x54,
+0x55, 0xaa, 0x32, 0xcd,
+0x4a, 0xb5, 0xcc, 0x33,
+0xb3, 0x4c, 0xd3, 0x2c,
+0xd5, 0x2a, 0x33, 0xcc,
+0xd4, 0x2b, 0xd5, 0x2a,
+0xcb, 0x34, 0xb3, 0x4c,
+0x2b, 0xd4, 0xb4, 0x4b,
+0xcd, 0x32, 0xab, 0x54,
+0x4b, 0xb4, 0x4a, 0xb5,
+0x4c, 0xb3, 0xac, 0x53,
+0x35, 0xca, 0x2a, 0xd5,
+0xd4, 0x2b, 0xcd, 0x32,
+0x2d, 0xd2, 0xb4, 0x4b,
+0xab, 0x54, 0x53, 0xac,
+0x4a, 0xb5, 0xaa, 0x55,
+0xd3, 0x2c, 0xcd, 0x32,
+0x35, 0xca, 0x2c, 0xd3,
+0xaa, 0x55, 0xd3, 0x2c,
+0xcd, 0x32, 0xd5, 0x2a,
+0xd3, 0x2c, 0x55, 0xaa,
+0x2c, 0xd3, 0x34, 0xcb,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x4a, 0xb5, 0xd2, 0x2d,
+0xcb, 0x34, 0xd5, 0x2a,
+0xb5, 0x4a, 0xb5, 0x4a,
+0x2d, 0xd2, 0xd4, 0x2b,
+0x35, 0xca, 0x4a, 0xb5,
+0x4a, 0xb5, 0xd4, 0x2b,
+0x2d, 0xd2, 0xca, 0x35,
+0x55, 0xaa, 0x54, 0xab,
+0x2a, 0xd5, 0xd2, 0x2d,
+0x53, 0xac, 0xcc, 0x33,
+0xab, 0x54, 0x35, 0xca,
+0xd2, 0x2d, 0xb3, 0x4c,
+0x33, 0xcc, 0x52, 0xad,
+0xca, 0x35, 0x2b, 0xd4,
+0xac, 0x53, 0xcd, 0x32,
+0x4d, 0xb2, 0x34, 0xcb,
+0xb2, 0x4d, 0x53, 0xac,
+0x54, 0xab, 0x52, 0xad,
+0xd4, 0x2b, 0xad, 0x52,
+0xb3, 0x4c, 0xad, 0x52,
+0xab, 0x54, 0x2d, 0xd2,
+0xb4, 0x4b, 0xad, 0x52,
+0xb3, 0x4c, 0xb5, 0x4a,
+0xb5, 0x4a, 0x2d, 0xd2,
+0x34, 0xcb, 0xca, 0x35,
+0xb5, 0x4a, 0xb5, 0x4a,
+0x2d, 0xd2, 0xd2, 0x2d,
+0x35, 0xca, 0x4a, 0xb5,
+0xaa, 0x55, 0xd5, 0x2a,
+0x2d, 0xd2, 0xca, 0x35,
+0x33, 0xcc, 0x54, 0xab,
+0x2a, 0xd5, 0x32, 0xcd,
+0x4c, 0xb3, 0xcc, 0x33,
+0xab, 0x54, 0x33, 0xcc,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xd3, 0x2c, 0xb3, 0x4c,
+0xcb, 0x34, 0x2b, 0xd4,
+0xca, 0x35, 0xab, 0x54,
+0x4d, 0xb2, 0xd4, 0x2b,
+0x4d, 0xb2, 0x4c, 0xb3,
+0x54, 0xab, 0x54, 0xab,
+0xd4, 0x2b, 0xab, 0x54,
+0x53, 0xac, 0xac, 0x53,
+0x4b, 0xb4, 0x2c, 0xd3,
+0xd2, 0x2d, 0xad, 0x52,
+0xd5, 0x2a, 0x55, 0xaa,
+0xaa, 0x55, 0xcd, 0x32,
+0x2b, 0xd4, 0xcc, 0x33,
+0xb3, 0x4c, 0xb3, 0x4c,
+0xcb, 0x34, 0x33, 0xcc,
+0xd4, 0x2b, 0xab, 0x54,
+0xcd, 0x32, 0xb3, 0x4c,
+0x4b, 0xb4, 0x4c, 0xb3,
+0xcc, 0x33, 0xab, 0x54,
+0xd5, 0x2a, 0x2b, 0xd4,
+0x4c, 0xb3, 0xcc, 0x33,
+0x4b, 0xb4, 0x34, 0xcb,
+0xd4, 0x2b, 0xb3, 0x4c,
+0x55, 0xaa, 0xb2, 0x4d,
+0xcb, 0x34, 0xcb, 0x34,
+0xb3, 0x4c, 0xab, 0x54,
+0x4d, 0xb2, 0x32, 0xcd,
+0x54, 0xab, 0x4c, 0xb3,
+0xb4, 0x4b, 0xb3, 0x4c,
+0xd3, 0x2c, 0xab, 0x54,
+0xd5, 0x2a, 0x2b, 0xd4,
+0x4a, 0xb5, 0xcc, 0x33,
+0x4b, 0xb4, 0xd4, 0x2b,
+0xd5, 0x2a, 0xb3, 0x4c,
+0x55, 0xaa, 0xd4, 0x2b,
+0xcb, 0x34, 0xcb, 0x34,
+0x53, 0xac, 0xb4, 0x4b,
+0x4d, 0xb2, 0x32, 0xcd,
+0x52, 0xad, 0x4a, 0xb5,
+0xb4, 0x4b, 0x53, 0xac,
+0x32, 0xcd, 0xaa, 0x55,
+0xd5, 0x2a, 0x4d, 0xb2,
+0x2c, 0xd3, 0xcc, 0x33,
+0xab, 0x54, 0x2b, 0xd4,
+0xca, 0x35, 0xb3, 0x4c,
+0x53, 0xac, 0xd4, 0x2b,
+0xcd, 0x32, 0x2b, 0xd4,
+0x52, 0xad, 0x54, 0xab,
+0x4c, 0xb3, 0x54, 0xab,
+0x52, 0xad, 0x2c, 0xd3,
+0x54, 0xab, 0x4c, 0xb3,
+0xd2, 0x2d, 0xb5, 0x4a,
+0xd3, 0x2c, 0x4b, 0xb4,
+0x2a, 0xd5, 0x2a, 0xd5,
+0x4a, 0xb5, 0xca, 0x35,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x35, 0xca, 0xb2, 0x4d,
+0x4b, 0xb4, 0xd4, 0x2b,
+0xad, 0x52, 0xab, 0x54,
+0x55, 0xaa, 0x54, 0xab,
+0x52, 0xad, 0xcc, 0x33,
+0x53, 0xac, 0x4c, 0xb3,
+0xd2, 0x2d, 0x33, 0xcc,
+0xd2, 0x2d, 0x4b, 0xb4,
+0xca, 0x35, 0x53, 0xac,
+0x4a, 0xb5, 0xca, 0x35,
+0xcd, 0x32, 0xcd, 0x32,
+0x35, 0xca, 0x52, 0xad,
+0xac, 0x53, 0xd3, 0x2c,
+0xad, 0x52, 0x2d, 0xd2,
+0xd2, 0x2d, 0x55, 0xaa,
+0xb2, 0x4d, 0x55, 0xaa,
+0x2a, 0xd5, 0x4c, 0xb3,
+0x34, 0xcb, 0xcc, 0x33,
+0xcb, 0x34, 0xab, 0x54,
+0xcd, 0x32, 0xb3, 0x4c,
+0x4d, 0xb2, 0x4c, 0xb3,
+0xcc, 0x33, 0x4b, 0xb4,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x4c, 0xb3, 0xaa, 0x55,
+0x4b, 0xb4, 0x34, 0xcb,
+0x34, 0xcb, 0xac, 0x53,
+0x55, 0xaa, 0xb2, 0x4d,
+0xcd, 0x32, 0xcd, 0x32,
+0xb3, 0x4c, 0x4b, 0xb4,
+0xac, 0x53, 0x33, 0xcc,
+0x54, 0xab, 0x2a, 0xd5,
+0xd2, 0x2d, 0xb3, 0x4c,
+0x33, 0xcc, 0x54, 0xab,
+0xca, 0x35, 0x2b, 0xd4,
+0x4c, 0xb3, 0xcc, 0x33,
+0x4d, 0xb2, 0x34, 0xcb,
+0xd4, 0x2b, 0x53, 0xac,
+0x54, 0xab, 0xb2, 0x4d,
+0xcb, 0x34, 0xad, 0x52,
+0xb3, 0x4c, 0xab, 0x54,
+0xad, 0x52, 0x2d, 0xd2,
+0x54, 0xab, 0x4c, 0xb3,
+0xb2, 0x4d, 0xb5, 0x4a,
+0xd3, 0x2c, 0x4b, 0xb4,
+0x34, 0xcb, 0x2a, 0xd5,
+0x4a, 0xb5, 0xaa, 0x55,
+0x2d, 0xd2, 0xd4, 0x2b,
+0x35, 0xca, 0x4c, 0xb3,
+0x4a, 0xb5, 0xd4, 0x2b,
+0xcd, 0x32, 0xcb, 0x34,
+0x55, 0xaa, 0x54, 0xab,
+0x4c, 0xb3, 0xd2, 0x2d,
+0x53, 0xac, 0x2c, 0xd3,
+0xb4, 0x4b, 0x35, 0xca,
+0xd2, 0x2d, 0xb5, 0x4a,
+0x35, 0xca, 0x52, 0xad,
+0x2a, 0xd5, 0xca, 0x35,
+0xad, 0x52, 0xcd, 0x32,
+0x2b, 0xd4, 0x52, 0xad,
+0xb2, 0x4d, 0xb3, 0x4c,
+0xab, 0x54, 0x4d, 0xb2,
+0xd4, 0x2b, 0xab, 0x54,
+0xb3, 0x4c, 0xab, 0x54,
+0x4b, 0xb4, 0x2c, 0xd3,
+0x54, 0xab, 0xac, 0x53,
+0xd5, 0x2a, 0xb5, 0x4a,
+0xd3, 0x2c, 0xcd, 0x32,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xaa, 0x55, 0xb3, 0x4c,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xd3, 0x2c, 0xab, 0x54,
+0x4b, 0xb4, 0x34, 0xcb,
+0x4a, 0xb5, 0xac, 0x53,
+0x55, 0xaa, 0xd2, 0x2d,
+0xd5, 0x2a, 0xcd, 0x32,
+0xb3, 0x4c, 0xd5, 0x2a,
+0xab, 0x54, 0x33, 0xcc,
+0x34, 0xcb, 0xb4, 0x4b,
+0xd3, 0x2c, 0xb3, 0x4c,
+0x4d, 0xb2, 0x2a, 0xd5,
+0xca, 0x35, 0x4b, 0xb4,
+0x34, 0xcb, 0xd4, 0x2b,
+0x4d, 0xb2, 0xaa, 0x55,
+0x4d, 0xb2, 0x54, 0xab,
+0x34, 0xcb, 0x4c, 0xb3,
+0x54, 0xab, 0xac, 0x53,
+0xcd, 0x32, 0xab, 0x54,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x4c, 0xb3, 0x2c, 0xd3,
+0xaa, 0x55, 0x2b, 0xd4,
+0xd4, 0x2b, 0xd5, 0x2a,
+0x53, 0xac, 0xb4, 0x4b,
+0x2b, 0xd4, 0x34, 0xcb,
+0x52, 0xad, 0xaa, 0x55,
+0x4b, 0xb4, 0x52, 0xad,
+0x32, 0xcd, 0xac, 0x53,
+0xb5, 0x4a, 0x4d, 0xb2,
+0xcc, 0x33, 0xcd, 0x32,
+0xb5, 0x4a, 0x2b, 0xd4,
+0xac, 0x53, 0xd3, 0x2c,
+0x55, 0xaa, 0x34, 0xcb,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x53, 0xac, 0x52, 0xad,
+0x2a, 0xd5, 0x34, 0xcb,
+0xb2, 0x4d, 0xcd, 0x32,
+0x4b, 0xb4, 0x52, 0xad,
+0xb4, 0x4b, 0xb3, 0x4c,
+0xb5, 0x4a, 0xad, 0x52,
+0xd5, 0x2a, 0xcb, 0x34,
+0xb5, 0x4a, 0xcd, 0x32,
+0x4b, 0xb4, 0xd2, 0x2d,
+0xb5, 0x4a, 0xb3, 0x4c,
+0xb5, 0x4a, 0xd5, 0x2a,
+0xd5, 0x2a, 0xcb, 0x34,
+0x35, 0xca, 0xd4, 0x2b,
+0x4b, 0xb4, 0xd2, 0x2d,
+0x4d, 0xb2, 0xb4, 0x4b,
+0xb5, 0x4a, 0x55, 0xaa,
+0x54, 0xab, 0xca, 0x35,
+0x35, 0xca, 0xac, 0x53,
+0x33, 0xcc, 0xd2, 0x2d,
+0xcd, 0x32, 0x2d, 0xd2,
+0xac, 0x53, 0x55, 0xaa,
+0xac, 0x53, 0x35, 0xca,
+0x32, 0xcd, 0x2c, 0xd3,
+0x32, 0xcd, 0x52, 0xad,
+0xcc, 0x33, 0x55, 0xaa,
+0xac, 0x53, 0x2d, 0xd2,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xb2, 0x4d, 0x35, 0xca,
+0xca, 0x35, 0x55, 0xaa,
+0x34, 0xcb, 0xd2, 0x2d,
+0x2d, 0xd2, 0xac, 0x53,
+0xad, 0x52, 0x55, 0xaa,
+0xca, 0x35, 0x4d, 0xb2,
+0x32, 0xcd, 0xcc, 0x33,
+0xad, 0x52, 0x4b, 0xb4,
+0xcc, 0x33, 0x53, 0xac,
+0x52, 0xad, 0x2a, 0xd5,
+0xcc, 0x33, 0x4d, 0xb2,
+0x32, 0xcd, 0x34, 0xcb,
+0xac, 0x53, 0x4b, 0xb4,
+0x4c, 0xb3, 0x32, 0xcd,
+0x52, 0xad, 0x2a, 0xd5,
+0xb4, 0x4b, 0x53, 0xac,
+0x32, 0xcd, 0xb4, 0x4b,
+0xd5, 0x2a, 0x4d, 0xb2,
+0x4c, 0xb3, 0xca, 0x35,
+0xab, 0x54, 0x2b, 0xd4,
+0x34, 0xcb, 0xb2, 0x4d,
+0x53, 0xac, 0xb4, 0x4b,
+0xad, 0x52, 0x2b, 0xd4,
+0x52, 0xad, 0x4a, 0xb5,
+0x52, 0xad, 0x54, 0xab,
+0x32, 0xcd, 0x4a, 0xb5,
+0x52, 0xad, 0x4c, 0xb3,
+0x2c, 0xd3, 0x4a, 0xb5,
+0xd2, 0x2d, 0x2b, 0xd4,
+0x2a, 0xd5, 0x4a, 0xb5,
+0x4a, 0xb5, 0xd4, 0x2b,
+0x2b, 0xd4, 0xca, 0x35,
+0x55, 0xaa, 0xb4, 0x4b,
+0x2b, 0xd4, 0xd2, 0x2d,
+0x53, 0xac, 0xaa, 0x55,
+0xab, 0x54, 0x35, 0xca,
+0x32, 0xcd, 0xac, 0x53,
+0x33, 0xcc, 0x52, 0xad,
+0xcc, 0x33, 0x2d, 0xd2,
+0xac, 0x53, 0x2d, 0xd2,
+0xac, 0x53, 0x35, 0xca,
+0xb2, 0x4d, 0x35, 0xca,
+0x32, 0xcd, 0x52, 0xad,
+0x34, 0xcb, 0x52, 0xad,
+0xac, 0x53, 0xad, 0x52,
+0xad, 0x52, 0x2d, 0xd2,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xb2, 0x4d, 0x55, 0xaa,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x34, 0xcb, 0xac, 0x53,
+0x55, 0xaa, 0xaa, 0x55,
+0xcd, 0x32, 0xcd, 0x32,
+0x33, 0xcc, 0x4c, 0xb3,
+0xac, 0x53, 0x33, 0xcc,
+0xcc, 0x33, 0x2b, 0xd4,
+0xd2, 0x2d, 0x33, 0xcc,
+0x4c, 0xb3, 0x54, 0xab,
+0xca, 0x35, 0x33, 0xcc,
+0x54, 0xab, 0xcc, 0x33,
+0xcd, 0x32, 0xb3, 0x4c,
+0xd3, 0x2c, 0x53, 0xac,
+0xcc, 0x33, 0x2b, 0xd4,
+0xca, 0x35, 0x2d, 0xd2,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xad, 0x52, 0x35, 0xca,
+0x54, 0xab, 0x54, 0xab,
+0x32, 0xcd, 0xb2, 0x4d,
+0x53, 0xac, 0x4c, 0xb3,
+0xac, 0x53, 0x2b, 0xd4,
+0xd2, 0x2d, 0x2b, 0xd4,
+0x52, 0xad, 0x54, 0xab,
+0x4a, 0xb5, 0x54, 0xab,
+0x52, 0xad, 0xcc, 0x33,
+0x55, 0xaa, 0x4c, 0xb3,
+0xd2, 0x2d, 0xd3, 0x2c,
+0xd3, 0x2c, 0x4b, 0xb4,
+0xca, 0x35, 0x35, 0xca,
+0x4a, 0xb5, 0xca, 0x35,
+0x2d, 0xd2, 0xd2, 0x2d,
+0x35, 0xca, 0x52, 0xad,
+0xaa, 0x55, 0xd5, 0x2a,
+0xad, 0x52, 0xcd, 0x32,
+0x33, 0xcc, 0x54, 0xab,
+0xb2, 0x4d, 0x33, 0xcc,
+0x4c, 0xb3, 0x4c, 0xb3,
+0xd4, 0x2b, 0x33, 0xcc,
+0xd4, 0x2b, 0xab, 0x54,
+0xcb, 0x34, 0xb3, 0x4c,
+0x4b, 0xb4, 0xac, 0x53,
+0xcd, 0x32, 0xab, 0x54,
+0xd5, 0x2a, 0x4d, 0xb2,
+0x4c, 0xb3, 0xcc, 0x33,
+0xab, 0x54, 0x2b, 0xd4,
+0xd4, 0x2b, 0xb3, 0x4c,
+0x53, 0xac, 0xb4, 0x4b,
+0xcb, 0x34, 0x2b, 0xd4,
+0x52, 0xad, 0xaa, 0x55,
+0x4d, 0xb2, 0x54, 0xab,
+0x32, 0xcd, 0x4c, 0xb3,
+0x54, 0xab, 0x4c, 0xb3,
+0xcc, 0x33, 0xab, 0x54,
+0xd3, 0x2c, 0x2b, 0xd4,
+0x4c, 0xb3, 0x2c, 0xd3,
+0x4a, 0xb5, 0x34, 0xcb,
+0xd4, 0x2b, 0xd5, 0x2a,
+0x55, 0xaa, 0xb2, 0x4d,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xb3, 0x4c, 0xab, 0x54,
+0x4b, 0xb4, 0x34, 0xcb,
+0x54, 0xab, 0xac, 0x53,
+0x55, 0xaa, 0xb2, 0x4d,
+0xd3, 0x2c, 0xcd, 0x32,
+0xb3, 0x4c, 0x2b, 0xd4,
+0xaa, 0x55, 0x33, 0xcc,
+0x54, 0xab, 0xd4, 0x2b,
+0xd3, 0x2c, 0xb3, 0x4c,
+0x53, 0xac, 0x34, 0xcb,
+0xca, 0x35, 0x2b, 0xd4,
+0x52, 0xad, 0xd2, 0x2d,
+0x4d, 0xb2, 0x54, 0xab,
+0xb2, 0x4d, 0x55, 0xaa,
+0x54, 0xab, 0x4c, 0xb3,
+0x34, 0xcb, 0xac, 0x53,
+0xd3, 0x2c, 0xab, 0x54,
+0xcd, 0x32, 0x2d, 0xd2,
+0x4a, 0xb5, 0x4c, 0xb3,
+0xac, 0x53, 0xd5, 0x2a,
+0xd5, 0x2a, 0x2b, 0xd4,
+0x32, 0xcd, 0xd4, 0x2b,
+0x4b, 0xb4, 0x54, 0xab,
+0x4c, 0xb3, 0xb4, 0x4b,
+0x55, 0xaa, 0x2c, 0xd3,
+0x54, 0xab, 0xca, 0x35,
+0xd3, 0x2c, 0xb5, 0x4a,
+0x33, 0xcc, 0x32, 0xcd,
+0x2a, 0xd5, 0x2a, 0xd5,
+0xac, 0x53, 0xd3, 0x2c,
+0x2b, 0xd4, 0x34, 0xcb,
+0xd2, 0x2d, 0xb5, 0x4a,
+0x4b, 0xb4, 0x52, 0xad,
+0x2a, 0xd5, 0xaa, 0x55,
+0xb5, 0x4a, 0xcd, 0x32,
+0x2b, 0xd4, 0xcc, 0x33,
+0xb5, 0x4a, 0xb3, 0x4c,
+0xcb, 0x34, 0xd3, 0x2c,
+0xd5, 0x2a, 0xab, 0x54,
+0xcd, 0x32, 0xd5, 0x2a,
+0x4b, 0xb4, 0x4c, 0xb3,
+0x2c, 0xd3, 0xb4, 0x4b,
+0xd5, 0x2a, 0x2b, 0xd4,
+0x4a, 0xb5, 0xca, 0x35,
+0x4b, 0xb4, 0xd4, 0x2b,
+0x35, 0xca, 0xb2, 0x4d,
+0x55, 0xaa, 0xd4, 0x2b,
+0xad, 0x52, 0xcb, 0x34,
+0x53, 0xac, 0x54, 0xab,
+0x52, 0xad, 0x32, 0xcd,
+0x52, 0xad, 0x4c, 0xb3,
+0xb2, 0x4d, 0x53, 0xac,
+0xd2, 0x2d, 0x4b, 0xb4,
+0xd4, 0x2b, 0x4d, 0xb2,
+0x4a, 0xb5, 0xaa, 0x55,
+0xab, 0x54, 0xcb, 0x34,
+0x35, 0xca, 0xac, 0x53,
+0x53, 0xac, 0xd2, 0x2d,
+0xcd, 0x32, 0x2d, 0xd2,
+0xb2, 0x4d, 0x55, 0xaa,
+0xac, 0x53, 0x55, 0xaa,
+0x34, 0xcb, 0x2c, 0xd3,
+0x32, 0xcd, 0xac, 0x53,
+0xcd, 0x32, 0x55, 0xaa,
+0xcc, 0x33, 0x4d, 0xb2,
+0x2c, 0xd3, 0x2c, 0xd3,
+0xac, 0x53, 0x2b, 0xd4,
+0xca, 0x35, 0x35, 0xca,
+0x52, 0xad, 0xd4, 0x2b,
+0x2d, 0xd2, 0x52, 0xad,
+0x52, 0xad, 0x54, 0xab,
+0xaa, 0x55, 0x4d, 0xb2,
+0x52, 0xad, 0xcc, 0x33,
+0xb3, 0x4c, 0x4b, 0xb4,
+0xd2, 0x2d, 0x33, 0xcc,
+0x54, 0xab, 0x4a, 0xb5,
+0xca, 0x35, 0xb3, 0x4c,
+0x33, 0xcc, 0xca, 0x35,
+0xcd, 0x32, 0x2b, 0xd4,
+0x2c, 0xd3, 0x52, 0xad,
+0x4c, 0xb3, 0x34, 0xcb,
+0xaa, 0x55, 0x2d, 0xd2,
+0x54, 0xab, 0xd2, 0x2d,
+0xb3, 0x4c, 0xb5, 0x4a,
+0xb3, 0x4c, 0x35, 0xca,
+0x34, 0xcb, 0x2a, 0xd5,
+0x34, 0xcb, 0xb2, 0x4d,
+0x2d, 0xd2, 0xb4, 0x4b,
+0xad, 0x52, 0x4b, 0xb4,
+0x4a, 0xb5, 0x4a, 0xb5,
+0x52, 0xad, 0xca, 0x35,
+0x35, 0xca, 0x4a, 0xb5,
+0x32, 0xcd, 0xd2, 0x2d,
+0x2d, 0xd2, 0x4a, 0xb5,
+0xac, 0x53, 0x55, 0xaa,
+0x2a, 0xd5, 0x2a, 0xd5,
+0x32, 0xcd, 0xcc, 0x33,
+0x2b, 0xd4, 0x54, 0xab,
+0xcc, 0x33, 0xb3, 0x4c,
+0x4b, 0xb4, 0x2c, 0xd3,
+0xcc, 0x33, 0xab, 0x54,
+0xd5, 0x2a, 0x35, 0xca,
+0x4c, 0xb3, 0xcc, 0x33,
+0x2b, 0xd4, 0x32, 0xcd,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xab, 0x54, 0xb3, 0x4c,
+0xcb, 0x34, 0xab, 0x54,
+0xd3, 0x2c, 0xab, 0x54,
+0x4d, 0xb2, 0x2c, 0xd3,
+0x4a, 0xb5, 0x4c, 0xb3,
+0xd4, 0x2b, 0xd5, 0x2a,
+0xd5, 0x2a, 0xab, 0x54,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x4b, 0xb4, 0xac, 0x53,
+0x4b, 0xb4, 0xb4, 0x4b,
+0xd5, 0x2a, 0xad, 0x52,
+0x55, 0xaa, 0xca, 0x35,
+0xab, 0x54, 0xcd, 0x32,
+0x33, 0xcc, 0xb2, 0x4d,
+0xb3, 0x4c, 0x33, 0xcc,
+0xac, 0x53, 0x2b, 0xd4,
+0xd4, 0x2b, 0x33, 0xcc,
+0x52, 0xad, 0xb4, 0x4b,
+0xcb, 0x34, 0x53, 0xac,
+0x52, 0xad, 0xaa, 0x55,
+0xcd, 0x32, 0x4d, 0xb2,
+0x32, 0xcd, 0x4c, 0xb3,
+0xac, 0x53, 0x4b, 0xb4,
+0xcc, 0x33, 0x2b, 0xd4,
+0x52, 0xad, 0x2a, 0xd5,
+0x4c, 0xb3, 0x54, 0xab,
+0x32, 0xcd, 0x34, 0xcb,
+0x54, 0xab, 0x4c, 0xb3,
+0x4c, 0xb3, 0xb2, 0x4d,
+0xd3, 0x2c, 0x2b, 0xd4,
+0xb4, 0x4b, 0x2b, 0xd4,
+0x4a, 0xb5, 0xb4, 0x4b,
+0x55, 0xaa, 0xd4, 0x2b,
+0x55, 0xaa, 0xca, 0x35,
+0x53, 0xac, 0xd4, 0x2b,
+0x33, 0xcc, 0x32, 0xcd,
+0x52, 0xad, 0x34, 0xcb,
+0xac, 0x53, 0x53, 0xac,
+0x52, 0xad, 0x32, 0xcd,
+0xd2, 0x2d, 0x4d, 0xb2,
+0xb2, 0x4d, 0x53, 0xac,
+0xaa, 0x55, 0x4b, 0xb4,
+0xd4, 0x2b, 0xcd, 0x32,
+0x53, 0xac, 0xaa, 0x55,
+0xab, 0x54, 0x33, 0xcc,
+0x32, 0xcd, 0xac, 0x53,
+0xd3, 0x2c, 0x53, 0xac,
+0xcc, 0x33, 0x2d, 0xd2,
+0xca, 0x35, 0x2d, 0xd2,
+0xac, 0x53, 0xd5, 0x2a,
+0xad, 0x52, 0x35, 0xca,
+0x32, 0xcd, 0x54, 0xab,
+0x32, 0xcd, 0x52, 0xad,
+0x4c, 0xb3, 0x4c, 0xb3,
+0xac, 0x53, 0x2d, 0xd2,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xb2, 0x4d, 0xb5, 0x4a,
+0x4b, 0xb4, 0x54, 0xab,
+0x34, 0xcb, 0xaa, 0x55,
+0x55, 0xaa, 0xac, 0x53,
+0x2d, 0xd2, 0xcc, 0x33,
+0xd3, 0x2c, 0x4d, 0xb2,
+0xca, 0x35, 0x33, 0xcc,
+0xaa, 0x55, 0xcb, 0x34,
+0xcd, 0x32, 0xd3, 0x2c,
+0x53, 0xac, 0x52, 0xad,
+0xcc, 0x33, 0x35, 0xca,
+0xb2, 0x4d, 0x2d, 0xd2,
+0x2c, 0xd3, 0x52, 0xad,
+0xb4, 0x4b, 0x35, 0xca,
+0xaa, 0x55, 0xad, 0x52,
+0x35, 0xca, 0xd2, 0x2d,
+0xb3, 0x4c, 0xcd, 0x32,
+0xad, 0x52, 0x35, 0xca,
+0xb4, 0x4b, 0x53, 0xac,
+0x32, 0xcd, 0xb2, 0x4d,
+0xd5, 0x2a, 0x4d, 0xb2,
+0xac, 0x53, 0xcb, 0x34,
+0xab, 0x54, 0x2b, 0xd4,
+0x52, 0xad, 0xb2, 0x4d,
+0x53, 0xac, 0x54, 0xab,
+0xb2, 0x4d, 0x2b, 0xd4,
+0x52, 0xad, 0x4c, 0xb3,
+0x54, 0xab, 0x54, 0xab,
+0xd2, 0x2d, 0xab, 0x54,
+0x53, 0xac, 0x4c, 0xb3,
+0x4a, 0xb5, 0x2c, 0xd3,
+0xd2, 0x2d, 0xcb, 0x34,
+0xd5, 0x2a, 0x55, 0xaa,
+0x4a, 0xb5, 0xd2, 0x2d,
+0x2b, 0xd4, 0xcc, 0x33,
+0xb5, 0x4a, 0xb5, 0x4a,
+0xcb, 0x34, 0xd3, 0x2c,
+0x35, 0xca, 0xaa, 0x55,
+0xcd, 0x32, 0xd5, 0x2a,
+0x2d, 0xd2, 0x4c, 0xb3,
+0x2c, 0xd3, 0x54, 0xab,
+0xca, 0x35, 0x2b, 0xd4,
+0x4a, 0xb5, 0xcc, 0x33,
+0x4d, 0xb2, 0xd4, 0x2b,
+0xd5, 0x2a, 0x53, 0xac,
+0x54, 0xab, 0xd4, 0x2b,
+0xcb, 0x34, 0xad, 0x52,
+0x53, 0xac, 0xb4, 0x4b,
+0xad, 0x52, 0x2d, 0xd2,
+0x52, 0xad, 0x4a, 0xb5,
+0xb2, 0x4d, 0x55, 0xaa,
+0x32, 0xcd, 0x4a, 0xb5,
+0x34, 0xcb, 0x4c, 0xb3,
+0x2c, 0xd3, 0xaa, 0x55,
+0xcd, 0x32, 0x2b, 0xd4,
+0x2a, 0xd5, 0x4c, 0xb3,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xcb, 0x34, 0x2b, 0xd4,
+0x54, 0xab, 0xb4, 0x4b,
+0x4d, 0xb2, 0xb4, 0x4b,
+0x53, 0xac, 0x4a, 0xb5,
+0x54, 0xab, 0x2a, 0xd5,
+0x32, 0xcd, 0xaa, 0x55,
+0x33, 0xcc, 0x54, 0xab,
+0x2c, 0xd3, 0x2c, 0xd3,
+0x4c, 0xb3, 0x2c, 0xd3,
+0xca, 0x35, 0x35, 0xca,
+0xd4, 0x2b, 0xd5, 0x2a,
+0x2d, 0xd2, 0xb2, 0x4d,
+0x2b, 0xd4, 0x54, 0xab,
+0xaa, 0x55, 0xab, 0x54,
+0x4b, 0xb4, 0xcc, 0x33,
+0x53, 0xac, 0xac, 0x53,
+0xd5, 0x2a, 0x33, 0xcc,
+0xd2, 0x2d, 0xcd, 0x32,
+0xcb, 0x34, 0x53, 0xac,
+0xaa, 0x55, 0xb3, 0x4c,
+0xcd, 0x32, 0xcd, 0x32,
+0xd3, 0x2c, 0x4b, 0xb4,
+0xac, 0x53, 0x33, 0xcc,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xd2, 0x2d, 0xd3, 0x2c,
+0x35, 0xca, 0x54, 0xab,
+0xca, 0x35, 0xd5, 0x2a,
+0x4d, 0xb2, 0xcc, 0x33,
+0x2d, 0xd2, 0x54, 0xab,
+0xd4, 0x2b, 0x53, 0xac,
+0x4a, 0xb5, 0xac, 0x53,
+0xcb, 0x34, 0xcd, 0x32,
+0xd5, 0x2a, 0xad, 0x52,
+0xad, 0x52, 0xd3, 0x2c,
+0xab, 0x54, 0x4d, 0xb2,
+0xd2, 0x2d, 0xb5, 0x4a,
+0xb3, 0x4c, 0x4b, 0xb4,
+0x2a, 0xd5, 0x2a, 0xd5,
+0x54, 0xab, 0xca, 0x35,
+0x2b, 0xd4, 0xb4, 0x4b,
+0x33, 0xcc, 0xb2, 0x4d,
+0x4b, 0xb4, 0x2a, 0xd5,
+0xac, 0x53, 0xab, 0x54,
+0x35, 0xca, 0x34, 0xcb,
+0x52, 0xad, 0xcc, 0x33,
+0x4d, 0xb2, 0x52, 0xad,
+0xd2, 0x2d, 0x53, 0xac,
+0xb4, 0x4b, 0x4d, 0xb2,
+0xca, 0x35, 0xad, 0x52,
+0xb5, 0x4a, 0xcb, 0x34,
+0xad, 0x52, 0xcd, 0x32,
+0x55, 0xaa, 0x52, 0xad,
+0xb2, 0x4d, 0xd3, 0x2c,
+0xb3, 0x4c, 0x4d, 0xb2,
+0xd4, 0x2b, 0x35, 0xca,
+0xb4, 0x4b, 0xab, 0x54,
+0x2b, 0xd4, 0xb2, 0x4d,
+0x55, 0xaa, 0xac, 0x53,
+0xab, 0x54, 0xcb, 0x34,
+0xd3, 0x2c, 0xad, 0x52,
+0x53, 0xac, 0x32, 0xcd,
+0xaa, 0x55, 0x2d, 0xd2,
+0xb2, 0x4d, 0xd3, 0x2c,
+0xb3, 0x4c, 0x55, 0xaa,
+0xd4, 0x2b, 0x35, 0xca,
+0x34, 0xcb, 0xac, 0x53,
+0x2b, 0xd4, 0xb2, 0x4d,
+0xcd, 0x32, 0xad, 0x52,
+0xab, 0x54, 0x4b, 0xb4,
+0xac, 0x53, 0xad, 0x52,
+0x53, 0xac, 0x2a, 0xd5,
+0xb2, 0x4d, 0x2d, 0xd2,
+0x32, 0xcd, 0x54, 0xab,
+0xb4, 0x4b, 0x55, 0xaa,
+0x4c, 0xb3, 0xac, 0x53,
+0x35, 0xca, 0x2c, 0xd3,
+0xd4, 0x2b, 0xcd, 0x32,
+0xcd, 0x32, 0xb5, 0x4a,
+0xab, 0x54, 0x53, 0xac,
+0x2c, 0xd3, 0xaa, 0x55,
+0xd3, 0x2c, 0x2d, 0xd2,
+0x2a, 0xd5, 0x2c, 0xd3,
+0xaa, 0x55, 0xd5, 0x2a,
+0xcb, 0x34, 0xd5, 0x2a,
+0x33, 0xcc, 0xb4, 0x4b,
+0x2d, 0xd2, 0x34, 0xcb,
+0x4c, 0xb3, 0x4a, 0xb5,
+0x4a, 0xb5, 0x32, 0xcd,
+0x34, 0xcb, 0xca, 0x35,
+0xb5, 0x4a, 0xb3, 0x4c,
+0x2d, 0xd2, 0xd2, 0x2d,
+0xd5, 0x2a, 0x4b, 0xb4,
+0xaa, 0x55, 0xd5, 0x2a,
+0x4b, 0xb4, 0xca, 0x35,
+0x33, 0xcc, 0xb4, 0x4b,
+0x35, 0xca, 0x32, 0xcd,
+0x4c, 0xb3, 0xca, 0x35,
+0xad, 0x52, 0x33, 0xcc,
+0x34, 0xcb, 0x52, 0xad,
+0xd2, 0x2d, 0xb3, 0x4c,
+0xad, 0x52, 0x4d, 0xb2,
+0xca, 0x35, 0x4b, 0xb4,
+0xb2, 0x4d, 0xcb, 0x34,
+0x4d, 0xb2, 0x4a, 0xb5,
+0x54, 0xab, 0x52, 0xad,
+0x34, 0xcb, 0xaa, 0x55,
+0xb3, 0x4c, 0xad, 0x52,
+0x2d, 0xd2, 0x2c, 0xd3,
+0xb4, 0x4b, 0x4d, 0xb2,
+0xca, 0x35, 0xb5, 0x4a,
+0xb5, 0x4a, 0xcb, 0x34,
+0x2d, 0xd2, 0xca, 0x35,
+0x55, 0xaa, 0x52, 0xad,
+0x2a, 0xd5, 0xd2, 0x2d,
+0xb3, 0x4c, 0xcd, 0x32,
+0xab, 0x54, 0x35, 0xca,
+0xb4, 0x4b, 0xb3, 0x4c,
+0x33, 0xcc, 0xb2, 0x4d,
+0xd5, 0x2a, 0x2b, 0xd4,
+0xac, 0x53, 0xcb, 0x34,
+0x4b, 0xb4, 0x34, 0xcb,
+0x52, 0xad, 0xb2, 0x4d,
+0x55, 0xaa, 0x52, 0xad,
+0xb2, 0x4d, 0xcb, 0x34,
+0xb3, 0x4c, 0x4d, 0xb2,
+0x54, 0xab, 0x32, 0xcd,
+0xb4, 0x4b, 0xab, 0x54,
+0xb3, 0x4c, 0xb3, 0x4c,
+0x55, 0xaa, 0x2c, 0xd3,
+0xd4, 0x2b, 0xcb, 0x34,
+0xd3, 0x2c, 0xb5, 0x4a,
+0x4b, 0xb4, 0x32, 0xcd,
+0x2a, 0xd5, 0xaa, 0x55,
+0xb5, 0x4a, 0xd3, 0x2c,
+0x2b, 0xd4, 0xcc, 0x33,
+0xd5, 0x2a, 0xb5, 0x4a,
+0xcb, 0x34, 0xd3, 0x2c,
+0x2b, 0xd4, 0xaa, 0x55,
+0xcd, 0x32, 0xb5, 0x4a,
+0x2b, 0xd4, 0x4c, 0xb3,
+0x2c, 0xd3, 0xaa, 0x55,
+0xcb, 0x34, 0x2b, 0xd4,
+0x2a, 0xd5, 0xac, 0x53,
+0x4d, 0xb2, 0xd4, 0x2b,
+0xcb, 0x34, 0x4d, 0xb2,
+0x54, 0xab, 0xb4, 0x4b,
+0xad, 0x52, 0xab, 0x54,
+0x53, 0xac, 0x4a, 0xb5,
+0x52, 0xad, 0x2c, 0xd3,
+0x32, 0xcd, 0x4a, 0xb5,
+0xd2, 0x2d, 0x55, 0xaa,
+0x2c, 0xd3, 0x4a, 0xb5,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x2a, 0xd5, 0xca, 0x35,
+0xcb, 0x34, 0xd5, 0x2a,
+0x2b, 0xd4, 0xb2, 0x4d,
+0x2d, 0xd2, 0xb4, 0x4b,
+0xab, 0x54, 0x4b, 0xb4,
+0x4a, 0xb5, 0xaa, 0x55,
+0x53, 0xac, 0xca, 0x35,
+0x35, 0xca, 0x2c, 0xd3,
+0x32, 0xcd, 0xd2, 0x2d,
+0xcd, 0x32, 0x55, 0xaa,
+0xac, 0x53, 0x55, 0xaa,
+0x2c, 0xd3, 0x2c, 0xd3,
+0x32, 0xcd, 0x2c, 0xd3,
+0xca, 0x35, 0x55, 0xaa,
+0xcc, 0x33, 0xd5, 0x2a,
+0x2d, 0xd2, 0x2c, 0xd3,
+0x2c, 0xd3, 0x54, 0xab,
+0xca, 0x35, 0x35, 0xca,
+0x4a, 0xb5, 0xcc, 0x33,
+0x2d, 0xd2, 0xd2, 0x2d,
+0xd5, 0x2a, 0x53, 0xac,
+0xaa, 0x55, 0xd5, 0x2a,
+0xcb, 0x34, 0xcd, 0x32,
+0x33, 0xcc, 0xb4, 0x4b,
+0xad, 0x52, 0x33, 0xcc,
+0x4c, 0xb3, 0x4a, 0xb5,
+0xd2, 0x2d, 0x33, 0xcc,
+0x34, 0xcb, 0x4a, 0xb5,
+0xca, 0x35, 0xb3, 0x4c,
+0x2d, 0xd2, 0xca, 0x35,
+0xcd, 0x32, 0x4b, 0xb4,
+0x2a, 0xd5, 0x52, 0xad,
+0x4c, 0xb3, 0xca, 0x35,
+0xab, 0x54, 0x2d, 0xd2,
+0x34, 0xcb, 0xb2, 0x4d,
+0xb3, 0x4c, 0xb5, 0x4a,
+0xad, 0x52, 0x2b, 0xd4,
+0x34, 0xcb, 0x4a, 0xb5,
+0x52, 0xad, 0xb4, 0x4b,
+0x2d, 0xd2, 0x4a, 0xb5,
+0x52, 0xad, 0x4a, 0xb5,
+0x2a, 0xd5, 0x4a, 0xb5,
+0x32, 0xcd, 0xca, 0x35,
+0x2b, 0xd4, 0x4a, 0xb5,
+0x2c, 0xd3, 0xb2, 0x4d,
+0x2b, 0xd4, 0x2a, 0xd5,
+0xaa, 0x55, 0xab, 0x54,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x53, 0xac, 0xac, 0x53,
+0x4b, 0xb4, 0x34, 0xcb,
+0xd2, 0x2d, 0xad, 0x52,
+0x55, 0xaa, 0x52, 0xad,
+0xaa, 0x55, 0xcd, 0x32,
+0xb3, 0x4c, 0xcd, 0x32,
+0xb3, 0x4c, 0x33, 0xcc,
+0xb4, 0x4b, 0x33, 0xcc,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xd5, 0x2a, 0xb3, 0x4c,
+0xcb, 0x34, 0xcb, 0x34,
+0xcb, 0x34, 0xab, 0x54,
+0x4d, 0xb2, 0xb2, 0x4d,
+0x4d, 0xb2, 0x4c, 0xb3,
+0xb4, 0x4b, 0x4b, 0xb4,
+0xd4, 0x2b, 0xab, 0x54,
+0x55, 0xaa, 0xaa, 0x55,
+0x4b, 0xb4, 0xcc, 0x33,
+0x33, 0xcc, 0xac, 0x53,
+0xd5, 0x2a, 0x33, 0xcc,
+0xcc, 0x33, 0xcd, 0x32,
+0xcb, 0x34, 0x33, 0xcc,
+0xac, 0x53, 0xb3, 0x4c,
+0xcd, 0x32, 0x33, 0xcc,
+0xd2, 0x2d, 0x4b, 0xb4,
+0xcc, 0x33, 0x53, 0xac,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xcc, 0x33, 0xcd, 0x32,
+0x35, 0xca, 0x34, 0xcb,
+0xac, 0x53, 0xd3, 0x2c,
+0x4d, 0xb2, 0x32, 0xcd,
+0xd2, 0x2d, 0x55, 0xaa,
+0xb4, 0x4b, 0x53, 0xac,
+0x2a, 0xd5, 0xac, 0x53,
+0xd5, 0x2a, 0xcd, 0x32,
+0xcb, 0x34, 0xcd, 0x32,
+0xab, 0x54, 0xb3, 0x4c,
+0xad, 0x52, 0xb3, 0x4c,
+0xd3, 0x2c, 0x4b, 0xb4,
+0xd2, 0x2d, 0x2b, 0xd4,
+0x4a, 0xb5, 0x4a, 0xb5,
+0x4a, 0xb5, 0xd4, 0x2b,
+0x35, 0xca, 0xca, 0x35,
+0x55, 0xaa, 0xd4, 0x2b,
+0x2d, 0xd2, 0xd2, 0x2d,
+0x53, 0xac, 0x54, 0xab,
+0xaa, 0x55, 0x35, 0xca,
+0x52, 0xad, 0xcc, 0x33,
+0x33, 0xcc, 0x52, 0xad,
+0xd2, 0x2d, 0x33, 0xcc,
+0xac, 0x53, 0x4d, 0xb2,
+0xca, 0x35, 0x33, 0xcc,
+0xb2, 0x4d, 0xcb, 0x34,
+0xcd, 0x32, 0x53, 0xac,
+0x54, 0xab, 0x52, 0xad,
+0xcc, 0x33, 0xad, 0x52,
+0xb3, 0x4c, 0x2d, 0xd2,
+0xac, 0x53, 0x2d, 0xd2,
+0xb4, 0x4b, 0x35, 0xca,
+0xb2, 0x4d, 0xb5, 0x4a,
+0x35, 0xca, 0x52, 0xad,
+0x34, 0xcb, 0xca, 0x35,
+0xad, 0x52, 0xad, 0x52,
+0x2d, 0xd2, 0x52, 0xad,
+0xb2, 0x4d, 0x4d, 0xb2,
+0xaa, 0x55, 0x4d, 0xb2,
+0xb4, 0x4b, 0xcb, 0x34,
+0xb3, 0x4c, 0xab, 0x54,
+0x55, 0xaa, 0x32, 0xcd,
+0x54, 0xab, 0xcc, 0x33,
+0xb3, 0x4c, 0xb3, 0x4c,
+0xd3, 0x2c, 0x33, 0xcc,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xca, 0x35, 0xb3, 0x4c,
+0x4b, 0xb4, 0xd4, 0x2b,
+0xcd, 0x32, 0xab, 0x54,
+0x55, 0xaa, 0x54, 0xab,
+0x4c, 0xb3, 0xcc, 0x33,
+0x53, 0xac, 0x2c, 0xd3,
+0xd4, 0x2b, 0x33, 0xcc,
+0xd2, 0x2d, 0xb5, 0x4a,
+0xcb, 0x34, 0x53, 0xac,
+0x2a, 0xd5, 0xaa, 0x55,
+0xcd, 0x32, 0xcd, 0x32,
+0x2b, 0xd4, 0x4c, 0xb3,
+0xac, 0x53, 0xb3, 0x4c,
+0xcb, 0x34, 0x2b, 0xd4,
+0xd2, 0x2d, 0xab, 0x54,
+0x4d, 0xb2, 0x54, 0xab,
+0x4a, 0xb5, 0x4c, 0xb3,
+0x54, 0xab, 0xcc, 0x33,
+0xd5, 0x2a, 0xab, 0x54,
+0xd3, 0x2c, 0xd3, 0x2c,
+0x4b, 0xb4, 0x2c, 0xd3,
+0xca, 0x35, 0xb5, 0x4a,
+0xd5, 0x2a, 0xd5, 0x2a,
+0x2d, 0xd2, 0xca, 0x35,
+0x2b, 0xd4, 0x54, 0xab,
+0x2a, 0xd5, 0xb2, 0x4d,
+0x4b, 0xb4, 0xcc, 0x33,
+0xab, 0x54, 0xab, 0x54,
+0xd5, 0x2a, 0xb3, 0x4c,
+0x53, 0xac, 0xcc, 0x33,
+0xcb, 0x34, 0x2b, 0xd4,
+0xd2, 0x2d, 0xb3, 0x4c,
+0x4d, 0xb2, 0x54, 0xab,
+0xca, 0x35, 0x4b, 0xb4,
+0x54, 0xab, 0xcc, 0x33,
+0x4d, 0xb2, 0xaa, 0x55,
+0xd3, 0x2c, 0x53, 0xac,
+0x34, 0xcb, 0x2c, 0xd3,
+0xca, 0x35, 0xad, 0x52,
+0xcd, 0x32, 0xd5, 0x2a,
+0xad, 0x52, 0x4d, 0xb2,
+0x2c, 0xd3, 0x54, 0xab,
+0xb2, 0x4d, 0x2b, 0xd4,
+0x4a, 0xb5, 0x4c, 0xb3,
+0x54, 0xab, 0xd4, 0x2b,
+0xd5, 0x2a, 0xab, 0x54,
+0x53, 0xac, 0xd4, 0x2b,
+0x4b, 0xb4, 0x2c, 0xd3,
+0x52, 0xad, 0xb4, 0x4b,
+0xd5, 0x2a, 0x55, 0xaa,
+0x52, 0xad, 0xca, 0x35,
+0x2b, 0xd4, 0x4c, 0xb3,
+0x32, 0xcd, 0xb2, 0x4d,
+0xcb, 0x34, 0x4b, 0xb4,
+0xac, 0x53, 0xab, 0x54,
+0x4d, 0xb2, 0x2a, 0xd5,
+0x52, 0xad, 0x4c, 0xb3,
+0x34, 0xcb, 0x54, 0xab,
+0xd2, 0x2d, 0xab, 0x54,
+0x4d, 0xb2, 0x4c, 0xb3,
+0x4a, 0xb5, 0x4c, 0xb3,
+0xd4, 0x2b, 0xcb, 0x34,
+0xd5, 0x2a, 0xab, 0x54,
+0x4b, 0xb4, 0xd2, 0x2d,
+0x4b, 0xb4, 0xac, 0x53,
+0xb5, 0x4a, 0xb5, 0x4a,
+0xd5, 0x2a, 0xcd, 0x32,
+0x35, 0xca, 0xca, 0x35,
+0xab, 0x54, 0xd3, 0x2c,
+0x2d, 0xd2, 0xb2, 0x4d,
+0xd3, 0x2c, 0x55, 0xaa,
+0xaa, 0x55, 0x2b, 0xd4,
+0x2a, 0xd5, 0xcc, 0x33,
+0x53, 0xac, 0xd4, 0x2b,
+0xcb, 0x34, 0x33, 0xcc,
+0x52, 0xad, 0xb4, 0x4b,
+0xcd, 0x32, 0x53, 0xac,
+0x52, 0xad, 0x4a, 0xb5,
+0xcc, 0x33, 0x4d, 0xb2,
+0x32, 0xcd, 0x2a, 0xd5,
+0xac, 0x53, 0x4b, 0xb4,
+0x2c, 0xd3, 0x34, 0xcb,
+0x52, 0xad, 0x2a, 0xd5,
+0x4a, 0xb5, 0x52, 0xad,
+0x32, 0xcd, 0xd4, 0x2b,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xb5, 0x4a, 0x2b, 0xd4,
+0x54, 0xab, 0xd4, 0x2b,
+0x55, 0xaa, 0xb4, 0x4b,
+0x53, 0xac, 0xd4, 0x2b,
+0x53, 0xac, 0x2a, 0xd5,
+0x52, 0xad, 0x34, 0xcb,
+0x32, 0xcd, 0x54, 0xab,
+0x52, 0xad, 0x52, 0xad,
+0x4c, 0xb3, 0x4c, 0xb3,
+0xb2, 0x4d, 0x2d, 0xd2,
+0xd4, 0x2b, 0x4b, 0xb4,
+0xb4, 0x4b, 0xb5, 0x4a,
+0x4b, 0xb4, 0xaa, 0x55,
+0x35, 0xca, 0xaa, 0x55,
+0x35, 0xca, 0xcc, 0x33,
+0x2d, 0xd2, 0xcc, 0x33,
+0xcd, 0x32, 0x53, 0xac,
+0xca, 0x35, 0x53, 0xac,
+0xcc, 0x33, 0xcd, 0x32,
+0xcd, 0x32, 0x2d, 0xd2,
+0xac, 0x53, 0x53, 0xac,
+0xac, 0x53, 0x35, 0xca,
+0xd2, 0x2d, 0x2d, 0xd2,
+0x32, 0xcd, 0x52, 0xad,
+0xaa, 0x55, 0x55, 0xaa,
+0xac, 0x53, 0xcd, 0x32,
+0x33, 0xcc, 0x2c, 0xd3,
+0xb2, 0x4d, 0x33, 0xcc,
+0xcc, 0x33, 0x55, 0xaa,
+0xd4, 0x2b, 0x33, 0xcc,
+0x2c, 0xd3, 0xac, 0x53,
+0xcb, 0x34, 0x33, 0xcc,
+0xca, 0x35, 0xad, 0x52,
+0xcd, 0x32, 0xd3, 0x2c,
+0xad, 0x52, 0x4d, 0xb2,
+0xcc, 0x33, 0x55, 0xaa,
+0xb2, 0x4d, 0x2b, 0xd4,
+0x2c, 0xd3, 0x4c, 0xb3,
+0x54, 0xab, 0x34, 0xcb,
+0xca, 0x35, 0xab, 0x54,
+0x53, 0xac, 0xd2, 0x2d,
+0x4d, 0xb2, 0x2c, 0xd3,
+0xb2, 0x4d, 0x55, 0xaa,
+0xd4, 0x2b, 0x55, 0xaa,
+0x34, 0xcb, 0xac, 0x53,
+0x2b, 0xd4, 0xac, 0x53,
+0xcd, 0x32, 0xad, 0x52,
+0xcb, 0x34, 0x4d, 0xb2,
+0xac, 0x53, 0xad, 0x52,
+0xad, 0x52, 0x2b, 0xd4,
+0xb2, 0x4d, 0x4d, 0xb2,
+0x52, 0xad, 0x54, 0xab,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x52, 0xad, 0xac, 0x53,
+0x55, 0xaa, 0x4a, 0xb5,
+0xd2, 0x2d, 0xcd, 0x32,
+0x33, 0xcc, 0x4a, 0xb5,
+0xaa, 0x55, 0x33, 0xcc,
+0x2c, 0xd3, 0xca, 0x35,
+0xd3, 0x2c, 0x33, 0xcc,
+0x2a, 0xd5, 0x32, 0xcd,
+0xca, 0x35, 0xd3, 0x2c,
+0xab, 0x54, 0xd3, 0x2c,
+0xcd, 0x32, 0xb5, 0x4a,
+0xd3, 0x2c, 0x55, 0xaa,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x2a, 0xd5, 0x2c, 0xd3,
+0x2a, 0xd5, 0xd4, 0x2b,
+0xcb, 0x34, 0xd5, 0x2a,
+0x4b, 0xb4, 0xb4, 0x4b,
+0x2d, 0xd2, 0xb4, 0x4b,
+0x55, 0xaa, 0x4a, 0xb5,
+0x4a, 0xb5, 0xca, 0x35,
+0x33, 0xcc, 0xca, 0x35,
+0x35, 0xca, 0x32, 0xcd,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xad, 0x52, 0x33, 0xcc,
+0xaa, 0x55, 0x55, 0xaa,
+0xd2, 0x2d, 0xd3, 0x2c,
+0x33, 0xcc, 0x4c, 0xb3,
+0xca, 0x35, 0x35, 0xca,
+0xcc, 0x33, 0xcb, 0x34,
+0x2d, 0xd2, 0x32, 0xcd,
+0x4c, 0xb3, 0x52, 0xad,
+0xaa, 0x55, 0x33, 0xcc,
+0xb4, 0x4b, 0xcd, 0x32,
+0xd3, 0x2c, 0xb3, 0x4c,
+0xb5, 0x4a, 0x33, 0xcc,
+0xca, 0x35, 0xcb, 0x34,
+0xd5, 0x2a, 0xd3, 0x2c,
+0x4d, 0xb2, 0xd2, 0x2d,
+0xcb, 0x34, 0x55, 0xaa,
+0xb4, 0x4b, 0xb5, 0x4a,
+0x2d, 0xd2, 0xac, 0x53,
+0x35, 0xca, 0x4a, 0xb5,
+0xca, 0x35, 0xcd, 0x32,
+0x2d, 0xd2, 0xca, 0x35,
+0xad, 0x52, 0x53, 0xac,
+0x2a, 0xd5, 0x52, 0xad,
+0xd2, 0x2d, 0xcd, 0x32,
+0xab, 0x54, 0x4d, 0xb2,
+0xaa, 0x55, 0xb3, 0x4c,
+0xb3, 0x4c, 0xcb, 0x34,
+0xd3, 0x2c, 0x2b, 0xd4,
+0x54, 0xab, 0x32, 0xcd,
+0x4a, 0xb5, 0xb4, 0x4b,
+0xb3, 0x4c, 0xd3, 0x2c,
+0x55, 0xaa, 0x2a, 0xd5,
+0xd4, 0x2b, 0xd5, 0x2a,
+0x33, 0xcc, 0xb4, 0x4b,
+0x2b, 0xd4, 0x34, 0xcb,
+0x4c, 0xb3, 0xaa, 0x55,
+0x4b, 0xb4, 0x32, 0xcd,
+0x34, 0xcb, 0xac, 0x53,
+0xb5, 0x4a, 0xb3, 0x4c,
+0xcd, 0x32, 0xcd, 0x32,
+0xd5, 0x2a, 0x4b, 0xb4,
+0xac, 0x53, 0xd3, 0x2c,
+0x4b, 0xb4, 0x2a, 0xd5,
+0xd2, 0x2d, 0xb5, 0x4a,
+0x35, 0xca, 0x54, 0xab,
+0x2a, 0xd5, 0xca, 0x35,
+0x4d, 0xb2, 0xcc, 0x33,
+0x2b, 0xd4, 0x52, 0xad,
+0xd4, 0x2b, 0xb3, 0x4c,
+0xab, 0x54, 0xad, 0x52,
+0xcb, 0x34, 0xab, 0x54,
+0xb3, 0x4c, 0xad, 0x52,
+0x4d, 0xb2, 0x2c, 0xd3,
+0xb4, 0x4b, 0x4d, 0xb2,
+0xd4, 0x2b, 0xb5, 0x4a,
+0xb5, 0x4a, 0xab, 0x54,
+0x2b, 0xd4, 0xca, 0x35,
+0x55, 0xaa, 0xac, 0x53,
+0x2b, 0xd4, 0xd2, 0x2d,
+0xd3, 0x2c, 0xad, 0x52,
+0xab, 0x54, 0x35, 0xca,
+0xaa, 0x55, 0xad, 0x52,
+0x33, 0xcc, 0xd2, 0x2d,
+0xb3, 0x4c, 0x2d, 0xd2,
+0xac, 0x53, 0x35, 0xca,
+0xb4, 0x4b, 0x35, 0xca,
+0x32, 0xcd, 0xb2, 0x4d,
+0x35, 0xca, 0x52, 0xad,
+0xac, 0x53, 0xcb, 0x34,
+0xad, 0x52, 0x2d, 0xd2,
+0x52, 0xad, 0x52, 0xad,
+0xb2, 0x4d, 0x55, 0xaa,
+0xb2, 0x4d, 0x4d, 0xb2,
+0x34, 0xcb, 0x4c, 0xb3,
+0xb4, 0x4b, 0xab, 0x54,
+0xcd, 0x32, 0xab, 0x54,
+0x55, 0xaa, 0x4c, 0xb3,
+0x4c, 0xb3, 0xcc, 0x33,
+0xd3, 0x2c, 0x2b, 0xd4,
+0xd4, 0x2b, 0x33, 0xcc,
+0x4a, 0xb5, 0xb4, 0x4b,
+0xcb, 0x34, 0xd3, 0x2c,
+0x55, 0xaa, 0xaa, 0x55,
+0xcd, 0x32, 0xd5, 0x2a,
+0x33, 0xcc, 0x4c, 0xb3,
+0x2c, 0xd3, 0x34, 0xcb,
+0xcc, 0x33, 0x2b, 0xd4,
+0x4a, 0xb5, 0x32, 0xcd,
+0x4c, 0xb3, 0xd4, 0x2b,
+0xb5, 0x4a, 0x33, 0xcc,
+0x54, 0xab, 0xd4, 0x2b,
+0xd5, 0x2a, 0xb3, 0x4c,
+0x53, 0xac, 0xd4, 0x2b,
+0xcb, 0x34, 0x2b, 0xd4,
+0x52, 0xad, 0xb4, 0x4b,
+0x4d, 0xb2, 0x54, 0xab,
+0x52, 0xad, 0x4a, 0xb5,
+0x54, 0xab, 0x4c, 0xb3,
+0x32, 0xcd, 0xaa, 0x55,
+0xd3, 0x2c, 0x4b, 0xb4,
+0x2c, 0xd3, 0x2c, 0xd3,
+0x4a, 0xb5, 0x2a, 0xd5,
+0xca, 0x35, 0xd5, 0x2a,
+0x35, 0xca, 0xd4, 0x2b,
+0x2d, 0xd2, 0xd4, 0x2b,
+0x4d, 0xb2, 0x54, 0xab,
+0x4a, 0xb5, 0x54, 0xab,
+0x54, 0xab, 0xcc, 0x33,
+0x55, 0xaa, 0xac, 0x53,
+0xd3, 0x2c, 0xd3, 0x2c,
+0xd3, 0x2c, 0x2d, 0xd2,
+0xca, 0x35, 0x35, 0xca,
+0xaa, 0x55, 0xd5, 0x2a,
+0x2d, 0xd2, 0xd2, 0x2d,
+0x33, 0xcc, 0x54, 0xab,
+0xaa, 0x55, 0x35, 0xca,
+0x4c, 0xb3, 0xcc, 0x33,
+0x33, 0xcc, 0x32, 0xcd,
+0xd4, 0x2b, 0x33, 0xcc,
+0xac, 0x53, 0xb3, 0x4c,
+0xcb, 0x34, 0x33, 0xcc,
+0xd2, 0x2d, 0xab, 0x54,
+0xcd, 0x32, 0x53, 0xac,
+0x4a, 0xb5, 0x4c, 0xb3,
+0xcc, 0x33, 0xcd, 0x32,
+0xd5, 0x2a, 0x2b, 0xd4,
+0xac, 0x53, 0xd3, 0x2c,
+0x4b, 0xb4, 0x34, 0xcb,
+0xd2, 0x2d, 0xb5, 0x4a,
+0x55, 0xaa, 0x52, 0xad,
+0x2a, 0xd5, 0xca, 0x35,
+0xb3, 0x4c, 0xcd, 0x32,
+0x2b, 0xd4, 0x32, 0xcd,
+0xb4, 0x4b, 0xb3, 0x4c,
+0xab, 0x54, 0xb3, 0x4c,
+0xd5, 0x2a, 0xab, 0x54,
+0xd3, 0x2c, 0xcb, 0x34,
+0x4b, 0xb4, 0x2c, 0xd3,
+0x4a, 0xb5, 0xb2, 0x4d,
+0xd5, 0x2a, 0xd5, 0x2a,
+0xb5, 0x4a, 0xcb, 0x34,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x55, 0xaa, 0xb2, 0x4d,
+0x4b, 0xb4, 0xd4, 0x2b,
+0xb3, 0x4c, 0xab, 0x54,
+0x55, 0xaa, 0x34, 0xcb,
+0x54, 0xab, 0xcc, 0x33,
+0x53, 0xac, 0xb2, 0x4d,
+0xd3, 0x2c, 0x33, 0xcc,
+0xb2, 0x4d, 0x2b, 0xd4,
+0xca, 0x35, 0x53, 0xac,
+0x54, 0xab, 0xd4, 0x2b,
+0xcd, 0x32, 0xad, 0x52,
+0x53, 0xac, 0x54, 0xab,
+0xac, 0x53, 0x2d, 0xd2,
+0x52, 0xad, 0x2c, 0xd3,
+0xb2, 0x4d, 0x55, 0xaa,
+0xd2, 0x2d, 0x55, 0xaa,
+0x34, 0xcb, 0x4c, 0xb3,
+0x2a, 0xd5, 0xac, 0x53,
+0xcd, 0x32, 0xcb, 0x34,
+0xcb, 0x34, 0x4d, 0xb2,
+0x4c, 0xb3, 0xb2, 0x4d,
+0xad, 0x52, 0x2b, 0xd4,
+0xb4, 0x4b, 0x4b, 0xb4,
+0x52, 0xad, 0xb4, 0x4b,
+0x55, 0xaa, 0x4a, 0xb5,
+0x52, 0xad, 0xca, 0x35,
+0x33, 0xcc, 0x4a, 0xb5,
+0x32, 0xcd, 0x32, 0xcd,
+0x2c, 0xd3, 0x4a, 0xb5,
+0xac, 0x53, 0x33, 0xcc,
+0x2a, 0xd5, 0x2a, 0xd5,
+0xd2, 0x2d, 0xd3, 0x2c,
+0x2b, 0xd4, 0x54, 0xab,
+0xca, 0x35, 0xb5, 0x4a,
+0x4b, 0xb4, 0xcc, 0x33,
+0x2d, 0xd2, 0xaa, 0x55,
+0xd5, 0x2a, 0x53, 0xac,
+0x2a, 0xd5, 0xcc, 0x33,
+0xcb, 0x34, 0xcd, 0x32,
+0xcb, 0x34, 0xb3, 0x4c,
+0xad, 0x52, 0xb3, 0x4c,
+0xcd, 0x32, 0x4b, 0xb4,
+0xd2, 0x2d, 0x4b, 0xb4,
+0x4c, 0xb3, 0x4a, 0xb5,
+0x4a, 0xb5, 0x2a, 0xd5,
+0x34, 0xcb, 0xca, 0x35,
+0x35, 0xca, 0xb4, 0x4b,
+0x2d, 0xd2, 0xd2, 0x2d,
+0x4d, 0xb2, 0x4a, 0xb5,
+0xaa, 0x55, 0x55, 0xaa,
+0x34, 0xcb, 0xca, 0x35,
+0x33, 0xcc, 0xac, 0x53,
+0x2d, 0xd2, 0x32, 0xcd,
+0xcc, 0x33, 0x4d, 0xb2,
+0xaa, 0x55, 0x33, 0xcc,
+0xac, 0x53, 0xcb, 0x34,
+0xd3, 0x2c, 0x33, 0xcc,
+0x52, 0xad, 0x32, 0xcd,
+0xca, 0x35, 0x53, 0xac,
+0xb2, 0x4d, 0xd3, 0x2c,
+0xcd, 0x32, 0x4d, 0xb2,
+0xd4, 0x2b, 0x55, 0xaa,
+0xac, 0x53, 0xab, 0x54,
+0x2b, 0xd4, 0x2c, 0xd3,
+0x52, 0xad, 0xac, 0x53,
+0xcb, 0x34, 0x55, 0xaa,
+0xd2, 0x2d, 0xad, 0x52,
+0x2d, 0xd2, 0x4c, 0xb3,
+0xaa, 0x55, 0x4d, 0xb2,
+0xca, 0x35, 0xcb, 0x34,
+0xb3, 0x4c, 0xcb, 0x34,
+0x4d, 0xb2, 0x32, 0xcd,
+0x54, 0xab, 0x52, 0xad,
+0xb4, 0x4b, 0xb3, 0x4c,
+0xb3, 0x4c, 0xad, 0x52,
+0xd5, 0x2a, 0x2b, 0xd4,
+0xb4, 0x4b, 0xcd, 0x32,
+0x4b, 0xb4, 0xb4, 0x4b,
+0xb5, 0x4a, 0xb3, 0x4c,
+0x55, 0xaa, 0xca, 0x35,
+0xd5, 0x2a, 0xcb, 0x34,
+0x33, 0xcc, 0xd2, 0x2d,
+0x4b, 0xb4, 0x32, 0xcd,
+0xac, 0x53, 0xb5, 0x4a,
+0xb5, 0x4a, 0x33, 0xcc,
+0x32, 0xcd, 0xca, 0x35,
+0xd5, 0x2a, 0x53, 0xac,
+0x2c, 0xd3, 0xd2, 0x2d,
+0xcb, 0x34, 0x2d, 0xd2,
+0xaa, 0x55, 0xb5, 0x4a,
+0xad, 0x52, 0xd5, 0x2a,
+0x33, 0xcc, 0x4a, 0xb5,
+0x32, 0xcd, 0x34, 0xcb,
+0x2c, 0xd3, 0x4a, 0xb5,
+0x4c, 0xb3, 0x32, 0xcd,
+0x2a, 0xd5, 0x2a, 0xd5,
+0xb4, 0x4b, 0xd3, 0x2c,
+0x2b, 0xd4, 0xb4, 0x4b,
+0xd5, 0x2a, 0xb5, 0x4a,
+0x4b, 0xb4, 0xca, 0x35,
+0x2b, 0xd4, 0xaa, 0x55,
+0x35, 0xca, 0xb2, 0x4d,
+0x2b, 0xd4, 0xcc, 0x33,
+0xad, 0x52, 0xab, 0x54,
+0xcb, 0x34, 0x53, 0xac,
+0x52, 0xad, 0xac, 0x53,
+0xcd, 0x32, 0x4d, 0xb2,
+0xd2, 0x2d, 0x4d, 0xb2,
+0xac, 0x53, 0x4b, 0xb4,
+0xaa, 0x55, 0x2b, 0xd4,
+0x52, 0xad, 0xca, 0x35,
+0x53, 0xac, 0x54, 0xab,
+0x32, 0xcd, 0x32, 0xcd,
+0x52, 0xad, 0x4c, 0xb3,
+0xac, 0x53, 0x53, 0xac,
+0xd2, 0x2d, 0x2b, 0xd4,
+0xd2, 0x2d, 0x4d, 0xb2,
+0x4a, 0xb5, 0x54, 0xab,
+0xaa, 0x55, 0xcb, 0x34,
+0x55, 0xaa, 0xcc, 0x33,
+0x53, 0xac, 0xd2, 0x2d,
+0xd3, 0x2c, 0x33, 0xcc,
+0xb2, 0x4d, 0x35, 0xca,
+0xca, 0x35, 0x53, 0xac,
+0x34, 0xcb, 0xd2, 0x2d,
+0xcd, 0x32, 0xad, 0x52,
+0xad, 0x52, 0x55, 0xaa,
+0xac, 0x53, 0x4d, 0xb2,
+0x32, 0xcd, 0x2c, 0xd3,
+0xb2, 0x4d, 0x4b, 0xb4,
+0xcc, 0x33, 0x55, 0xaa,
+0x54, 0xab, 0x2a, 0xd5,
+0x2c, 0xd3, 0xac, 0x53,
+0x33, 0xcc, 0x34, 0xcb,
+0xca, 0x35, 0x2d, 0xd2,
+0x4c, 0xb3, 0xd2, 0x2d,
+0xad, 0x52, 0x35, 0xca,
+0xb4, 0x4b, 0x55, 0xaa,
+0x32, 0xcd, 0xb2, 0x4d,
+0x35, 0xca, 0x4c, 0xb3,
+0xac, 0x53, 0xcb, 0x34,
+0xcd, 0x32, 0x2b, 0xd4,
+0x52, 0xad, 0x52, 0xad,
+0x4c, 0xb3, 0x54, 0xab,
+0xb2, 0x4d, 0x2d, 0xd2,
+0x54, 0xab, 0x4c, 0xb3,
+0xb4, 0x4b, 0xb5, 0x4a,
+0xd3, 0x2c, 0xab, 0x54,
+0x35, 0xca, 0x2a, 0xd5,
+0x4a, 0xb5, 0xcc, 0x33,
+0x2d, 0xd2, 0xd4, 0x2b,
+0xd5, 0x2a, 0x53, 0xac,
+0x4a, 0xb5, 0xd4, 0x2b,
+0xcb, 0x34, 0xcd, 0x32,
+0x55, 0xaa, 0xb4, 0x4b,
+0xad, 0x52, 0xd3, 0x2c,
+0x53, 0xac, 0x4a, 0xb5,
+0xd2, 0x2d, 0x35, 0xca,
+0x32, 0xcd, 0x4a, 0xb5,
+0x2a, 0xd5, 0x52, 0xad,
+0x2c, 0xd3, 0xca, 0x35,
+0xab, 0x54, 0x2d, 0xd2,
+0x2a, 0xd5, 0xb2, 0x4d,
+0xb3, 0x4c, 0xd5, 0x2a,
+0xab, 0x54, 0x2b, 0xd4,
+0x34, 0xcb, 0xb4, 0x4b,
+0x53, 0xac, 0xb4, 0x4b,
+0x4d, 0xb2, 0x2a, 0xd5,
+0x52, 0xad, 0x4a, 0xb5,
+0x34, 0xcb, 0x54, 0xab,
+0x32, 0xcd, 0xaa, 0x55,
+0x4d, 0xb2, 0x4c, 0xb3,
+0x2c, 0xd3, 0x4c, 0xb3,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xca, 0x35, 0xab, 0x54,
+0x4b, 0xb4, 0xd4, 0x2b,
+0x4d, 0xb2, 0xac, 0x53,
+0x55, 0xaa, 0x54, 0xab,
+0xd4, 0x2b, 0xcd, 0x32,
+0x53, 0xac, 0xac, 0x53,
+0xab, 0x54, 0x33, 0xcc,
+0xd2, 0x2d, 0xad, 0x52,
+0xd3, 0x2c, 0x53, 0xac,
+0xaa, 0x55, 0x2d, 0xd2,
+0xca, 0x35, 0xcd, 0x32,
+0xb3, 0x4c, 0xd5, 0x2a,
+0xad, 0x52, 0x33, 0xcc,
+0x34, 0xcb, 0x54, 0xab,
+0xd2, 0x2d, 0xb3, 0x4c,
+0x4d, 0xb2, 0x4c, 0xb3,
+0xca, 0x35, 0x4b, 0xb4,
+0xd4, 0x2b, 0xcb, 0x34,
+0x4d, 0xb2, 0xaa, 0x55,
+0x4b, 0xb4, 0x52, 0xad,
+0x34, 0xcb, 0xac, 0x53,
+0xb5, 0x4a, 0xad, 0x52,
+0xcd, 0x32, 0xcd, 0x32,
+0xb5, 0x4a, 0x4d, 0xb2,
+0xac, 0x53, 0xd3, 0x2c,
+0xb5, 0x4a, 0x2b, 0xd4,
+0xd2, 0x2d, 0xd5, 0x2a,
+0x55, 0xaa, 0x54, 0xab,
+0x2a, 0xd5, 0xd4, 0x2b,
+0x53, 0xac, 0xcc, 0x33,
+0x4b, 0xb4, 0x34, 0xcb,
+0xd2, 0x2d, 0xb3, 0x4c,
+0x55, 0xaa, 0x52, 0xad,
+0xca, 0x35, 0xcb, 0x34,
+0xb3, 0x4c, 0xcd, 0x32,
+0x4d, 0xb2, 0x32, 0xcd,
+0xb4, 0x4b, 0x53, 0xac,
+0xb4, 0x4b, 0xb3, 0x4c,
+0xd5, 0x2a, 0xad, 0x52,
+0xd5, 0x2a, 0xcb, 0x34,
+0xab, 0x54, 0xcd, 0x32,
+0x4b, 0xb4, 0xb2, 0x4d,
+0xb3, 0x4c, 0xb3, 0x4c,
+0xb5, 0x4a, 0x2b, 0xd4,
+0xd4, 0x2b, 0xcb, 0x34,
+0x55, 0xaa, 0xb4, 0x4b,
+0x4b, 0xb4, 0xd2, 0x2d,
+0x53, 0xac, 0xaa, 0x55,
+0xb5, 0x4a, 0x35, 0xca,
+0x32, 0xcd, 0xcc, 0x33,
+0x35, 0xca, 0x52, 0xad,
+0xcc, 0x33, 0xd3, 0x2c,
+0xad, 0x52, 0x2d, 0xd2,
+0xcc, 0x33, 0x55, 0xaa,
+0xb2, 0x4d, 0x35, 0xca,
+0x2c, 0xd3, 0x4c, 0xb3,
+0x34, 0xcb, 0x32, 0xcd,
+0xca, 0x35, 0xab, 0x54,
+0xad, 0x52, 0xd3, 0x2c,
+0x4d, 0xb2, 0x4c, 0xb3,
+0xd2, 0x2d, 0x55, 0xaa,
+0xd4, 0x2b, 0x4b, 0xb4,
+0x2a, 0xd5, 0xac, 0x53,
+0x4b, 0xb4, 0xca, 0x35,
+0xcb, 0x34, 0xad, 0x52,
+0x35, 0xca, 0xb2, 0x4d,
+0xad, 0x52, 0xcd, 0x32,
+0xad, 0x52, 0x4b, 0xb4,
+0xb2, 0x4d, 0x53, 0xac,
+0x52, 0xad, 0x4a, 0xb5,
+0xd4, 0x2b, 0x4d, 0xb2,
+0x32, 0xcd, 0xaa, 0x55,
+0xab, 0x54, 0x4b, 0xb4,
+0x2c, 0xd3, 0xac, 0x53,
+0x53, 0xac, 0x2a, 0xd5,
+0xca, 0x35, 0x2d, 0xd2,
+0x32, 0xcd, 0xd4, 0x2b,
+0xad, 0x52, 0x55, 0xaa,
+0x4c, 0xb3, 0x54, 0xab,
+0x32, 0xcd, 0x2c, 0xd3,
+0x54, 0xab, 0x4c, 0xb3,
+0xcc, 0x33, 0xb5, 0x4a,
+0xd3, 0x2c, 0x2b, 0xd4,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x4a, 0xb5, 0x34, 0xcb,
+0x2a, 0xd5, 0xd4, 0x2b,
+0x55, 0xaa, 0xd2, 0x2d,
+0x4b, 0xb4, 0xd4, 0x2b,
+0xb3, 0x4c, 0xb5, 0x4a,
+0x55, 0xaa, 0x34, 0xcb,
+0x34, 0xcb, 0xca, 0x35,
+0x53, 0xac, 0xb2, 0x4d,
+0x2d, 0xd2, 0x32, 0xcd,
+0xb2, 0x4d, 0x4b, 0xb4,
+0xaa, 0x55, 0x53, 0xac,
+0x54, 0xab, 0xca, 0x35,
+0xd3, 0x2c, 0xad, 0x52,
+0x33, 0xcc, 0x32, 0xcd,
+0xaa, 0x55, 0x2d, 0xd2,
+0xac, 0x53, 0xd3, 0x2c,
+0xb3, 0x4c, 0x35, 0xca,
+0xd2, 0x2d, 0x35, 0xca,
+0x34, 0xcb, 0x52, 0xad,
+0x2a, 0xd5, 0xb2, 0x4d,
+0xad, 0x52, 0xcd, 0x32,
+0xab, 0x54, 0x4b, 0xb4,
+0xb2, 0x4d, 0xb3, 0x4c,
+0x53, 0xac, 0x4a, 0xb5,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x32, 0xcd, 0xaa, 0x55,
+0x4b, 0xb4, 0x54, 0xab,
+0x2c, 0xd3, 0xac, 0x53,
+0x55, 0xaa, 0x2c, 0xd3,
+0xca, 0x35, 0xcd, 0x32,
+0xd3, 0x2c, 0xd5, 0x2a,
+0xad, 0x52, 0x33, 0xcc,
+0x2a, 0xd5, 0x54, 0xab,
+0xd2, 0x2d, 0xd3, 0x2c,
+0x4b, 0xb4, 0x4c, 0xb3,
+0xca, 0x35, 0xb5, 0x4a,
+0xd5, 0x2a, 0xcb, 0x34,
+0x2d, 0xd2, 0xca, 0x35,
+0x4b, 0xb4, 0x52, 0xad,
+0x2a, 0xd5, 0xb2, 0x4d,
+0xb5, 0x4a, 0xcd, 0x32,
+0xab, 0x54, 0xcb, 0x34,
+0xb5, 0x4a, 0xb3, 0x4c,
+0x53, 0xac, 0xd2, 0x2d,
+0xd5, 0x2a, 0x2b, 0xd4,
+0xb2, 0x4d, 0xd5, 0x2a,
+0x4b, 0xb4, 0x54, 0xab,
+0x34, 0xcb, 0xb4, 0x4b,
+0x55, 0xaa, 0xac, 0x53,
+0x4d, 0xb2, 0xca, 0x35,
+0xd3, 0x2c, 0x4d, 0xb2,
+0x34, 0xcb, 0x32, 0xcd,
+0xaa, 0x55, 0xab, 0x54,
+0xad, 0x52, 0xd3, 0x2c,
+0x53, 0xac, 0x4c, 0xb3,
+0xd2, 0x2d, 0x35, 0xca,
+0xd2, 0x2d, 0x4b, 0xb4,
+0x2a, 0xd5, 0x52, 0xad,
+0x4a, 0xb5, 0xca, 0x35,
+0xab, 0x54, 0xcd, 0x32,
+0x35, 0xca, 0xb2, 0x4d,
+0xb3, 0x4c, 0xd3, 0x2c,
+0xad, 0x52, 0x2b, 0xd4,
+0xd4, 0x2b, 0x55, 0xaa,
+0x52, 0xad, 0xb4, 0x4b,
+0x2b, 0xd4, 0x4c, 0xb3,
+0x52, 0xad, 0xaa, 0x55,
+0xcb, 0x34, 0x4b, 0xb4,
+0x32, 0xcd, 0xac, 0x53,
+0x4d, 0xb2, 0x4a, 0xb5,
+0xcc, 0x33, 0x4d, 0xb2,
+0x34, 0xcb, 0x2a, 0xd5,
+0xac, 0x53, 0xab, 0x54,
+0x2d, 0xd2, 0x34, 0xcb,
+0x52, 0xad, 0x4c, 0xb3,
+0x4a, 0xb5, 0x52, 0xad,
+0xd2, 0x2d, 0xcb, 0x34,
+0xb5, 0x4a, 0x4d, 0xb2,
+0x4a, 0xb5, 0xd2, 0x2d,
+0xb5, 0x4a, 0xcb, 0x34,
+0xb5, 0x4a, 0xd5, 0x2a,
+0x55, 0xaa, 0xd2, 0x2d,
+0x35, 0xca, 0xd4, 0x2b,
+0xb3, 0x4c, 0xd5, 0x2a,
+0x4d, 0xb2, 0x34, 0xcb,
+0x34, 0xcb, 0x54, 0xab,
+0x54, 0xab, 0xb2, 0x4d,
+0x4d, 0xb2, 0xac, 0x53,
+0xb3, 0x4c, 0x4b, 0xb4,
+0xd4, 0x2b, 0x2d, 0xd2,
+0x54, 0xab, 0xaa, 0x55,
+0xab, 0x54, 0xb5, 0x4a,
+0x33, 0xcc, 0xac, 0x53,
+0x33, 0xcc, 0x2a, 0xd5,
+0xcc, 0x33, 0x2d, 0xd2,
+0x2c, 0xd3, 0x34, 0xcb,
+0xac, 0x53, 0x35, 0xca,
+0x4a, 0xb5, 0x32, 0xcd,
+0x32, 0xcd, 0xd2, 0x2d,
+0xb5, 0x4a, 0x53, 0xac,
+0xac, 0x53, 0xd5, 0x2a,
+0xd5, 0x2a, 0x2d, 0xd2,
+0x32, 0xcd, 0xd4, 0x2b,
+0xab, 0x54, 0x55, 0xaa,
+0x4c, 0xb3, 0xb4, 0x4b,
+0x33, 0xcc, 0x2c, 0xd3,
+0x54, 0xab, 0x2a, 0xd5,
+0xcc, 0x33, 0xb5, 0x4a,
+0x33, 0xcc, 0x34, 0xcb,
+0x2c, 0xd3, 0x2a, 0xd5,
+0x4c, 0xb3, 0x32, 0xcd,
+0x2a, 0xd5, 0x34, 0xcb,
+0xb4, 0x4b, 0xd3, 0x2c,
+0x4b, 0xb4, 0xb2, 0x4d,
+0xd5, 0x2a, 0xb5, 0x4a,
+0xb5, 0x4a, 0xcb, 0x34,
+0x2b, 0xd4, 0xca, 0x35,
+0x55, 0xaa, 0xb2, 0x4d,
+0x2b, 0xd4, 0xd2, 0x2d,
+/* rand data for seed 128 */
+0x71, 0x9c, 0x8e, 0x63,
+0x0f, 0xe2, 0xf0, 0x1d,
+0xf1, 0x8f, 0x0e, 0x70,
+0x9d, 0xe3, 0x62, 0x1c,
+0x55, 0x46, 0xaa, 0xb9,
+0xf0, 0x63, 0x0f, 0x9c,
+0x2a, 0x9c, 0xd5, 0x63,
+0xd5, 0x47, 0x2a, 0xb8,
+0xc6, 0x47, 0x39, 0xb8,
+0x46, 0xd4, 0xb9, 0x2b,
+0x47, 0xd4, 0xb8, 0x2b,
+0xe3, 0xb9, 0x1c, 0x46,
+0xe3, 0x39, 0x1c, 0xc6,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x1c, 0x38, 0xe3, 0xc7,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x54, 0x38, 0xab, 0xc7,
+0xc6, 0x39, 0x39, 0xc6,
+0x62, 0xf0, 0x9d, 0x0f,
+0x0f, 0x70, 0xf0, 0x8f,
+0x70, 0xaa, 0x8f, 0x55,
+0x55, 0x8e, 0xaa, 0x71,
+0xb9, 0x55, 0x46, 0xaa,
+0x2a, 0xc6, 0xd5, 0x39,
+0xab, 0x55, 0x54, 0xaa,
+0x0e, 0x38, 0xf1, 0xc7,
+0xaa, 0xd5, 0x55, 0x2a,
+0x55, 0x70, 0xaa, 0x8f,
+0xaa, 0x71, 0x55, 0x8e,
+0x62, 0x46, 0x9d, 0xb9,
+0x2a, 0x46, 0xd5, 0xb9,
+0x38, 0x54, 0xc7, 0xab,
+0x0e, 0x9c, 0xf1, 0x63,
+0xc7, 0xd5, 0x38, 0x2a,
+0xd5, 0x8f, 0x2a, 0x70,
+0x8f, 0x71, 0x70, 0x8e,
+0x46, 0x8e, 0xb9, 0x71,
+0x39, 0xc6, 0xc6, 0x39,
+0x2b, 0xc6, 0xd4, 0x39,
+0x0f, 0x38, 0xf0, 0xc7,
+0x0e, 0xb8, 0xf1, 0x47,
+0x55, 0xf0, 0xaa, 0x0f,
+0x55, 0x54, 0xaa, 0xab,
+0x62, 0x62, 0x9d, 0x9d,
+0xe2, 0x55, 0x1d, 0xaa,
+0xb8, 0x47, 0x47, 0xb8,
+0x9c, 0x9d, 0x63, 0x62,
+0x63, 0x1c, 0x9c, 0xe3,
+0xb8, 0x0f, 0x47, 0xf0,
+0xf0, 0xab, 0x0f, 0x54,
+0x63, 0xaa, 0x9c, 0x55,
+0xd5, 0x1d, 0x2a, 0xe2,
+0xb8, 0x55, 0x47, 0xaa,
+0x8e, 0xab, 0x71, 0x54,
+0xab, 0xd5, 0x54, 0x2a,
+0xf1, 0x1d, 0x0e, 0xe2,
+0xaa, 0xf1, 0x55, 0x0e,
+0x9d, 0x63, 0x62, 0x9c,
+0x2a, 0x62, 0xd5, 0x9d,
+0xf0, 0x47, 0x0f, 0xb8,
+0x8e, 0x8f, 0x71, 0x70,
+0x55, 0xd4, 0xaa, 0x2b,
+0x71, 0x46, 0x8e, 0xb9,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x39, 0x54, 0xc6, 0xab,
+0x1c, 0xe2, 0xe3, 0x1d,
+0xc7, 0x1d, 0x38, 0xe2,
+0x9c, 0xab, 0x63, 0x54,
+0x8f, 0x2b, 0x70, 0xd4,
+0xf0, 0x9d, 0x0f, 0x62,
+0xf1, 0xb9, 0x0e, 0x46,
+0x9d, 0xc7, 0x62, 0x38,
+0x1d, 0x54, 0xe2, 0xab,
+0x70, 0x70, 0x8f, 0x8f,
+0xd4, 0x9d, 0x2b, 0x62,
+0x71, 0x0e, 0x8e, 0xf1,
+0x8e, 0xc7, 0x71, 0x38,
+0x39, 0xe2, 0xc6, 0x1d,
+0x71, 0xf0, 0x8e, 0x0f,
+0x8f, 0xe3, 0x70, 0x1c,
+0x71, 0xaa, 0x8e, 0x55,
+0xf1, 0xe3, 0x0e, 0x1c,
+0xb9, 0xd5, 0x46, 0x2a,
+0xd5, 0xe3, 0x2a, 0x1c,
+0xab, 0x71, 0x54, 0x8e,
+0xc6, 0x2b, 0x39, 0xd4,
+0x2a, 0xc6, 0xd5, 0x39,
+0xc7, 0x71, 0x38, 0x8e,
+0x0e, 0xb8, 0xf1, 0x47,
+0x0f, 0xc6, 0xf0, 0x39,
+0x55, 0x9c, 0xaa, 0x63,
+0x1d, 0x70, 0xe2, 0x8f,
+0xe2, 0x47, 0x1d, 0xb8,
+0x54, 0x46, 0xab, 0xb9,
+0x54, 0x1c, 0xab, 0xe3,
+0x2a, 0x1c, 0xd5, 0xe3,
+0xe2, 0x63, 0x1d, 0x9c,
+0xc6, 0x63, 0x39, 0x9c,
+0xd4, 0xc7, 0x2b, 0x38,
+0xc7, 0x0f, 0x38, 0xf0,
+0x46, 0xb8, 0xb9, 0x47,
+0x47, 0xe2, 0xb8, 0x1d,
+0x63, 0x9c, 0x9c, 0x63,
+0xab, 0x2b, 0x54, 0xd4,
+0xf0, 0x0f, 0x0f, 0xf0,
+0xe2, 0xb9, 0x1d, 0x46,
+0x55, 0x62, 0xaa, 0x9d,
+0x1c, 0x54, 0xe3, 0xab,
+0xaa, 0x0f, 0x55, 0xf0,
+0xd4, 0x55, 0x2b, 0xaa,
+0x62, 0x2a, 0x9d, 0xd5,
+0x8e, 0x55, 0x71, 0xaa,
+0xb8, 0xf1, 0x47, 0x0e,
+0xb9, 0x9d, 0x46, 0x62,
+0x2b, 0xe2, 0xd4, 0x1d,
+0xab, 0x0f, 0x54, 0xf0,
+0x8e, 0x2b, 0x71, 0xd4,
+0x62, 0xe2, 0x9d, 0x1d,
+0xf1, 0x71, 0x0e, 0x8e,
+0xb8, 0xe3, 0x47, 0x1c,
+0x1d, 0x8e, 0xe2, 0x71,
+0xe3, 0x63, 0x1c, 0x9c,
+0x1c, 0x0e, 0xe3, 0xf1,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x1c, 0x2a, 0xe3, 0xd5,
+0x46, 0x2a, 0xb9, 0xd5,
+0x9c, 0xf1, 0x63, 0x0e,
+0xab, 0x39, 0x54, 0xc6,
+0x38, 0x2a, 0xc7, 0xd5,
+0x2a, 0xb8, 0xd5, 0x47,
+0x8f, 0x71, 0x70, 0x8e,
+0x46, 0x9c, 0xb9, 0x63,
+0x39, 0xc6, 0xc6, 0x39,
+0xe3, 0xc7, 0x1c, 0x38,
+0x0f, 0x38, 0xf0, 0xc7,
+0x54, 0xb8, 0xab, 0x47,
+0x55, 0x38, 0xaa, 0xc7,
+0x62, 0x54, 0x9d, 0xab,
+0x62, 0x70, 0x9d, 0x8f,
+0xf0, 0x55, 0x0f, 0xaa,
+0x70, 0x8e, 0x8f, 0x71,
+0x9d, 0x9d, 0x62, 0x62,
+0x39, 0x46, 0xc6, 0xb9,
+0xb8, 0xc7, 0x47, 0x38,
+0x0f, 0x9c, 0xf0, 0x63,
+0x63, 0xb8, 0x9c, 0x47,
+0xd5, 0x0f, 0x2a, 0xf0,
+0x70, 0x54, 0x8f, 0xab,
+0x46, 0xaa, 0xb9, 0x55,
+0xf1, 0xd5, 0x0e, 0x2a,
+0xab, 0xd5, 0x54, 0x2a,
+0x9d, 0x39, 0x62, 0xc6,
+0xaa, 0x71, 0x55, 0x8e,
+0x38, 0x70, 0xc7, 0x8f,
+0x2a, 0x8e, 0xd5, 0x71,
+0x47, 0x46, 0xb8, 0xb9,
+0x0e, 0x8e, 0xf1, 0x71,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x1d, 0x0e, 0xe2, 0xf1,
+0xc6, 0x71, 0x39, 0x8e,
+0x1c, 0xe2, 0xe3, 0x1d,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x9c, 0xab, 0x63, 0x54,
+0x1d, 0x2a, 0xe2, 0xd5,
+0xf0, 0x55, 0x0f, 0xaa,
+0x9c, 0xb9, 0x63, 0x46,
+0x9d, 0x1d, 0x62, 0xe2,
+0x38, 0x54, 0xc7, 0xab,
+0xb8, 0xab, 0x47, 0x54,
+0xc7, 0x9d, 0x38, 0x62,
+0xe3, 0x9d, 0x1c, 0x62,
+0x8f, 0x0f, 0x70, 0xf0,
+0x9c, 0x8f, 0x63, 0x70,
+0x71, 0x2a, 0x8e, 0xd5,
+0x70, 0xc6, 0x8f, 0x39,
+0xb9, 0xb9, 0x46, 0x46,
+0x39, 0xf0, 0xc6, 0x0f,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x47, 0x2a, 0xb8, 0xd5,
+0xc6, 0xb9, 0x39, 0x46,
+0xab, 0xf1, 0x54, 0x0e,
+0x0f, 0x1c, 0xf0, 0xe3,
+0x2a, 0xaa, 0xd5, 0x55,
+0xd5, 0x63, 0x2a, 0x9c,
+0x8e, 0x55, 0x71, 0xaa,
+0xc6, 0xc7, 0x39, 0x38,
+0xb9, 0xd5, 0x46, 0x2a,
+0x47, 0xf0, 0xb8, 0x0f,
+0xab, 0xb9, 0x54, 0x46,
+0x63, 0x2a, 0x9c, 0xd5,
+0x2a, 0x1c, 0xd5, 0xe3,
+0xb8, 0x71, 0x47, 0x8e,
+0xc6, 0xab, 0x39, 0x54,
+0x2b, 0xc6, 0xd4, 0x39,
+0xc7, 0x1d, 0x38, 0xe2,
+0x0e, 0xb8, 0xf1, 0x47,
+0x8f, 0xe3, 0x70, 0x1c,
+0x55, 0x9c, 0xaa, 0x63,
+0xf1, 0x63, 0x0e, 0x9c,
+0xe2, 0xc7, 0x1d, 0x38,
+0xd5, 0x47, 0x2a, 0xb8,
+0x54, 0x70, 0xab, 0x8f,
+0x46, 0x1c, 0xb9, 0xe3,
+0x62, 0xc6, 0x9d, 0x39,
+0xe3, 0x63, 0x1c, 0x9c,
+0x38, 0x38, 0xc7, 0xc7,
+0xd4, 0x8f, 0x2b, 0x70,
+0x47, 0x38, 0xb8, 0xc7,
+0x46, 0x8e, 0xb9, 0x71,
+0x63, 0xf0, 0x9c, 0x0f,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x70, 0x2a, 0x8f, 0xd5,
+0x0e, 0xaa, 0xf1, 0x55,
+0xb9, 0xf1, 0x46, 0x0e,
+0x9d, 0xd5, 0x62, 0x2a,
+0x2b, 0x62, 0xd4, 0x9d,
+0xb8, 0x39, 0x47, 0xc6,
+0x8e, 0x8f, 0x71, 0x70,
+0x2b, 0xf0, 0xd4, 0x0f,
+0x71, 0x0e, 0x8e, 0xf1,
+0x46, 0xe2, 0xb9, 0x1d,
+0x39, 0xe2, 0xc6, 0x1d,
+0xab, 0xe3, 0x54, 0x1c,
+0x8f, 0x2b, 0x70, 0xd4,
+0xe2, 0xab, 0x1d, 0x54,
+0xf1, 0x71, 0x0e, 0x8e,
+0xd4, 0xd5, 0x2b, 0x2a,
+0x1d, 0x0e, 0xe2, 0xf1,
+0x8e, 0x71, 0x71, 0x8e,
+0x1c, 0xe2, 0xe3, 0x1d,
+0x39, 0x0e, 0xc6, 0xf1,
+0x9c, 0xe3, 0x63, 0x1c,
+0x0f, 0x2a, 0xf0, 0xd5,
+0xf0, 0xab, 0x0f, 0x54,
+0x9d, 0xb9, 0x62, 0x46,
+0xd5, 0x55, 0x2a, 0xaa,
+0x38, 0x54, 0xc7, 0xab,
+0x8e, 0x9d, 0x71, 0x62,
+0xc7, 0xd5, 0x38, 0x2a,
+0xb9, 0x8f, 0x46, 0x70,
+0x8f, 0xf1, 0x70, 0x0e,
+0x63, 0x8e, 0x9c, 0x71,
+0x39, 0x2a, 0xc6, 0xd5,
+0x38, 0xc6, 0xc7, 0x39,
+0x8f, 0xb9, 0x70, 0x46,
+0x0f, 0xb8, 0xf0, 0x47,
+0x39, 0x9c, 0xc6, 0x63,
+0x55, 0xd4, 0xaa, 0x2b,
+0xc7, 0x47, 0x38, 0xb8,
+0xe2, 0xb9, 0x1d, 0x46,
+0x47, 0x54, 0xb8, 0xab,
+0x1c, 0x9c, 0xe3, 0x63,
+0xe3, 0x1d, 0x1c, 0xe2,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x9c, 0x2b, 0x63, 0xd4,
+0x46, 0x2a, 0xb9, 0xd5,
+0xf0, 0xf1, 0x0f, 0x0e,
+0xab, 0xb9, 0x54, 0x46,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x2a, 0x54, 0xd5, 0xab,
+0x9c, 0x71, 0x63, 0x8e,
+0xc6, 0x1d, 0x39, 0xe2,
+0x38, 0xc6, 0xc7, 0x39,
+0x8f, 0xab, 0x70, 0x54,
+0x0f, 0xb8, 0xf0, 0x47,
+0xf1, 0x9d, 0x0e, 0x62,
+0x55, 0xd4, 0xaa, 0x2b,
+0x9d, 0x47, 0x62, 0xb8,
+0xe2, 0x71, 0x1d, 0x8e,
+0x70, 0x54, 0x8f, 0xab,
+0x1c, 0x8e, 0xe3, 0x71,
+0xf1, 0x1d, 0x0e, 0xe2,
+0x1c, 0xc6, 0xe3, 0x39,
+0x9d, 0x2b, 0x62, 0xd4,
+0x1c, 0x70, 0xe3, 0x8f,
+0xf0, 0x39, 0x0f, 0xc6,
+0x54, 0x8e, 0xab, 0x71,
+0x1d, 0x38, 0xe2, 0xc7,
+0x2a, 0x46, 0xd5, 0xb9,
+0x54, 0x70, 0xab, 0x8f,
+0x0e, 0x1c, 0xf1, 0xe3,
+0x62, 0xc6, 0x9d, 0x39,
+0xd5, 0x63, 0x2a, 0x9c,
+0x38, 0x70, 0xc7, 0x8f,
+0xc6, 0x8f, 0x39, 0x70,
+0x47, 0xc6, 0xb8, 0x39,
+0x47, 0x8e, 0xb8, 0x71,
+0x2b, 0xb8, 0xd4, 0x47,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x46, 0x1c, 0xb9, 0xe3,
+0x0e, 0xe2, 0xf1, 0x1d,
+0xe3, 0xe3, 0x1c, 0x1c,
+0x9d, 0x2b, 0x62, 0xd4,
+0xd4, 0x63, 0x2b, 0x9c,
+0xf0, 0x39, 0x0f, 0xc6,
+0xc6, 0x8f, 0x39, 0x70,
+0x1d, 0xf0, 0xe2, 0x0f,
+0x47, 0x46, 0xb8, 0xb9,
+0x54, 0xaa, 0xab, 0x55,
+0x2b, 0x1c, 0xd4, 0xe3,
+0xaa, 0x1d, 0x55, 0xe2,
+0xc6, 0x63, 0x39, 0x9c,
+0xaa, 0xe3, 0x55, 0x1c,
+0xc7, 0x47, 0x38, 0xb8,
+0xe2, 0xab, 0x1d, 0x54,
+0x47, 0x54, 0xb8, 0xab,
+0xd4, 0x9d, 0x2b, 0x62,
+0xe3, 0x1d, 0x1c, 0xe2,
+0x8e, 0x0f, 0x71, 0xf0,
+0x9c, 0xe3, 0x63, 0x1c,
+0x71, 0x2a, 0x8e, 0xd5,
+0xf0, 0xe3, 0x0f, 0x1c,
+0xb9, 0xb9, 0x46, 0x46,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x2b, 0x54, 0xd4, 0xab,
+0xc6, 0x2b, 0x39, 0xd4,
+0xc6, 0xd5, 0x39, 0x2a,
+0xc7, 0xf1, 0x38, 0x0e,
+0x8f, 0xb9, 0x70, 0x46,
+0x0f, 0xaa, 0xf0, 0x55,
+0x39, 0x9c, 0xc6, 0x63,
+0x9d, 0xd5, 0x62, 0x2a,
+0xc7, 0x47, 0x38, 0xb8,
+0xb8, 0xb9, 0x47, 0x46,
+0x47, 0x9c, 0xb8, 0x63,
+0x2b, 0x9c, 0xd4, 0x63,
+0xe3, 0x0f, 0x1c, 0xf0,
+0xc6, 0x0f, 0x39, 0xf0,
+0x54, 0xe2, 0xab, 0x1d,
+0x47, 0x2a, 0xb8, 0xd5,
+0xaa, 0xab, 0x55, 0x54,
+0xab, 0x71, 0x54, 0x8e,
+0xe2, 0x1d, 0x1d, 0xe2,
+0x2a, 0x46, 0xd5, 0xb9,
+0x9c, 0x63, 0x63, 0x9c,
+0x0e, 0x1c, 0xf1, 0xe3,
+0xf0, 0xc7, 0x0f, 0x38,
+0xd5, 0xab, 0x2a, 0x54,
+0x55, 0x70, 0xaa, 0x8f,
+0xc6, 0x55, 0x39, 0xaa,
+0x62, 0xc6, 0x9d, 0x39,
+0x8f, 0x55, 0x70, 0xaa,
+0x38, 0xb8, 0xc7, 0x47,
+0xb9, 0x9d, 0x46, 0x62,
+0x47, 0xd4, 0xb8, 0x2b,
+0xab, 0x8f, 0x54, 0x70,
+0xe3, 0x39, 0x1c, 0xc6,
+0x62, 0x0e, 0x9d, 0xf1,
+0x1c, 0x70, 0xe3, 0x8f,
+0x38, 0x2a, 0xc7, 0xd5,
+0x54, 0x8e, 0xab, 0x71,
+0x8f, 0x39, 0x70, 0xc6,
+0x2a, 0x8e, 0xd5, 0x71,
+0x39, 0x70, 0xc6, 0x8f,
+0x0e, 0xc6, 0xf1, 0x39,
+0x47, 0xc6, 0xb8, 0x39,
+0x1d, 0xb8, 0xe2, 0x47,
+0x2b, 0x70, 0xd4, 0x8f,
+0x54, 0x1c, 0xab, 0xe3,
+0x46, 0x0e, 0xb9, 0xf1,
+0xe2, 0xe3, 0x1d, 0x1c,
+0x2b, 0x62, 0xd4, 0x9d,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x8e, 0x0f, 0x71, 0xf0,
+0xc6, 0xf1, 0x39, 0x0e,
+0x71, 0xe2, 0x8e, 0x1d,
+0x0f, 0xe2, 0xf0, 0x1d,
+0xb9, 0xab, 0x46, 0x54,
+0x9d, 0xe3, 0x62, 0x1c,
+0xe3, 0x55, 0x1c, 0xaa,
+0xf0, 0x2b, 0x0f, 0xd4,
+0x9c, 0x9d, 0x63, 0x62,
+0xd5, 0x39, 0x2a, 0xc6,
+0xb8, 0x47, 0x47, 0xb8,
+0x0e, 0xb8, 0xf1, 0x47,
+0x63, 0xd4, 0x9c, 0x2b,
+0x55, 0x1c, 0xaa, 0xe3,
+0xf0, 0x71, 0x0f, 0x8e,
+0xe2, 0xab, 0x1d, 0x54,
+0x1d, 0x46, 0xe2, 0xb9,
+0xd4, 0x55, 0x2b, 0xaa,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x8e, 0x1d, 0x71, 0xe2,
+0xd4, 0xe3, 0x2b, 0x1c,
+0xb9, 0x2b, 0x46, 0xd4,
+0xc6, 0xe3, 0x39, 0x1c,
+0xe3, 0xf1, 0x1c, 0x0e,
+0xc7, 0x2b, 0x38, 0xd4,
+0x1c, 0xaa, 0xe3, 0x55,
+0xc7, 0x39, 0x38, 0xc6,
+0x9c, 0x9d, 0x63, 0x62,
+0x0f, 0x38, 0xf0, 0xc7,
+0xb8, 0x8f, 0x47, 0x70,
+0x55, 0xb8, 0xaa, 0x47,
+0x63, 0x46, 0x9c, 0xb9,
+0x62, 0x1c, 0x9d, 0xe3,
+0x38, 0x54, 0xc7, 0xab,
+0xf0, 0xab, 0x0f, 0x54,
+0xc7, 0x9d, 0x38, 0x62,
+0xd5, 0x9d, 0x2a, 0x62,
+0x8f, 0x47, 0x70, 0xb8,
+0x8e, 0x8f, 0x71, 0x70,
+0x71, 0xd4, 0x8e, 0x2b,
+0x71, 0xc6, 0x8e, 0x39,
+0xf1, 0xf1, 0x0e, 0x0e,
+0x39, 0xf0, 0xc6, 0x0f,
+0x1d, 0xe2, 0xe2, 0x1d,
+0x47, 0x62, 0xb8, 0x9d,
+0x9c, 0xab, 0x63, 0x54,
+0xab, 0x0f, 0x54, 0xf0,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x62, 0xaa, 0x9d, 0x55,
+0x9d, 0x63, 0x62, 0x9c,
+0xb8, 0x55, 0x47, 0xaa,
+0xf0, 0x8f, 0x0f, 0x70,
+0xab, 0x9d, 0x54, 0x62,
+0x55, 0x0e, 0xaa, 0xf1,
+0xaa, 0x47, 0x55, 0xb8,
+0x2a, 0x62, 0xd5, 0x9d,
+0x62, 0x54, 0x9d, 0xab,
+0x8e, 0x47, 0x71, 0xb8,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x71, 0x9c, 0x8e, 0x63,
+0x9d, 0xf1, 0x62, 0x0e,
+0xf1, 0x47, 0x0e, 0xb8,
+0x38, 0xe2, 0xc7, 0x1d,
+0x55, 0x9c, 0xaa, 0x63,
+0x8f, 0x63, 0x70, 0x9c,
+0xe2, 0x8f, 0x1d, 0x70,
+0xf1, 0x47, 0x0e, 0xb8,
+0x54, 0xc6, 0xab, 0x39,
+0x55, 0x1c, 0xaa, 0xe3,
+0x2a, 0x70, 0xd5, 0x8f,
+0xe2, 0x63, 0x1d, 0x9c,
+0x46, 0x46, 0xb9, 0xb9,
+0xd4, 0xc7, 0x2b, 0x38,
+0x2b, 0x1c, 0xd4, 0xe3,
+0x46, 0x38, 0xb9, 0xc7,
+0xc6, 0xe3, 0x39, 0x1c,
+0x63, 0xf0, 0x9c, 0x0f,
+0xc7, 0x2b, 0x38, 0xd4,
+0x70, 0xaa, 0x8f, 0x55,
+0xc7, 0xb9, 0x38, 0x46,
+0xb9, 0x9d, 0x46, 0x62,
+0x0f, 0xd4, 0xf0, 0x2b,
+0xab, 0x8f, 0x54, 0x70,
+0xd5, 0x39, 0x2a, 0xc6,
+0x62, 0x46, 0x9d, 0xb9,
+0x0e, 0x70, 0xf1, 0x8f,
+0x38, 0xd4, 0xc7, 0x2b,
+0x55, 0x8e, 0xaa, 0x71,
+0xc7, 0x71, 0x38, 0x8e,
+0x2a, 0x8e, 0xd5, 0x71,
+0x0f, 0x46, 0xf0, 0xb9,
+0x0e, 0x8e, 0xf1, 0x71,
+0x1d, 0xd4, 0xe2, 0x2b,
+0x1d, 0x46, 0xe2, 0xb9,
+0xd4, 0x71, 0x2b, 0x8e,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x0e, 0x0e, 0xf1, 0xf1,
+0xd4, 0xe3, 0x2b, 0x1c,
+0x1d, 0x2a, 0xe2, 0xd5,
+0xc6, 0x63, 0x39, 0x9c,
+0x9c, 0xf1, 0x63, 0x0e,
+0xc7, 0x0f, 0x38, 0xf0,
+0x38, 0xaa, 0xc7, 0x55,
+0x47, 0xaa, 0xb8, 0x55,
+0x8f, 0x9d, 0x70, 0x62,
+0xab, 0x9d, 0x54, 0x62,
+0xb9, 0x0f, 0x46, 0xf0,
+0xaa, 0xc7, 0x55, 0x38,
+0x63, 0x62, 0x9c, 0x9d,
+0x62, 0x38, 0x9d, 0xc7,
+0xb8, 0x47, 0x47, 0xb8,
+0x70, 0xb8, 0x8f, 0x47,
+0x63, 0x9c, 0x9c, 0x63,
+0x71, 0x1c, 0x8e, 0xe3,
+0xf0, 0xc7, 0x0f, 0x38,
+0xf1, 0xab, 0x0e, 0x54,
+0x55, 0xf0, 0xaa, 0x0f,
+0xd5, 0x55, 0x2a, 0xaa,
+0x62, 0x62, 0x9d, 0x9d,
+0x8e, 0x55, 0x71, 0xaa,
+0xb8, 0xc7, 0x47, 0x38,
+0xb9, 0x9d, 0x46, 0x62,
+0x63, 0xf0, 0x9c, 0x0f,
+0xab, 0x0f, 0x54, 0xf0,
+0x70, 0x2a, 0x8f, 0xd5,
+0x62, 0xaa, 0x9d, 0x55,
+0xb9, 0x71, 0x46, 0x8e,
+0xb8, 0xd5, 0x47, 0x2a,
+0x2b, 0x8e, 0xd4, 0x71,
+0xab, 0x39, 0x54, 0xc6,
+0x0e, 0x0e, 0xf1, 0xf1,
+0x2a, 0xf0, 0xd5, 0x0f,
+0x1d, 0x62, 0xe2, 0x9d,
+0x46, 0x62, 0xb9, 0x9d,
+0x9c, 0xc7, 0x63, 0x38,
+0xab, 0x0f, 0x54, 0xf0,
+0x70, 0x38, 0x8f, 0xc7,
+0x62, 0xaa, 0x9d, 0x55,
+0x71, 0x70, 0x8e, 0x8f,
+0xb8, 0xd5, 0x47, 0x2a,
+0x71, 0x8e, 0x8e, 0x71,
+0xab, 0xf1, 0x54, 0x0e,
+0x39, 0x0e, 0xc6, 0xf1,
+0x2a, 0xe2, 0xd5, 0x1d,
+0x0f, 0x62, 0xf0, 0x9d,
+0x8e, 0xab, 0x71, 0x54,
+0x9d, 0xc7, 0x62, 0x38,
+0xf1, 0x55, 0x0e, 0xaa,
+0x70, 0xf0, 0x8f, 0x0f,
+0x9d, 0x9d, 0x62, 0x62,
+0x71, 0x62, 0x8e, 0x9d,
+0xb8, 0xc7, 0x47, 0x38,
+0xb9, 0x8f, 0x46, 0x70,
+0x63, 0xf0, 0x9c, 0x0f,
+0x63, 0x0e, 0x9c, 0xf1,
+0x70, 0x2a, 0x8f, 0xd5,
+0x38, 0xaa, 0xc7, 0x55,
+0xb9, 0xb9, 0x46, 0x46,
+0x8f, 0xd5, 0x70, 0x2a,
+0x2b, 0x9c, 0xd4, 0x63,
+0xb9, 0x39, 0x46, 0xc6,
+0xc6, 0xc7, 0x39, 0x38,
+0x2b, 0xf0, 0xd4, 0x0f,
+0x47, 0x38, 0xb8, 0xc7,
+0x46, 0xaa, 0xb9, 0x55,
+0x63, 0xf0, 0x9c, 0x0f,
+0xab, 0x1d, 0x54, 0xe2,
+0x70, 0x2a, 0x8f, 0xd5,
+0xaa, 0xab, 0x55, 0x54,
+0xb9, 0x71, 0x46, 0x8e,
+0xe2, 0xd5, 0x1d, 0x2a,
+0x2b, 0x46, 0xd4, 0xb9,
+0x9c, 0x39, 0x63, 0xc6,
+0x0e, 0x1c, 0xf1, 0xe3,
+0x38, 0xf0, 0xc7, 0x0f,
+0xd5, 0xab, 0x2a, 0x54,
+0x47, 0x62, 0xb8, 0x9d,
+0xc6, 0x9d, 0x39, 0x62,
+0xab, 0xc7, 0x54, 0x38,
+0x8f, 0x0f, 0x70, 0xf0,
+0x62, 0xb8, 0x9d, 0x47,
+0x71, 0x62, 0x8e, 0x9d,
+0x70, 0xd4, 0x8f, 0x2b,
+0xb9, 0x8f, 0x46, 0x70,
+0xf1, 0xf1, 0x0e, 0x0e,
+0x63, 0xc6, 0x9c, 0x39,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x38, 0x70, 0xc7, 0x8f,
+0x9c, 0xb9, 0x63, 0x46,
+0x47, 0x0e, 0xb8, 0xf1,
+0x38, 0x9c, 0xc7, 0x63,
+0x2b, 0xaa, 0xd4, 0x55,
+0xc7, 0x0f, 0x38, 0xf0,
+0x8e, 0x9d, 0x71, 0x62,
+0x47, 0xe2, 0xb8, 0x1d,
+0xb9, 0x8f, 0x46, 0x70,
+0xab, 0xe3, 0x54, 0x1c,
+0x63, 0x0e, 0x9c, 0xf1,
+0xe2, 0x2b, 0x1d, 0xd4,
+0x38, 0x62, 0xc7, 0x9d,
+0xd4, 0xb9, 0x2b, 0x46,
+0x8f, 0x0f, 0x70, 0xf0,
+0x0e, 0x9c, 0xf1, 0x63,
+0x71, 0xe2, 0x8e, 0x1d,
+0xd5, 0xc7, 0x2a, 0x38,
+0xb9, 0x63, 0x46, 0x9c,
+0x46, 0xf0, 0xb9, 0x0f,
+0xe3, 0xc7, 0x1c, 0x38,
+0x63, 0x2a, 0x9c, 0xd5,
+0x54, 0x38, 0xab, 0xc7,
+0xb8, 0x39, 0x47, 0xc6,
+0x62, 0xb8, 0x9d, 0x47,
+0x2b, 0x70, 0xd4, 0x8f,
+0x70, 0x1c, 0x8f, 0xe3,
+0x46, 0x8e, 0xb9, 0x71,
+0xf1, 0xe3, 0x0e, 0x1c,
+0x2b, 0xc6, 0xd4, 0x39,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x0e, 0x70, 0xf1, 0x8f,
+0xc6, 0xf1, 0x39, 0x0e,
+0x55, 0xc6, 0xaa, 0x39,
+0x0f, 0x62, 0xf0, 0x9d,
+0x2a, 0xb8, 0xd5, 0x47,
+0x9d, 0x47, 0x62, 0xb8,
+0x46, 0x54, 0xb9, 0xab,
+0x70, 0xd4, 0x8f, 0x2b,
+0xe3, 0x9d, 0x1c, 0x62,
+0xf1, 0x39, 0x0e, 0xc6,
+0x9c, 0xc7, 0x63, 0x38,
+0x1d, 0x38, 0xe2, 0xc7,
+0x70, 0x70, 0x8f, 0x8f,
+0x54, 0xb8, 0xab, 0x47,
+0x71, 0x0e, 0x8e, 0xf1,
+0x62, 0xd4, 0x9d, 0x2b,
+0x39, 0x62, 0xc6, 0x9d,
+0xf0, 0xf1, 0x0f, 0x0e,
+0x8f, 0x8f, 0x70, 0x70,
+0x1d, 0xaa, 0xe2, 0x55,
+0x71, 0x46, 0x8e, 0xb9,
+0x9c, 0xd5, 0x63, 0x2a,
+0x39, 0x1c, 0xc6, 0xe3,
+0xb8, 0xf1, 0x47, 0x0e,
+0xc7, 0xab, 0x38, 0x54,
+0x2b, 0xaa, 0xd4, 0x55,
+0xc7, 0x1d, 0x38, 0xe2,
+0x8e, 0x9d, 0x71, 0x62,
+0x8f, 0xe3, 0x70, 0x1c,
+0xb9, 0x8f, 0x46, 0x70,
+0xf1, 0xe3, 0x0e, 0x1c,
+0x63, 0xc6, 0x9c, 0x39,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x38, 0x70, 0xc7, 0x8f,
+0xc6, 0xb9, 0x39, 0x46,
+0x47, 0xc6, 0xb8, 0x39,
+0x0f, 0x9c, 0xf0, 0x63,
+0x2b, 0xb8, 0xd4, 0x47,
+0xd5, 0x0f, 0x2a, 0xf0,
+0x46, 0x54, 0xb9, 0xab,
+0x46, 0xe2, 0xb9, 0x1d,
+0xe3, 0xd5, 0x1c, 0x2a,
+0xab, 0x2b, 0x54, 0xd4,
+0x9c, 0x39, 0x63, 0xc6,
+0xe2, 0x39, 0x1d, 0xc6,
+0x38, 0x70, 0xc7, 0x8f,
+0x1c, 0xb8, 0xe3, 0x47,
+0x47, 0x0e, 0xb8, 0xf1,
+0x54, 0x9c, 0xab, 0x63,
+0x2b, 0x2a, 0xd4, 0xd5,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x8e, 0x71, 0x71, 0x8e,
+0x54, 0xe2, 0xab, 0x1d,
+0x39, 0x0e, 0xc6, 0xf1,
+0xaa, 0xe3, 0x55, 0x1c,
+0x0f, 0x62, 0xf0, 0x9d,
+0xe2, 0xab, 0x1d, 0x54,
+0x9d, 0x47, 0x62, 0xb8,
+0xd4, 0x55, 0x2b, 0xaa,
+0x70, 0x1c, 0x8f, 0xe3,
+0x8e, 0x9d, 0x71, 0x62,
+0xf1, 0xe3, 0x0e, 0x1c,
+0xb9, 0xc7, 0x46, 0x38,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x63, 0x70, 0x9c, 0x8f,
+0xc6, 0x2b, 0x39, 0xd4,
+0x70, 0xc6, 0x8f, 0x39,
+0xc7, 0xb9, 0x38, 0x46,
+0x39, 0xb8, 0xc6, 0x47,
+0x0f, 0xd4, 0xf0, 0x2b,
+0x47, 0x9c, 0xb8, 0x63,
+0xd5, 0xb9, 0x2a, 0x46,
+0xe3, 0x47, 0x1c, 0xb8,
+0x0e, 0x1c, 0xf1, 0xe3,
+0x54, 0xd4, 0xab, 0x2b,
+0xd5, 0x2b, 0x2a, 0xd4,
+0xe2, 0x71, 0x1d, 0x8e,
+0xc6, 0x71, 0x39, 0x8e,
+0x1c, 0xc6, 0xe3, 0x39,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x1c, 0xb8, 0xe3, 0x47,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x54, 0x54, 0xab, 0xab,
+0x9c, 0x39, 0x63, 0xc6,
+0xe2, 0x1d, 0x1d, 0xe2,
+0x38, 0x70, 0xc7, 0x8f,
+0x9c, 0xab, 0x63, 0x54,
+0x47, 0x0e, 0xb8, 0xf1,
+0xf0, 0x9d, 0x0f, 0x62,
+0x2b, 0xaa, 0xd4, 0x55,
+0x9d, 0x0f, 0x62, 0xf0,
+0x8e, 0x55, 0x71, 0xaa,
+0x70, 0xe2, 0x8f, 0x1d,
+0xb9, 0x9d, 0x46, 0x62,
+0xb9, 0xe3, 0x46, 0x1c,
+0xab, 0xc7, 0x54, 0x38,
+0xe3, 0x2b, 0x1c, 0xd4,
+0x62, 0x38, 0x9d, 0xc7,
+0xd4, 0x71, 0x2b, 0x8e,
+0x70, 0x38, 0x8f, 0xc7,
+0x0e, 0x8e, 0xf1, 0x71,
+0x71, 0xf0, 0x8e, 0x0f,
+0x1d, 0xc6, 0xe2, 0x39,
+0x71, 0x62, 0x8e, 0x9d,
+0x1c, 0xf0, 0xe3, 0x0f,
+0xb9, 0x0f, 0x46, 0xf0,
+0x54, 0xe2, 0xab, 0x1d,
+0x63, 0x2a, 0x9c, 0xd5,
+0xaa, 0x2b, 0x55, 0xd4,
+0xb8, 0x71, 0x47, 0x8e,
+0xe2, 0xb9, 0x1d, 0x46,
+0x2b, 0x46, 0xd4, 0xb9,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x0e, 0x1c, 0xf1, 0xe3,
+0xd4, 0xe3, 0x2b, 0x1c,
+0xd5, 0x2b, 0x2a, 0xd4,
+0xc6, 0x63, 0x39, 0x9c,
+0xc6, 0xf1, 0x39, 0x0e,
+0xc7, 0xc7, 0x38, 0x38,
+0x0f, 0xaa, 0xf0, 0x55,
+0x47, 0xb8, 0xb8, 0x47,
+0x9d, 0x9d, 0x62, 0x62,
+0x63, 0x54, 0x9c, 0xab,
+0xb8, 0x0f, 0x47, 0xf0,
+0xf0, 0x9d, 0x0f, 0x62,
+0x63, 0xaa, 0x9c, 0x55,
+0x9d, 0x0f, 0x62, 0xf0,
+0xb8, 0x55, 0x47, 0xaa,
+0x70, 0xaa, 0x8f, 0x55,
+0xab, 0x9d, 0x54, 0x62,
+0xb9, 0x1d, 0x46, 0xe2,
+0xaa, 0xc7, 0x55, 0x38,
+0xab, 0x63, 0x54, 0x9c,
+0x62, 0x38, 0x9d, 0xc7,
+0xe2, 0x47, 0x1d, 0xb8,
+0x70, 0x70, 0x8f, 0x8f,
+0x54, 0x9c, 0xab, 0x63,
+0x71, 0x0e, 0x8e, 0xf1,
+0xe2, 0xc7, 0x1d, 0x38,
+0x39, 0x62, 0xc6, 0x9d,
+0x54, 0xf0, 0xab, 0x0f,
+0x8f, 0x0f, 0x70, 0xf0,
+0x62, 0xaa, 0x9d, 0x55,
+0x71, 0x62, 0x8e, 0x9d,
+0xb8, 0xd5, 0x47, 0x2a,
+0xb9, 0x8f, 0x46, 0x70,
+0xab, 0xf1, 0x54, 0x0e,
+0x63, 0x0e, 0x9c, 0xf1,
+0x2a, 0x2a, 0xd5, 0xd5,
+0x38, 0x62, 0xc7, 0x9d,
+0x8e, 0xb9, 0x71, 0x46,
+0x8f, 0xc7, 0x70, 0x38,
+0x39, 0x9c, 0xc6, 0x63,
+0x71, 0xf0, 0x8e, 0x0f,
+0xc7, 0xc7, 0x38, 0x38,
+0x71, 0xaa, 0x8e, 0x55,
+0x47, 0xf0, 0xb8, 0x0f,
+0xb9, 0x9d, 0x46, 0x62,
+0x63, 0xe2, 0x9c, 0x1d,
+0xab, 0x0f, 0x54, 0xf0,
+0xb8, 0x2b, 0x47, 0xd4,
+0x62, 0xaa, 0x9d, 0x55,
+0xe3, 0x71, 0x1c, 0x8e,
+0xb8, 0x1d, 0x47, 0xe2,
+0x1c, 0x8e, 0xe3, 0x71,
+0xab, 0x2b, 0x54, 0xd4,
+0x1c, 0x0e, 0xe3, 0xf1,
+0xe2, 0x39, 0x1d, 0xc6,
+0x1c, 0x62, 0xe3, 0x9d,
+0x1c, 0x38, 0xe3, 0xc7,
+0x9c, 0x0f, 0x63, 0xf0,
+0x54, 0x38, 0xab, 0xc7,
+0x70, 0x2a, 0x8f, 0xd5,
+0x62, 0xb8, 0x9d, 0x47,
+0xb9, 0x71, 0x46, 0x8e,
+0x70, 0xd4, 0x8f, 0x2b,
+0x2b, 0x8e, 0xd4, 0x71,
+0xf1, 0x39, 0x0e, 0xc6,
+0x0e, 0xc6, 0xf1, 0x39,
+0x1d, 0xf0, 0xe2, 0x0f,
+0x1d, 0x70, 0xe2, 0x8f,
+0x54, 0x62, 0xab, 0x9d,
+0x54, 0x0e, 0xab, 0xf1,
+0xaa, 0x0f, 0x55, 0xf0,
+0x2a, 0x62, 0xd5, 0x9d,
+0x62, 0x62, 0x9d, 0x9d,
+0x8e, 0x47, 0x71, 0xb8,
+0xb8, 0xc7, 0x47, 0x38,
+0x71, 0x9c, 0x8e, 0x63,
+0x63, 0xf0, 0x9c, 0x0f,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x70, 0xe2, 0x8f, 0x1d,
+0x55, 0xaa, 0xaa, 0x55,
+0xb9, 0x63, 0x46, 0x9c,
+0xaa, 0xd5, 0x55, 0x2a,
+0xe3, 0x47, 0x1c, 0xb8,
+0xaa, 0x39, 0x55, 0xc6,
+0x54, 0x54, 0xab, 0xab,
+0x2a, 0x38, 0xd5, 0xc7,
+0xe2, 0x55, 0x1d, 0xaa,
+0x46, 0x70, 0xb9, 0x8f,
+0x9c, 0xd5, 0x63, 0x2a,
+0x63, 0x0e, 0x9c, 0xf1,
+0xb8, 0x39, 0x47, 0xc6,
+0x38, 0xaa, 0xc7, 0x55,
+0x2b, 0xb8, 0xd4, 0x47,
+0x8f, 0x1d, 0x70, 0xe2,
+0x46, 0x9c, 0xb9, 0x63,
+0xb9, 0xe3, 0x46, 0x1c,
+0xe3, 0xc7, 0x1c, 0x38,
+0xe3, 0x2b, 0x1c, 0xd4,
+0x54, 0x38, 0xab, 0xc7,
+0xd4, 0x39, 0x2b, 0xc6,
+0x62, 0x38, 0x9d, 0xc7,
+0x0e, 0x70, 0xf1, 0x8f,
+0x70, 0xf0, 0x8f, 0x0f,
+0x55, 0x8e, 0xaa, 0x71,
+0x71, 0x62, 0x8e, 0x9d,
+0x2a, 0xc6, 0xd5, 0x39,
+0xb9, 0x47, 0x46, 0xb8,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x63, 0xd4, 0x9c, 0x2b,
+0x55, 0x2a, 0xaa, 0xd5,
+0xf0, 0x71, 0x0f, 0x8e,
+0xaa, 0xb9, 0x55, 0x46,
+0x1d, 0x46, 0xe2, 0xb9,
+0x2a, 0x54, 0xd5, 0xab,
+0x1c, 0x54, 0xe3, 0xab,
+0xc6, 0x1d, 0x39, 0xe2,
+0xd4, 0xd5, 0x2b, 0x2a,
+0x8f, 0x2b, 0x70, 0xd4,
+0x8e, 0xb9, 0x71, 0x46,
+0xf1, 0xf1, 0x0e, 0x0e,
+0x39, 0xd4, 0xc6, 0x2b,
+0x1d, 0xe2, 0xe2, 0x1d,
+0xc7, 0x71, 0x38, 0x8e,
+0x9c, 0xab, 0x63, 0x54,
+0x0f, 0x0e, 0xf0, 0xf1,
+0xf0, 0x9d, 0x0f, 0x62,
+0x1d, 0xaa, 0xe2, 0x55,
+0x9d, 0x47, 0x62, 0xb8,
+0x9c, 0x55, 0x63, 0xaa,
+0x70, 0x1c, 0x8f, 0xe3,
+0xb8, 0x9d, 0x47, 0x62,
+0xf1, 0xab, 0x0e, 0x54,
+0xab, 0xc7, 0x54, 0x38,
+0xd5, 0x1d, 0x2a, 0xe2,
+0x62, 0x70, 0x9d, 0x8f,
+0x8e, 0x63, 0x71, 0x9c,
+0x70, 0xc6, 0x8f, 0x39,
+0xf1, 0x8f, 0x0e, 0x70,
+0x39, 0xf0, 0xc6, 0x0f,
+0x55, 0xc6, 0xaa, 0x39,
+0x47, 0x62, 0xb8, 0x9d,
+0x2a, 0xb8, 0xd5, 0x47,
+0xab, 0x47, 0x54, 0xb8,
+0x46, 0x1c, 0xb9, 0xe3,
+0x62, 0xd4, 0x9d, 0x2b,
+0xe3, 0x63, 0x1c, 0x9c,
+0xf0, 0x39, 0x0f, 0xc6,
+0xd4, 0x8f, 0x2b, 0x70,
+0x1d, 0x38, 0xe2, 0xc7,
+0x46, 0x46, 0xb9, 0xb9,
+0x54, 0xf0, 0xab, 0x0f,
+0x2b, 0x1c, 0xd4, 0xe3,
+0x62, 0x2a, 0x9d, 0xd5,
+0xc6, 0x63, 0x39, 0x9c,
+0xb8, 0xf1, 0x47, 0x0e,
+0xc7, 0x8f, 0x38, 0x70,
+0x2b, 0xaa, 0xd4, 0x55,
+0x47, 0x0e, 0xb8, 0xf1,
+0x8e, 0x9d, 0x71, 0x62,
+0x2b, 0xe2, 0xd4, 0x1d,
+0xb9, 0x0f, 0x46, 0xf0,
+0x8e, 0xe3, 0x71, 0x1c,
+0x63, 0xe2, 0x9c, 0x1d,
+0xf1, 0x2b, 0x0e, 0xd4,
+0xb8, 0xe3, 0x47, 0x1c,
+0xd5, 0xb9, 0x2a, 0x46,
+0xe3, 0x63, 0x1c, 0x9c,
+0x0e, 0x1c, 0xf1, 0xe3,
+0xd4, 0xc7, 0x2b, 0x38,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x46, 0x70, 0xb9, 0x8f,
+0xc6, 0xf1, 0x39, 0x0e,
+0x63, 0xc6, 0x9c, 0x39,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x38, 0xb8, 0xc7, 0x47,
+0x9d, 0xb9, 0x62, 0x46,
+0x47, 0x54, 0xb8, 0xab,
+0x38, 0x9c, 0xc7, 0x63,
+0xe3, 0x9d, 0x1c, 0x62,
+0xc7, 0x0f, 0x38, 0xf0,
+0x9c, 0x8f, 0x63, 0x70,
+0x47, 0x2a, 0xb8, 0xd5,
+0x70, 0x8e, 0x8f, 0x71,
+0xab, 0xb9, 0x54, 0x46,
+0x39, 0x0e, 0xc6, 0xf1,
+0x2a, 0xd4, 0xd5, 0x2b,
+0x0f, 0x62, 0xf0, 0x9d,
+0xc6, 0xb9, 0x39, 0x46,
+0x9d, 0xc7, 0x62, 0x38,
+0x0f, 0x54, 0xf0, 0xab,
+0x70, 0xb8, 0x8f, 0x47,
+0xd5, 0x9d, 0x2a, 0x62,
+0x71, 0x54, 0x8e, 0xab,
+0x8e, 0xc7, 0x71, 0x38,
+0xf1, 0xd5, 0x0e, 0x2a,
+0x71, 0xf0, 0x8e, 0x0f,
+0x9d, 0xf1, 0x62, 0x0e,
+0x71, 0x62, 0x8e, 0x9d,
+0x38, 0xe2, 0xc7, 0x1d,
+0xb9, 0x8f, 0x46, 0x70,
+0x8f, 0xe3, 0x70, 0x1c,
+0x63, 0x8e, 0x9c, 0x71,
+0xf1, 0x2b, 0x0e, 0xd4,
+0x38, 0xc6, 0xc7, 0x39,
+0xd5, 0xb9, 0x2a, 0x46,
+0x0f, 0x70, 0xf0, 0x8f,
+0x0e, 0x9c, 0xf1, 0x63,
+0x55, 0xc6, 0xaa, 0x39,
+0xd5, 0x47, 0x2a, 0xb8,
+0x2a, 0x70, 0xd5, 0x8f,
+0x46, 0x54, 0xb9, 0xab,
+0x46, 0xc6, 0xb9, 0x39,
+0xe3, 0xd5, 0x1c, 0x2a,
+0x2b, 0x38, 0xd4, 0xc7,
+0x9c, 0x39, 0x63, 0xc6,
+0x46, 0x38, 0xb9, 0xc7,
+0x38, 0xf0, 0xc7, 0x0f,
+0x63, 0xb8, 0x9c, 0x47,
+0x47, 0x2a, 0xb8, 0xd5,
+0x70, 0x9c, 0x8f, 0x63,
+0xab, 0xb9, 0x54, 0x46,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x2a, 0xd4, 0xd5, 0x2b,
+0x55, 0x62, 0xaa, 0x9d,
+0xc6, 0x71, 0x39, 0x8e,
+0xaa, 0xc7, 0x55, 0x38,
+0x0f, 0x46, 0xf0, 0xb9,
+0x62, 0xb8, 0x9d, 0x47,
+0x1d, 0x54, 0xe2, 0xab,
+0x70, 0x54, 0x8f, 0xab,
+0xd4, 0x9d, 0x2b, 0x62,
+0xf1, 0x1d, 0x0e, 0xe2,
+0x8e, 0xc7, 0x71, 0x38,
+0x9d, 0xe3, 0x62, 0x1c,
+0x71, 0x70, 0x8e, 0x8f,
+0xf0, 0xe3, 0x0f, 0x1c,
+0x71, 0x8e, 0x8e, 0x71,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x39, 0x46, 0xc6, 0xb9,
+0xc6, 0xe3, 0x39, 0x1c,
+0x0f, 0xd4, 0xf0, 0x2b,
+0xc7, 0xab, 0x38, 0x54,
+0xd5, 0xb9, 0x2a, 0x46,
+0xc7, 0x55, 0x38, 0xaa,
+0x0e, 0x9c, 0xf1, 0x63,
+0x8f, 0xd5, 0x70, 0x2a,
+0xd5, 0x8f, 0x2a, 0x70,
+0xb9, 0x71, 0x46, 0x8e,
+0x46, 0xc6, 0xb9, 0x39,
+0x2b, 0xc6, 0xd4, 0x39,
+0x2b, 0x38, 0xd4, 0xc7,
+0x0e, 0x38, 0xf1, 0xc7,
+0x46, 0xf0, 0xb9, 0x0f,
+0x55, 0xf0, 0xaa, 0x0f,
+0x63, 0x62, 0x9c, 0x9d,
+0x62, 0x2a, 0x9d, 0xd5,
+0xb8, 0x47, 0x47, 0xb8,
+0xb8, 0xb9, 0x47, 0x46,
+0x63, 0x9c, 0x9c, 0x63,
+0x2b, 0x1c, 0xd4, 0xe3,
+0xf0, 0x0f, 0x0f, 0xf0,
+0xc6, 0xab, 0x39, 0x54,
+0x55, 0xe2, 0xaa, 0x1d,
+0xc7, 0x55, 0x38, 0xaa,
+0xaa, 0xab, 0x55, 0x54,
+0x8f, 0x55, 0x70, 0xaa,
+0xe2, 0x9d, 0x1d, 0x62,
+0xb9, 0x55, 0x46, 0xaa,
+0x9c, 0xc7, 0x63, 0x38,
+0xab, 0x1d, 0x54, 0xe2,
+0x70, 0x38, 0x8f, 0xc7,
+0xaa, 0xab, 0x55, 0x54,
+0x71, 0x70, 0x8e, 0x8f,
+0xe2, 0xd5, 0x1d, 0x2a,
+0x71, 0x46, 0x8e, 0xb9,
+0x9c, 0xf1, 0x63, 0x0e,
+0x39, 0x1c, 0xc6, 0xe3,
+0x38, 0xe2, 0xc7, 0x1d,
+0xc7, 0xab, 0x38, 0x54,
+0x8f, 0xab, 0x70, 0x54,
+0xc7, 0x9d, 0x38, 0x62,
+0xf1, 0x9d, 0x0e, 0x62,
+0x8f, 0xc7, 0x70, 0x38,
+0x9d, 0x8f, 0x62, 0x70,
+0x71, 0x70, 0x8e, 0x8f,
+0x70, 0xc6, 0x8f, 0x39,
+0x71, 0x8e, 0x8e, 0x71,
+0x39, 0xf0, 0xc6, 0x0f,
+0x39, 0xc6, 0xc6, 0x39,
+0x47, 0xe2, 0xb8, 0x1d,
+0x0f, 0xb8, 0xf0, 0x47,
+0xab, 0xab, 0x54, 0x54,
+0x55, 0x1c, 0xaa, 0xe3,
+0xe2, 0x55, 0x1d, 0xaa,
+0xe2, 0x63, 0x1d, 0x9c,
+0x9c, 0x55, 0x63, 0xaa,
+0xd4, 0x0f, 0x2b, 0xf0,
+0xb8, 0x1d, 0x47, 0xe2,
+0x46, 0xaa, 0xb9, 0x55,
+0xab, 0xe3, 0x54, 0x1c,
+0xab, 0x1d, 0x54, 0xe2,
+0xe2, 0x2b, 0x1d, 0xd4,
+0xaa, 0x63, 0x55, 0x9c,
+0xd4, 0x71, 0x2b, 0x8e,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x0e, 0x46, 0xf1, 0xb9,
+0x54, 0xe2, 0xab, 0x1d,
+0x1d, 0x1c, 0xe2, 0xe3,
+0xaa, 0x63, 0x55, 0x9c,
+0xd4, 0x63, 0x2b, 0x9c,
+0xe2, 0x0f, 0x1d, 0xf0,
+0xc6, 0x47, 0x39, 0xb8,
+0x54, 0xe2, 0xab, 0x1d,
+0x47, 0x1c, 0xb8, 0xe3,
+0xaa, 0xab, 0x55, 0x54,
+0xe3, 0x63, 0x1c, 0x9c,
+0xe2, 0x1d, 0x1d, 0xe2,
+0xd4, 0x47, 0x2b, 0xb8,
+0x9c, 0x2b, 0x63, 0xd4,
+0x46, 0x1c, 0xb9, 0xe3,
+0xf0, 0xf1, 0x0f, 0x0e,
+0xe3, 0xab, 0x1c, 0x54,
+0x1d, 0x2a, 0xe2, 0xd5,
+0xd4, 0x55, 0x2b, 0xaa,
+0x9c, 0x39, 0x63, 0xc6,
+0x8e, 0x1d, 0x71, 0xe2,
+0x38, 0xf0, 0xc7, 0x0f,
+0xb9, 0xab, 0x46, 0x54,
+0x47, 0xe2, 0xb8, 0x1d,
+0xe3, 0x9d, 0x1c, 0x62,
+0xab, 0x2b, 0x54, 0xd4,
+0x9c, 0x0f, 0x63, 0xf0,
+0xe2, 0x39, 0x1d, 0xc6,
+0x70, 0x62, 0x8f, 0x9d,
+0x1c, 0xb8, 0xe3, 0x47,
+0xb9, 0x0f, 0x46, 0xf0,
+0x54, 0xd4, 0xab, 0x2b,
+0x63, 0x2a, 0x9c, 0xd5,
+0xe2, 0x39, 0x1d, 0xc6,
+0xb8, 0x71, 0x47, 0x8e,
+0x1c, 0xb8, 0xe3, 0x47,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x54, 0x1c, 0xab, 0xe3,
+0x0e, 0x2a, 0xf1, 0xd5,
+0xe2, 0xe3, 0x1d, 0x1c,
+0x9d, 0x71, 0x62, 0x8e,
+0xd4, 0x63, 0x2b, 0x9c,
+0x38, 0x0e, 0xc7, 0xf1,
+0xc6, 0x8f, 0x39, 0x70,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x47, 0x8e, 0xb8, 0x71,
+0x9d, 0xab, 0x62, 0x54,
+0x2b, 0x46, 0xd4, 0xb9,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x0e, 0x9c, 0xf1, 0x63,
+0x9d, 0xe3, 0x62, 0x1c,
+0xd5, 0x47, 0x2a, 0xb8,
+0xf0, 0x63, 0x0f, 0x9c,
+0x46, 0x9c, 0xb9, 0x63,
+0xd5, 0xc7, 0x2a, 0x38,
+0xe3, 0x47, 0x1c, 0xb8,
+0x46, 0x38, 0xb9, 0xc7,
+0x54, 0xd4, 0xab, 0x2b,
+0x63, 0x38, 0x9c, 0xc7,
+0xe2, 0x39, 0x1d, 0xc6,
+0x70, 0x70, 0x8f, 0x8f,
+0x1c, 0xb8, 0xe3, 0x47,
+0x71, 0x0e, 0x8e, 0xf1,
+0x54, 0xd4, 0xab, 0x2b,
+0x39, 0x2a, 0xc6, 0xd5,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x8f, 0x71, 0x70, 0x8e,
+0x1c, 0xaa, 0xe3, 0x55,
+0x39, 0x0e, 0xc6, 0xf1,
+0x9c, 0xd5, 0x63, 0x2a,
+0x0f, 0x2a, 0xf0, 0xd5,
+0xb8, 0xb9, 0x47, 0x46,
+0x9d, 0xb9, 0x62, 0x46,
+0x2b, 0x54, 0xd4, 0xab,
+0x38, 0x1c, 0xc7, 0xe3,
+0xc6, 0x9d, 0x39, 0x62,
+0xc7, 0xe3, 0x38, 0x1c,
+0x8f, 0x8f, 0x70, 0x70,
+0xc7, 0xab, 0x38, 0x54,
+0x71, 0x8e, 0x8e, 0x71,
+0xc7, 0xd5, 0x38, 0x2a,
+0x39, 0x8e, 0xc6, 0x71,
+0x8f, 0xf1, 0x70, 0x0e,
+0x0f, 0x8e, 0xf0, 0x71,
+0x39, 0xaa, 0xc6, 0x55,
+0x1d, 0xc6, 0xe2, 0x39,
+0x8f, 0x55, 0x70, 0xaa,
+0x1c, 0xb8, 0xe3, 0x47,
+0xb9, 0x1d, 0x46, 0xe2,
+0x54, 0xd4, 0xab, 0x2b,
+0xab, 0x2b, 0x54, 0xd4,
+0xe2, 0x39, 0x1d, 0xc6,
+0xe2, 0x71, 0x1d, 0x8e,
+0x1c, 0x70, 0xe3, 0x8f,
+0x1c, 0x0e, 0xe3, 0xf1,
+0x54, 0x0e, 0xab, 0xf1,
+0x1c, 0x2a, 0xe3, 0xd5,
+0x2a, 0x2a, 0xd5, 0xd5,
+0x9c, 0x71, 0x63, 0x8e,
+0x8e, 0x39, 0x71, 0xc6,
+0x38, 0xc6, 0xc7, 0x39,
+0x39, 0xb8, 0xc6, 0x47,
+0x0f, 0xf0, 0xf0, 0x0f,
+0x47, 0x9c, 0xb8, 0x63,
+0x55, 0xaa, 0xaa, 0x55,
+0xe3, 0x47, 0x1c, 0xb8,
+0xaa, 0x1d, 0x55, 0xe2,
+0x54, 0x54, 0xab, 0xab,
+0xaa, 0x2b, 0x55, 0xd4,
+0xe2, 0x55, 0x1d, 0xaa,
+0xe2, 0x71, 0x1d, 0x8e,
+0x9c, 0x55, 0x63, 0xaa,
+0x1c, 0x0e, 0xe3, 0xf1,
+0xb8, 0x1d, 0x47, 0xe2,
+0x1c, 0xaa, 0xe3, 0x55,
+0xab, 0x2b, 0x54, 0xd4,
+0x9c, 0x1d, 0x63, 0xe2,
+0xe2, 0x39, 0x1d, 0xc6,
+0xb8, 0x63, 0x47, 0x9c,
+0x1c, 0xb8, 0xe3, 0x47,
+0xe3, 0x0f, 0x1c, 0xf0,
+0x54, 0x1c, 0xab, 0xe3,
+0x54, 0x2a, 0xab, 0xd5,
+0xe2, 0x2b, 0x1d, 0xd4,
+0xaa, 0x71, 0x55, 0x8e,
+0xd4, 0x71, 0x2b, 0x8e,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x0e, 0x46, 0xf1, 0xb9,
+0x0e, 0xe2, 0xf1, 0x1d,
+0x1d, 0xd4, 0xe2, 0x2b,
+0x9d, 0x63, 0x62, 0x9c,
+0xd4, 0x71, 0x2b, 0x8e,
+0xf0, 0x0f, 0x0f, 0xf0,
+0x0e, 0x8e, 0xf1, 0x71,
+0x55, 0xe2, 0xaa, 0x1d,
+0x1d, 0x46, 0xe2, 0xb9,
+0xaa, 0x63, 0x55, 0x9c,
+0x1c, 0x54, 0xe3, 0xab,
+0xe2, 0x0f, 0x1d, 0xf0,
+0xd4, 0x55, 0x2b, 0xaa,
+0x54, 0x2a, 0xab, 0xd5,
+0x8e, 0x1d, 0x71, 0xe2,
+0xaa, 0xf1, 0x55, 0x0e,
+0xb9, 0x63, 0x46, 0x9c,
+0x2a, 0xe2, 0xd5, 0x1d,
+0xe3, 0x47, 0x1c, 0xb8,
+0x8e, 0x2b, 0x71, 0xd4,
+0x54, 0xd4, 0xab, 0x2b,
+0xf1, 0x39, 0x0e, 0xc6,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x1d, 0x70, 0xe2, 0x8f,
+0x1c, 0x62, 0xe3, 0x9d,
+0x54, 0x0e, 0xab, 0xf1,
+0x9c, 0x0f, 0x63, 0xf0,
+0x2a, 0x2a, 0xd5, 0xd5,
+0x70, 0x62, 0x8f, 0x9d,
+0x8e, 0xb9, 0x71, 0x46,
+0xb9, 0xc7, 0x46, 0x38,
+0x39, 0xd4, 0xc6, 0x2b,
+0x63, 0xf0, 0x9c, 0x0f,
+0xc7, 0x39, 0x38, 0xc6,
+0x70, 0xaa, 0x8f, 0x55,
+0x0f, 0xb8, 0xf0, 0x47,
+0xb9, 0x9d, 0x46, 0x62,
+0x55, 0xd4, 0xaa, 0x2b,
+0xab, 0x47, 0x54, 0xb8,
+0xe2, 0x39, 0x1d, 0xc6,
+0x62, 0x54, 0x9d, 0xab,
+0x1c, 0x70, 0xe3, 0x8f,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x54, 0x8e, 0xab, 0x71,
+0x9d, 0x2b, 0x62, 0xd4,
+0x2a, 0x46, 0xd5, 0xb9,
+0xf0, 0x71, 0x0f, 0x8e,
+0x0e, 0x9c, 0xf1, 0x63,
+0x1d, 0xc6, 0xe2, 0x39,
+0xd5, 0x47, 0x2a, 0xb8,
+0x1c, 0x70, 0xe3, 0x8f,
+0x46, 0x1c, 0xb9, 0xe3,
+0x54, 0xc6, 0xab, 0x39,
+0xe3, 0x2b, 0x1c, 0xd4,
+0x2a, 0x38, 0xd5, 0xc7,
+0xd4, 0x71, 0x2b, 0x8e,
+0x46, 0x38, 0xb9, 0xc7,
+0x0e, 0xc6, 0xf1, 0x39,
+0x63, 0xf0, 0x9c, 0x0f,
+0x1d, 0x38, 0xe2, 0xc7,
+0x70, 0x62, 0x8f, 0x9d,
+0x54, 0xb8, 0xab, 0x47,
+0xb9, 0x0f, 0x46, 0xf0,
+0x62, 0xd4, 0x9d, 0x2b,
+0x63, 0x62, 0x9c, 0x9d,
+0xf0, 0x39, 0x0f, 0xc6,
+0xb8, 0x8f, 0x47, 0x70,
+0x1d, 0xb8, 0xe2, 0x47,
+0x63, 0x46, 0x9c, 0xb9,
+0x54, 0x1c, 0xab, 0xe3,
+0x38, 0x1c, 0xc7, 0xe3,
+0xe2, 0xab, 0x1d, 0x54,
+0xc7, 0x63, 0x38, 0x9c,
+0xd4, 0x9d, 0x2b, 0x62,
+0xc7, 0x0f, 0x38, 0xf0,
+0x8e, 0x8f, 0x71, 0x70,
+0x47, 0xe2, 0xb8, 0x1d,
+0x71, 0x8e, 0x8e, 0x71,
+0xab, 0xe3, 0x54, 0x1c,
+0x39, 0x0e, 0xc6, 0xf1,
+0xe2, 0xe3, 0x1d, 0x1c,
+0x0f, 0x62, 0xf0, 0x9d,
+0xd4, 0xab, 0x2b, 0x54,
+0x9d, 0x0f, 0x62, 0xf0,
+0xc6, 0x55, 0x39, 0xaa,
+0x70, 0xe2, 0x8f, 0x1d,
+0x8f, 0x9d, 0x70, 0x62,
+0xb9, 0xab, 0x46, 0x54,
+0xb9, 0xc7, 0x46, 0x38,
+0xe3, 0xd5, 0x1c, 0x2a,
+0x63, 0x38, 0x9c, 0xc7,
+0x9c, 0x39, 0x63, 0xc6,
+0x70, 0x38, 0x8f, 0xc7,
+0x38, 0xb8, 0xc7, 0x47,
+0x71, 0xb8, 0x8e, 0x47,
+0x47, 0xd4, 0xb8, 0x2b,
+0x71, 0x9c, 0x8e, 0x63,
+0xe3, 0xf1, 0x1c, 0x0e,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x1c, 0xe2, 0xe3, 0x1d,
+0x55, 0x2a, 0xaa, 0xd5,
+0x9c, 0x63, 0x63, 0x9c,
+0xaa, 0x39, 0x55, 0xc6,
+0xf0, 0x47, 0x0f, 0xb8,
+0x2a, 0xb8, 0xd5, 0x47,
+0x55, 0x54, 0xaa, 0xab,
+0x46, 0x54, 0xb9, 0xab,
+0xe2, 0xd5, 0x1d, 0x2a,
+0xe3, 0x55, 0x1c, 0xaa,
+0x9c, 0x39, 0x63, 0xc6,
+0x9c, 0x1d, 0x63, 0xe2,
+0x38, 0x38, 0xc7, 0xc7,
+0xb8, 0xab, 0x47, 0x54,
+0x47, 0xb8, 0xb8, 0x47,
+0xe3, 0x9d, 0x1c, 0x62,
+0x63, 0x1c, 0x9c, 0xe3,
+0x9c, 0x0f, 0x63, 0xf0,
+0xf0, 0x2b, 0x0f, 0xd4,
+0x70, 0xaa, 0x8f, 0x55,
+0xd5, 0xb9, 0x2a, 0x46,
+0xb9, 0x55, 0x46, 0xaa,
+0x0e, 0xd4, 0xf1, 0x2b,
+0xab, 0xd5, 0x54, 0x2a,
+0xd5, 0x39, 0x2a, 0xc6,
+0xaa, 0x71, 0x55, 0x8e,
+0x0e, 0x70, 0xf1, 0x8f,
+0x2a, 0xc6, 0xd5, 0x39,
+0x55, 0x46, 0xaa, 0xb9,
+0x0e, 0x70, 0xf1, 0x8f,
+0x2a, 0xd4, 0xd5, 0x2b,
+0x55, 0x46, 0xaa, 0xb9,
+0xc6, 0x71, 0x39, 0x8e,
+0x2a, 0xd4, 0xd5, 0x2b,
+0x0f, 0x46, 0xf0, 0xb9,
+0xc6, 0xb9, 0x39, 0x46,
+0x1d, 0xd4, 0xe2, 0x2b,
+0x0f, 0x54, 0xf0, 0xab,
+0xd4, 0xb9, 0x2b, 0x46,
+0xd5, 0x1d, 0x2a, 0xe2,
+0x0e, 0x54, 0xf1, 0xab,
+0x8e, 0xe3, 0x71, 0x1c,
+0xd5, 0xd5, 0x2a, 0x2a,
+0xf1, 0x63, 0x0e, 0x9c,
+0x8e, 0xf1, 0x71, 0x0e,
+0xd5, 0xc7, 0x2a, 0x38,
+0x39, 0x62, 0xc6, 0x9d,
+0x46, 0xf0, 0xb9, 0x0f,
+0x8f, 0xc7, 0x70, 0x38,
+0x63, 0xaa, 0x9c, 0x55,
+0x71, 0x38, 0x8e, 0xc7,
+0xb8, 0xd5, 0x47, 0x2a,
+0x71, 0xb8, 0x8e, 0x47,
+0xab, 0xf1, 0x54, 0x0e,
+0x71, 0x1c, 0x8e, 0xe3,
+0x2a, 0xe2, 0xd5, 0x1d,
+0xf1, 0x63, 0x0e, 0x9c,
+0x8e, 0xe3, 0x71, 0x1c,
+0xd5, 0xc7, 0x2a, 0x38,
+0xf1, 0x63, 0x0e, 0x9c,
+0x46, 0xf0, 0xb9, 0x0f,
+0xd5, 0xc7, 0x2a, 0x38,
+0x63, 0x62, 0x9c, 0x9d,
+0x46, 0x38, 0xb9, 0xc7,
+0xb8, 0xc7, 0x47, 0x38,
+0x63, 0xb8, 0x9c, 0x47,
+0x63, 0x38, 0x9c, 0xc7,
+0x70, 0x1c, 0x8f, 0xe3,
+0x70, 0xb8, 0x8f, 0x47,
+0xf1, 0xab, 0x0e, 0x54,
+0x71, 0xd4, 0x8e, 0x2b,
+0xd5, 0xd5, 0x2a, 0x2a,
+0xf1, 0x71, 0x0e, 0x8e,
+0x8e, 0xf1, 0x71, 0x0e,
+0x1d, 0xc6, 0xe2, 0x39,
+0x39, 0x62, 0xc6, 0x9d,
+0x1c, 0xf0, 0xe3, 0x0f,
+0x8f, 0x0f, 0x70, 0xf0,
+0x54, 0xaa, 0xab, 0x55,
+0x71, 0x2a, 0x8e, 0xd5,
+0xaa, 0xd5, 0x55, 0x2a,
+0xb9, 0x71, 0x46, 0x8e,
+0xaa, 0xf1, 0x55, 0x0e,
+0x2b, 0x46, 0xd4, 0xb9,
+0x2a, 0x2a, 0xd5, 0xd5,
+0x0e, 0x54, 0xf1, 0xab,
+0x8e, 0xf1, 0x71, 0x0e,
+0xd5, 0xd5, 0x2a, 0x2a,
+0x39, 0x62, 0xc6, 0x9d,
+0x8e, 0xf1, 0x71, 0x0e,
+0x8f, 0xc7, 0x70, 0x38,
+0x39, 0xaa, 0xc6, 0x55,
+0x71, 0xf0, 0x8e, 0x0f,
+0x8f, 0xd5, 0x70, 0x2a,
+0x71, 0xaa, 0x8e, 0x55,
+0xb9, 0xf1, 0x46, 0x0e,
+0xb9, 0xd5, 0x46, 0x2a,
+0x2b, 0xe2, 0xd4, 0x1d,
+0xab, 0x39, 0x54, 0xc6,
+0x8e, 0x2b, 0x71, 0xd4,
+0x2a, 0xf0, 0xd5, 0x0f,
+0xf1, 0x71, 0x0e, 0x8e,
+0x46, 0xe2, 0xb9, 0x1d,
+0x1d, 0xc6, 0xe2, 0x39,
+0xab, 0x63, 0x54, 0x9c,
+0x1c, 0x38, 0xe3, 0xc7,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x54, 0x70, 0xab, 0x8f,
+0x54, 0x2a, 0xab, 0xd5,
+0x62, 0x0e, 0x9d, 0xf1,
+0xaa, 0x71, 0x55, 0x8e,
+0x38, 0x62, 0xc7, 0x9d,
+0x2a, 0x8e, 0xd5, 0x71,
+0x8f, 0x47, 0x70, 0xb8,
+0x0e, 0x8e, 0xf1, 0x71,
+0x71, 0xd4, 0x8e, 0x2b,
+0x1d, 0xc6, 0xe2, 0x39,
+0xf1, 0x71, 0x0e, 0x8e,
+0x1c, 0xf0, 0xe3, 0x0f,
+0x1d, 0x0e, 0xe2, 0xf1,
+0x54, 0x62, 0xab, 0x9d,
+0x1c, 0x2a, 0xe3, 0xd5,
+0xaa, 0x0f, 0x55, 0xf0,
+0x9c, 0x71, 0x63, 0x8e,
+0x62, 0x2a, 0x9d, 0xd5,
+0x38, 0x46, 0xc7, 0xb9,
+0xb8, 0xb9, 0x47, 0x46,
+0x0f, 0x9c, 0xf0, 0x63,
+0x2b, 0x9c, 0xd4, 0x63,
+0xd5, 0x0f, 0x2a, 0xf0,
+0xc6, 0x47, 0x39, 0xb8,
+0x46, 0xe2, 0xb9, 0x1d,
+0x47, 0xd4, 0xb8, 0x2b,
+0xab, 0xab, 0x54, 0x54,
+0xe3, 0x39, 0x1c, 0xc6,
+0xe2, 0x1d, 0x1d, 0xe2,
+0x1c, 0x70, 0xe3, 0x8f,
+0x9c, 0x2b, 0x63, 0xd4,
+0x54, 0x0e, 0xab, 0xf1,
+0xf0, 0x39, 0x0f, 0xc6,
+0x2a, 0xaa, 0xd5, 0x55,
+0x1d, 0x70, 0xe2, 0x8f,
+0x8e, 0x55, 0x71, 0xaa,
+0x54, 0xc6, 0xab, 0x39,
+0xb9, 0x1d, 0x46, 0xe2,
+0x2a, 0xf0, 0xd5, 0x0f,
+0xab, 0x63, 0x54, 0x9c,
+0x46, 0x2a, 0xb9, 0xd5,
+0xe2, 0xc7, 0x1d, 0x38,
+0xab, 0x71, 0x54, 0x8e,
+0x54, 0x38, 0xab, 0xc7,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x62, 0x70, 0x9d, 0x8f,
+0x0e, 0x62, 0xf1, 0x9d,
+0x70, 0xc6, 0x8f, 0x39,
+0x9d, 0x8f, 0x62, 0x70,
+0x39, 0x70, 0xc6, 0x8f,
+0x70, 0xc6, 0x8f, 0x39,
+0x47, 0x8e, 0xb8, 0x71,
+0x39, 0xb8, 0xc6, 0x47,
+0x2b, 0xc6, 0xd4, 0x39,
+0x47, 0x1c, 0xb8, 0xe3,
+0x0e, 0xb8, 0xf1, 0x47,
+0xe3, 0xe3, 0x1c, 0x1c,
+0x55, 0x1c, 0xaa, 0xe3,
+0xd4, 0x63, 0x2b, 0x9c,
+0xe2, 0x2b, 0x1d, 0xd4,
+0xc6, 0x47, 0x39, 0xb8,
+0xd4, 0xf1, 0x2b, 0x0e,
+0x47, 0x1c, 0xb8, 0xe3,
+0x0e, 0xaa, 0xf1, 0x55,
+0xe3, 0xe3, 0x1c, 0x1c,
+0x9d, 0x1d, 0x62, 0xe2,
+0xd4, 0x63, 0x2b, 0x9c,
+0xb8, 0x2b, 0x47, 0xd4,
+0xc6, 0x8f, 0x39, 0x70,
+0xe3, 0xf1, 0x1c, 0x0e,
+0x47, 0x0e, 0xb8, 0xf1,
+0x1c, 0xaa, 0xe3, 0x55,
+0x2b, 0x2a, 0xd4, 0xd5,
+0x9c, 0x1d, 0x63, 0xe2,
+0x8e, 0x39, 0x71, 0xc6,
+0xb8, 0xe3, 0x47, 0x1c,
+0x39, 0xb8, 0xc6, 0x47,
+0xe3, 0xe3, 0x1c, 0x1c,
+0x47, 0x1c, 0xb8, 0xe3,
+0xd4, 0xab, 0x2b, 0x54,
+0xe3, 0x2b, 0x1c, 0xd4,
+0xc6, 0x1d, 0x39, 0xe2,
+0xd4, 0xf1, 0x2b, 0x0e,
+0x8f, 0x2b, 0x70, 0xd4,
+0x0e, 0xaa, 0xf1, 0x55,
+0xf1, 0xf1, 0x0e, 0x0e,
+0x9d, 0xd5, 0x62, 0x2a,
+0x1d, 0x62, 0xe2, 0x9d,
+0xb8, 0x71, 0x47, 0x8e,
+0x9c, 0x8f, 0x63, 0x70,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x70, 0x0e, 0x8f, 0xf1,
+0x0e, 0xaa, 0xf1, 0x55,
+0x39, 0xe2, 0xc6, 0x1d,
+0x9d, 0xd5, 0x62, 0x2a,
+0x8f, 0x63, 0x70, 0x9c,
+0xb8, 0xb9, 0x47, 0x46,
+0xf1, 0x8f, 0x0e, 0x70,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x55, 0x0e, 0xaa, 0xf1,
+0xc6, 0x71, 0x39, 0x8e,
+0x2a, 0xe2, 0xd5, 0x1d,
+0x0f, 0x46, 0xf0, 0xb9,
+0x8e, 0xab, 0x71, 0x54,
+0x1d, 0xd4, 0xe2, 0x2b,
+0xf1, 0x55, 0x0e, 0xaa,
+0xd4, 0xf1, 0x2b, 0x0e,
+0x9d, 0x1d, 0x62, 0xe2,
+0x0e, 0x62, 0xf1, 0x9d,
+0xb8, 0xe3, 0x47, 0x1c,
+0x9d, 0x8f, 0x62, 0x70,
+0xe3, 0x63, 0x1c, 0x9c,
+0x70, 0x0e, 0x8f, 0xf1,
+0xd4, 0x8f, 0x2b, 0x70,
+0x39, 0x2a, 0xc6, 0xd5,
+0x46, 0xc6, 0xb9, 0x39,
+0x8f, 0xf1, 0x70, 0x0e,
+0x2b, 0xb8, 0xd4, 0x47,
+0x39, 0x2a, 0xc6, 0xd5,
+0x46, 0xd4, 0xb9, 0x2b,
+0x8f, 0xf1, 0x70, 0x0e,
+0xe3, 0xb9, 0x1c, 0x46,
+0x39, 0x2a, 0xc6, 0xd5,
+0x1c, 0xd4, 0xe3, 0x2b,
+0x8f, 0x39, 0x70, 0xc6,
+0xd4, 0xb9, 0x2b, 0x46,
+0x39, 0x38, 0xc6, 0xc7,
+0x0e, 0xd4, 0xf1, 0x2b,
+0x47, 0xf0, 0xb8, 0x0f,
+0xd5, 0xb9, 0x2a, 0x46,
+0x63, 0x62, 0x9c, 0x9d,
+0x0e, 0x1c, 0xf1, 0xe3,
+0xb8, 0xc7, 0x47, 0x38,
+0xd5, 0xab, 0x2a, 0x54,
+0x63, 0x70, 0x9c, 0x8f,
+0xc6, 0x1d, 0x39, 0xe2,
+0x70, 0xc6, 0x8f, 0x39,
+0x8f, 0xab, 0x70, 0x54,
+0x39, 0xb8, 0xc6, 0x47,
+0xf1, 0xd5, 0x0e, 0x2a,
+0x47, 0xd4, 0xb8, 0x2b,
+0x9d, 0xb9, 0x62, 0x46,
+0xe3, 0x71, 0x1c, 0x8e,
+0x38, 0x1c, 0xc7, 0xe3,
+0x1c, 0x8e, 0xe3, 0x71,
+0xc7, 0x2b, 0x38, 0xd4,
+0x1c, 0x8e, 0xe3, 0x71,
+0xc7, 0x39, 0x38, 0xc6,
+0x1c, 0x8e, 0xe3, 0x71,
+0x0f, 0x38, 0xf0, 0xc7,
+0x1c, 0x8e, 0xe3, 0x71,
+0x55, 0x38, 0xaa, 0xc7,
+0x1c, 0x46, 0xe3, 0xb9,
+0x62, 0x38, 0x9d, 0xc7,
+0x1c, 0x54, 0xe3, 0xab,
+0x70, 0x38, 0x8f, 0xc7,
+0xd4, 0x9d, 0x2b, 0x62,
+0x71, 0x38, 0x8e, 0xc7,
+0x8e, 0xc7, 0x71, 0x38,
+0x71, 0xf0, 0x8e, 0x0f,
+0x71, 0xf0, 0x8e, 0x0f,
+0x71, 0xe2, 0x8e, 0x1d,
+0x71, 0xe2, 0x8e, 0x1d,
+0xb9, 0xe3, 0x46, 0x1c,
+0xb9, 0xe3, 0x46, 0x1c,
+0xe3, 0xe3, 0x1c, 0x1c,
+0xe3, 0x2b, 0x1c, 0xd4,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xd4, 0x39, 0x2b, 0xc6,
+0xc6, 0x39, 0x39, 0xc6,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x0f, 0xf0, 0xf0, 0x0f,
+0x55, 0xaa, 0xaa, 0x55,
+0x55, 0x62, 0xaa, 0x9d,
+0xaa, 0x55, 0x55, 0xaa,
+0xaa, 0x47, 0x55, 0xb8,
+0xaa, 0x55, 0x55, 0xaa,
+0x62, 0x54, 0x9d, 0xab,
+0xaa, 0x55, 0x55, 0xaa,
+0xf0, 0x55, 0x0f, 0xaa,
+0xaa, 0x9d, 0x55, 0x62,
+0x9d, 0x55, 0x62, 0xaa,
+0xaa, 0x47, 0x55, 0xb8,
+0xb8, 0x55, 0x47, 0xaa,
+0x62, 0x9c, 0x9d, 0x63,
+0xab, 0x55, 0x54, 0xaa,
+0xf0, 0x0f, 0x0f, 0xf0,
+0xaa, 0x9d, 0x55, 0x62,
+0x55, 0x62, 0xaa, 0x9d,
+0xaa, 0x47, 0x55, 0xb8,
+0xaa, 0x47, 0x55, 0xb8,
+0x62, 0x54, 0x9d, 0xab,
+0x62, 0x54, 0x9d, 0xab,
+0xf0, 0x55, 0x0f, 0xaa,
+0xf0, 0x9d, 0x0f, 0x62,
+0x9d, 0x9d, 0x62, 0x62,
+0x9d, 0x47, 0x62, 0xb8,
+0xb8, 0x47, 0x47, 0xb8,
+0x70, 0x9c, 0x8f, 0x63,
+0x63, 0x9c, 0x9c, 0x63,
+0xf1, 0x0f, 0x0e, 0xf0,
+0xf0, 0xc7, 0x0f, 0x38,
+0x55, 0xaa, 0xaa, 0x55,
+0x55, 0x70, 0xaa, 0x8f,
+0xaa, 0x55, 0x55, 0xaa,
+0x62, 0x46, 0x9d, 0xb9,
+0xaa, 0x55, 0x55, 0xaa,
+0x38, 0x54, 0xc7, 0xab,
+0xaa, 0x9d, 0x55, 0x62,
+0xc7, 0x55, 0x38, 0xaa,
+0xaa, 0x8f, 0x55, 0x70,
+0x8f, 0x55, 0x70, 0xaa,
+0x62, 0x8e, 0x9d, 0x71,
+0xb9, 0x55, 0x46, 0xaa,
+0x38, 0xc6, 0xc7, 0x39,
+0xab, 0x9d, 0x54, 0x62,
+0x0f, 0x38, 0xf0, 0xc7,
+0xaa, 0x8f, 0x55, 0x70,
+0x55, 0x70, 0xaa, 0x8f,
+0x62, 0x46, 0x9d, 0xb9,
+0x62, 0x46, 0x9d, 0xb9,
+0x38, 0x54, 0xc7, 0xab,
+0x38, 0x9c, 0xc7, 0x63,
+0xc7, 0x9d, 0x38, 0x62,
+0xc7, 0x8f, 0x38, 0x70,
+0x8f, 0x8f, 0x70, 0x70,
+0x47, 0x8e, 0xb8, 0x71,
+0x71, 0x8e, 0x8e, 0x71,
+0x2b, 0xc6, 0xd4, 0x39,
+0x39, 0x0e, 0xc6, 0xf1,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x55, 0xaa, 0xaa, 0x55,
+0x9d, 0x63, 0x62, 0x9c,
+0xaa, 0x55, 0x55, 0xaa,
+0xf0, 0x47, 0x0f, 0xb8,
+0xaa, 0x9d, 0x55, 0x62,
+0x55, 0x54, 0xaa, 0xab,
+0xaa, 0x47, 0x55, 0xb8,
+0xe2, 0x55, 0x1d, 0xaa,
+0x62, 0x54, 0x9d, 0xab,
+0x9c, 0x55, 0x63, 0xaa,
+0xf0, 0x1d, 0x0f, 0xe2,
+0xb8, 0x9d, 0x47, 0x62,
+0x9d, 0xab, 0x62, 0x54,
+0xab, 0x47, 0x54, 0xb8,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x62, 0x9c, 0x9d, 0x63,
+0x9d, 0x63, 0x62, 0x9c,
+0xf0, 0x47, 0x0f, 0xb8,
+0xf0, 0x8f, 0x0f, 0x70,
+0x55, 0x9c, 0xaa, 0x63,
+0x55, 0x46, 0xaa, 0xb9,
+0xe2, 0x47, 0x1d, 0xb8,
+0x2a, 0x54, 0xd5, 0xab,
+0x54, 0x54, 0xab, 0xab,
+0xc6, 0x1d, 0x39, 0xe2,
+0xe2, 0xd5, 0x1d, 0x2a,
+0x8f, 0x63, 0x70, 0x9c,
+0x9c, 0xb9, 0x63, 0x46,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x38, 0xd4, 0xc7, 0x2b,
+0x55, 0xaa, 0xaa, 0x55,
+0xc7, 0x71, 0x38, 0x8e,
+0xaa, 0x9d, 0x55, 0x62,
+0x0f, 0x46, 0xf0, 0xb9,
+0xaa, 0x8f, 0x55, 0x70,
+0x1d, 0x54, 0xe2, 0xab,
+0x62, 0x46, 0x9d, 0xb9,
+0xd4, 0x55, 0x2b, 0xaa,
+0x38, 0x1c, 0xc7, 0xe3,
+0x8e, 0x9d, 0x71, 0x62,
+0xc7, 0xe3, 0x38, 0x1c,
+0xb9, 0x8f, 0x46, 0x70,
+0xc7, 0xe3, 0x38, 0x1c,
+0x63, 0x8e, 0x9c, 0x71,
+0xc7, 0x2b, 0x38, 0xd4,
+0x38, 0x8e, 0xc7, 0x71,
+0xc7, 0xb9, 0x38, 0x46,
+0x0f, 0x8e, 0xf0, 0x71,
+0x0f, 0x9c, 0xf0, 0x63,
+0x1d, 0x8e, 0xe2, 0x71,
+0xd5, 0x47, 0x2a, 0xb8,
+0x1c, 0x46, 0xe3, 0xb9,
+0x46, 0x1c, 0xb9, 0xe3,
+0x1c, 0xd4, 0xe3, 0x2b,
+0xe3, 0x2b, 0x1c, 0xd4,
+0xd4, 0x39, 0x2b, 0xc6,
+0xd4, 0x39, 0x2b, 0xc6,
+0x0e, 0x38, 0xf1, 0xc7,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x55, 0xf0, 0xaa, 0x0f,
+0x55, 0x62, 0xaa, 0x9d,
+0x62, 0x62, 0x9d, 0x9d,
+0xaa, 0x47, 0x55, 0xb8,
+0xb8, 0x47, 0x47, 0xb8,
+0x62, 0x9c, 0x9d, 0x63,
+0x63, 0x54, 0x9c, 0xab,
+0xf0, 0x0f, 0x0f, 0xf0,
+0xf0, 0x9d, 0x0f, 0x62,
+0x55, 0xaa, 0xaa, 0x55,
+0x9d, 0x47, 0x62, 0xb8,
+0xaa, 0x55, 0x55, 0xaa,
+0x70, 0x54, 0x8f, 0xab,
+0xaa, 0x9d, 0x55, 0x62,
+0xf1, 0x55, 0x0e, 0xaa,
+0xaa, 0xc7, 0x55, 0x38,
+0x9d, 0x55, 0x62, 0xaa,
+0x62, 0x70, 0x9d, 0x8f,
+0xb8, 0x55, 0x47, 0xaa,
+0x70, 0x8e, 0x8f, 0x71,
+0xab, 0x9d, 0x54, 0x62,
+0x39, 0x0e, 0xc6, 0xf1,
+0xaa, 0xc7, 0x55, 0x38,
+0x0f, 0x62, 0xf0, 0x9d,
+0x62, 0xb8, 0x9d, 0x47,
+0x9d, 0x47, 0x62, 0xb8,
+0x70, 0x54, 0x8f, 0xab,
+0x70, 0x9c, 0x8f, 0x63,
+0xf1, 0x9d, 0x0e, 0x62,
+0xf1, 0xc7, 0x0e, 0x38,
+0x9d, 0xc7, 0x62, 0x38,
+0x55, 0x70, 0xaa, 0x8f,
+0x70, 0x70, 0x8f, 0x8f,
+0x62, 0x8e, 0x9d, 0x71,
+0x71, 0x46, 0x8e, 0xb9,
+0x38, 0xc6, 0xc7, 0x39,
+0x39, 0x9c, 0xc6, 0x63,
+0x0f, 0xf0, 0xf0, 0x0f,
+0xc7, 0x8f, 0x38, 0x70,
+0x55, 0xaa, 0xaa, 0x55,
+0x47, 0x46, 0xb8, 0xb9,
+0xaa, 0x9d, 0x55, 0x62,
+0x2b, 0x54, 0xd4, 0xab,
+0xaa, 0x0f, 0x55, 0xf0,
+0xc6, 0x55, 0x39, 0xaa,
+0x62, 0xe2, 0x9d, 0x1d,
+0x8f, 0x55, 0x70, 0xaa,
+0xb8, 0xab, 0x47, 0x54,
+0xb9, 0x9d, 0x46, 0x62,
+0xe3, 0xd5, 0x1c, 0x2a,
+0xab, 0x0f, 0x54, 0xf0,
+0x9c, 0x39, 0x63, 0xc6,
+0x62, 0x2a, 0x9d, 0xd5,
+0x38, 0x70, 0xc7, 0x8f,
+0xb8, 0xb9, 0x47, 0x46,
+0x47, 0x8e, 0xb8, 0x71,
+0x2b, 0x9c, 0xd4, 0x63,
+0x2b, 0x0e, 0xd4, 0xf1,
+0xc6, 0x0f, 0x39, 0xf0,
+0x0e, 0xe2, 0xf1, 0x1d,
+0x47, 0xe2, 0xb8, 0x1d,
+0x9d, 0xab, 0x62, 0x54,
+0xab, 0x63, 0x54, 0x9c,
+0xf0, 0x1d, 0x0f, 0xe2,
+0xe2, 0x8f, 0x1d, 0x70,
+0x9d, 0x63, 0x62, 0x9c,
+0x54, 0x46, 0xab, 0xb9,
+0xf0, 0x0f, 0x0f, 0xf0,
+0x2a, 0x9c, 0xd5, 0x63,
+0x55, 0x62, 0xaa, 0x9d,
+0xc6, 0x47, 0x39, 0xb8,
+0xaa, 0xc7, 0x55, 0x38,
+0x47, 0x54, 0xb8, 0xab,
+0x62, 0xb8, 0x9d, 0x47,
+0xe3, 0x55, 0x1c, 0xaa,
+0x70, 0x1c, 0x8f, 0xe3,
+0x9c, 0x9d, 0x63, 0x62,
+0xf1, 0x2b, 0x0e, 0xd4,
+0xb8, 0xc7, 0x47, 0x38,
+0xd5, 0xb9, 0x2a, 0x46,
+0x63, 0x70, 0x9c, 0x8f,
+0x0e, 0x1c, 0xf1, 0xe3,
+0x70, 0xc6, 0x8f, 0x39,
+0xd5, 0xab, 0x2a, 0x54,
+0x39, 0x70, 0xc6, 0x8f,
+0xc6, 0xd5, 0x39, 0x2a,
+0x47, 0xc6, 0xb8, 0x39,
+0x8f, 0xb9, 0x70, 0x46,
+0x2b, 0xb8, 0xd4, 0x47,
+0x39, 0x1c, 0xc6, 0xe3,
+0x46, 0xd4, 0xb9, 0x2b,
+0xc7, 0xe3, 0x38, 0x1c,
+0xe3, 0xb9, 0x1c, 0x46,
+0xc7, 0x2b, 0x38, 0xd4,
+0x1c, 0x9c, 0xe3, 0x63,
+0xc7, 0x39, 0x38, 0xc6,
+0xd4, 0x8f, 0x2b, 0x70,
+0x0f, 0x38, 0xf0, 0xc7,
+0x46, 0x8e, 0xb9, 0x71,
+0x55, 0xf0, 0xaa, 0x0f,
+0x2b, 0x46, 0xd4, 0xb9,
+0x62, 0x2a, 0x9d, 0xd5,
+0x0e, 0x54, 0xf1, 0xab,
+0xb8, 0xf1, 0x47, 0x0e,
+0xd5, 0x9d, 0x2a, 0x62,
+0x2b, 0x62, 0xd4, 0x9d,
+0x8e, 0x0f, 0x71, 0xf0,
+0x8e, 0xc7, 0x71, 0x38,
+0x71, 0xe2, 0x8e, 0x1d,
+0x71, 0xf0, 0x8e, 0x0f,
+0xb9, 0xe3, 0x46, 0x1c,
+0x71, 0xe2, 0x8e, 0x1d,
+0xe3, 0xe3, 0x1c, 0x1c,
+0xb9, 0x2b, 0x46, 0xd4,
+0xd4, 0xe3, 0x2b, 0x1c,
+0xe3, 0x39, 0x1c, 0xc6,
+0xc6, 0x2b, 0x39, 0xd4,
+0x1c, 0xf0, 0xe3, 0x0f,
+0xc7, 0x39, 0x38, 0xc6,
+0x54, 0xaa, 0xab, 0x55,
+0x0f, 0x38, 0xf0, 0xc7,
+0xaa, 0x9d, 0x55, 0x62,
+0x55, 0x70, 0xaa, 0x8f,
+0xaa, 0x47, 0x55, 0xb8,
+0x62, 0x46, 0x9d, 0xb9,
+0x62, 0x54, 0x9d, 0xab,
+0x38, 0x54, 0xc7, 0xab,
+0xf0, 0x9d, 0x0f, 0x62,
+0xc7, 0x9d, 0x38, 0x62,
+0x9d, 0x8f, 0x62, 0x70,
+0x8f, 0x47, 0x70, 0xb8,
+0x70, 0x8e, 0x8f, 0x71,
+0x71, 0x9c, 0x8e, 0x63,
+0x39, 0xc6, 0xc6, 0x39,
+0xf1, 0xc7, 0x0e, 0x38,
+0x0f, 0xf0, 0xf0, 0x0f,
+0x55, 0xb8, 0xaa, 0x47,
+0x55, 0x62, 0xaa, 0x9d,
+0x62, 0x54, 0x9d, 0xab,
+0xaa, 0x47, 0x55, 0xb8,
+0xf0, 0x55, 0x0f, 0xaa,
+0x62, 0x9c, 0x9d, 0x63,
+0x9d, 0x55, 0x62, 0xaa,
+0xf0, 0x47, 0x0f, 0xb8,
+0xb8, 0x9d, 0x47, 0x62,
+0x55, 0x9c, 0xaa, 0x63,
+0xab, 0x47, 0x54, 0xb8,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x62, 0x54, 0x9d, 0xab,
+0x54, 0x62, 0xab, 0x9d,
+0xf0, 0x1d, 0x0f, 0xe2,
+0xaa, 0x8f, 0x55, 0x70,
+0x9d, 0x63, 0x62, 0x9c,
+0x62, 0x46, 0x9d, 0xb9,
+0xf0, 0x47, 0x0f, 0xb8,
+0x38, 0x9c, 0xc7, 0x63,
+0x55, 0x9c, 0xaa, 0x63,
+0xc7, 0x47, 0x38, 0xb8,
+0xe2, 0x8f, 0x1d, 0x70,
+0x47, 0x54, 0xb8, 0xab,
+0x54, 0x8e, 0xab, 0x71,
+0xe3, 0x1d, 0x1c, 0xe2,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x9c, 0x63, 0x63, 0x9c,
+0x0e, 0x2a, 0xf1, 0xd5,
+0xf0, 0xc7, 0x0f, 0x38,
+0x9d, 0xb9, 0x62, 0x46,
+0x55, 0x70, 0xaa, 0x8f,
+0x38, 0x54, 0xc7, 0xab,
+0x62, 0x8e, 0x9d, 0x71,
+0xc7, 0x55, 0x38, 0xaa,
+0x38, 0x8e, 0xc7, 0x71,
+0x8f, 0x9d, 0x70, 0x62,
+0x0f, 0x8e, 0xf0, 0x71,
+0xb9, 0x8f, 0x46, 0x70,
+0x1d, 0xc6, 0xe2, 0x39,
+0x63, 0x46, 0x9c, 0xb9,
+0x1c, 0x38, 0xe3, 0xc7,
+0x38, 0x1c, 0xc7, 0xe3,
+0x54, 0xb8, 0xab, 0x47,
+0xc7, 0x2b, 0x38, 0xd4,
+0x62, 0x9c, 0x9d, 0x63,
+0xc7, 0x71, 0x38, 0x8e,
+0xf0, 0x8f, 0x0f, 0x70,
+0x0f, 0x8e, 0xf0, 0x71,
+0x55, 0x8e, 0xaa, 0x71,
+0x1d, 0x46, 0xe2, 0xb9,
+0x2a, 0x46, 0xd5, 0xb9,
+0x1c, 0x54, 0xe3, 0xab,
+0x0e, 0x1c, 0xf1, 0xe3,
+0xd4, 0xd5, 0x2b, 0x2a,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x8e, 0x71, 0x71, 0x8e,
+0xc6, 0xf1, 0x39, 0x0e,
+0x39, 0xc6, 0xc6, 0x39,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x0f, 0xb8, 0xf0, 0x47,
+0x9d, 0xab, 0x62, 0x54,
+0x55, 0x54, 0xaa, 0xab,
+0xf0, 0x55, 0x0f, 0xaa,
+0xe2, 0x9d, 0x1d, 0x62,
+0x9d, 0x55, 0x62, 0xaa,
+0x9c, 0x47, 0x63, 0xb8,
+0xb8, 0x1d, 0x47, 0xe2,
+0x70, 0x9c, 0x8f, 0x63,
+0xab, 0xab, 0x54, 0x54,
+0xf1, 0x0f, 0x0e, 0xf0,
+0xe2, 0xd5, 0x1d, 0x2a,
+0x55, 0x62, 0xaa, 0x9d,
+0x9c, 0x71, 0x63, 0x8e,
+0xaa, 0x0f, 0x55, 0xf0,
+0x38, 0x46, 0xc7, 0xb9,
+0x62, 0xaa, 0x9d, 0x55,
+0x0f, 0x54, 0xf0, 0xab,
+0xb8, 0x9d, 0x47, 0x62,
+0xd5, 0x9d, 0x2a, 0x62,
+0xab, 0x47, 0x54, 0xb8,
+0x8e, 0x0f, 0x71, 0xf0,
+0x62, 0xd4, 0x9d, 0x2b,
+0x71, 0x62, 0x8e, 0x9d,
+0xf0, 0xf1, 0x0f, 0x0e,
+0xb9, 0x8f, 0x46, 0x70,
+0x1d, 0xe2, 0xe2, 0x1d,
+0x63, 0x46, 0x9c, 0xb9,
+0x9c, 0x2b, 0x63, 0xd4,
+0x38, 0x1c, 0xc7, 0xe3,
+0xf0, 0xb9, 0x0f, 0x46,
+0xc7, 0xab, 0x38, 0x54,
+0x1d, 0x9c, 0xe2, 0x63,
+0xc7, 0x55, 0x38, 0xaa,
+0xd4, 0x8f, 0x2b, 0x70,
+0x8f, 0x1d, 0x70, 0xe2,
+0x46, 0x8e, 0xb9, 0x71,
+0xb9, 0xe3, 0x46, 0x1c,
+0x2b, 0xc6, 0xd4, 0x39,
+0xe3, 0x2b, 0x1c, 0xd4,
+0x0e, 0x38, 0xf1, 0xc7,
+0xd4, 0xf1, 0x2b, 0x0e,
+0x55, 0x38, 0xaa, 0xc7,
+0x0e, 0x62, 0xf1, 0x9d,
+0x62, 0xf0, 0x9d, 0x0f,
+0x9d, 0x47, 0x62, 0xb8,
+0x70, 0x62, 0x8f, 0x9d,
+0x70, 0x9c, 0x8f, 0x63,
+0xb9, 0x8f, 0x46, 0x70,
+0xf1, 0xc7, 0x0e, 0x38,
+0x63, 0xc6, 0x9c, 0x39,
+0x55, 0x38, 0xaa, 0xc7,
+0x38, 0x70, 0xc7, 0x8f,
+0x62, 0xb8, 0x9d, 0x47,
+0x47, 0x46, 0xb8, 0xb9,
+0x70, 0x9c, 0x8f, 0x63,
+0x2b, 0x9c, 0xd4, 0x63,
+0xf1, 0x0f, 0x0e, 0xf0,
+0xc6, 0xc7, 0x39, 0x38,
+0x55, 0xe2, 0xaa, 0x1d,
+0x47, 0x70, 0xb8, 0x8f,
+0xaa, 0xab, 0x55, 0x54,
+0x63, 0x46, 0x9c, 0xb9,
+0xe2, 0x1d, 0x1d, 0xe2,
+0x38, 0x54, 0xc7, 0xab,
+0x9c, 0xab, 0x63, 0x54,
+0xc7, 0x1d, 0x38, 0xe2,
+0xf0, 0x9d, 0x0f, 0x62,
+0x8f, 0xab, 0x70, 0x54,
+0x9d, 0x8f, 0x62, 0x70,
+0xf1, 0x55, 0x0e, 0xaa,
+0x70, 0xc6, 0x8f, 0x39,
+0x9d, 0x9d, 0x62, 0x62,
+0x39, 0x70, 0xc6, 0x8f,
+0xb8, 0xc7, 0x47, 0x38,
+0x47, 0x8e, 0xb8, 0x71,
+0x63, 0xb8, 0x9c, 0x47,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x70, 0x1c, 0x8f, 0xe3,
+0x0e, 0xaa, 0xf1, 0x55,
+0xf1, 0xe3, 0x0e, 0x1c,
+0x9d, 0xd5, 0x62, 0x2a,
+0xd5, 0x63, 0x2a, 0x9c,
+0xb8, 0x71, 0x47, 0x8e,
+0xc6, 0x8f, 0x39, 0x70,
+0x2b, 0xc6, 0xd4, 0x39,
+0x47, 0x0e, 0xb8, 0xf1,
+0x0e, 0xb8, 0xf1, 0x47,
+0x2b, 0xe2, 0xd4, 0x1d,
+0x55, 0x1c, 0xaa, 0xe3,
+0x8e, 0x63, 0x71, 0x9c,
+0xe2, 0xe3, 0x1d, 0x1c,
+0xf1, 0x47, 0x0e, 0xb8,
+0xd4, 0xe3, 0x2b, 0x1c,
+0x55, 0x1c, 0xaa, 0xe3,
+0xc6, 0x63, 0x39, 0x9c,
+0xe2, 0xe3, 0x1d, 0x1c,
+0xc7, 0x47, 0x38, 0xb8,
+0xd4, 0xab, 0x2b, 0x54,
+0x47, 0x1c, 0xb8, 0xe3,
+0xc6, 0x9d, 0x39, 0x62,
+0xe3, 0xe3, 0x1c, 0x1c,
+0x8f, 0x0f, 0x70, 0xf0,
+0xd4, 0xab, 0x2b, 0x54,
+0x71, 0x2a, 0x8e, 0xd5,
+0xc6, 0xd5, 0x39, 0x2a,
+0xb9, 0xf1, 0x46, 0x0e,
+0x8f, 0xf1, 0x70, 0x0e,
+0x2b, 0xaa, 0xd4, 0x55,
+0x39, 0x2a, 0xc6, 0xd5,
+0x8e, 0xd5, 0x71, 0x2a,
+0x8f, 0xf1, 0x70, 0x0e,
+0xb9, 0xb9, 0x46, 0x46,
+0x39, 0xe2, 0xc6, 0x1d,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x8f, 0x2b, 0x70, 0xd4,
+0xc6, 0xb9, 0x39, 0x46,
+0xf1, 0xf1, 0x0e, 0x0e,
+0x0f, 0xd4, 0xf0, 0x2b,
+0x1d, 0xaa, 0xe2, 0x55,
+0xd5, 0x71, 0x2a, 0x8e,
+0x9c, 0x55, 0x63, 0xaa,
+0x0e, 0x0e, 0xf1, 0xf1,
+0xb8, 0xd5, 0x47, 0x2a,
+0x1d, 0xaa, 0xe2, 0x55,
+0xab, 0x71, 0x54, 0x8e,
+0x9c, 0x1d, 0x63, 0xe2,
+0x2a, 0x0e, 0xd5, 0xf1,
+0xb8, 0x63, 0x47, 0x9c,
+0x0e, 0xaa, 0xf1, 0x55,
+0xe3, 0xc7, 0x1c, 0x38,
+0x9d, 0x1d, 0x62, 0xe2,
+0x54, 0x70, 0xab, 0x8f,
+0xb8, 0x2b, 0x47, 0xd4,
+0x62, 0x8e, 0x9d, 0x71,
+0xe3, 0x71, 0x1c, 0x8e,
+0x38, 0x0e, 0xc7, 0xf1,
+0x1c, 0x8e, 0xe3, 0x71,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x1c, 0x8e, 0xe3, 0x71,
+0x9d, 0x39, 0x62, 0xc6,
+0x1c, 0x46, 0xe3, 0xb9,
+0x38, 0x38, 0xc7, 0xc7,
+0x1c, 0x9c, 0xe3, 0x63,
+0x47, 0x38, 0xb8, 0xc7,
+0xd4, 0x8f, 0x2b, 0x70,
+0x63, 0x38, 0x9c, 0xc7,
+0x46, 0x0e, 0xb9, 0xf1,
+0x70, 0xf0, 0x8f, 0x0f,
+0x2b, 0xaa, 0xd4, 0x55,
+0x71, 0x2a, 0x8e, 0xd5,
+0x8e, 0xd5, 0x71, 0x2a,
+0xb9, 0xf1, 0x46, 0x0e,
+0xb9, 0xf1, 0x46, 0x0e,
+0x2b, 0xe2, 0xd4, 0x1d,
+0x2b, 0x2a, 0xd4, 0xd5,
+0x8e, 0x2b, 0x71, 0xd4,
+0x8e, 0xf1, 0x71, 0x0e,
+0xf1, 0xf1, 0x0e, 0x0e,
+0x39, 0xe2, 0xc6, 0x1d,
+0x1d, 0xe2, 0xe2, 0x1d,
+0x8f, 0x63, 0x70, 0x9c,
+0x9c, 0xab, 0x63, 0x54,
+0xf1, 0x0f, 0x0e, 0xf0,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x55, 0xaa, 0xaa, 0x55,
+0x9d, 0x71, 0x62, 0x8e,
+0xaa, 0x55, 0x55, 0xaa,
+0x38, 0x46, 0xc7, 0xb9,
+0xaa, 0x9d, 0x55, 0x62,
+0x0f, 0x54, 0xf0, 0xab,
+0xaa, 0x8f, 0x55, 0x70,
+0xd5, 0x55, 0x2a, 0xaa,
+0x62, 0x46, 0x9d, 0xb9,
+0x8e, 0x55, 0x71, 0xaa,
+0x38, 0xd4, 0xc7, 0x2b,
+0xb9, 0x9d, 0x46, 0x62,
+0xc7, 0xf1, 0x38, 0x0e,
+0xab, 0x8f, 0x54, 0x70,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x62, 0x8e, 0x9d, 0x71,
+0x9d, 0x71, 0x62, 0x8e,
+0x38, 0x46, 0xc7, 0xb9,
+0x38, 0x8e, 0xc7, 0x71,
+0x0f, 0x9c, 0xf0, 0x63,
+0x0f, 0x8e, 0xf0, 0x71,
+0xd5, 0x8f, 0x2a, 0x70,
+0x1d, 0x46, 0xe2, 0xb9,
+0x46, 0x46, 0xb9, 0xb9,
+0x1c, 0xd4, 0xe3, 0x2b,
+0x2b, 0x1c, 0xd4, 0xe3,
+0xd4, 0x39, 0x2b, 0xc6,
+0xc6, 0x2b, 0x39, 0xd4,
+0x0e, 0xf0, 0xf1, 0x0f,
+0xc7, 0xf1, 0x38, 0x0e,
+0x55, 0xaa, 0xaa, 0x55,
+0x0f, 0x62, 0xf0, 0x9d,
+0xaa, 0x9d, 0x55, 0x62,
+0x9d, 0x47, 0x62, 0xb8,
+0xaa, 0x47, 0x55, 0xb8,
+0x70, 0x54, 0x8f, 0xab,
+0x62, 0x9c, 0x9d, 0x63,
+0xf1, 0x55, 0x0e, 0xaa,
+0xf0, 0xc7, 0x0f, 0x38,
+0x9d, 0x9d, 0x62, 0x62,
+0x55, 0x70, 0xaa, 0x8f,
+0xb8, 0x47, 0x47, 0xb8,
+0x62, 0x8e, 0x9d, 0x71,
+0x63, 0x54, 0x9c, 0xab,
+0x38, 0x0e, 0xc7, 0xf1,
+0xf0, 0x9d, 0x0f, 0x62,
+0x0f, 0xaa, 0xf0, 0x55,
+0x9d, 0x8f, 0x62, 0x70,
+0x9d, 0x55, 0x62, 0xaa,
+0x70, 0x46, 0x8f, 0xb9,
+0xb8, 0x9d, 0x47, 0x62,
+0x39, 0x9c, 0xc6, 0x63,
+0xab, 0xc7, 0x54, 0x38,
+0xc7, 0x0f, 0x38, 0xf0,
+0x62, 0xb8, 0x9d, 0x47,
+0x47, 0x62, 0xb8, 0x9d,
+0x70, 0x9c, 0x8f, 0x63,
+0xab, 0x8f, 0x54, 0x70,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x62, 0xc6, 0x9d, 0x39,
+0x55, 0x62, 0xaa, 0x9d,
+0x38, 0x70, 0xc7, 0x8f,
+0xaa, 0x8f, 0x55, 0x70,
+0x47, 0x46, 0xb8, 0xb9,
+0x62, 0x8e, 0x9d, 0x71,
+0x2b, 0x54, 0xd4, 0xab,
+0x38, 0x0e, 0xc7, 0xf1,
+0xc6, 0x9d, 0x39, 0x62,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x8f, 0x8f, 0x70, 0x70,
+0x9d, 0xab, 0x62, 0x54,
+0x71, 0x46, 0x8e, 0xb9,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x39, 0x9c, 0xc6, 0x63,
+0x9d, 0xf1, 0x62, 0x0e,
+0xc7, 0x47, 0x38, 0xb8,
+0x38, 0xaa, 0xc7, 0x55,
+0x47, 0x9c, 0xb8, 0x63,
+0x8f, 0x9d, 0x70, 0x62,
+0xe3, 0x8f, 0x1c, 0x70,
+0xb9, 0x0f, 0x46, 0xf0,
+0x54, 0xc6, 0xab, 0x39,
+0x63, 0x2a, 0x9c, 0xd5,
+0x2a, 0x38, 0xd5, 0xc7,
+0xb8, 0x71, 0x47, 0x8e,
+0x46, 0xb8, 0xb9, 0x47,
+0x2b, 0xc6, 0xd4, 0x39,
+0x63, 0x1c, 0x9c, 0xe3,
+0x0e, 0x38, 0xf1, 0xc7,
+0xf0, 0xe3, 0x0f, 0x1c,
+0x55, 0xb8, 0xaa, 0x47,
+0xd5, 0x63, 0x2a, 0x9c,
+0x62, 0x54, 0x9d, 0xab,
+0xc6, 0x47, 0x39, 0xb8,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x47, 0x9c, 0xb8, 0x63,
+0x9d, 0xb9, 0x62, 0x46,
+0xe3, 0x47, 0x1c, 0xb8,
+0x38, 0x1c, 0xc7, 0xe3,
+0x54, 0x9c, 0xab, 0x63,
+0xc7, 0x2b, 0x38, 0xd4,
+0xe2, 0x8f, 0x1d, 0x70,
+0xc7, 0x71, 0x38, 0x8e,
+0x54, 0x8e, 0xab, 0x71,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x2a, 0x8e, 0xd5, 0x71,
+0x1d, 0x62, 0xe2, 0x9d,
+0x0e, 0x46, 0xf1, 0xb9,
+0x9c, 0xc7, 0x63, 0x38,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x70, 0x70, 0x8f, 0x8f,
+0xd4, 0xab, 0x2b, 0x54,
+0x71, 0x0e, 0x8e, 0xf1,
+0xc6, 0xd5, 0x39, 0x2a,
+0x39, 0xe2, 0xc6, 0x1d,
+0x8f, 0xf1, 0x70, 0x0e,
+0x8f, 0xab, 0x70, 0x54,
+0x39, 0xaa, 0xc6, 0x55,
+0xf1, 0xd5, 0x0e, 0x2a,
+0x8f, 0xd5, 0x70, 0x2a,
+0x9d, 0xb9, 0x62, 0x46,
+0xb9, 0x71, 0x46, 0x8e,
+0x38, 0xd4, 0xc7, 0x2b,
+0x2b, 0x8e, 0xd4, 0x71,
+0xc7, 0x39, 0x38, 0xc6,
+0x0e, 0x8e, 0xf1, 0x71,
+0x0f, 0xf0, 0xf0, 0x0f,
+0x1d, 0x8e, 0xe2, 0x71,
+0x55, 0x62, 0xaa, 0x9d,
+0x1c, 0x46, 0xe3, 0xb9,
+0xaa, 0x0f, 0x55, 0xf0,
+0x1c, 0x54, 0xe3, 0xab,
+0x62, 0x2a, 0x9d, 0xd5,
+0xd4, 0x55, 0x2b, 0xaa,
+0xb8, 0x39, 0x47, 0xc6,
+0x8e, 0x9d, 0x71, 0x62,
+0x2b, 0xf0, 0xd4, 0x0f,
+0xb9, 0x0f, 0x46, 0xf0,
+0x46, 0xe2, 0xb9, 0x1d,
+0x63, 0xe2, 0x9c, 0x1d,
+0xab, 0x2b, 0x54, 0xd4,
+0xb8, 0x2b, 0x47, 0xd4,
+0xe2, 0xb9, 0x1d, 0x46,
+0xe3, 0x71, 0x1c, 0x8e,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x1c, 0x0e, 0xe3, 0xf1,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x1c, 0x2a, 0xe3, 0xd5,
+0xc6, 0x39, 0x39, 0xc6,
+0x9c, 0xf1, 0x63, 0x0e,
+0x0f, 0x38, 0xf0, 0xc7,
+0x38, 0xaa, 0xc7, 0x55,
+0x55, 0xb8, 0xaa, 0x47,
+0x8f, 0x55, 0x70, 0xaa,
+0x62, 0x9c, 0x9d, 0x63,
+0xb9, 0x55, 0x46, 0xaa,
+0xf0, 0xc7, 0x0f, 0x38,
+0xab, 0x9d, 0x54, 0x62,
+0x55, 0x38, 0xaa, 0xc7,
+0xaa, 0x47, 0x55, 0xb8,
+0x62, 0x70, 0x9d, 0x8f,
+0x62, 0x54, 0x9d, 0xab,
+0x70, 0x46, 0x8f, 0xb9,
+0xf0, 0x9d, 0x0f, 0x62,
+0x39, 0x9c, 0xc6, 0x63,
+0x9d, 0xc7, 0x62, 0x38,
+0xc7, 0x47, 0x38, 0xb8,
+0x70, 0xb8, 0x8f, 0x47,
+0x47, 0x9c, 0xb8, 0x63,
+0x71, 0x9c, 0x8e, 0x63,
+0xe3, 0xc7, 0x1c, 0x38,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x54, 0xf0, 0xab, 0x0f,
+0x55, 0x2a, 0xaa, 0xd5,
+0x62, 0x62, 0x9d, 0x9d,
+0xaa, 0x71, 0x55, 0x8e,
+0xb8, 0x47, 0x47, 0xb8,
+0x2a, 0x8e, 0xd5, 0x71,
+0x63, 0x54, 0x9c, 0xab,
+0x0e, 0x0e, 0xf1, 0xf1,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x1d, 0xaa, 0xe2, 0x55,
+0x9d, 0x71, 0x62, 0x8e,
+0x9c, 0x55, 0x63, 0xaa,
+0x38, 0x0e, 0xc7, 0xf1,
+0xb8, 0x9d, 0x47, 0x62,
+0x0f, 0xaa, 0xf0, 0x55,
+0xab, 0x8f, 0x54, 0x70,
+0x9d, 0x1d, 0x62, 0xe2,
+0x62, 0x46, 0x9d, 0xb9,
+0xb8, 0x63, 0x47, 0x9c,
+0x38, 0x9c, 0xc7, 0x63,
+0xe3, 0x8f, 0x1c, 0x70,
+0xc7, 0x0f, 0x38, 0xf0,
+0x54, 0x8e, 0xab, 0x71,
+0x47, 0x2a, 0xb8, 0xd5,
+0x2a, 0x8e, 0xd5, 0x71,
+0xab, 0x71, 0x54, 0x8e,
+0x0e, 0x0e, 0xf1, 0xf1,
+0x2a, 0xc6, 0xd5, 0x39,
+0x1d, 0x62, 0xe2, 0x9d,
+0x0e, 0x70, 0xf1, 0x8f,
+0x9c, 0xc7, 0x63, 0x38,
+0x55, 0x0e, 0xaa, 0xf1,
+0x70, 0x70, 0x8f, 0x8f,
+0x2a, 0xaa, 0xd5, 0x55,
+0x71, 0x46, 0x8e, 0xb9,
+0x8e, 0xd5, 0x71, 0x2a,
+0x39, 0xd4, 0xc6, 0x2b,
+0xb9, 0xf1, 0x46, 0x0e,
+0xc7, 0xf1, 0x38, 0x0e,
+0x2b, 0xaa, 0xd4, 0x55,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x8e, 0x9d, 0x71, 0x62,
+0x9d, 0xf1, 0x62, 0x0e,
+0xb9, 0x47, 0x46, 0xb8,
+0x38, 0xe2, 0xc7, 0x1d,
+0x63, 0x9c, 0x9c, 0x63,
+0x8f, 0x2b, 0x70, 0xd4,
+0xf0, 0x8f, 0x0f, 0x70,
+0xf1, 0xb9, 0x0e, 0x46,
+0x55, 0xc6, 0xaa, 0x39,
+0x1d, 0x54, 0xe2, 0xab,
+0x2a, 0x70, 0xd5, 0x8f,
+0xd4, 0x55, 0x2b, 0xaa,
+0x46, 0x0e, 0xb9, 0xf1,
+0x8e, 0xd5, 0x71, 0x2a,
+0x2b, 0xe2, 0xd4, 0x1d,
+0xb9, 0x39, 0x46, 0xc6,
+0x8e, 0xe3, 0x71, 0x1c,
+0x2b, 0xf0, 0xd4, 0x0f,
+0xf1, 0x2b, 0x0e, 0xd4,
+0x46, 0xe2, 0xb9, 0x1d,
+0xd5, 0xf1, 0x2a, 0x0e,
+0xab, 0x63, 0x54, 0x9c,
+0x0e, 0x2a, 0xf1, 0xd5,
+0xe2, 0xc7, 0x1d, 0x38,
+0x9d, 0x71, 0x62, 0x8e,
+0x54, 0x70, 0xab, 0x8f,
+0x38, 0x0e, 0xc7, 0xf1,
+0x62, 0x8e, 0x9d, 0x71,
+0x0f, 0x62, 0xf0, 0x9d,
+0x38, 0x8e, 0xc7, 0x71,
+0x9d, 0x8f, 0x62, 0x70,
+0x0f, 0x46, 0xf0, 0xb9,
+0x70, 0x8e, 0x8f, 0x71,
+0x1d, 0x9c, 0xe2, 0x63,
+0x39, 0x46, 0xc6, 0xb9,
+0xd4, 0xc7, 0x2b, 0x38,
+0x0f, 0x1c, 0xf0, 0xe3,
+0x46, 0xb8, 0xb9, 0x47,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x63, 0x54, 0x9c, 0xab,
+0xc6, 0x2b, 0x39, 0xd4,
+0xf0, 0xd5, 0x0f, 0x2a,
+0xc7, 0xb9, 0x38, 0x46,
+0x9d, 0xb9, 0x62, 0x46,
+0x0f, 0x54, 0xf0, 0xab,
+0x38, 0x9c, 0xc7, 0x63,
+0xd5, 0x9d, 0x2a, 0x62,
+0xc7, 0x47, 0x38, 0xb8,
+0x8e, 0x8f, 0x71, 0x70,
+0x47, 0xd4, 0xb8, 0x2b,
+0x71, 0x8e, 0x8e, 0x71,
+0xe3, 0xf1, 0x1c, 0x0e,
+0x39, 0x0e, 0xc6, 0xf1,
+0x1c, 0xe2, 0xe3, 0x1d,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x9c, 0xab, 0x63, 0x54,
+0x9d, 0x39, 0x62, 0xc6,
+0xf0, 0x55, 0x0f, 0xaa,
+0x38, 0xb8, 0xc7, 0x47,
+0x9d, 0x9d, 0x62, 0x62,
+0x47, 0x54, 0xb8, 0xab,
+0xb8, 0x8f, 0x47, 0x70,
+0xe3, 0x9d, 0x1c, 0x62,
+0x63, 0x0e, 0x9c, 0xf1,
+0x9c, 0x0f, 0x63, 0xf0,
+0x38, 0x2a, 0xc7, 0xd5,
+0x70, 0xaa, 0x8f, 0x55,
+0x8f, 0xb9, 0x70, 0x46,
+0xb9, 0x9d, 0x46, 0x62,
+0x39, 0xd4, 0xc6, 0x2b,
+0xab, 0xc7, 0x54, 0x38,
+0xc7, 0x39, 0x38, 0xc6,
+0x62, 0xb8, 0x9d, 0x47,
+0x0f, 0x70, 0xf0, 0x8f,
+0x70, 0x9c, 0x8f, 0x63,
+0x55, 0x8e, 0xaa, 0x71,
+0xf1, 0x47, 0x0e, 0xb8,
+0x2a, 0xc6, 0xd5, 0x39,
+0x55, 0x54, 0xaa, 0xab,
+0x0e, 0x70, 0xf1, 0x8f,
+0xe2, 0xd5, 0x1d, 0x2a,
+0x55, 0x46, 0xaa, 0xb9,
+0x9c, 0x71, 0x63, 0x8e,
+0x2a, 0x1c, 0xd5, 0xe3,
+0x38, 0x46, 0xc7, 0xb9,
+0xc6, 0xab, 0x39, 0x54,
+0x0f, 0xd4, 0xf0, 0x2b,
+0xc7, 0x9d, 0x38, 0x62,
+0xd5, 0xb9, 0x2a, 0x46,
+0x8f, 0x47, 0x70, 0xb8,
+0x0e, 0x9c, 0xf1, 0x63,
+0x71, 0xd4, 0x8e, 0x2b,
+0xd5, 0xc7, 0x2a, 0x38,
+0xf1, 0x71, 0x0e, 0x8e,
+0x46, 0xf0, 0xb9, 0x0f,
+0x1d, 0xc6, 0xe2, 0x39,
+0x63, 0x62, 0x9c, 0x9d,
+0x1c, 0x38, 0xe3, 0xc7,
+0xb8, 0x0f, 0x47, 0xf0,
+0x54, 0xb8, 0xab, 0x47,
+0x63, 0x2a, 0x9c, 0xd5,
+0x62, 0x1c, 0x9d, 0xe3,
+0xb8, 0x71, 0x47, 0x8e,
+0xf0, 0xab, 0x0f, 0x54,
+0x2b, 0x8e, 0xd4, 0x71,
+0xd5, 0x1d, 0x2a, 0xe2,
+0x0e, 0x46, 0xf1, 0xb9,
+0x8e, 0xe3, 0x71, 0x1c,
+0x1d, 0xd4, 0xe2, 0x2b,
+0xf1, 0x63, 0x0e, 0x9c,
+0xd4, 0xf1, 0x2b, 0x0e,
+0xd5, 0x0f, 0x2a, 0xf0,
+0x0e, 0x62, 0xf1, 0x9d,
+0x46, 0xe2, 0xb9, 0x1d,
+0x9d, 0xc7, 0x62, 0x38,
+0xab, 0x63, 0x54, 0x9c,
+0x70, 0x38, 0x8f, 0xc7,
+0xe2, 0x8f, 0x1d, 0x70,
+0x71, 0x70, 0x8e, 0x8f,
+0x54, 0xc6, 0xab, 0x39,
+0x71, 0x0e, 0x8e, 0xf1,
+0x2a, 0xf0, 0xd5, 0x0f,
+0x39, 0x62, 0xc6, 0x9d,
+0x46, 0xe2, 0xb9, 0x1d,
+0x8f, 0xc7, 0x70, 0x38,
+0xab, 0xab, 0x54, 0x54,
+0x71, 0x38, 0x8e, 0xc7,
+0xe2, 0xd5, 0x1d, 0x2a,
+0x71, 0x70, 0x8e, 0x8f,
+0x9c, 0xf1, 0x63, 0x0e,
+0x71, 0x0e, 0x8e, 0xf1,
+0x38, 0xe2, 0xc7, 0x1d,
+0x39, 0xaa, 0xc6, 0x55,
+0x8f, 0xe3, 0x70, 0x1c,
+0x8f, 0x9d, 0x70, 0x62,
+0xf1, 0xab, 0x0e, 0x54,
+0xb9, 0xc7, 0x46, 0x38,
+0xd5, 0xd5, 0x2a, 0x2a,
+0x63, 0x70, 0x9c, 0x8f,
+0x8e, 0x39, 0x71, 0xc6,
+0x70, 0xc6, 0x8f, 0x39,
+0x39, 0xb8, 0xc6, 0x47,
+0x39, 0xf0, 0xc6, 0x0f,
+0x47, 0xd4, 0xb8, 0x2b,
+0x47, 0xaa, 0xb8, 0x55,
+0xe3, 0xb9, 0x1c, 0x46,
+0xab, 0x1d, 0x54, 0xe2,
+0x1c, 0x1c, 0xe3, 0xe3,
+0xaa, 0x2b, 0x55, 0xd4,
+0xd4, 0x63, 0x2b, 0x9c,
+0xe2, 0x39, 0x1d, 0xc6,
+0xc6, 0x47, 0x39, 0xb8,
+0x1c, 0xf0, 0xe3, 0x0f,
+0x47, 0x1c, 0xb8, 0xe3,
+0x54, 0xaa, 0xab, 0x55,
+0xe3, 0x2b, 0x1c, 0xd4,
+0xaa, 0x1d, 0x55, 0xe2,
+0xd4, 0x71, 0x2b, 0x8e,
+0xaa, 0x2b, 0x55, 0xd4,
+0x0e, 0x46, 0xf1, 0xb9,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x1d, 0x54, 0xe2, 0xab,
+0x1c, 0x62, 0xe3, 0x9d,
+0xd4, 0x1d, 0x2b, 0xe2,
+0x9c, 0x0f, 0x63, 0xf0,
+0x8e, 0x2b, 0x71, 0xd4,
+0x70, 0xe2, 0x8f, 0x1d,
+0xf1, 0xb9, 0x0e, 0x46,
+0xb9, 0xe3, 0x46, 0x1c,
+0x1d, 0xd4, 0xe2, 0x2b,
+0xe3, 0x63, 0x1c, 0x9c,
+0xd4, 0x39, 0x2b, 0xc6,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x0e, 0x38, 0xf1, 0xc7,
+0x46, 0xe2, 0xb9, 0x1d,
+0x55, 0xf0, 0xaa, 0x0f,
+0xab, 0x63, 0x54, 0x9c,
+0x62, 0x2a, 0x9d, 0xd5,
+0xe2, 0x47, 0x1d, 0xb8,
+0xb8, 0x71, 0x47, 0x8e,
+0x54, 0x9c, 0xab, 0x63,
+0x2b, 0x0e, 0xd4, 0xf1,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x0e, 0x62, 0xf1, 0x9d,
+0x54, 0xe2, 0xab, 0x1d,
+0x9d, 0x0f, 0x62, 0xf0,
+0xaa, 0x63, 0x55, 0x9c,
+0x70, 0x62, 0x8f, 0x9d,
+0xe2, 0x8f, 0x1d, 0x70,
+0xb9, 0x47, 0x46, 0xb8,
+0x54, 0xc6, 0xab, 0x39,
+0x63, 0x1c, 0x9c, 0xe3,
+0x2a, 0x38, 0xd5, 0xc7,
+0xf0, 0x63, 0x0f, 0x9c,
+0x46, 0xb8, 0xb9, 0x47,
+0xd5, 0xc7, 0x2a, 0x38,
+0x63, 0x54, 0x9c, 0xab,
+0x46, 0x38, 0xb9, 0xc7,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x63, 0xb8, 0x9c, 0x47,
+0x9d, 0x39, 0x62, 0xc6,
+0x70, 0x54, 0x8f, 0xab,
+0x38, 0xb8, 0xc7, 0x47,
+0xf1, 0x9d, 0x0e, 0x62,
+0x47, 0xd4, 0xb8, 0x2b,
+0x9d, 0x8f, 0x62, 0x70,
+0xe3, 0x71, 0x1c, 0x8e,
+0x70, 0x0e, 0x8f, 0xf1,
+0x1c, 0x8e, 0xe3, 0x71,
+0x39, 0x2a, 0xc6, 0xd5,
+0x1c, 0xc6, 0xe3, 0x39,
+0x8f, 0x39, 0x70, 0xc6,
+0x1c, 0xb8, 0xe3, 0x47,
+0x39, 0x38, 0xc6, 0xc7,
+0x54, 0xd4, 0xab, 0x2b,
+0x47, 0x38, 0xb8, 0xc7,
+0xe2, 0xb9, 0x1d, 0x46,
+0x63, 0x70, 0x9c, 0x8f,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x70, 0x0e, 0x8f, 0xf1,
+0xd4, 0xab, 0x2b, 0x54,
+0x39, 0x2a, 0xc6, 0xd5,
+0xc6, 0xd5, 0x39, 0x2a,
+0x8f, 0xf1, 0x70, 0x0e,
+0x8f, 0xb9, 0x70, 0x46,
+0x39, 0xaa, 0xc6, 0x55,
+0x39, 0xd4, 0xc6, 0x2b,
+0x8f, 0xd5, 0x70, 0x2a,
+0xc7, 0xb9, 0x38, 0x46,
+0xb9, 0xb9, 0x46, 0x46,
+0x0f, 0xd4, 0xf0, 0x2b,
+0x2b, 0x9c, 0xd4, 0x63,
+0xd5, 0x39, 0x2a, 0xc6,
+0xc6, 0x47, 0x39, 0xb8,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x47, 0xd4, 0xb8, 0x2b,
+0x55, 0xaa, 0xaa, 0x55,
+0xe3, 0x71, 0x1c, 0x8e,
+0xaa, 0x1d, 0x55, 0xe2,
+0x1c, 0x46, 0xe3, 0xb9,
+0xaa, 0x2b, 0x55, 0xd4,
+0x1c, 0x54, 0xe3, 0xab,
+0xe2, 0x39, 0x1d, 0xc6,
+0xd4, 0x55, 0x2b, 0xaa,
+0x1c, 0x38, 0xe3, 0xc7,
+0x8e, 0x1d, 0x71, 0xe2,
+0x54, 0xf0, 0xab, 0x0f,
+0xb9, 0x2b, 0x46, 0xd4,
+0x62, 0xe2, 0x9d, 0x1d,
+0xe3, 0x71, 0x1c, 0x8e,
+0xb8, 0x2b, 0x47, 0xd4,
+0x1c, 0x8e, 0xe3, 0x71,
+0xe3, 0x39, 0x1c, 0xc6,
+0x1c, 0x0e, 0xe3, 0xf1,
+0x1c, 0x38, 0xe3, 0xc7,
+0x1c, 0x2a, 0xe3, 0xd5,
+0x54, 0x38, 0xab, 0xc7,
+0x9c, 0x39, 0x63, 0xc6,
+0x62, 0x38, 0x9d, 0xc7,
+0x38, 0x70, 0xc7, 0x8f,
+0x70, 0xb8, 0x8f, 0x47,
+0x47, 0x8e, 0xb8, 0x71,
+0x71, 0x9c, 0x8e, 0x63,
+0x2b, 0xc6, 0xd4, 0x39,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x55, 0xe2, 0xaa, 0x1d,
+0x55, 0x62, 0xaa, 0x9d,
+0xaa, 0x63, 0x55, 0x9c,
+0xaa, 0x47, 0x55, 0xb8,
+0xe2, 0x47, 0x1d, 0xb8,
+0x62, 0x54, 0x9d, 0xab,
+0x54, 0x54, 0xab, 0xab,
+0xf0, 0x1d, 0x0f, 0xe2,
+0xe2, 0x9d, 0x1d, 0x62,
+0x9d, 0x63, 0x62, 0x9c,
+0x9c, 0x47, 0x63, 0xb8,
+0xf0, 0x0f, 0x0f, 0xf0,
+0x70, 0x9c, 0x8f, 0x63,
+0x55, 0xaa, 0xaa, 0x55,
+0xf1, 0x47, 0x0e, 0xb8,
+0xaa, 0xd5, 0x55, 0x2a,
+0x55, 0x54, 0xaa, 0xab,
+0xaa, 0x71, 0x55, 0x8e,
+0xe2, 0x55, 0x1d, 0xaa,
+0x2a, 0x46, 0xd5, 0xb9,
+0x9c, 0x55, 0x63, 0xaa,
+0x0e, 0x1c, 0xf1, 0xe3,
+0xb8, 0xd5, 0x47, 0x2a,
+0xd5, 0xab, 0x2a, 0x54,
+0xab, 0x71, 0x54, 0x8e,
+0xc6, 0x1d, 0x39, 0xe2,
+0x2a, 0xc6, 0xd5, 0x39,
+0x8f, 0x63, 0x70, 0x9c,
+0x0e, 0xb8, 0xf1, 0x47,
+0xf1, 0xc7, 0x0e, 0x38,
+0x55, 0xd4, 0xaa, 0x2b,
+0x55, 0x70, 0xaa, 0x8f,
+0xe2, 0x71, 0x1d, 0x8e,
+0x62, 0x46, 0x9d, 0xb9,
+0x1c, 0x46, 0xe3, 0xb9,
+0x38, 0x1c, 0xc7, 0xe3,
+0x1c, 0x9c, 0xe3, 0x63,
+0xc7, 0x2b, 0x38, 0xd4,
+0xd4, 0x8f, 0x2b, 0x70,
+0xc7, 0x39, 0x38, 0xc6,
+0x46, 0x8e, 0xb9, 0x71,
+0x0f, 0xf0, 0xf0, 0x0f,
+0x2b, 0x8e, 0xd4, 0x71,
+0x55, 0x2a, 0xaa, 0xd5,
+0x0e, 0x46, 0xf1, 0xb9,
+0xaa, 0xf1, 0x55, 0x0e,
+0x1d, 0x54, 0xe2, 0xab,
+0x2a, 0x62, 0xd5, 0x9d,
+0xd4, 0x55, 0x2b, 0xaa,
+0x8e, 0x0f, 0x71, 0xf0,
+0x8e, 0xd5, 0x71, 0x2a,
+0x71, 0xe2, 0x8e, 0x1d,
+0xb9, 0xf1, 0x46, 0x0e,
+0xb9, 0xe3, 0x46, 0x1c,
+0x2b, 0xe2, 0xd4, 0x1d,
+0xe3, 0x2b, 0x1c, 0xd4,
+0x8e, 0x2b, 0x71, 0xd4,
+0xd4, 0xf1, 0x2b, 0x0e,
+0xf1, 0x39, 0x0e, 0xc6,
+0x0e, 0xe2, 0xf1, 0x1d,
+0x1d, 0xf0, 0xe2, 0x0f,
+0x9d, 0x63, 0x62, 0x9c,
+0x54, 0x62, 0xab, 0x9d,
+0xf0, 0x0f, 0x0f, 0xf0,
+0xaa, 0x8f, 0x55, 0x70,
+0x55, 0x62, 0xaa, 0x9d,
+0x62, 0x46, 0x9d, 0xb9,
+0xaa, 0x47, 0x55, 0xb8,
+0x38, 0x54, 0xc7, 0xab,
+0x62, 0x9c, 0x9d, 0x63,
+0xc7, 0x55, 0x38, 0xaa,
+0xf0, 0x8f, 0x0f, 0x70,
+0x8f, 0x9d, 0x70, 0x62,
+0x55, 0x8e, 0xaa, 0x71,
+0xb9, 0x47, 0x46, 0xb8,
+0x2a, 0xc6, 0xd5, 0x39,
+0x63, 0x54, 0x9c, 0xab,
+0x0e, 0x38, 0xf1, 0xc7,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x55, 0xb8, 0xaa, 0x47,
+0x9d, 0x71, 0x62, 0x8e,
+0x62, 0x54, 0x9d, 0xab,
+0x38, 0x46, 0xc7, 0xb9,
+0xf0, 0x9d, 0x0f, 0x62,
+0x0f, 0x9c, 0xf0, 0x63,
+0x9d, 0x8f, 0x62, 0x70,
+0xd5, 0x47, 0x2a, 0xb8,
+0x70, 0x46, 0x8f, 0xb9,
+0x46, 0x9c, 0xb9, 0x63,
+0x39, 0xd4, 0xc6, 0x2b,
+0xe3, 0xc7, 0x1c, 0x38,
+0xc7, 0x39, 0x38, 0xc6,
+0x54, 0xb8, 0xab, 0x47,
+0x0f, 0x38, 0xf0, 0xc7,
+0x62, 0x9c, 0x9d, 0x63,
+0x55, 0x70, 0xaa, 0x8f,
+0xf0, 0x47, 0x0f, 0xb8,
+0x62, 0x8e, 0x9d, 0x71,
+0x55, 0x54, 0xaa, 0xab,
+0x38, 0x46, 0xc7, 0xb9,
+0xe2, 0x9d, 0x1d, 0x62,
+0x0f, 0x54, 0xf0, 0xab,
+0x9c, 0x8f, 0x63, 0x70,
+0xd5, 0x1d, 0x2a, 0xe2,
+0x70, 0x46, 0x8f, 0xb9,
+0x8e, 0xab, 0x71, 0x54,
+0x39, 0xd4, 0xc6, 0x2b,
+0xf1, 0xd5, 0x0e, 0x2a,
+0xc7, 0xf1, 0x38, 0x0e,
+0x9d, 0xb9, 0x62, 0x46,
+0x0f, 0x62, 0xf0, 0x9d,
+0x38, 0x9c, 0xc7, 0x63,
+0x9d, 0x8f, 0x62, 0x70,
+0xc7, 0x47, 0x38, 0xb8,
+0x70, 0x8e, 0x8f, 0x71,
+0x47, 0x9c, 0xb8, 0x63,
+0x39, 0x8e, 0xc6, 0x71,
+0xe3, 0xc7, 0x1c, 0x38,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x54, 0xb8, 0xab, 0x47,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x62, 0x54, 0x9d, 0xab,
+0x9c, 0x71, 0x63, 0x8e,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x38, 0x8e, 0xc7, 0x71,
+0x9d, 0xab, 0x62, 0x54,
+0x0f, 0x46, 0xf0, 0xb9,
+0xf0, 0x9d, 0x0f, 0x62,
+0x1d, 0x9c, 0xe2, 0x63,
+0x9d, 0x47, 0x62, 0xb8,
+0xd4, 0x47, 0x2b, 0xb8,
+0x70, 0x1c, 0x8f, 0xe3,
+0x46, 0x9c, 0xb9, 0x63,
+0xf1, 0xe3, 0x0e, 0x1c,
+0xe3, 0xc7, 0x1c, 0x38,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x54, 0x70, 0xab, 0x8f,
+0xc6, 0x39, 0x39, 0xc6,
+0x62, 0xc6, 0x9d, 0x39,
+0x0f, 0x70, 0xf0, 0x8f,
+0x38, 0xb8, 0xc7, 0x47,
+0x55, 0x8e, 0xaa, 0x71,
+0x47, 0x54, 0xb8, 0xab,
+0x2a, 0x8e, 0xd5, 0x71,
+0xe3, 0x55, 0x1c, 0xaa,
+0x0e, 0x0e, 0xf1, 0xf1,
+0x9c, 0xd5, 0x63, 0x2a,
+0x1d, 0x2a, 0xe2, 0xd5,
+0xb8, 0x71, 0x47, 0x8e,
+0x9c, 0xb9, 0x63, 0x46,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x38, 0x1c, 0xc7, 0xe3,
+0x0e, 0xaa, 0xf1, 0x55,
+0xc7, 0xe3, 0x38, 0x1c,
+0x9d, 0x9d, 0x62, 0x62,
+0xc7, 0x63, 0x38, 0x9c,
+0xb8, 0x8f, 0x47, 0x70,
+0xc7, 0x8f, 0x38, 0x70,
+0x63, 0x8e, 0x9c, 0x71,
+0x47, 0x0e, 0xb8, 0xf1,
+0x38, 0x8e, 0xc7, 0x71,
+0x2b, 0xaa, 0xd4, 0x55,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x8e, 0x9d, 0x71, 0x62,
+0x1d, 0xe2, 0xe2, 0x1d,
+0xb9, 0x47, 0x46, 0xb8,
+0x9c, 0xe3, 0x63, 0x1c,
+0x63, 0x1c, 0x9c, 0xe3,
+0xf0, 0x2b, 0x0f, 0xd4,
+0xf0, 0xab, 0x0f, 0x54,
+0xd5, 0xb9, 0x2a, 0x46,
+0xd5, 0x55, 0x2a, 0xaa,
+0x0e, 0x54, 0xf1, 0xab,
+0x8e, 0xd5, 0x71, 0x2a,
+0xd5, 0xd5, 0x2a, 0x2a,
+0xb9, 0x71, 0x46, 0x8e,
+0x8e, 0xf1, 0x71, 0x0e,
+0x2b, 0xc6, 0xd4, 0x39,
+0x39, 0x2a, 0xc6, 0xd5,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x8f, 0xf1, 0x70, 0x0e,
+0x55, 0xaa, 0xaa, 0x55,
+0x39, 0x62, 0xc6, 0x9d,
+0xaa, 0xd5, 0x55, 0x2a,
+0x8f, 0x47, 0x70, 0xb8,
+0xaa, 0xb9, 0x55, 0x46,
+0x71, 0x54, 0x8e, 0xab,
+0x2a, 0xd4, 0xd5, 0x2b,
+0xf1, 0x55, 0x0e, 0xaa,
+0xc6, 0xf1, 0x39, 0x0e,
+0x9d, 0xd5, 0x62, 0x2a,
+0x0f, 0x62, 0xf0, 0x9d,
+0xb8, 0xb9, 0x47, 0x46,
+0x9d, 0x8f, 0x62, 0x70,
+0x2b, 0x54, 0xd4, 0xab,
+0x70, 0x0e, 0x8f, 0xf1,
+0xc6, 0x9d, 0x39, 0x62,
+0x39, 0xe2, 0xc6, 0x1d,
+0x8f, 0xc7, 0x70, 0x38,
+0x8f, 0xab, 0x70, 0x54,
+0x71, 0xb8, 0x8e, 0x47,
+0xf1, 0xd5, 0x0e, 0x2a,
+0x71, 0xd4, 0x8e, 0x2b,
+0x9d, 0xf1, 0x62, 0x0e,
+0xf1, 0x71, 0x0e, 0x8e,
+0x38, 0xe2, 0xc7, 0x1d,
+0x1d, 0x8e, 0xe2, 0x71,
+0x8f, 0x63, 0x70, 0x9c,
+0x1c, 0x8e, 0xe3, 0x71,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x1c, 0xc6, 0xe3, 0x39,
+0x55, 0x2a, 0xaa, 0xd5,
+0x1c, 0x70, 0xe3, 0x8f,
+0xaa, 0x39, 0x55, 0xc6,
+0x54, 0x46, 0xab, 0xb9,
+0x2a, 0x38, 0xd5, 0xc7,
+0x2a, 0x54, 0xd5, 0xab,
+0x46, 0x70, 0xb9, 0x8f,
+0xc6, 0xd5, 0x39, 0x2a,
+0x63, 0xc6, 0x9c, 0x39,
+0x8f, 0x39, 0x70, 0xc6,
+0x38, 0xb8, 0xc7, 0x47,
+0x39, 0xb8, 0xc6, 0x47,
+0x47, 0xd4, 0xb8, 0x2b,
+0x47, 0x9c, 0xb8, 0x63,
+0xe3, 0xb9, 0x1c, 0x46,
+0xe3, 0x0f, 0x1c, 0xf0,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x54, 0x2a, 0xab, 0xd5,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xaa, 0x39, 0x55, 0xc6,
+0xc6, 0x71, 0x39, 0x8e,
+0x2a, 0xf0, 0xd5, 0x0f,
+0x0f, 0x46, 0xf0, 0xb9,
+0x46, 0xaa, 0xb9, 0x55,
+0x1d, 0xd4, 0xe2, 0x2b,
+0xab, 0x55, 0x54, 0xaa,
+0xd4, 0x39, 0x2b, 0xc6,
+0xaa, 0x1d, 0x55, 0xe2,
+0x0e, 0x70, 0xf1, 0x8f,
+0xaa, 0xe3, 0x55, 0x1c,
+0x55, 0x46, 0xaa, 0xb9,
+0xe2, 0x63, 0x1d, 0x9c,
+0x2a, 0x54, 0xd5, 0xab,
+0xd4, 0x47, 0x2b, 0xb8,
+0xc6, 0x1d, 0x39, 0xe2,
+0x46, 0xd4, 0xb9, 0x2b,
+0x8f, 0xe3, 0x70, 0x1c,
+0xe3, 0xb9, 0x1c, 0x46,
+0xf1, 0x2b, 0x0e, 0xd4,
+0x1c, 0xd4, 0xe3, 0x2b,
+0xd5, 0x39, 0x2a, 0xc6,
+0xd4, 0x71, 0x2b, 0x8e,
+0x0e, 0x38, 0xf1, 0xc7,
+0x0e, 0xc6, 0xf1, 0x39,
+0x55, 0xf0, 0xaa, 0x0f,
+0x1d, 0x70, 0xe2, 0x8f,
+0x62, 0x62, 0x9d, 0x9d,
+0x54, 0x46, 0xab, 0xb9,
+0xb8, 0x0f, 0x47, 0xf0,
+0x2a, 0x9c, 0xd5, 0x63,
+0x63, 0x62, 0x9c, 0x9d,
+0xc6, 0x0f, 0x39, 0xf0,
+0xb8, 0xc7, 0x47, 0x38,
+0x47, 0xaa, 0xb8, 0x55,
+0x63, 0xb8, 0x9c, 0x47,
+0xab, 0x1d, 0x54, 0xe2,
+0x70, 0x1c, 0x8f, 0xe3,
+0xaa, 0xab, 0x55, 0x54,
+0xf1, 0x63, 0x0e, 0x9c,
+0xe2, 0xd5, 0x1d, 0x2a,
+0xd5, 0x47, 0x2a, 0xb8,
+0x9c, 0x71, 0x63, 0x8e,
+0x46, 0x1c, 0xb9, 0xe3,
+0x38, 0xc6, 0xc7, 0x39,
+0xe3, 0xab, 0x1c, 0x54,
+0x0f, 0x38, 0xf0, 0xc7,
+0xd4, 0x9d, 0x2b, 0x62,
+0x55, 0x38, 0xaa, 0xc7,
+0x8e, 0x47, 0x71, 0xb8,
+0x62, 0xf0, 0x9d, 0x0f,
+0x71, 0x54, 0x8e, 0xab,
+0x70, 0xe2, 0x8f, 0x1d,
+0xf1, 0x9d, 0x0e, 0x62,
+0xb9, 0xe3, 0x46, 0x1c,
+0x9d, 0xc7, 0x62, 0x38,
+0xe3, 0x63, 0x1c, 0x9c,
+0x70, 0x38, 0x8f, 0xc7,
+0xd4, 0x8f, 0x2b, 0x70,
+0x71, 0x38, 0x8e, 0xc7,
+0x46, 0xc6, 0xb9, 0x39,
+0x71, 0xf0, 0x8e, 0x0f,
+0x2b, 0xf0, 0xd4, 0x0f,
+0x71, 0x2a, 0x8e, 0xd5,
+0x46, 0xe2, 0xb9, 0x1d,
+0xb9, 0xf1, 0x46, 0x0e,
+0xab, 0xe3, 0x54, 0x1c,
+0x2b, 0x2a, 0xd4, 0xd5,
+0xe2, 0x2b, 0x1d, 0xd4,
+0x8e, 0x71, 0x71, 0x8e,
+0xd4, 0xf1, 0x2b, 0x0e,
+0x39, 0x0e, 0xc6, 0xf1,
+0x0e, 0xe2, 0xf1, 0x1d,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x9d, 0xab, 0x62, 0x54,
+0x9d, 0x63, 0x62, 0x9c,
+0xf0, 0x55, 0x0f, 0xaa,
+0xf0, 0x8f, 0x0f, 0x70,
+0x9d, 0x9d, 0x62, 0x62,
+0x55, 0x46, 0xaa, 0xb9,
+0xb8, 0x47, 0x47, 0xb8,
+0x2a, 0x9c, 0xd5, 0x63,
+0x63, 0x54, 0x9c, 0xab,
+0xc6, 0x0f, 0x39, 0xf0,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x47, 0xaa, 0xb8, 0x55,
+0x9d, 0xb9, 0x62, 0x46,
+0xab, 0x55, 0x54, 0xaa,
+0x38, 0x1c, 0xc7, 0xe3,
+0xaa, 0x9d, 0x55, 0x62,
+0xc7, 0x63, 0x38, 0x9c,
+0xaa, 0x8f, 0x55, 0x70,
+0xc7, 0x47, 0x38, 0xb8,
+0x62, 0x8e, 0x9d, 0x71,
+0x47, 0x54, 0xb8, 0xab,
+0x38, 0x8e, 0xc7, 0x71,
+0xe3, 0x9d, 0x1c, 0x62,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x9c, 0x8f, 0x63, 0x70,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x70, 0x46, 0x8f, 0xb9,
+0x9c, 0xb9, 0x63, 0x46,
+0x39, 0x1c, 0xc6, 0xe3,
+0x38, 0xd4, 0xc7, 0x2b,
+0xc7, 0xab, 0x38, 0x54,
+0xc7, 0xb9, 0x38, 0x46,
+0xc7, 0x9d, 0x38, 0x62,
+0x0f, 0x9c, 0xf0, 0x63,
+0x8f, 0x8f, 0x70, 0x70,
+0xd5, 0x8f, 0x2a, 0x70,
+0x71, 0x46, 0x8e, 0xb9,
+0x46, 0xc6, 0xb9, 0x39,
+0x39, 0xd4, 0xc6, 0x2b,
+0x2b, 0xf0, 0xd4, 0x0f,
+0xc7, 0x39, 0x38, 0xc6,
+0x46, 0xaa, 0xb9, 0x55,
+0x0f, 0xf0, 0xf0, 0x0f,
+0xab, 0x9d, 0x54, 0x62,
+0x55, 0x2a, 0xaa, 0xd5,
+0xaa, 0x47, 0x55, 0xb8,
+0xaa, 0x71, 0x55, 0x8e,
+0x62, 0x54, 0x9d, 0xab,
+0x2a, 0x46, 0xd5, 0xb9,
+0xf0, 0x55, 0x0f, 0xaa,
+0x0e, 0x9c, 0xf1, 0x63,
+0x9d, 0xd5, 0x62, 0x2a,
+0xd5, 0x47, 0x2a, 0xb8,
+0xb8, 0x71, 0x47, 0x8e,
+0x46, 0x9c, 0xb9, 0x63,
+0x2b, 0xc6, 0xd4, 0x39,
+0xe3, 0x0f, 0x1c, 0xf0,
+0x0e, 0x38, 0xf1, 0xc7,
+0x54, 0xe2, 0xab, 0x1d,
+0x55, 0x38, 0xaa, 0xc7,
+0xaa, 0x63, 0x55, 0x9c,
+0x62, 0x70, 0x9d, 0x8f,
+0xe2, 0x47, 0x1d, 0xb8,
+0x70, 0x46, 0x8f, 0xb9,
+0x54, 0x9c, 0xab, 0x63,
+0x39, 0x1c, 0xc6, 0xe3,
+0xe2, 0xc7, 0x1d, 0x38,
+0xc7, 0x63, 0x38, 0x9c,
+0x54, 0xb8, 0xab, 0x47,
+0xc7, 0x0f, 0x38, 0xf0,
+0x62, 0x9c, 0x9d, 0x63,
+0x47, 0x62, 0xb8, 0x9d,
+0xf0, 0x8f, 0x0f, 0x70,
+0xab, 0x8f, 0x54, 0x70,
+0x55, 0x0e, 0xaa, 0xf1,
+0x62, 0x46, 0x9d, 0xb9,
+0x2a, 0x62, 0xd5, 0x9d,
+0x38, 0x54, 0xc7, 0xab,
+0x8e, 0x8f, 0x71, 0x70,
+0xc7, 0xd5, 0x38, 0x2a,
+0x71, 0x8e, 0x8e, 0x71,
+0x8f, 0xf1, 0x70, 0x0e,
+0x39, 0x8e, 0xc6, 0x71,
+0x39, 0xe2, 0xc6, 0x1d,
+0x0f, 0xc6, 0xf0, 0x39,
+0x8f, 0xab, 0x70, 0x54,
+0x1d, 0xb8, 0xe2, 0x47,
+0xf1, 0x55, 0x0e, 0xaa,
+0x54, 0xd4, 0xab, 0x2b,
+0x9d, 0x1d, 0x62, 0xe2,
+0xe2, 0x71, 0x1d, 0x8e,
+0xb8, 0x63, 0x47, 0x9c,
+0x1c, 0x8e, 0xe3, 0x71,
+0xe3, 0x0f, 0x1c, 0xf0,
+0x1c, 0x0e, 0xe3, 0xf1,
+0x54, 0x2a, 0xab, 0xd5,
+0x1c, 0x2a, 0xe3, 0xd5,
+0xaa, 0x39, 0x55, 0xc6,
+0x9c, 0x71, 0x63, 0x8e,
+0x2a, 0x38, 0xd5, 0xc7,
+0x38, 0x46, 0xc7, 0xb9,
+0x46, 0xb8, 0xb9, 0x47,
+0x0f, 0xd4, 0xf0, 0x2b,
+0x63, 0x9c, 0x9c, 0x63,
+0xd5, 0x39, 0x2a, 0xc6,
+0xf0, 0x47, 0x0f, 0xb8,
+0x0e, 0xb8, 0xf1, 0x47,
+0x55, 0xd4, 0xaa, 0x2b,
+0x55, 0x54, 0xaa, 0xab,
+0xe2, 0x71, 0x1d, 0x8e,
+0xe2, 0x55, 0x1d, 0xaa,
+0x1c, 0x46, 0xe3, 0xb9,
+0x9c, 0x1d, 0x63, 0xe2,
+0x1c, 0x1c, 0xe3, 0xe3,
+0xb8, 0x2b, 0x47, 0xd4,
+0xd4, 0xab, 0x2b, 0x54,
+0xe3, 0x39, 0x1c, 0xc6,
+0xc6, 0x1d, 0x39, 0xe2,
+0x1c, 0xf0, 0xe3, 0x0f,
+0x8f, 0x2b, 0x70, 0xd4,
+0x54, 0xaa, 0xab, 0x55,
+0xf1, 0x39, 0x0e, 0xc6,
+0xaa, 0xd5, 0x55, 0x2a,
+0x1d, 0x70, 0xe2, 0x8f,
+0xaa, 0x71, 0x55, 0x8e,
+0x54, 0x46, 0xab, 0xb9,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x2a, 0x54, 0xd5, 0xab,
+0x0e, 0x62, 0xf1, 0x9d,
+0xc6, 0xd5, 0x39, 0x2a,
+0x9d, 0xc7, 0x62, 0x38,
+0x8f, 0x71, 0x70, 0x8e,
+0x70, 0xb8, 0x8f, 0x47,
+0x39, 0x8e, 0xc6, 0x71,
+0x71, 0xd4, 0x8e, 0x2b,
+0x0f, 0xc6, 0xf0, 0x39,
+0xf1, 0xb9, 0x0e, 0x46,
+0x1d, 0xf0, 0xe2, 0x0f,
+0x1d, 0x54, 0xe2, 0xab,
+0x54, 0x62, 0xab, 0x9d,
+0xd4, 0x1d, 0x2b, 0xe2,
+0xaa, 0x0f, 0x55, 0xf0,
+0x8e, 0x63, 0x71, 0x9c,
+0x62, 0xe2, 0x9d, 0x1d,
+0xf1, 0x47, 0x0e, 0xb8,
+0xb8, 0xe3, 0x47, 0x1c,
+0x55, 0x9c, 0xaa, 0x63,
+0xe3, 0x63, 0x1c, 0x9c,
+0xe2, 0x0f, 0x1d, 0xf0,
+0xd4, 0x47, 0x2b, 0xb8,
+0x54, 0x2a, 0xab, 0xd5,
+0x46, 0x1c, 0xb9, 0xe3,
+0xaa, 0xf1, 0x55, 0x0e,
+0xe3, 0x63, 0x1c, 0x9c,
+0x2a, 0x2a, 0xd5, 0xd5,
+0xd4, 0x47, 0x2b, 0xb8,
+0x8e, 0x39, 0x71, 0xc6,
+0x46, 0xd4, 0xb9, 0x2b,
+0x39, 0xf0, 0xc6, 0x0f,
+0xe3, 0xf1, 0x1c, 0x0e,
+0x47, 0x2a, 0xb8, 0xd5,
+0x1c, 0xaa, 0xe3, 0x55,
+0xab, 0x39, 0x54, 0xc6,
+0x9c, 0x1d, 0x63, 0xe2,
+0x2a, 0x38, 0xd5, 0xc7,
+0xb8, 0x63, 0x47, 0x9c,
+0x46, 0xb8, 0xb9, 0x47,
+0xe3, 0xc7, 0x1c, 0x38,
+0x63, 0x1c, 0x9c, 0xe3,
+0x54, 0x38, 0xab, 0xc7,
+0xf0, 0x2b, 0x0f, 0xd4,
+0x62, 0xb8, 0x9d, 0x47,
+0xd5, 0x71, 0x2a, 0x8e,
+0x70, 0x54, 0x8f, 0xab,
+0x0e, 0x8e, 0xf1, 0x71,
+0xf1, 0xd5, 0x0e, 0x2a,
+0x1d, 0xc6, 0xe2, 0x39,
+0x9d, 0x71, 0x62, 0x8e,
+0x1c, 0x70, 0xe3, 0x8f,
+0x38, 0x0e, 0xc7, 0xf1,
+0x54, 0x8e, 0xab, 0x71,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x2a, 0x8e, 0xd5, 0x71,
+0x9d, 0x71, 0x62, 0x8e,
+0x0e, 0x46, 0xf1, 0xb9,
+0x38, 0xc6, 0xc7, 0x39,
+0x1d, 0x9c, 0xe2, 0x63,
+0x0f, 0x70, 0xf0, 0x8f,
+0xd4, 0x8f, 0x2b, 0x70,
+0x55, 0x0e, 0xaa, 0xf1,
+0x46, 0x46, 0xb9, 0xb9,
+0x2a, 0xe2, 0xd5, 0x1d,
+0x2b, 0x54, 0xd4, 0xab,
+0x8e, 0x2b, 0x71, 0xd4,
+0xc6, 0xd5, 0x39, 0x2a,
+0xf1, 0xf1, 0x0e, 0x0e,
+0x8f, 0xf1, 0x70, 0x0e,
+0x1d, 0xaa, 0xe2, 0x55,
+0x39, 0x62, 0xc6, 0x9d,
+0x9c, 0xd5, 0x63, 0x2a,
+0x8f, 0x0f, 0x70, 0xf0,
+0xb8, 0xb9, 0x47, 0x46,
+0x71, 0xaa, 0x8e, 0x55,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xb9, 0x1d, 0x46, 0xe2,
+0xc6, 0xf1, 0x39, 0x0e,
+0xab, 0xe3, 0x54, 0x1c,
+0x0f, 0x2a, 0xf0, 0xd5,
+0xe2, 0xab, 0x1d, 0x54,
+0x9d, 0x71, 0x62, 0x8e,
+0xd4, 0x55, 0x2b, 0xaa,
+0x38, 0x0e, 0xc7, 0xf1,
+0x8e, 0x9d, 0x71, 0x62,
+0x0f, 0xe2, 0xf0, 0x1d,
+0xb9, 0x8f, 0x46, 0x70,
+0x9d, 0xe3, 0x62, 0x1c,
+0x63, 0x46, 0x9c, 0xb9,
+0xf0, 0x2b, 0x0f, 0xd4,
+0x38, 0x9c, 0xc7, 0x63,
+0xd5, 0xb9, 0x2a, 0x46,
+0xc7, 0x47, 0x38, 0xb8,
+0x0e, 0x9c, 0xf1, 0x63,
+0x47, 0xd4, 0xb8, 0x2b,
+0xd5, 0x8f, 0x2a, 0x70,
+0xe3, 0x71, 0x1c, 0x8e,
+0x46, 0x0e, 0xb9, 0xf1,
+0x1c, 0xc6, 0xe3, 0x39,
+0x2b, 0x2a, 0xd4, 0xd5,
+0x1c, 0x38, 0xe3, 0xc7,
+0x8e, 0x39, 0x71, 0xc6,
+0x54, 0xf0, 0xab, 0x0f,
+0x39, 0x38, 0xc6, 0xc7,
+0x62, 0xe2, 0x9d, 0x1d,
+0x47, 0x70, 0xb8, 0x8f,
+0xb8, 0xab, 0x47, 0x54,
+0x63, 0x8e, 0x9c, 0x71,
+0xe3, 0x1d, 0x1c, 0xe2,
+0x38, 0x0e, 0xc7, 0xf1,
+0x9c, 0xab, 0x63, 0x54,
+0x0f, 0x2a, 0xf0, 0xd5,
+0xf0, 0x9d, 0x0f, 0x62,
+0x9d, 0xb9, 0x62, 0x46,
+0x9d, 0x47, 0x62, 0xb8,
+0x38, 0x54, 0xc7, 0xab,
+0x70, 0x9c, 0x8f, 0x63,
+0xc7, 0x9d, 0x38, 0x62,
+0xf1, 0x8f, 0x0e, 0x70,
+0x8f, 0xc7, 0x70, 0x38,
+0x55, 0x8e, 0xaa, 0x71,
+0x71, 0x70, 0x8e, 0x8f,
+0x2a, 0xc6, 0xd5, 0x39,
+0x71, 0x46, 0x8e, 0xb9,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x39, 0xd4, 0xc6, 0x2b,
+0x55, 0xe2, 0xaa, 0x1d,
+0xc7, 0x71, 0x38, 0x8e,
+0xaa, 0xab, 0x55, 0x54,
+0x0f, 0x46, 0xf0, 0xb9,
+0xe2, 0x9d, 0x1d, 0x62,
+0x1d, 0x54, 0xe2, 0xab,
+0x9c, 0x47, 0x63, 0xb8,
+0xd4, 0x1d, 0x2b, 0xe2,
+0x70, 0x1c, 0x8f, 0xe3,
+0x8e, 0xab, 0x71, 0x54,
+0xf1, 0xe3, 0x0e, 0x1c,
+0xf1, 0xd5, 0x0e, 0x2a,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x9d, 0x71, 0x62, 0x8e,
+0xc6, 0x63, 0x39, 0x9c,
+0x38, 0xc6, 0xc7, 0x39,
+0xc7, 0x8f, 0x38, 0x70,
+0x0f, 0xb8, 0xf0, 0x47,
+0x47, 0x8e, 0xb8, 0x71,
+0x55, 0x9c, 0xaa, 0x63,
+0x2b, 0x46, 0xd4, 0xb9,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x0e, 0x54, 0xf1, 0xab,
+0x54, 0xe2, 0xab, 0x1d,
+0xd5, 0x1d, 0x2a, 0xe2,
+0xaa, 0x63, 0x55, 0x9c,
+0x8e, 0x63, 0x71, 0x9c,
+0xe2, 0xc7, 0x1d, 0x38,
+0xf1, 0x47, 0x0e, 0xb8,
+0x54, 0xf0, 0xab, 0x0f,
+0x55, 0x1c, 0xaa, 0xe3,
+0x62, 0x62, 0x9d, 0x9d,
+0xe2, 0x63, 0x1d, 0x9c,
+0xb8, 0x47, 0x47, 0xb8,
+0xd4, 0x8f, 0x2b, 0x70,
+0x63, 0x1c, 0x9c, 0xe3,
+0x46, 0x0e, 0xb9, 0xf1,
+0xf0, 0xe3, 0x0f, 0x1c,
+0x2b, 0xaa, 0xd4, 0x55,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x8e, 0x55, 0x71, 0xaa,
+0xc6, 0xf1, 0x39, 0x0e,
+0xb9, 0xd5, 0x46, 0x2a,
+0x0f, 0xe2, 0xf0, 0x1d,
+0xab, 0xb9, 0x54, 0x46,
+0x9d, 0x2b, 0x62, 0xd4,
+0x2a, 0x54, 0xd5, 0xab,
+0xf0, 0x71, 0x0f, 0x8e,
+0xc6, 0x9d, 0x39, 0x62,
+0x1d, 0xc6, 0xe2, 0x39,
+0x8f, 0x47, 0x70, 0xb8,
+0x1c, 0xb8, 0xe3, 0x47,
+0x71, 0x1c, 0x8e, 0xe3,
+0x54, 0xd4, 0xab, 0x2b,
+0xf1, 0x2b, 0x0e, 0xd4,
+0xe2, 0xf1, 0x1d, 0x0e,
+0xd5, 0x71, 0x2a, 0x8e,
+0x1c, 0x62, 0xe3, 0x9d,
+0x0e, 0x0e, 0xf1, 0xf1,
+0x9c, 0xc7, 0x63, 0x38,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x70, 0x70, 0x8f, 0x8f,
+0x9c, 0xb9, 0x63, 0x46,
+0x71, 0x0e, 0x8e, 0xf1,
+0x38, 0xd4, 0xc7, 0x2b,
+0x39, 0xaa, 0xc6, 0x55,
+0xc7, 0xf1, 0x38, 0x0e,
+0x8f, 0x9d, 0x70, 0x62,
+0x0f, 0xaa, 0xf0, 0x55,
+0xb9, 0x8f, 0x46, 0x70,
+0x9d, 0xd5, 0x62, 0x2a,
+0x63, 0x46, 0x9c, 0xb9,
+0xb8, 0x39, 0x47, 0xc6,
+0x38, 0x9c, 0xc7, 0x63,
+0x2b, 0xb8, 0xd4, 0x47,
+0xc7, 0x0f, 0x38, 0xf0,
+0x46, 0x9c, 0xb9, 0x63,
+0x47, 0xe2, 0xb8, 0x1d,
+0xe3, 0x8f, 0x1c, 0x70,
+0xab, 0x2b, 0x54, 0xd4,
+0x54, 0x0e, 0xab, 0xf1,
+0xe2, 0x39, 0x1d, 0xc6,
+0x2a, 0x62, 0xd5, 0x9d,
+0x1c, 0x70, 0xe3, 0x8f,
+0x8e, 0x0f, 0x71, 0xf0,
+0x54, 0xc6, 0xab, 0x39,
+0x71, 0x2a, 0x8e, 0xd5,
+0x2a, 0xf0, 0xd5, 0x0f,
+0xb9, 0x71, 0x46, 0x8e,
+0x46, 0xe2, 0xb9, 0x1d,
+0x2b, 0xc6, 0xd4, 0x39,
+0xab, 0x2b, 0x54, 0xd4,
+0x0e, 0x38, 0xf1, 0xc7,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x55, 0x70, 0xaa, 0x8f,
+0x1c, 0x62, 0xe3, 0x9d,
+0x62, 0x0e, 0x9d, 0xf1,
+0x9c, 0x47, 0x63, 0xb8,
+0x38, 0x2a, 0xc7, 0xd5,
+0x70, 0x9c, 0x8f, 0x63,
+0x8f, 0xb9, 0x70, 0x46,
+0xf1, 0x8f, 0x0e, 0x70,
+0x39, 0xd4, 0xc6, 0x2b,
+0x55, 0xc6, 0xaa, 0x39,
+0xc7, 0x71, 0x38, 0x8e,
+0x2a, 0xb8, 0xd5, 0x47,
+0x0f, 0x46, 0xf0, 0xb9,
+0x46, 0x9c, 0xb9, 0x63,
+0x1d, 0xd4, 0xe2, 0x2b,
+0xe3, 0x47, 0x1c, 0xb8,
+0xd4, 0x39, 0x2b, 0xc6,
+0x54, 0x1c, 0xab, 0xe3,
+0x0e, 0x38, 0xf1, 0xc7,
+0xe2, 0xe3, 0x1d, 0x1c,
+0x55, 0x70, 0xaa, 0x8f,
+0xd4, 0x63, 0x2b, 0x9c,
+0x62, 0x0e, 0x9d, 0xf1,
+0xc6, 0x47, 0x39, 0xb8,
+0x38, 0xe2, 0xc7, 0x1d,
+0x47, 0x9c, 0xb8, 0x63,
+0x8f, 0xab, 0x70, 0x54,
+0xe3, 0x8f, 0x1c, 0x70,
+0xf1, 0x1d, 0x0e, 0xe2,
+0x54, 0xc6, 0xab, 0x39,
+0x9d, 0x2b, 0x62, 0xd4,
+0x2a, 0x70, 0xd5, 0x8f,
+0xf0, 0x71, 0x0f, 0x8e,
+0x46, 0x8e, 0xb9, 0x71,
+0x1d, 0xc6, 0xe2, 0x39,
+0x2b, 0x46, 0xd4, 0xb9,
+0x1c, 0x38, 0xe3, 0xc7,
+0x0e, 0x1c, 0xf1, 0xe3,
+0x54, 0xf0, 0xab, 0x0f,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x62, 0x62, 0x9d, 0x9d,
+0xc6, 0x71, 0x39, 0x8e,
+0xb8, 0xc7, 0x47, 0x38,
+0x0f, 0x8e, 0xf0, 0x71,
+0x63, 0xb8, 0x9c, 0x47,
+0x1d, 0x0e, 0xe2, 0xf1,
+0x70, 0x54, 0x8f, 0xab,
+0x1c, 0xaa, 0xe3, 0x55,
+0xf1, 0x1d, 0x0e, 0xe2,
+0x9c, 0xd5, 0x63, 0x2a,
+0x9d, 0x2b, 0x62, 0xd4,
+0xb8, 0x71, 0x47, 0x8e,
+0xf0, 0xb9, 0x0f, 0x46,
+0x2b, 0x8e, 0xd4, 0x71,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x0e, 0x46, 0xf1, 0xb9,
+0xd4, 0xe3, 0x2b, 0x1c,
+0x1d, 0x1c, 0xe2, 0xe3,
+0xc6, 0x63, 0x39, 0x9c,
+0xd4, 0xe3, 0x2b, 0x1c,
+0xc7, 0x0f, 0x38, 0xf0,
+0xc6, 0xab, 0x39, 0x54,
+0x47, 0xe2, 0xb8, 0x1d,
+0xc7, 0x9d, 0x38, 0x62,
+0xab, 0xab, 0x54, 0x54,
+0x8f, 0x0f, 0x70, 0xf0,
+0xe2, 0x9d, 0x1d, 0x62,
+0x71, 0x62, 0x8e, 0x9d,
+0x9c, 0xc7, 0x63, 0x38,
+0xb9, 0x0f, 0x46, 0xf0,
+0x70, 0xf0, 0x8f, 0x0f,
+0x63, 0xaa, 0x9c, 0x55,
+0x71, 0x2a, 0x8e, 0xd5,
+0xb8, 0xd5, 0x47, 0x2a,
+0xb9, 0xb9, 0x46, 0x46,
+0xab, 0xf1, 0x54, 0x0e,
+0x2b, 0x1c, 0xd4, 0xe3,
+0x2a, 0x2a, 0xd5, 0xd5,
+0xc6, 0x63, 0x39, 0x9c,
+0x8e, 0xf1, 0x71, 0x0e,
+0xc7, 0xc7, 0x38, 0x38,
+0x39, 0xaa, 0xc6, 0x55,
+0x47, 0xf0, 0xb8, 0x0f,
+0x8f, 0x9d, 0x70, 0x62,
+0x63, 0xaa, 0x9c, 0x55,
+0xb9, 0x0f, 0x46, 0xf0,
+0xb8, 0xd5, 0x47, 0x2a,
+0x63, 0xaa, 0x9c, 0x55,
+0xab, 0x39, 0x54, 0xc6,
+0xb8, 0x1d, 0x47, 0xe2,
+0x2a, 0xb8, 0xd5, 0x47,
+0xab, 0x63, 0x54, 0x9c,
+0x46, 0x1c, 0xb9, 0xe3,
+0xe2, 0xc7, 0x1d, 0x38,
+0xe3, 0x63, 0x1c, 0x9c,
+0x54, 0x38, 0xab, 0xc7,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x62, 0x38, 0x9d, 0xc7,
+0x46, 0x62, 0xb9, 0x9d,
+0x70, 0xf0, 0x8f, 0x0f,
+0xab, 0x8f, 0x54, 0x70,
+0x71, 0x2a, 0x8e, 0xd5,
+0x62, 0xc6, 0x9d, 0x39,
+0xb9, 0x71, 0x46, 0x8e,
+0x38, 0xf0, 0xc7, 0x0f,
+0x2b, 0x8e, 0xd4, 0x71,
+0x47, 0x2a, 0xb8, 0xd5,
+0x0e, 0x8e, 0xf1, 0x71,
+0xab, 0xf1, 0x54, 0x0e,
+0x1d, 0x0e, 0xe2, 0xf1,
+0x2a, 0x62, 0xd5, 0x9d,
+0x1c, 0x62, 0xe3, 0x9d,
+0x8e, 0x0f, 0x71, 0xf0,
+0x9c, 0xc7, 0x63, 0x38,
+0x71, 0x2a, 0x8e, 0xd5,
+0x70, 0xf0, 0x8f, 0x0f,
+0xb9, 0xb9, 0x46, 0x46,
+0x71, 0xe2, 0x8e, 0x1d,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xb9, 0x2b, 0x46, 0xd4,
+0xc6, 0xf1, 0x39, 0x0e,
+0xe3, 0xf1, 0x1c, 0x0e,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x1c, 0xaa, 0xe3, 0x55,
+0x9d, 0x39, 0x62, 0xc6,
+0x9c, 0x55, 0x63, 0xaa,
+0x38, 0x38, 0xc7, 0xc7,
+0xb8, 0x9d, 0x47, 0x62,
+0x47, 0xb8, 0xb8, 0x47,
+0xab, 0x8f, 0x54, 0x70,
+0x63, 0x1c, 0x9c, 0xe3,
+0x62, 0x0e, 0x9d, 0xf1,
+0xf0, 0x63, 0x0f, 0x9c,
+0x38, 0xaa, 0xc7, 0x55,
+0xd5, 0x8f, 0x2a, 0x70,
+0x8f, 0x55, 0x70, 0xaa,
+0x46, 0x8e, 0xb9, 0x71,
+0xb9, 0xd5, 0x46, 0x2a,
+0x2b, 0xc6, 0xd4, 0x39,
+0xab, 0x39, 0x54, 0xc6,
+0x0e, 0x38, 0xf1, 0xc7,
+0x2a, 0xf0, 0xd5, 0x0f,
+0x55, 0x70, 0xaa, 0x8f,
+0x46, 0x62, 0xb9, 0x9d,
+0x62, 0xc6, 0x9d, 0x39,
+0xab, 0x47, 0x54, 0xb8,
+0x38, 0x38, 0xc7, 0xc7,
+0x62, 0x9c, 0x9d, 0x63,
+0x47, 0x70, 0xb8, 0x8f,
+0xf0, 0x8f, 0x0f, 0x70,
+0x63, 0x8e, 0x9c, 0x71,
+0x55, 0x0e, 0xaa, 0xf1,
+0x38, 0x46, 0xc7, 0xb9,
+0x2a, 0xaa, 0xd5, 0x55,
+0x0f, 0x54, 0xf0, 0xab,
+0x8e, 0x9d, 0x71, 0x62,
+0xd5, 0xd5, 0x2a, 0x2a,
+0xb9, 0x47, 0x46, 0xb8,
+0x8e, 0xf1, 0x71, 0x0e,
+0x63, 0xd4, 0x9c, 0x2b,
+0x39, 0x2a, 0xc6, 0xd5,
+0xf0, 0xf1, 0x0f, 0x0e,
+0x8f, 0xb9, 0x70, 0x46,
+0x1d, 0xaa, 0xe2, 0x55,
+0x39, 0x54, 0xc6, 0xab,
+0x9c, 0xd5, 0x63, 0x2a,
+0xc7, 0x1d, 0x38, 0xe2,
+0xb8, 0xb9, 0x47, 0x46,
+0x8f, 0xab, 0x70, 0x54,
+0x2b, 0x9c, 0xd4, 0x63,
+0xf1, 0x1d, 0x0e, 0xe2,
+0xc6, 0xc7, 0x39, 0x38,
+0x9d, 0xe3, 0x62, 0x1c,
+0x47, 0x70, 0xb8, 0x8f,
+0xf0, 0xab, 0x0f, 0x54,
+0x63, 0x8e, 0x9c, 0x71,
+0xd5, 0x1d, 0x2a, 0xe2,
+0x38, 0x46, 0xc7, 0xb9,
+0x8e, 0xab, 0x71, 0x54,
+0x0f, 0xd4, 0xf0, 0x2b,
+0xf1, 0x9d, 0x0e, 0x62,
+0xd5, 0xf1, 0x2a, 0x0e,
+0x9d, 0x47, 0x62, 0xb8,
+0x0e, 0x62, 0xf1, 0x9d,
+0x70, 0xd4, 0x8f, 0x2b,
+0x9d, 0x8f, 0x62, 0x70,
+0xf1, 0x71, 0x0e, 0x8e,
+0x70, 0xc6, 0x8f, 0x39,
+0x1d, 0x8e, 0xe2, 0x71,
+0x39, 0x70, 0xc6, 0x8f,
+0x1c, 0xc6, 0xe3, 0x39,
+0x47, 0x0e, 0xb8, 0xf1,
+0x1c, 0xb8, 0xe3, 0x47,
+0x2b, 0x2a, 0xd4, 0xd5,
+0x54, 0x1c, 0xab, 0xe3,
+0x8e, 0x39, 0x71, 0xc6,
+0xe2, 0xe3, 0x1d, 0x1c,
+0x39, 0x70, 0xc6, 0x8f,
+0xd4, 0xe3, 0x2b, 0x1c,
+0x47, 0x0e, 0xb8, 0xf1,
+0xc6, 0xab, 0x39, 0x54,
+0x2b, 0xe2, 0xd4, 0x1d,
+0xc7, 0x1d, 0x38, 0xe2,
+0x8e, 0xab, 0x71, 0x54,
+0x8f, 0xe3, 0x70, 0x1c,
+0xf1, 0x9d, 0x0e, 0x62,
+0xf1, 0xe3, 0x0e, 0x1c,
+0x9d, 0xc7, 0x62, 0x38,
+0xd5, 0x63, 0x2a, 0x9c,
+0x70, 0x70, 0x8f, 0x8f,
+0xc6, 0x8f, 0x39, 0x70,
+0x71, 0xc6, 0x8e, 0x39,
+0x47, 0xc6, 0xb8, 0x39,
+0x39, 0xb8, 0xc6, 0x47,
+0x2b, 0xf0, 0xd4, 0x0f,
+0x47, 0x1c, 0xb8, 0xe3,
+0x46, 0xaa, 0xb9, 0x55,
+0xe3, 0xe3, 0x1c, 0x1c,
+0xab, 0x1d, 0x54, 0xe2,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xaa, 0x2b, 0x55, 0xd4,
+0xc6, 0x71, 0x39, 0x8e,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x0f, 0x46, 0xf0, 0xb9,
+0x1c, 0xaa, 0xe3, 0x55,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x9c, 0x55, 0x63, 0xaa,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xb8, 0x1d, 0x47, 0xe2,
+0xc6, 0xb9, 0x39, 0x46,
+0xab, 0xe3, 0x54, 0x1c,
+0x0f, 0x1c, 0xf0, 0xe3,
+0xe2, 0xab, 0x1d, 0x54,
+0xd5, 0x63, 0x2a, 0x9c,
+0xd4, 0x55, 0x2b, 0xaa,
+0xc6, 0x0f, 0x39, 0xf0,
+0x8e, 0xd5, 0x71, 0x2a,
+0x47, 0xe2, 0xb8, 0x1d,
+0xb9, 0xb9, 0x46, 0x46,
+0xab, 0xe3, 0x54, 0x1c,
+0x2b, 0x1c, 0xd4, 0xe3,
+0xe2, 0x2b, 0x1d, 0xd4,
+0xc6, 0x63, 0x39, 0x9c,
+0xd4, 0xf1, 0x2b, 0x0e,
+0xc7, 0x0f, 0x38, 0xf0,
+0x0e, 0xaa, 0xf1, 0x55,
+0x47, 0xe2, 0xb8, 0x1d,
+0x9d, 0x9d, 0x62, 0x62,
+0xab, 0x63, 0x54, 0x9c,
+0xb8, 0x0f, 0x47, 0xf0,
+0xe2, 0x8f, 0x1d, 0x70,
+0x63, 0x62, 0x9c, 0x9d,
+0x54, 0x0e, 0xab, 0xf1,
+0xb8, 0x0f, 0x47, 0xf0,
+0x2a, 0xaa, 0xd5, 0x55,
+0x63, 0x62, 0x9c, 0x9d,
+0x8e, 0x1d, 0x71, 0xe2,
+0xb8, 0xc7, 0x47, 0x38,
+0xb9, 0xab, 0x46, 0x54,
+0x63, 0xf0, 0x9c, 0x0f,
+0xe3, 0x1d, 0x1c, 0xe2,
+0x70, 0x2a, 0x8f, 0xd5,
+0x9c, 0xab, 0x63, 0x54,
+0xb9, 0x39, 0x46, 0xc6,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x2b, 0xb8, 0xd4, 0x47,
+0x9d, 0x39, 0x62, 0xc6,
+0x46, 0x54, 0xb9, 0xab,
+0x38, 0xf0, 0xc7, 0x0f,
+0xe3, 0x9d, 0x1c, 0x62,
+0x47, 0x2a, 0xb8, 0xd5,
+0x9c, 0x8f, 0x63, 0x70,
+0xab, 0x39, 0x54, 0xc6,
+0x70, 0x0e, 0x8f, 0xf1,
+0x2a, 0xb8, 0xd5, 0x47,
+0x39, 0x62, 0xc6, 0x9d,
+0x46, 0xd4, 0xb9, 0x2b,
+0x8f, 0xc7, 0x70, 0x38,
+0xe3, 0xb9, 0x1c, 0x46,
+0x71, 0x38, 0x8e, 0xc7,
+0x1c, 0xd4, 0xe3, 0x2b,
+0x71, 0x38, 0x8e, 0xc7,
+0xd4, 0xf1, 0x2b, 0x0e,
+0x71, 0x38, 0x8e, 0xc7,
+0x0e, 0xe2, 0xf1, 0x1d,
+0x71, 0xf0, 0x8e, 0x0f,
+0x9d, 0xe3, 0x62, 0x1c,
+0x71, 0x62, 0x8e, 0x9d,
+0xf0, 0xe3, 0x0f, 0x1c,
+0xb9, 0x8f, 0x46, 0x70,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x63, 0x46, 0x9c, 0xb9,
+0xc6, 0x2b, 0x39, 0xd4,
+0x38, 0xd4, 0xc7, 0x2b,
+0xc7, 0xb9, 0x38, 0x46,
+0xc7, 0xb9, 0x38, 0x46,
+0x0f, 0x9c, 0xf0, 0x63,
+0x0f, 0x9c, 0xf0, 0x63,
+0xd5, 0x8f, 0x2a, 0x70,
+0xd5, 0x47, 0x2a, 0xb8,
+0x46, 0x46, 0xb9, 0xb9,
+0x46, 0xd4, 0xb9, 0x2b,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xe3, 0x39, 0x1c, 0xc6,
+0xc6, 0x39, 0x39, 0xc6,
+0x1c, 0xf0, 0xe3, 0x0f,
+0x0f, 0x38, 0xf0, 0xc7,
+0x54, 0xaa, 0xab, 0x55,
+0x55, 0x38, 0xaa, 0xc7,
+0xaa, 0x55, 0x55, 0xaa,
+0x62, 0x70, 0x9d, 0x8f,
+0xaa, 0x55, 0x55, 0xaa,
+0x70, 0x46, 0x8f, 0xb9,
+0xaa, 0x9d, 0x55, 0x62,
+0x39, 0x54, 0xc6, 0xab,
+0xaa, 0xc7, 0x55, 0x38,
+0xc7, 0x55, 0x38, 0xaa,
+0x62, 0xb8, 0x9d, 0x47,
+0x8f, 0x55, 0x70, 0xaa,
+0x70, 0x9c, 0x8f, 0x63,
+0xb9, 0x9d, 0x46, 0x62,
+0xf1, 0xc7, 0x0e, 0x38,
+0xab, 0xc7, 0x54, 0x38,
+0x55, 0x38, 0xaa, 0xc7,
+0x62, 0x70, 0x9d, 0x8f,
+0x62, 0x70, 0x9d, 0x8f,
+0x70, 0x46, 0x8f, 0xb9,
+0x70, 0x8e, 0x8f, 0x71,
+0x39, 0x9c, 0xc6, 0x63,
+0x39, 0xc6, 0xc6, 0x39,
+0xc7, 0xc7, 0x38, 0x38,
+0x0f, 0xb8, 0xf0, 0x47,
+0x47, 0xb8, 0xb8, 0x47,
+0x55, 0x9c, 0xaa, 0x63,
+0x63, 0x54, 0x9c, 0xab,
+0xe2, 0x0f, 0x1d, 0xf0,
+0xf0, 0x55, 0x0f, 0xaa,
+0x54, 0xaa, 0xab, 0x55,
+0x9d, 0x1d, 0x62, 0xe2,
+0xaa, 0x55, 0x55, 0xaa,
+0xb8, 0x63, 0x47, 0x9c,
+0xaa, 0x9d, 0x55, 0x62,
+0xe3, 0x47, 0x1c, 0xb8,
+0xaa, 0x0f, 0x55, 0xf0,
+0x54, 0x54, 0xab, 0xab,
+0x62, 0x2a, 0x9d, 0xd5,
+0xe2, 0x55, 0x1d, 0xaa,
+0xb8, 0x71, 0x47, 0x8e,
+0x9c, 0x9d, 0x63, 0x62,
+0x2b, 0x0e, 0xd4, 0xf1,
+0xb8, 0x0f, 0x47, 0xf0,
+0x0e, 0xaa, 0xf1, 0x55,
+0x63, 0xe2, 0x9c, 0x1d,
+0x9d, 0x1d, 0x62, 0xe2,
+0xb8, 0x63, 0x47, 0x9c,
+0xb8, 0xab, 0x47, 0x54,
+0xe3, 0x8f, 0x1c, 0x70,
+0xe3, 0x1d, 0x1c, 0xe2,
+0x54, 0x0e, 0xab, 0xf1,
+0x9c, 0x2b, 0x63, 0xd4,
+0x2a, 0x2a, 0xd5, 0xd5,
+0xf0, 0x71, 0x0f, 0x8e,
+0x8e, 0xb9, 0x71, 0x46,
+0x1d, 0xc6, 0xe2, 0x39,
+0x39, 0x54, 0xc6, 0xab,
+0x1c, 0xf0, 0xe3, 0x0f,
+0xc7, 0x1d, 0x38, 0xe2,
+0x54, 0xaa, 0xab, 0x55,
+0x8f, 0x2b, 0x70, 0xd4,
+0xaa, 0x9d, 0x55, 0x62,
+0xf1, 0x71, 0x0e, 0x8e,
+0xaa, 0xc7, 0x55, 0x38,
+0x1d, 0x46, 0xe2, 0xb9,
+0x62, 0x70, 0x9d, 0x8f,
+0x1c, 0x54, 0xe3, 0xab,
+0x70, 0x0e, 0x8f, 0xf1,
+0xd4, 0x9d, 0x2b, 0x62,
+0x39, 0x2a, 0xc6, 0xd5,
+0x8e, 0xc7, 0x71, 0x38,
+0x8f, 0xf1, 0x70, 0x0e,
+0x71, 0xb8, 0x8e, 0x47,
+0x39, 0xe2, 0xc6, 0x1d,
+0x71, 0xd4, 0x8e, 0x2b,
+0x8f, 0xe3, 0x70, 0x1c,
+0xf1, 0xb9, 0x0e, 0x46,
+0xf1, 0xe3, 0x0e, 0x1c,
+0x1d, 0xd4, 0xe2, 0x2b,
+0xd5, 0x63, 0x2a, 0x9c,
+0xd4, 0x71, 0x2b, 0x8e,
+0xc6, 0x0f, 0x39, 0xf0,
+0x0e, 0xc6, 0xf1, 0x39,
+0x47, 0xe2, 0xb8, 0x1d,
+0x1d, 0xb8, 0xe2, 0x47,
+0xab, 0x63, 0x54, 0x9c,
+0x54, 0x1c, 0xab, 0xe3,
+0xe2, 0x0f, 0x1d, 0xf0,
+0xe2, 0x63, 0x1d, 0x9c,
+0x54, 0x62, 0xab, 0x9d,
+0xd4, 0x0f, 0x2b, 0xf0,
+0xaa, 0x0f, 0x55, 0xf0,
+0x46, 0x62, 0xb9, 0x9d,
+0x62, 0xe2, 0x9d, 0x1d,
+0xab, 0x47, 0x54, 0xb8,
+0xb8, 0x2b, 0x47, 0xd4,
+0x62, 0x9c, 0x9d, 0x63,
+0xe3, 0x71, 0x1c, 0x8e,
+0xf0, 0x0f, 0x0f, 0xf0,
+0x1c, 0x8e, 0xe3, 0x71,
+0x55, 0x2a, 0xaa, 0xd5,
+0x1c, 0x46, 0xe3, 0xb9,
+0xaa, 0x39, 0x55, 0xc6,
+0x1c, 0x54, 0xe3, 0xab,
+0x2a, 0x38, 0xd5, 0xc7,
+0xd4, 0x55, 0x2b, 0xaa,
+0x46, 0x38, 0xb9, 0xc7,
+0x8e, 0xd5, 0x71, 0x2a,
+0x63, 0xf0, 0x9c, 0x0f,
+0xb9, 0x39, 0x46, 0xc6,
+0x70, 0xe2, 0x8f, 0x1d,
+0x2b, 0xb8, 0xd4, 0x47,
+0xb9, 0x2b, 0x46, 0xd4,
+0x46, 0xd4, 0xb9, 0x2b,
+0xe3, 0xf1, 0x1c, 0x0e,
+0xe3, 0x39, 0x1c, 0xc6,
+0x1c, 0x2a, 0xe3, 0xd5,
+0x1c, 0x38, 0xe3, 0xc7,
+0x9c, 0x39, 0x63, 0xc6,
+0x54, 0x38, 0xab, 0xc7,
+0x38, 0x38, 0xc7, 0xc7,
+0x62, 0xb8, 0x9d, 0x47,
+0x47, 0x70, 0xb8, 0x8f,
+0x70, 0x9c, 0x8f, 0x63,
+0x63, 0x8e, 0x9c, 0x71,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x38, 0xc6, 0xc7, 0x39,
+0x55, 0xaa, 0xaa, 0x55,
+0x0f, 0x70, 0xf0, 0x8f,
+0xaa, 0x9d, 0x55, 0x62,
+0x55, 0x46, 0xaa, 0xb9,
+0xaa, 0x47, 0x55, 0xb8,
+0x2a, 0x54, 0xd5, 0xab,
+0x62, 0x54, 0x9d, 0xab,
+0xc6, 0x55, 0x39, 0xaa,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x8f, 0x9d, 0x70, 0x62,
+0x9d, 0xb9, 0x62, 0x46,
+0xb9, 0x47, 0x46, 0xb8,
+0x38, 0xd4, 0xc7, 0x2b,
+0x63, 0x9c, 0x9c, 0x63,
+0xc7, 0x39, 0x38, 0xc6,
+0xf0, 0x8f, 0x0f, 0x70,
+0x0f, 0xb8, 0xf0, 0x47,
+0x55, 0x8e, 0xaa, 0x71,
+0x55, 0x54, 0xaa, 0xab,
+0x2a, 0x46, 0xd5, 0xb9,
+0xe2, 0x55, 0x1d, 0xaa,
+0x0e, 0x54, 0xf1, 0xab,
+0x9c, 0xd5, 0x63, 0x2a,
+0xd5, 0x1d, 0x2a, 0xe2,
+0xb8, 0x71, 0x47, 0x8e,
+0x8e, 0xab, 0x71, 0x54,
+0x2b, 0xc6, 0xd4, 0x39,
+0xf1, 0x1d, 0x0e, 0xe2,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x9d, 0xe3, 0x62, 0x1c,
+0x55, 0x62, 0xaa, 0x9d,
+0xf0, 0x63, 0x0f, 0x9c,
+0xaa, 0x8f, 0x55, 0x70,
+0xd5, 0x47, 0x2a, 0xb8,
+0x62, 0x46, 0x9d, 0xb9,
+0x46, 0x54, 0xb9, 0xab,
+0x38, 0xd4, 0xc7, 0x2b,
+0xe3, 0x9d, 0x1c, 0x62,
+0xc7, 0x39, 0x38, 0xc6,
+0x9c, 0x8f, 0x63, 0x70,
+0x0f, 0x38, 0xf0, 0xc7,
+0x70, 0x8e, 0x8f, 0x71,
+0x55, 0xb8, 0xaa, 0x47,
+0x39, 0x46, 0xc6, 0xb9,
+0x62, 0xd4, 0x9d, 0x2b,
+0x0f, 0x54, 0xf0, 0xab,
+0xf0, 0xb9, 0x0f, 0x46,
+0xd5, 0x9d, 0x2a, 0x62,
+0x1d, 0x54, 0xe2, 0xab,
+0x8e, 0x47, 0x71, 0xb8,
+0xd4, 0xd5, 0x2b, 0x2a,
+0x71, 0x1c, 0x8e, 0xe3,
+0x8e, 0xf1, 0x71, 0x0e,
+0xf1, 0xe3, 0x0e, 0x1c,
+0x39, 0xe2, 0xc6, 0x1d,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x8f, 0x63, 0x70, 0x9c,
+0xc6, 0xab, 0x39, 0x54,
+0xf1, 0xc7, 0x0e, 0x38,
+0xc7, 0xd5, 0x38, 0x2a,
+0x55, 0xb8, 0xaa, 0x47,
+0x8f, 0x71, 0x70, 0x8e,
+0x62, 0x9c, 0x9d, 0x63,
+0x39, 0x46, 0xc6, 0xb9,
+0xf0, 0xc7, 0x0f, 0x38,
+0x0f, 0x9c, 0xf0, 0x63,
+0x55, 0xb8, 0xaa, 0x47,
+0xd5, 0x47, 0x2a, 0xb8,
+0x62, 0x54, 0x9d, 0xab,
+0x46, 0x54, 0xb9, 0xab,
+0xf0, 0xd5, 0x0f, 0x2a,
+0xe3, 0x9d, 0x1c, 0x62,
+0x9d, 0x39, 0x62, 0xc6,
+0x9c, 0x47, 0x63, 0xb8,
+0x38, 0x38, 0xc7, 0xc7,
+0x70, 0x9c, 0x8f, 0x63,
+0x47, 0xb8, 0xb8, 0x47,
+0xf1, 0x8f, 0x0e, 0x70,
+0x63, 0xd4, 0x9c, 0x2b,
+0x55, 0x0e, 0xaa, 0xf1,
+0xf0, 0x71, 0x0f, 0x8e,
+0x2a, 0xaa, 0xd5, 0x55,
+0x1d, 0x46, 0xe2, 0xb9,
+0x8e, 0x55, 0x71, 0xaa,
+0x1c, 0xd4, 0xe3, 0x2b,
+0xb9, 0x1d, 0x46, 0xe2,
+0xd4, 0xf1, 0x2b, 0x0e,
+0xab, 0x2b, 0x54, 0xd4,
+0x0e, 0x2a, 0xf1, 0xd5,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x9d, 0x71, 0x62, 0x8e,
+0x1c, 0x62, 0xe3, 0x9d,
+0x38, 0x0e, 0xc7, 0xf1,
+0x9c, 0x8f, 0x63, 0x70,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x70, 0x8e, 0x8f, 0x71,
+0x9d, 0xb9, 0x62, 0x46,
+0x39, 0x46, 0xc6, 0xb9,
+0x38, 0xd4, 0xc7, 0x2b,
+0x0f, 0x9c, 0xf0, 0x63,
+0xc7, 0xb9, 0x38, 0x46,
+0xd5, 0x8f, 0x2a, 0x70,
+0x0f, 0x54, 0xf0, 0xab,
+0x46, 0x8e, 0xb9, 0x71,
+0xd5, 0xd5, 0x2a, 0x2a,
+0x2b, 0x46, 0xd4, 0xb9,
+0x8e, 0x39, 0x71, 0xc6,
+0x0e, 0xd4, 0xf1, 0x2b,
+0x39, 0xf0, 0xc6, 0x0f,
+0xd5, 0xf1, 0x2a, 0x0e,
+0x47, 0x62, 0xb8, 0x9d,
+0x0e, 0xaa, 0xf1, 0x55,
+0xab, 0xc7, 0x54, 0x38,
+0x9d, 0x1d, 0x62, 0xe2,
+0x62, 0x70, 0x9d, 0x8f,
+0xb8, 0x63, 0x47, 0x9c,
+0x70, 0x8e, 0x8f, 0x71,
+0xe3, 0x8f, 0x1c, 0x70,
+0x39, 0x0e, 0xc6, 0xf1,
+0x54, 0xc6, 0xab, 0x39,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x2a, 0xb8, 0xd5, 0x47,
+0x9d, 0x71, 0x62, 0x8e,
+0x46, 0x54, 0xb9, 0xab,
+0x38, 0xc6, 0xc7, 0x39,
+0xe3, 0x9d, 0x1c, 0x62,
+0x0f, 0x38, 0xf0, 0xc7,
+0x9c, 0x8f, 0x63, 0x70,
+0x55, 0x38, 0xaa, 0xc7,
+0x70, 0x46, 0x8f, 0xb9,
+0x62, 0xb8, 0x9d, 0x47,
+0x39, 0x54, 0xc6, 0xab,
+0x70, 0xd4, 0x8f, 0x2b,
+0xc7, 0x9d, 0x38, 0x62,
+0xf1, 0xb9, 0x0e, 0x46,
+0x8f, 0xc7, 0x70, 0x38,
+0x1d, 0x9c, 0xe2, 0x63,
+0x71, 0x70, 0x8e, 0x8f,
+0xd4, 0xc7, 0x2b, 0x38,
+0x71, 0x0e, 0x8e, 0xf1,
+0x46, 0xf0, 0xb9, 0x0f,
+0x39, 0xe2, 0xc6, 0x1d,
+0x63, 0xe2, 0x9c, 0x1d,
+0x8f, 0x2b, 0x70, 0xd4,
+0xb8, 0xab, 0x47, 0x54,
+0xf1, 0xb9, 0x0e, 0x46,
+0xe3, 0xd5, 0x1c, 0x2a,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x9c, 0x71, 0x63, 0x8e,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x38, 0x0e, 0xc7, 0xf1,
+0xc6, 0xb9, 0x39, 0x46,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x0f, 0x9c, 0xf0, 0x63,
+0x9d, 0xab, 0x62, 0x54,
+0xd5, 0x47, 0x2a, 0xb8,
+0xf0, 0x55, 0x0f, 0xaa,
+0x46, 0x9c, 0xb9, 0x63,
+0x9d, 0xd5, 0x62, 0x2a,
+0xe3, 0x47, 0x1c, 0xb8,
+0xb8, 0x39, 0x47, 0xc6,
+0x54, 0x9c, 0xab, 0x63,
+0x2b, 0x38, 0xd4, 0xc7,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x46, 0x70, 0xb9, 0x8f,
+0x54, 0xe2, 0xab, 0x1d,
+0x63, 0x0e, 0x9c, 0xf1,
+0xaa, 0x2b, 0x55, 0xd4,
+0x38, 0x62, 0xc7, 0x9d,
+0xe2, 0xb9, 0x1d, 0x46,
+0x8f, 0x47, 0x70, 0xb8,
+0x1c, 0x9c, 0xe3, 0x63,
+0x71, 0x1c, 0x8e, 0xe3,
+0xd4, 0xc7, 0x2b, 0x38,
+0xf1, 0x2b, 0x0e, 0xd4,
+0x46, 0xf0, 0xb9, 0x0f,
+0xd5, 0xf1, 0x2a, 0x0e,
+0x63, 0x62, 0x9c, 0x9d,
+0x0e, 0x2a, 0xf1, 0xd5,
+0xb8, 0xc7, 0x47, 0x38,
+0x9d, 0xb9, 0x62, 0x46,
+0x63, 0x70, 0x9c, 0x8f,
+0x38, 0x1c, 0xc7, 0xe3,
+0x70, 0x8e, 0x8f, 0x71,
+0xc7, 0xab, 0x38, 0x54,
+0x39, 0x8e, 0xc6, 0x71,
+0xc7, 0xd5, 0x38, 0x2a,
+0x0f, 0x8e, 0xf0, 0x71,
+0x8f, 0xb9, 0x70, 0x46,
+0x1d, 0x8e, 0xe2, 0x71,
+0x39, 0x54, 0xc6, 0xab,
+0x1c, 0xc6, 0xe3, 0x39,
+0xc7, 0x1d, 0x38, 0xe2,
+0x1c, 0xb8, 0xe3, 0x47,
+0x8f, 0x2b, 0x70, 0xd4,
+0x54, 0x9c, 0xab, 0x63,
+0xf1, 0x39, 0x0e, 0xc6,
+0xe2, 0xc7, 0x1d, 0x38,
+0x1d, 0x70, 0xe2, 0x8f,
+0x54, 0x70, 0xab, 0x8f,
+0x54, 0x0e, 0xab, 0xf1,
+0x62, 0x0e, 0x9d, 0xf1,
+0x2a, 0x62, 0xd5, 0x9d,
+0x38, 0x62, 0xc7, 0x9d,
+0x8e, 0x8f, 0x71, 0x70,
+0x8f, 0xc7, 0x70, 0x38,
+0x71, 0x8e, 0x8e, 0x71,
+0x71, 0xf0, 0x8e, 0x0f,
+0x39, 0xc6, 0xc6, 0x39,
+0x71, 0xe2, 0x8e, 0x1d,
+0x0f, 0xf0, 0xf0, 0x0f,
+0xb9, 0xab, 0x46, 0x54,
+0x55, 0xe2, 0xaa, 0x1d,
+0xe3, 0x55, 0x1c, 0xaa,
+0xaa, 0x2b, 0x55, 0xd4,
+0x9c, 0x55, 0x63, 0xaa,
+0xe2, 0x39, 0x1d, 0xc6,
+0xb8, 0x55, 0x47, 0xaa,
+0x1c, 0xb8, 0xe3, 0x47,
+0xab, 0x1d, 0x54, 0xe2,
+0x54, 0x1c, 0xab, 0xe3,
+0xaa, 0x2b, 0x55, 0xd4,
+0xe2, 0x63, 0x1d, 0x9c,
+0xe2, 0x71, 0x1d, 0x8e,
+0xd4, 0x47, 0x2b, 0xb8,
+0x1c, 0x0e, 0xe3, 0xf1,
+0x46, 0x1c, 0xb9, 0xe3,
+0x1c, 0xe2, 0xe3, 0x1d,
+0xe3, 0x2b, 0x1c, 0xd4,
+0x9c, 0x2b, 0x63, 0xd4,
+0xd4, 0x39, 0x2b, 0xc6,
+0xf0, 0x39, 0x0f, 0xc6,
+0x0e, 0xb8, 0xf1, 0x47,
+0x1d, 0xf0, 0xe2, 0x0f,
+0x55, 0x54, 0xaa, 0xab,
+0x54, 0x62, 0xab, 0x9d,
+0xe2, 0x1d, 0x1d, 0xe2,
+0xaa, 0x47, 0x55, 0xb8,
+0x9c, 0x63, 0x63, 0x9c,
+0x62, 0x1c, 0x9d, 0xe3,
+0xf0, 0x47, 0x0f, 0xb8,
+0xf0, 0xab, 0x0f, 0x54,
+0x55, 0x9c, 0xaa, 0x63,
+0xd5, 0x55, 0x2a, 0xaa,
+0xe2, 0x47, 0x1d, 0xb8,
+0x8e, 0x55, 0x71, 0xaa,
+0x54, 0xd4, 0xab, 0x2b,
+0xb9, 0x1d, 0x46, 0xe2,
+0xe2, 0xf1, 0x1d, 0x0e,
+0xab, 0x63, 0x54, 0x9c,
+0x1c, 0x2a, 0xe3, 0xd5,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x9c, 0x71, 0x63, 0x8e,
+0x54, 0x2a, 0xab, 0xd5,
+0x38, 0x0e, 0xc7, 0xf1,
+0xaa, 0xb9, 0x55, 0x46,
+0x0f, 0x62, 0xf0, 0x9d,
+0x2a, 0x9c, 0xd5, 0x63,
+0x9d, 0x47, 0x62, 0xb8,
+0xc6, 0x47, 0x39, 0xb8,
+0x70, 0xd4, 0x8f, 0x2b,
+0x47, 0x9c, 0xb8, 0x63,
+0xf1, 0xb9, 0x0e, 0x46,
+0xe3, 0xc7, 0x1c, 0x38,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x54, 0x70, 0xab, 0x8f,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x62, 0x0e, 0x9d, 0xf1,
+0xc6, 0x71, 0x39, 0x8e,
+0x38, 0xe2, 0xc7, 0x1d,
+0x0f, 0x8e, 0xf0, 0x71,
+0x8f, 0xab, 0x70, 0x54,
+0x1d, 0x8e, 0xe2, 0x71,
+0xf1, 0x55, 0x0e, 0xaa,
+0x1c, 0xc6, 0xe3, 0x39,
+0x9d, 0x1d, 0x62, 0xe2,
+0x1c, 0x70, 0xe3, 0x8f,
+0xb8, 0x2b, 0x47, 0xd4,
+0x54, 0x8e, 0xab, 0x71,
+0xe3, 0x39, 0x1c, 0xc6,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x1c, 0x70, 0xe3, 0x8f,
+0x0e, 0x2a, 0xf1, 0xd5,
+0x54, 0xc6, 0xab, 0x39,
+0x9d, 0x39, 0x62, 0xc6,
+0x2a, 0x70, 0xd5, 0x8f,
+0x38, 0x70, 0xc7, 0x8f,
+0x46, 0x8e, 0xb9, 0x71,
+0x47, 0xc6, 0xb8, 0x39,
+0x2b, 0x8e, 0xd4, 0x71,
+0x2b, 0x38, 0xd4, 0xc7,
+0x0e, 0x0e, 0xf1, 0xf1,
+0x46, 0xf0, 0xb9, 0x0f,
+0x1d, 0xe2, 0xe2, 0x1d,
+0x63, 0x62, 0x9c, 0x9d,
+0x9c, 0x2b, 0x63, 0xd4,
+0xb8, 0x0f, 0x47, 0xf0,
+0xf0, 0xb9, 0x0f, 0x46,
+0x63, 0xaa, 0x9c, 0x55,
+0x1d, 0x1c, 0xe2, 0xe3,
+0xb8, 0x55, 0x47, 0xaa,
+0xd4, 0xab, 0x2b, 0x54,
+0xab, 0x1d, 0x54, 0xe2,
+0xc6, 0x1d, 0x39, 0xe2,
+0xaa, 0xe3, 0x55, 0x1c,
+0x8f, 0x63, 0x70, 0x9c,
+0xe2, 0xab, 0x1d, 0x54,
+0xf1, 0x47, 0x0e, 0xb8,
+0xd4, 0xd5, 0x2b, 0x2a,
+0x55, 0x1c, 0xaa, 0xe3,
+0x8e, 0x71, 0x71, 0x8e,
+0xe2, 0xe3, 0x1d, 0x1c,
+0x39, 0x46, 0xc6, 0xb9,
+0xd4, 0xe3, 0x2b, 0x1c,
+0x0f, 0x1c, 0xf0, 0xe3,
+0xc6, 0xab, 0x39, 0x54,
+0xd5, 0xe3, 0x2a, 0x1c,
+0xc7, 0x55, 0x38, 0xaa,
+0xc6, 0xab, 0x39, 0x54,
+0x8f, 0xd5, 0x70, 0x2a,
+0xc7, 0x9d, 0x38, 0x62,
+0xb9, 0xb9, 0x46, 0x46,
+0x8f, 0xc7, 0x70, 0x38,
+0x2b, 0x9c, 0xd4, 0x63,
+0x71, 0x38, 0x8e, 0xc7,
+0xc6, 0xc7, 0x39, 0x38,
+0x71, 0xf0, 0x8e, 0x0f,
+0x47, 0xf0, 0xb8, 0x0f,
+0x71, 0xaa, 0x8e, 0x55,
+0x63, 0xe2, 0x9c, 0x1d,
+0xb9, 0x1d, 0x46, 0xe2,
+0xb8, 0xe3, 0x47, 0x1c,
+0xab, 0xab, 0x54, 0x54,
+0xe3, 0x2b, 0x1c, 0xd4,
+0xe2, 0x1d, 0x1d, 0xe2,
+0xd4, 0x71, 0x2b, 0x8e,
+0x9c, 0x2b, 0x63, 0xd4,
+0x0e, 0x0e, 0xf1, 0xf1,
+0xf0, 0xf1, 0x0f, 0x0e,
+0x1d, 0xaa, 0xe2, 0x55,
+0x1d, 0x62, 0xe2, 0x9d,
+0x9c, 0x55, 0x63, 0xaa,
+0x9c, 0x0f, 0x63, 0xf0,
+0xb8, 0x1d, 0x47, 0xe2,
+0x70, 0xaa, 0x8f, 0x55,
+0xab, 0xab, 0x54, 0x54,
+0xb9, 0x1d, 0x46, 0xe2,
+0xe2, 0xd5, 0x1d, 0x2a,
+0xab, 0x63, 0x54, 0x9c,
+0x9c, 0x39, 0x63, 0xc6,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x38, 0x70, 0xc7, 0x8f,
+0x54, 0xaa, 0xab, 0x55,
+0x47, 0x0e, 0xb8, 0xf1,
+0xaa, 0x9d, 0x55, 0x62,
+0x2b, 0x62, 0xd4, 0x9d,
+0xaa, 0x0f, 0x55, 0xf0,
+0x8e, 0x47, 0x71, 0xb8,
+0x62, 0xe2, 0x9d, 0x1d,
+0x71, 0x54, 0x8e, 0xab,
+0xb8, 0xe3, 0x47, 0x1c,
+0xf1, 0x9d, 0x0e, 0x62,
+0xe3, 0xe3, 0x1c, 0x1c,
+0x9d, 0x0f, 0x62, 0xf0,
+0xd4, 0x63, 0x2b, 0x9c,
+0x70, 0x2a, 0x8f, 0xd5,
+0xc6, 0x8f, 0x39, 0x70,
+0xb9, 0xf1, 0x46, 0x0e,
+0x47, 0xc6, 0xb8, 0x39,
+0x2b, 0xaa, 0xd4, 0x55,
+0x2b, 0x38, 0xd4, 0xc7,
+0x8e, 0x1d, 0x71, 0xe2,
+0x46, 0xf0, 0xb9, 0x0f,
+0xb9, 0xe3, 0x46, 0x1c,
+0x63, 0xe2, 0x9c, 0x1d,
+0xe3, 0x2b, 0x1c, 0xd4,
+0xb8, 0x2b, 0x47, 0xd4,
+0xd4, 0xb9, 0x2b, 0x46,
+0xe3, 0x39, 0x1c, 0xc6,
+0x0e, 0x1c, 0xf1, 0xe3,
+0x1c, 0xf0, 0xe3, 0x0f,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x54, 0x62, 0xab, 0x9d,
+0xc6, 0x39, 0x39, 0xc6,
+0xaa, 0xc7, 0x55, 0x38,
+0x0f, 0x70, 0xf0, 0x8f,
+0x62, 0xb8, 0x9d, 0x47,
+0x55, 0x46, 0xaa, 0xb9,
+0x70, 0x54, 0x8f, 0xab,
+0x2a, 0x9c, 0xd5, 0x63,
+0xf1, 0x55, 0x0e, 0xaa,
+0xc6, 0xc7, 0x39, 0x38,
+0x9d, 0xd5, 0x62, 0x2a,
+0x47, 0x70, 0xb8, 0x8f,
+0xb8, 0xb9, 0x47, 0x46,
+0x63, 0x8e, 0x9c, 0x71,
+0x2b, 0x1c, 0xd4, 0xe3,
+0x38, 0x0e, 0xc7, 0xf1,
+0xc6, 0xab, 0x39, 0x54,
+0x0f, 0xe2, 0xf0, 0x1d,
+0xc7, 0x9d, 0x38, 0x62,
+0x9d, 0xab, 0x62, 0x54,
+0x8f, 0x47, 0x70, 0xb8,
+0xf0, 0x9d, 0x0f, 0x62,
+0x71, 0x9c, 0x8e, 0x63,
+0x9d, 0xc7, 0x62, 0x38,
+0xf1, 0x47, 0x0e, 0xb8,
+0x70, 0xf0, 0x8f, 0x0f,
+0x55, 0x9c, 0xaa, 0x63,
+0x71, 0x62, 0x8e, 0x9d,
+0xe2, 0xc7, 0x1d, 0x38,
+0xb9, 0x47, 0x46, 0xb8,
+0x54, 0xf0, 0xab, 0x0f,
+0x63, 0x1c, 0x9c, 0xe3,
+0x62, 0x2a, 0x9d, 0xd5,
+0xf0, 0x63, 0x0f, 0x9c,
+0xb8, 0xb9, 0x47, 0x46,
+0xd5, 0x8f, 0x2a, 0x70,
+0x2b, 0x54, 0xd4, 0xab,
+0x46, 0x0e, 0xb9, 0xf1,
+0xc6, 0xd5, 0x39, 0x2a,
+0x2b, 0xe2, 0xd4, 0x1d,
+0x8f, 0x39, 0x70, 0xc6,
+0x8e, 0xab, 0x71, 0x54,
+0x39, 0xf0, 0xc6, 0x0f,
+0xf1, 0xd5, 0x0e, 0x2a,
+0x47, 0xe2, 0xb8, 0x1d,
+0x9d, 0xb9, 0x62, 0x46,
+0xab, 0x63, 0x54, 0x9c,
+0x38, 0x1c, 0xc7, 0xe3,
+0xe2, 0x8f, 0x1d, 0x70,
+0xc7, 0x63, 0x38, 0x9c,
+0x54, 0x8e, 0xab, 0x71,
+0xc7, 0x0f, 0x38, 0xf0,
+0x2a, 0x8e, 0xd5, 0x71,
+0x47, 0x62, 0xb8, 0x9d,
+0x0e, 0x8e, 0xf1, 0x71,
+0xab, 0xc7, 0x54, 0x38,
+0x1d, 0x0e, 0xe2, 0xf1,
+0x62, 0x70, 0x9d, 0x8f,
+0x1c, 0x62, 0xe3, 0x9d,
+0x70, 0x0e, 0x8f, 0xf1,
+0x9c, 0x8f, 0x63, 0x70,
+0x39, 0x2a, 0xc6, 0xd5,
+0x70, 0xc6, 0x8f, 0x39,
+0x8f, 0xb9, 0x70, 0x46,
+0x39, 0xb8, 0xc6, 0x47,
+0x39, 0xd4, 0xc6, 0x2b,
+0x47, 0xd4, 0xb8, 0x2b,
+0xc7, 0xb9, 0x38, 0x46,
+0xe3, 0xb9, 0x1c, 0x46,
+0x0f, 0x1c, 0xf0, 0xe3,
+0x1c, 0x9c, 0xe3, 0x63,
+0xd5, 0x2b, 0x2a, 0xd4,
+0xd4, 0x47, 0x2b, 0xb8,
+0xc6, 0x39, 0x39, 0xc6,
+0x46, 0xd4, 0xb9, 0x2b,
+0x0f, 0xf0, 0xf0, 0x0f,
+0xe3, 0xb9, 0x1c, 0x46,
+0x55, 0x2a, 0xaa, 0xd5,
+0x1c, 0x54, 0xe3, 0xab,
+0xaa, 0x39, 0x55, 0xc6,
+0xd4, 0x55, 0x2b, 0xaa,
+0x2a, 0x38, 0xd5, 0xc7,
+0x8e, 0x55, 0x71, 0xaa,
+0x46, 0xf0, 0xb9, 0x0f,
+0xb9, 0xd5, 0x46, 0x2a,
+0x63, 0xe2, 0x9c, 0x1d,
+0xab, 0x39, 0x54, 0xc6,
+0xb8, 0x2b, 0x47, 0xd4,
+0x2a, 0xb8, 0xd5, 0x47,
+0xe3, 0x71, 0x1c, 0x8e,
+0x46, 0x1c, 0xb9, 0xe3,
+0x1c, 0xc6, 0xe3, 0x39,
+0xe3, 0x2b, 0x1c, 0xd4,
+0x1c, 0x38, 0xe3, 0xc7,
+0xd4, 0x39, 0x2b, 0xc6,
+0x54, 0x38, 0xab, 0xc7,
+0x0e, 0x38, 0xf1, 0xc7,
+0x62, 0xf0, 0x9d, 0x0f,
+0x55, 0x70, 0xaa, 0x8f,
+0x70, 0x62, 0x8f, 0x9d,
+0x62, 0x8e, 0x9d, 0x71,
+0xb9, 0x47, 0x46, 0xb8,
+0x38, 0xc6, 0xc7, 0x39,
+0x63, 0x9c, 0x9c, 0x63,
+0x0f, 0x38, 0xf0, 0xc7,
+0xf0, 0x8f, 0x0f, 0x70,
+0x55, 0xb8, 0xaa, 0x47,
+0x55, 0x46, 0xaa, 0xb9,
+0x62, 0x54, 0x9d, 0xab,
+0x2a, 0x54, 0xd5, 0xab,
+0xf0, 0x55, 0x0f, 0xaa,
+0xc6, 0x9d, 0x39, 0x62,
+0x9d, 0xd5, 0x62, 0x2a,
+0x8f, 0x47, 0x70, 0xb8,
+0xb8, 0xb9, 0x47, 0x46,
+0x71, 0x9c, 0x8e, 0x63,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xf1, 0x0f, 0x0e, 0xf0,
+0xc6, 0xf1, 0x39, 0x0e,
+0x55, 0xe2, 0xaa, 0x1d,
+0x0f, 0x62, 0xf0, 0x9d,
+0xaa, 0xab, 0x55, 0x54,
+0x9d, 0x47, 0x62, 0xb8,
+0xe2, 0x55, 0x1d, 0xaa,
+0x70, 0x54, 0x8f, 0xab,
+0x9c, 0x9d, 0x63, 0x62,
+0xf1, 0x1d, 0x0e, 0xe2,
+0xb8, 0xc7, 0x47, 0x38,
+0x9d, 0xab, 0x62, 0x54,
+0x63, 0x70, 0x9c, 0x8f,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x70, 0x8e, 0x8f, 0x71,
+0x9d, 0xab, 0x62, 0x54,
+0x39, 0x46, 0xc6, 0xb9,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x0f, 0x9c, 0xf0, 0x63,
+0x9d, 0xb9, 0x62, 0x46,
+0xd5, 0x47, 0x2a, 0xb8,
+0x38, 0x54, 0xc7, 0xab,
+0x46, 0x9c, 0xb9, 0x63,
+0xc7, 0xd5, 0x38, 0x2a,
+0xe3, 0x8f, 0x1c, 0x70,
+0x8f, 0x39, 0x70, 0xc6,
+0x54, 0x8e, 0xab, 0x71,
+0x39, 0x38, 0xc6, 0xc7,
+0x2a, 0xc6, 0xd5, 0x39,
+0x47, 0x70, 0xb8, 0x8f,
+0x0e, 0xb8, 0xf1, 0x47,
+0x63, 0xc6, 0x9c, 0x39,
+0x55, 0x1c, 0xaa, 0xe3,
+0x38, 0x70, 0xc7, 0x8f,
+0xe2, 0xab, 0x1d, 0x54,
+0x47, 0x46, 0xb8, 0xb9,
+0xd4, 0x9d, 0x2b, 0x62,
+0x2b, 0x1c, 0xd4, 0xe3,
+0x8e, 0x0f, 0x71, 0xf0,
+0xc6, 0xe3, 0x39, 0x1c,
+0x71, 0xe2, 0x8e, 0x1d,
+0xc7, 0xe3, 0x38, 0x1c,
+0xb9, 0xab, 0x46, 0x54,
+0xc7, 0xe3, 0x38, 0x1c,
+0xe3, 0x9d, 0x1c, 0x62,
+0xc7, 0x2b, 0x38, 0xd4,
+0x9c, 0x8f, 0x63, 0x70,
+/* rand data for seed 192 */
+0x55, 0x1c, 0xaa, 0xe3,
+0x1c, 0x70, 0xe3, 0x8f,
+0xe2, 0x2b, 0x1d, 0xd4,
+0x54, 0x46, 0xab, 0xb9,
+0xd4, 0x39, 0x2b, 0xc6,
+0x2a, 0x1c, 0xd5, 0xe3,
+0x0e, 0x70, 0xf1, 0x8f,
+0xc6, 0xe3, 0x39, 0x1c,
+0x55, 0xc6, 0xaa, 0x39,
+0xc7, 0x63, 0x38, 0x9c,
+0x2a, 0xb8, 0xd5, 0x47,
+0xc7, 0x47, 0x38, 0xb8,
+0x46, 0x9c, 0xb9, 0x63,
+0x47, 0xd4, 0xb8, 0x2b,
+0xe3, 0x8f, 0x1c, 0x70,
+0xe3, 0x39, 0x1c, 0xc6,
+0x54, 0x0e, 0xab, 0xf1,
+0x1c, 0x38, 0xe3, 0xc7,
+0x2a, 0x2a, 0xd5, 0xd5,
+0x54, 0x70, 0xab, 0x8f,
+0x8e, 0x39, 0x71, 0xc6,
+0x62, 0xc6, 0x9d, 0x39,
+0x39, 0x70, 0xc6, 0x8f,
+0x38, 0xf0, 0xc7, 0x0f,
+0x47, 0x8e, 0xb8, 0x71,
+0x47, 0xaa, 0xb8, 0x55,
+0x2b, 0x8e, 0xd4, 0x71,
+0xab, 0x1d, 0x54, 0xe2,
+0x0e, 0x0e, 0xf1, 0xf1,
+0xaa, 0xe3, 0x55, 0x1c,
+0x1d, 0x62, 0xe2, 0x9d,
+0xe2, 0x63, 0x1d, 0x9c,
+0x9c, 0x47, 0x63, 0xb8,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x70, 0x1c, 0x8f, 0xe3,
+0x46, 0xaa, 0xb9, 0x55,
+0xf1, 0xe3, 0x0e, 0x1c,
+0xab, 0xd5, 0x54, 0x2a,
+0xd5, 0x2b, 0x2a, 0xd4,
+0xaa, 0x71, 0x55, 0x8e,
+0xc6, 0x71, 0x39, 0x8e,
+0x2a, 0xc6, 0xd5, 0x39,
+0x0f, 0x46, 0xf0, 0xb9,
+0x0e, 0xb8, 0xf1, 0x47,
+0x1d, 0xd4, 0xe2, 0x2b,
+0x55, 0x54, 0xaa, 0xab,
+0xd4, 0x71, 0x2b, 0x8e,
+0xe2, 0x1d, 0x1d, 0xe2,
+0x0e, 0x46, 0xf1, 0xb9,
+0x9c, 0xe3, 0x63, 0x1c,
+0x1d, 0x1c, 0xe2, 0xe3,
+0xf0, 0x63, 0x0f, 0x9c,
+0xd4, 0xab, 0x2b, 0x54,
+0xd5, 0x0f, 0x2a, 0xf0,
+0xc6, 0x55, 0x39, 0xaa,
+0x46, 0xe2, 0xb9, 0x1d,
+0x8f, 0xd5, 0x70, 0x2a,
+0xab, 0xab, 0x54, 0x54,
+0xb9, 0x39, 0x46, 0xc6,
+0xe2, 0xd5, 0x1d, 0x2a,
+0x2b, 0x70, 0xd4, 0x8f,
+0x9c, 0x39, 0x63, 0xc6,
+0x46, 0x0e, 0xb9, 0xf1,
+0x38, 0xf0, 0xc7, 0x0f,
+0x2b, 0xaa, 0xd4, 0x55,
+0x47, 0x2a, 0xb8, 0xd5,
+0x8e, 0x9d, 0x71, 0x62,
+0xab, 0xf1, 0x54, 0x0e,
+0xb9, 0x0f, 0x46, 0xf0,
+0x2a, 0xe2, 0xd5, 0x1d,
+0x63, 0x62, 0x9c, 0x9d,
+0x8e, 0x2b, 0x71, 0xd4,
+0xb8, 0xc7, 0x47, 0x38,
+0xf1, 0xb9, 0x0e, 0x46,
+0x63, 0xf0, 0x9c, 0x0f,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x70, 0x62, 0x8f, 0x9d,
+0xd4, 0xab, 0x2b, 0x54,
+0xb9, 0x0f, 0x46, 0xf0,
+0xc6, 0xd5, 0x39, 0x2a,
+0x63, 0xe2, 0x9c, 0x1d,
+0x8f, 0x39, 0x70, 0xc6,
+0xb8, 0xab, 0x47, 0x54,
+0x39, 0xb8, 0xc6, 0x47,
+0xe3, 0xd5, 0x1c, 0x2a,
+0x47, 0x1c, 0xb8, 0xe3,
+0x9c, 0xb9, 0x63, 0x46,
+0xe3, 0x2b, 0x1c, 0xd4,
+0x38, 0x1c, 0xc7, 0xe3,
+0xd4, 0xb9, 0x2b, 0x46,
+0xc7, 0x2b, 0x38, 0xd4,
+0x0e, 0x9c, 0xf1, 0x63,
+0xc7, 0xf1, 0x38, 0x0e,
+0xd5, 0x8f, 0x2a, 0x70,
+0x0f, 0x62, 0xf0, 0x9d,
+0x46, 0x8e, 0xb9, 0x71,
+0x9d, 0xc7, 0x62, 0x38,
+0x2b, 0x46, 0xd4, 0xb9,
+0x70, 0x38, 0x8f, 0xc7,
+0x0e, 0x9c, 0xf1, 0x63,
+0x71, 0xf0, 0x8e, 0x0f,
+0xd5, 0xc7, 0x2a, 0x38,
+0x71, 0x62, 0x8e, 0x9d,
+0x46, 0xf0, 0xb9, 0x0f,
+0xb9, 0xc7, 0x46, 0x38,
+0x63, 0xe2, 0x9c, 0x1d,
+0x63, 0x38, 0x9c, 0xc7,
+0xb8, 0x2b, 0x47, 0xd4,
+0x70, 0xb8, 0x8f, 0x47,
+0xe3, 0xb9, 0x1c, 0x46,
+0x71, 0x1c, 0x8e, 0xe3,
+0x1c, 0xd4, 0xe3, 0x2b,
+0xf1, 0x2b, 0x0e, 0xd4,
+0xd4, 0xf1, 0x2b, 0x0e,
+0xd5, 0x39, 0x2a, 0xc6,
+0x0e, 0x62, 0xf1, 0x9d,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x9d, 0xc7, 0x62, 0x38,
+0x55, 0x62, 0xaa, 0x9d,
+0x70, 0x70, 0x8f, 0x8f,
+0xaa, 0x8f, 0x55, 0x70,
+0x71, 0x46, 0x8e, 0xb9,
+0x62, 0xc6, 0x9d, 0x39,
+0x39, 0x54, 0xc6, 0xab,
+0x38, 0xf0, 0xc7, 0x0f,
+0xc7, 0x9d, 0x38, 0x62,
+0x47, 0xaa, 0xb8, 0x55,
+0x8f, 0x8f, 0x70, 0x70,
+0xab, 0x9d, 0x54, 0x62,
+0x71, 0x0e, 0x8e, 0xf1,
+0xaa, 0xc7, 0x55, 0x38,
+0x39, 0x62, 0xc6, 0x9d,
+0x62, 0xf0, 0x9d, 0x0f,
+0x8f, 0x47, 0x70, 0xb8,
+0x70, 0xaa, 0x8f, 0x55,
+0x71, 0x9c, 0x8e, 0x63,
+0xb9, 0xd5, 0x46, 0x2a,
+0xf1, 0xc7, 0x0e, 0x38,
+0xab, 0xf1, 0x54, 0x0e,
+0x55, 0x38, 0xaa, 0xc7,
+0x2a, 0x62, 0xd5, 0x9d,
+0x62, 0x70, 0x9d, 0x8f,
+0x8e, 0x47, 0x71, 0xb8,
+0x70, 0xc6, 0x8f, 0x39,
+0x71, 0x9c, 0x8e, 0x63,
+0x39, 0xf0, 0xc6, 0x0f,
+0xf1, 0xc7, 0x0e, 0x38,
+0x47, 0xe2, 0xb8, 0x1d,
+0x55, 0xb8, 0xaa, 0x47,
+0xab, 0x63, 0x54, 0x9c,
+0x62, 0x1c, 0x9d, 0xe3,
+0xe2, 0x47, 0x1d, 0xb8,
+0xf0, 0x63, 0x0f, 0x9c,
+0x54, 0x9c, 0xab, 0x63,
+0xd5, 0x0f, 0x2a, 0xf0,
+0xe2, 0x47, 0x1d, 0xb8,
+0x46, 0x62, 0xb9, 0x9d,
+0x54, 0xd4, 0xab, 0x2b,
+0xab, 0x0f, 0x54, 0xf0,
+0xe2, 0x39, 0x1d, 0xc6,
+0x62, 0x62, 0x9d, 0x9d,
+0x1c, 0x70, 0xe3, 0x8f,
+0xb8, 0x0f, 0x47, 0xf0,
+0x54, 0x8e, 0xab, 0x71,
+0x63, 0x2a, 0x9c, 0xd5,
+0x2a, 0x0e, 0xd5, 0xf1,
+0xb8, 0x71, 0x47, 0x8e,
+0x0e, 0xaa, 0xf1, 0x55,
+0x2b, 0xc6, 0xd4, 0x39,
+0x9d, 0x1d, 0x62, 0xe2,
+0x0e, 0x70, 0xf1, 0x8f,
+0xb8, 0xe3, 0x47, 0x1c,
+0x55, 0x8e, 0xaa, 0x71,
+0xe3, 0x63, 0x1c, 0x9c,
+0x2a, 0x0e, 0xd5, 0xf1,
+0xd4, 0x47, 0x2b, 0xb8,
+0x0e, 0x2a, 0xf1, 0xd5,
+0x46, 0xd4, 0xb9, 0x2b,
+0x9d, 0xf1, 0x62, 0x0e,
+0xe3, 0x71, 0x1c, 0x8e,
+0x38, 0x2a, 0xc7, 0xd5,
+0x1c, 0x8e, 0xe3, 0x71,
+0x8f, 0x39, 0x70, 0xc6,
+0x1c, 0x8e, 0xe3, 0x71,
+0x39, 0x38, 0xc6, 0xc7,
+0x1c, 0xc6, 0xe3, 0x39,
+0x47, 0x38, 0xb8, 0xc7,
+0x1c, 0xb8, 0xe3, 0x47,
+0x63, 0x38, 0x9c, 0xc7,
+0x54, 0x1c, 0xab, 0xe3,
+0x70, 0x38, 0x8f, 0xc7,
+0xe2, 0xab, 0x1d, 0x54,
+0x71, 0x70, 0x8e, 0x8f,
+0xd4, 0xd5, 0x2b, 0x2a,
+0x71, 0x0e, 0x8e, 0xf1,
+0x8e, 0xf1, 0x71, 0x0e,
+0x39, 0xe2, 0xc6, 0x1d,
+0x39, 0xe2, 0xc6, 0x1d,
+0x8f, 0xe3, 0x70, 0x1c,
+0x8f, 0xab, 0x70, 0x54,
+0xf1, 0xab, 0x0e, 0x54,
+0xf1, 0xd5, 0x0e, 0x2a,
+0xd5, 0xd5, 0x2a, 0x2a,
+0x9d, 0x71, 0x62, 0x8e,
+0x8e, 0x71, 0x71, 0x8e,
+0x38, 0xc6, 0xc7, 0x39,
+0x39, 0x8e, 0xc6, 0x71,
+0x0f, 0xf0, 0xf0, 0x0f,
+0x0f, 0x8e, 0xf0, 0x71,
+0x55, 0xaa, 0xaa, 0x55,
+0x1d, 0x46, 0xe2, 0xb9,
+0xaa, 0x55, 0x55, 0xaa,
+0x1c, 0x54, 0xe3, 0xab,
+0xaa, 0x1d, 0x55, 0xe2,
+0xd4, 0x55, 0x2b, 0xaa,
+0xaa, 0x2b, 0x55, 0xd4,
+0x8e, 0x55, 0x71, 0xaa,
+0xe2, 0xf1, 0x1d, 0x0e,
+0xb9, 0x55, 0x46, 0xaa,
+0x1c, 0xe2, 0xe3, 0x1d,
+0xab, 0x1d, 0x54, 0xe2,
+0x9c, 0x2b, 0x63, 0xd4,
+0xaa, 0x2b, 0x55, 0xd4,
+0xf0, 0x71, 0x0f, 0x8e,
+0xe2, 0xb9, 0x1d, 0x46,
+0x1d, 0x46, 0xe2, 0xb9,
+0x1c, 0x54, 0xe3, 0xab,
+0x1c, 0x1c, 0xe3, 0xe3,
+0xd4, 0x1d, 0x2b, 0xe2,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x8e, 0x2b, 0x71, 0xd4,
+0xc6, 0xf1, 0x39, 0x0e,
+0xf1, 0xf1, 0x0e, 0x0e,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x1d, 0xaa, 0xe2, 0x55,
+0x9d, 0x63, 0x62, 0x9c,
+0x9c, 0x55, 0x63, 0xaa,
+0xf0, 0x0f, 0x0f, 0xf0,
+0xb8, 0x9d, 0x47, 0x62,
+0x55, 0xaa, 0xaa, 0x55,
+0xab, 0x47, 0x54, 0xb8,
+0xaa, 0x1d, 0x55, 0xe2,
+0x62, 0x54, 0x9d, 0xab,
+0xaa, 0x63, 0x55, 0x9c,
+0xf0, 0x55, 0x0f, 0xaa,
+0xe2, 0x8f, 0x1d, 0x70,
+0x9d, 0x55, 0x62, 0xaa,
+0x54, 0x46, 0xab, 0xb9,
+0xb8, 0x1d, 0x47, 0xe2,
+0x2a, 0x9c, 0xd5, 0x63,
+0xab, 0x63, 0x54, 0x9c,
+0xc6, 0x0f, 0x39, 0xf0,
+0xe2, 0xc7, 0x1d, 0x38,
+0x47, 0x62, 0xb8, 0x9d,
+0x54, 0xb8, 0xab, 0x47,
+0xab, 0x0f, 0x54, 0xf0,
+0x62, 0x1c, 0x9d, 0xe3,
+0x62, 0x62, 0x9d, 0x9d,
+0xf0, 0x63, 0x0f, 0x9c,
+0xb8, 0x8f, 0x47, 0x70,
+0xd5, 0x8f, 0x2a, 0x70,
+0x63, 0x46, 0x9c, 0xb9,
+0x46, 0x0e, 0xb9, 0xf1,
+0x38, 0xd4, 0xc7, 0x2b,
+0x2b, 0xaa, 0xd4, 0x55,
+0xc7, 0x39, 0x38, 0xc6,
+0x8e, 0x9d, 0x71, 0x62,
+0x0f, 0xf0, 0xf0, 0x0f,
+0xb9, 0x8f, 0x46, 0x70,
+0x55, 0xe2, 0xaa, 0x1d,
+0x63, 0x46, 0x9c, 0xb9,
+0xaa, 0x2b, 0x55, 0xd4,
+0x38, 0x54, 0xc7, 0xab,
+0xe2, 0xb9, 0x1d, 0x46,
+0xc7, 0x55, 0x38, 0xaa,
+0x1c, 0x9c, 0xe3, 0x63,
+0x8f, 0x1d, 0x70, 0xe2,
+0xd4, 0x8f, 0x2b, 0x70,
+0xb9, 0x2b, 0x46, 0xd4,
+0x46, 0xc6, 0xb9, 0x39,
+0xe3, 0xf1, 0x1c, 0x0e,
+0x2b, 0x38, 0xd4, 0xc7,
+0x1c, 0x2a, 0xe3, 0xd5,
+0x46, 0x38, 0xb9, 0xc7,
+0x9c, 0xf1, 0x63, 0x0e,
+0x63, 0x38, 0x9c, 0xc7,
+0x38, 0x2a, 0xc7, 0xd5,
+0x70, 0xb8, 0x8f, 0x47,
+0x8f, 0xb9, 0x70, 0x46,
+0x71, 0x9c, 0x8e, 0x63,
+0x39, 0xd4, 0xc6, 0x2b,
+0xf1, 0xc7, 0x0e, 0x38,
+0xc7, 0xf1, 0x38, 0x0e,
+0x55, 0xb8, 0xaa, 0x47,
+0x0f, 0x62, 0xf0, 0x9d,
+0x62, 0x9c, 0x9d, 0x63,
+0x9d, 0x47, 0x62, 0xb8,
+0xf0, 0x47, 0x0f, 0xb8,
+0x70, 0x9c, 0x8f, 0x63,
+0x55, 0x9c, 0xaa, 0x63,
+0xf1, 0x47, 0x0e, 0xb8,
+0xe2, 0xc7, 0x1d, 0x38,
+0x55, 0x54, 0xaa, 0xab,
+0x54, 0x70, 0xab, 0x8f,
+0xe2, 0x1d, 0x1d, 0xe2,
+0x62, 0x46, 0x9d, 0xb9,
+0x9c, 0x63, 0x63, 0x9c,
+0x38, 0x1c, 0xc7, 0xe3,
+0xf0, 0x8f, 0x0f, 0x70,
+0xc7, 0xab, 0x38, 0x54,
+0x55, 0x8e, 0xaa, 0x71,
+0xc7, 0x55, 0x38, 0xaa,
+0x2a, 0x8e, 0xd5, 0x71,
+0x8f, 0x55, 0x70, 0xaa,
+0x0e, 0x8e, 0xf1, 0x71,
+0xb9, 0xd5, 0x46, 0x2a,
+0x1d, 0xc6, 0xe2, 0x39,
+0xab, 0x71, 0x54, 0x8e,
+0x1c, 0x38, 0xe3, 0xc7,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x54, 0x70, 0xab, 0x8f,
+0x0e, 0x2a, 0xf1, 0xd5,
+0x62, 0xc6, 0x9d, 0x39,
+0x9d, 0x71, 0x62, 0x8e,
+0x38, 0x70, 0xc7, 0x8f,
+0x38, 0x8e, 0xc7, 0x71,
+0x47, 0x8e, 0xb8, 0x71,
+0x0f, 0x8e, 0xf0, 0x71,
+0x2b, 0x8e, 0xd4, 0x71,
+0x1d, 0x0e, 0xe2, 0xf1,
+0x0e, 0x46, 0xf1, 0xb9,
+0x1c, 0xe2, 0xe3, 0x1d,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x9c, 0x63, 0x63, 0x9c,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xf0, 0x0f, 0x0f, 0xf0,
+0xc6, 0xb9, 0x39, 0x46,
+0x55, 0xe2, 0xaa, 0x1d,
+0x0f, 0x54, 0xf0, 0xab,
+0xaa, 0xab, 0x55, 0x54,
+0xd5, 0x55, 0x2a, 0xaa,
+0xe2, 0x55, 0x1d, 0xaa,
+0x8e, 0x55, 0x71, 0xaa,
+0x9c, 0xd5, 0x63, 0x2a,
+0xb9, 0x1d, 0x46, 0xe2,
+0xb8, 0xf1, 0x47, 0x0e,
+0xab, 0xab, 0x54, 0x54,
+0x2b, 0x2a, 0xd4, 0xd5,
+0xe2, 0x1d, 0x1d, 0xe2,
+0x8e, 0x71, 0x71, 0x8e,
+0x9c, 0xe3, 0x63, 0x1c,
+0x39, 0x0e, 0xc6, 0xf1,
+0xf0, 0xe3, 0x0f, 0x1c,
+0x0f, 0xaa, 0xf0, 0x55,
+0xd5, 0xab, 0x2a, 0x54,
+0x9d, 0x55, 0x62, 0xaa,
+0xc6, 0x55, 0x39, 0xaa,
+0xb8, 0xd5, 0x47, 0x2a,
+0x8f, 0x9d, 0x70, 0x62,
+0xab, 0xb9, 0x54, 0x46,
+0xb9, 0x0f, 0x46, 0xf0,
+0x2a, 0xd4, 0xd5, 0x2b,
+0x63, 0x62, 0x9c, 0x9d,
+0xc6, 0x39, 0x39, 0xc6,
+0xb8, 0xc7, 0x47, 0x38,
+0x0f, 0xb8, 0xf0, 0x47,
+0x63, 0xb8, 0x9c, 0x47,
+0x55, 0x1c, 0xaa, 0xe3,
+0x70, 0x54, 0x8f, 0xab,
+0xe2, 0xab, 0x1d, 0x54,
+0xf1, 0x55, 0x0e, 0xaa,
+0xd4, 0xd5, 0x2b, 0x2a,
+0x9d, 0x1d, 0x62, 0xe2,
+0x8e, 0x71, 0x71, 0x8e,
+0xb8, 0xe3, 0x47, 0x1c,
+0x39, 0x8e, 0xc6, 0x71,
+0xe3, 0xe3, 0x1c, 0x1c,
+0x0f, 0x0e, 0xf0, 0xf1,
+0xd4, 0xab, 0x2b, 0x54,
+0x1d, 0x2a, 0xe2, 0xd5,
+0xc6, 0x55, 0x39, 0xaa,
+0x9c, 0xf1, 0x63, 0x0e,
+0x8f, 0x1d, 0x70, 0xe2,
+0x38, 0xaa, 0xc7, 0x55,
+0xb9, 0xab, 0x46, 0x54,
+0x8f, 0xd5, 0x70, 0x2a,
+0xe3, 0x9d, 0x1c, 0x62,
+0xb9, 0x39, 0x46, 0xc6,
+0x9c, 0xc7, 0x63, 0x38,
+0x2b, 0x38, 0xd4, 0xc7,
+0x70, 0x38, 0x8f, 0xc7,
+0x46, 0xb8, 0xb9, 0x47,
+0x71, 0xf0, 0x8e, 0x0f,
+0x63, 0xd4, 0x9c, 0x2b,
+0x71, 0x2a, 0x8e, 0xd5,
+0xf0, 0xf1, 0x0f, 0x0e,
+0xb9, 0xb9, 0x46, 0x46,
+0x1d, 0xe2, 0xe2, 0x1d,
+0x2b, 0x54, 0xd4, 0xab,
+0x9c, 0x2b, 0x63, 0xd4,
+0xc6, 0x1d, 0x39, 0xe2,
+0xf0, 0xf1, 0x0f, 0x0e,
+0x8f, 0xab, 0x70, 0x54,
+0x1d, 0xaa, 0xe2, 0x55,
+0xf1, 0x55, 0x0e, 0xaa,
+0x9c, 0xd5, 0x63, 0x2a,
+0x9d, 0x1d, 0x62, 0xe2,
+0xb8, 0x71, 0x47, 0x8e,
+0xb8, 0xab, 0x47, 0x54,
+0x2b, 0x8e, 0xd4, 0x71,
+0xe3, 0x1d, 0x1c, 0xe2,
+0x0e, 0x0e, 0xf1, 0xf1,
+0x9c, 0xe3, 0x63, 0x1c,
+0x1d, 0x2a, 0xe2, 0xd5,
+0xf0, 0x63, 0x0f, 0x9c,
+0x9c, 0xb9, 0x63, 0x46,
+0xd5, 0x0f, 0x2a, 0xf0,
+0x38, 0x54, 0xc7, 0xab,
+0x46, 0xaa, 0xb9, 0x55,
+0xc7, 0xd5, 0x38, 0x2a,
+0xab, 0x9d, 0x54, 0x62,
+0x8f, 0x39, 0x70, 0xc6,
+0xaa, 0x8f, 0x55, 0x70,
+0x39, 0x70, 0xc6, 0x8f,
+0x62, 0xc6, 0x9d, 0x39,
+0x47, 0x46, 0xb8, 0xb9,
+0x38, 0xb8, 0xc7, 0x47,
+0x2b, 0x9c, 0xd4, 0x63,
+0x47, 0x1c, 0xb8, 0xe3,
+0xc6, 0x8f, 0x39, 0x70,
+0xe3, 0xe3, 0x1c, 0x1c,
+0x47, 0x0e, 0xb8, 0xf1,
+0xd4, 0xab, 0x2b, 0x54,
+0x2b, 0x2a, 0xd4, 0xd5,
+0xc6, 0x1d, 0x39, 0xe2,
+0x8e, 0xf1, 0x71, 0x0e,
+0x8f, 0xe3, 0x70, 0x1c,
+0x39, 0xaa, 0xc6, 0x55,
+0xf1, 0xe3, 0x0e, 0x1c,
+0x8f, 0xd5, 0x70, 0x2a,
+0xd5, 0xab, 0x2a, 0x54,
+0xb9, 0x71, 0x46, 0x8e,
+0xc6, 0xd5, 0x39, 0x2a,
+0x2b, 0xc6, 0xd4, 0x39,
+0x8f, 0x39, 0x70, 0xc6,
+0x0e, 0xb8, 0xf1, 0x47,
+0x39, 0xf0, 0xc6, 0x0f,
+0x55, 0xd4, 0xaa, 0x2b,
+0x47, 0x62, 0xb8, 0x9d,
+0xe2, 0xb9, 0x1d, 0x46,
+0xab, 0x47, 0x54, 0xb8,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x62, 0x1c, 0x9d, 0xe3,
+0xd4, 0x63, 0x2b, 0x9c,
+0xf0, 0x2b, 0x0f, 0xd4,
+0xc6, 0x8f, 0x39, 0x70,
+0xd5, 0xf1, 0x2a, 0x0e,
+0x47, 0x46, 0xb8, 0xb9,
+0x0e, 0xaa, 0xf1, 0x55,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x9d, 0x1d, 0x62, 0xe2,
+0xc6, 0x71, 0x39, 0x8e,
+0xb8, 0xe3, 0x47, 0x1c,
+0x0f, 0x8e, 0xf0, 0x71,
+0xe3, 0xab, 0x1c, 0x54,
+0x1d, 0x0e, 0xe2, 0xf1,
+0xd4, 0x55, 0x2b, 0xaa,
+0x1c, 0x2a, 0xe3, 0xd5,
+0x8e, 0x1d, 0x71, 0xe2,
+0x9c, 0xf1, 0x63, 0x0e,
+0xb9, 0x2b, 0x46, 0xd4,
+0x38, 0xe2, 0xc7, 0x1d,
+0xe3, 0xb9, 0x1c, 0x46,
+0x8f, 0x2b, 0x70, 0xd4,
+0x1c, 0x9c, 0xe3, 0x63,
+0xf1, 0x39, 0x0e, 0xc6,
+0xd4, 0xc7, 0x2b, 0x38,
+0x1d, 0x38, 0xe2, 0xc7,
+0x46, 0x70, 0xb9, 0x8f,
+0x54, 0xf0, 0xab, 0x0f,
+0x63, 0x0e, 0x9c, 0xf1,
+0x62, 0x2a, 0x9d, 0xd5,
+0x38, 0x62, 0xc7, 0x9d,
+0xb8, 0xb9, 0x47, 0x46,
+0x8f, 0x8f, 0x70, 0x70,
+0x2b, 0x9c, 0xd4, 0x63,
+0x71, 0x0e, 0x8e, 0xf1,
+0xc6, 0xc7, 0x39, 0x38,
+0x39, 0xe2, 0xc6, 0x1d,
+0x47, 0xf0, 0xb8, 0x0f,
+0x8f, 0xab, 0x70, 0x54,
+0x63, 0xaa, 0x9c, 0x55,
+0xf1, 0x1d, 0x0e, 0xe2,
+0xb8, 0xd5, 0x47, 0x2a,
+0x9d, 0xab, 0x62, 0x54,
+0xab, 0x71, 0x54, 0x8e,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x2a, 0x8e, 0xd5, 0x71,
+0x9d, 0x63, 0x62, 0x9c,
+0x0e, 0x46, 0xf1, 0xb9,
+0xf0, 0xc7, 0x0f, 0x38,
+0x1d, 0x9c, 0xe2, 0x63,
+0x55, 0x70, 0xaa, 0x8f,
+0xd4, 0x47, 0x2b, 0xb8,
+0x62, 0x0e, 0x9d, 0xf1,
+0x46, 0x54, 0xb9, 0xab,
+0x38, 0xe2, 0xc7, 0x1d,
+0xe3, 0x9d, 0x1c, 0x62,
+0x8f, 0x2b, 0x70, 0xd4,
+0x9c, 0x8f, 0x63, 0x70,
+0xf1, 0x39, 0x0e, 0xc6,
+0x70, 0xc6, 0x8f, 0x39,
+0x1d, 0xb8, 0xe2, 0x47,
+0x39, 0x70, 0xc6, 0x8f,
+0x54, 0xd4, 0xab, 0x2b,
+0x47, 0x0e, 0xb8, 0xf1,
+0xe2, 0xb9, 0x1d, 0x46,
+0x2b, 0x62, 0xd4, 0x9d,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x8e, 0x0f, 0x71, 0xf0,
+0xd4, 0xe3, 0x2b, 0x1c,
+0x71, 0x2a, 0x8e, 0xd5,
+0xc6, 0xe3, 0x39, 0x1c,
+0xb9, 0xf1, 0x46, 0x0e,
+0xc7, 0xe3, 0x38, 0x1c,
+0x2b, 0xaa, 0xd4, 0x55,
+0xc7, 0x2b, 0x38, 0xd4,
+0x8e, 0x9d, 0x71, 0x62,
+0xc7, 0xf1, 0x38, 0x0e,
+0xb9, 0x8f, 0x46, 0x70,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x63, 0x8e, 0x9c, 0x71,
+0x9d, 0x2b, 0x62, 0xd4,
+0x38, 0x46, 0xc7, 0xb9,
+0xf0, 0xb9, 0x0f, 0x46,
+0x0f, 0x9c, 0xf0, 0x63,
+0x1d, 0x9c, 0xe2, 0x63,
+0xd5, 0x47, 0x2a, 0xb8,
+0xd4, 0x47, 0x2b, 0xb8,
+0x46, 0x1c, 0xb9, 0xe3,
+0x46, 0xd4, 0xb9, 0x2b,
+0xe3, 0xe3, 0x1c, 0x1c,
+0xe3, 0x39, 0x1c, 0xc6,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x1c, 0x38, 0xe3, 0xc7,
+0xc6, 0x39, 0x39, 0xc6,
+0x54, 0xf0, 0xab, 0x0f,
+0x0f, 0x38, 0xf0, 0xc7,
+0x62, 0xaa, 0x9d, 0x55,
+0x55, 0x70, 0xaa, 0x8f,
+0xb8, 0x55, 0x47, 0xaa,
+0x62, 0x8e, 0x9d, 0x71,
+0xab, 0x55, 0x54, 0xaa,
+0x38, 0x0e, 0xc7, 0xf1,
+0xaa, 0x9d, 0x55, 0x62,
+0x0f, 0x62, 0xf0, 0x9d,
+0xaa, 0x8f, 0x55, 0x70,
+0x9d, 0x47, 0x62, 0xb8,
+0x62, 0x46, 0x9d, 0xb9,
+0x70, 0x54, 0x8f, 0xab,
+0x38, 0x9c, 0xc7, 0x63,
+0xf1, 0x9d, 0x0e, 0x62,
+0xc7, 0xc7, 0x38, 0x38,
+0x9d, 0x8f, 0x62, 0x70,
+0x47, 0x70, 0xb8, 0x8f,
+0x70, 0x8e, 0x8f, 0x71,
+0x63, 0x8e, 0x9c, 0x71,
+0x39, 0x0e, 0xc6, 0xf1,
+0x38, 0xc6, 0xc7, 0x39,
+0x0f, 0xaa, 0xf0, 0x55,
+0x0f, 0xb8, 0xf0, 0x47,
+0x9d, 0x9d, 0x62, 0x62,
+0x55, 0x54, 0xaa, 0xab,
+0xb8, 0x47, 0x47, 0xb8,
+0xe2, 0x9d, 0x1d, 0x62,
+0x63, 0x54, 0x9c, 0xab,
+0x9c, 0x0f, 0x63, 0xf0,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x70, 0xaa, 0x8f, 0x55,
+0x9d, 0xab, 0x62, 0x54,
+0xb9, 0x55, 0x46, 0xaa,
+0xf0, 0xd5, 0x0f, 0x2a,
+0xab, 0x9d, 0x54, 0x62,
+0x9d, 0x39, 0x62, 0xc6,
+0xaa, 0x47, 0x55, 0xb8,
+0x38, 0x70, 0xc7, 0x8f,
+0x62, 0x9c, 0x9d, 0x63,
+0x47, 0x46, 0xb8, 0xb9,
+0xf0, 0x8f, 0x0f, 0x70,
+0x2b, 0x9c, 0xd4, 0x63,
+0x55, 0x0e, 0xaa, 0xf1,
+0xc6, 0x47, 0x39, 0xb8,
+0x2a, 0xe2, 0xd5, 0x1d,
+0x47, 0x54, 0xb8, 0xab,
+0x8e, 0xab, 0x71, 0x54,
+0xe3, 0xd5, 0x1c, 0x2a,
+0xf1, 0x1d, 0x0e, 0xe2,
+0x9c, 0xf1, 0x63, 0x0e,
+0x9d, 0x2b, 0x62, 0xd4,
+0x38, 0x62, 0xc7, 0x9d,
+0xf0, 0xb9, 0x0f, 0x46,
+0x8f, 0x8f, 0x70, 0x70,
+0x1d, 0x9c, 0xe2, 0x63,
+0x71, 0x46, 0x8e, 0xb9,
+0xd4, 0xc7, 0x2b, 0x38,
+0x39, 0x1c, 0xc6, 0xe3,
+0x46, 0xf0, 0xb9, 0x0f,
+0xc7, 0xe3, 0x38, 0x1c,
+0x63, 0xaa, 0x9c, 0x55,
+0xc7, 0x2b, 0x38, 0xd4,
+0xb8, 0x9d, 0x47, 0x62,
+0xc7, 0xb9, 0x38, 0x46,
+0xab, 0x8f, 0x54, 0x70,
+0x0f, 0x1c, 0xf0, 0xe3,
+0x62, 0x8e, 0x9d, 0x71,
+0xd5, 0x63, 0x2a, 0x9c,
+0x38, 0x46, 0xc7, 0xb9,
+0xc6, 0x8f, 0x39, 0x70,
+0x0f, 0xd4, 0xf0, 0x2b,
+0x47, 0x8e, 0xb8, 0x71,
+0xd5, 0xb9, 0x2a, 0x46,
+0x2b, 0x46, 0xd4, 0xb9,
+0x0e, 0x1c, 0xf1, 0xe3,
+0x0e, 0xd4, 0xf1, 0x2b,
+0xd5, 0xe3, 0x2a, 0x1c,
+0xd5, 0x71, 0x2a, 0x8e,
+0xc6, 0x63, 0x39, 0x9c,
+0x0e, 0xc6, 0xf1, 0x39,
+0xc7, 0xc7, 0x38, 0x38,
+0x1d, 0xb8, 0xe2, 0x47,
+0x47, 0x70, 0xb8, 0x8f,
+0x54, 0x9c, 0xab, 0x63,
+0x63, 0x0e, 0x9c, 0xf1,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x38, 0x62, 0xc7, 0x9d,
+0x54, 0xaa, 0xab, 0x55,
+0x8f, 0x0f, 0x70, 0xf0,
+0xaa, 0x9d, 0x55, 0x62,
+0x71, 0x62, 0x8e, 0x9d,
+0xaa, 0xc7, 0x55, 0x38,
+0xb9, 0x47, 0x46, 0xb8,
+0x62, 0xf0, 0x9d, 0x0f,
+0x63, 0x54, 0x9c, 0xab,
+0x70, 0x2a, 0x8f, 0xd5,
+0xf0, 0x9d, 0x0f, 0x62,
+0xb9, 0xb9, 0x46, 0x46,
+0x9d, 0xc7, 0x62, 0x38,
+0x2b, 0x54, 0xd4, 0xab,
+0x70, 0x38, 0x8f, 0xc7,
+0xc6, 0x9d, 0x39, 0x62,
+0x71, 0xf0, 0x8e, 0x0f,
+0x8f, 0xc7, 0x70, 0x38,
+0x71, 0xaa, 0x8e, 0x55,
+0x71, 0xf0, 0x8e, 0x0f,
+0xb9, 0xd5, 0x46, 0x2a,
+0x71, 0xe2, 0x8e, 0x1d,
+0xab, 0xf1, 0x54, 0x0e,
+0xb9, 0x2b, 0x46, 0xd4,
+0x2a, 0xe2, 0xd5, 0x1d,
+0xe3, 0x71, 0x1c, 0x8e,
+0x8e, 0x2b, 0x71, 0xd4,
+0x1c, 0xc6, 0xe3, 0x39,
+0xf1, 0x39, 0x0e, 0xc6,
+0x1c, 0xf0, 0xe3, 0x0f,
+0x1d, 0x38, 0xe2, 0xc7,
+0x54, 0x62, 0xab, 0x9d,
+0x54, 0x38, 0xab, 0xc7,
+0xaa, 0x0f, 0x55, 0xf0,
+0x62, 0x70, 0x9d, 0x8f,
+0x62, 0x62, 0x9d, 0x9d,
+0x70, 0x46, 0x8f, 0xb9,
+0xb8, 0x8f, 0x47, 0x70,
+0x39, 0x9c, 0xc6, 0x63,
+0x63, 0xc6, 0x9c, 0x39,
+0xc7, 0x0f, 0x38, 0xf0,
+0x38, 0xb8, 0xc7, 0x47,
+0x47, 0xaa, 0xb8, 0x55,
+0x47, 0x9c, 0xb8, 0x63,
+0xab, 0x9d, 0x54, 0x62,
+0xe3, 0x0f, 0x1c, 0xf0,
+0xaa, 0x0f, 0x55, 0xf0,
+0x54, 0x62, 0xab, 0x9d,
+0x62, 0x2a, 0x9d, 0xd5,
+0xaa, 0x47, 0x55, 0xb8,
+0xb8, 0x71, 0x47, 0x8e,
+0x62, 0x9c, 0x9d, 0x63,
+0x2b, 0x46, 0xd4, 0xb9,
+0xf0, 0x0f, 0x0f, 0xf0,
+0x0e, 0x9c, 0xf1, 0x63,
+0x55, 0xe2, 0xaa, 0x1d,
+0xd5, 0x47, 0x2a, 0xb8,
+0xaa, 0x63, 0x55, 0x9c,
+0x46, 0x54, 0xb9, 0xab,
+0xe2, 0xc7, 0x1d, 0x38,
+0xe3, 0x55, 0x1c, 0xaa,
+0x54, 0x38, 0xab, 0xc7,
+0x9c, 0x1d, 0x63, 0xe2,
+0x62, 0x38, 0x9d, 0xc7,
+0xb8, 0x63, 0x47, 0x9c,
+0x70, 0xb8, 0x8f, 0x47,
+0xe3, 0x8f, 0x1c, 0x70,
+0x71, 0x1c, 0x8e, 0xe3,
+0x54, 0xc6, 0xab, 0x39,
+0xf1, 0x2b, 0x0e, 0xd4,
+0x2a, 0xf0, 0xd5, 0x0f,
+0xd5, 0x71, 0x2a, 0x8e,
+0x46, 0x62, 0xb9, 0x9d,
+0x0e, 0xc6, 0xf1, 0x39,
+0xab, 0xc7, 0x54, 0x38,
+0x1d, 0x38, 0xe2, 0xc7,
+0x62, 0x70, 0x9d, 0x8f,
+0x54, 0x70, 0xab, 0x8f,
+0x70, 0x0e, 0x8f, 0xf1,
+0x62, 0x8e, 0x9d, 0x71,
+0x39, 0x62, 0xc6, 0x9d,
+0x38, 0xc6, 0xc7, 0x39,
+0x8f, 0x8f, 0x70, 0x70,
+0x0f, 0xb8, 0xf0, 0x47,
+0x71, 0x8e, 0x8e, 0x71,
+0x55, 0xd4, 0xaa, 0x2b,
+0x39, 0x46, 0xc6, 0xb9,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x0f, 0x54, 0xf0, 0xab,
+0x1c, 0xaa, 0xe3, 0x55,
+0xd5, 0x1d, 0x2a, 0xe2,
+0x9c, 0x55, 0x63, 0xaa,
+0x8e, 0x2b, 0x71, 0xd4,
+0xb8, 0xd5, 0x47, 0x2a,
+0xf1, 0xb9, 0x0e, 0x46,
+0xab, 0xf1, 0x54, 0x0e,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x2a, 0x62, 0xd5, 0x9d,
+0xd4, 0x63, 0x2b, 0x9c,
+0x8e, 0x0f, 0x71, 0xf0,
+0xc6, 0xc7, 0x39, 0x38,
+0x71, 0xe2, 0x8e, 0x1d,
+0x47, 0xf0, 0xb8, 0x0f,
+0xb9, 0xab, 0x46, 0x54,
+0x63, 0xe2, 0x9c, 0x1d,
+0xe3, 0x1d, 0x1c, 0xe2,
+0xb8, 0x2b, 0x47, 0xd4,
+0x9c, 0xab, 0x63, 0x54,
+0xe3, 0x39, 0x1c, 0xc6,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x1c, 0xb8, 0xe3, 0x47,
+0x9d, 0x2b, 0x62, 0xd4,
+0x54, 0x54, 0xab, 0xab,
+0xf0, 0x39, 0x0f, 0xc6,
+0xe2, 0x9d, 0x1d, 0x62,
+0x1d, 0x70, 0xe2, 0x8f,
+0x9c, 0x47, 0x63, 0xb8,
+0x54, 0x0e, 0xab, 0xf1,
+0x70, 0x1c, 0x8f, 0xe3,
+0x2a, 0xaa, 0xd5, 0x55,
+0xf1, 0x63, 0x0e, 0x9c,
+0x8e, 0xd5, 0x71, 0x2a,
+0xd5, 0xc7, 0x2a, 0x38,
+0xb9, 0x71, 0x46, 0x8e,
+0x46, 0xf0, 0xb9, 0x0f,
+0x2b, 0xc6, 0xd4, 0x39,
+0x63, 0x2a, 0x9c, 0xd5,
+0x0e, 0x38, 0xf1, 0xc7,
+0xb8, 0xf1, 0x47, 0x0e,
+0x55, 0xb8, 0xaa, 0x47,
+0x2b, 0x62, 0xd4, 0x9d,
+0x62, 0x1c, 0x9d, 0xe3,
+0x8e, 0x47, 0x71, 0xb8,
+0xf0, 0xe3, 0x0f, 0x1c,
+0x71, 0x9c, 0x8e, 0x63,
+0xd5, 0xe3, 0x2a, 0x1c,
+0xf1, 0x47, 0x0e, 0xb8,
+0xc6, 0xe3, 0x39, 0x1c,
+0x55, 0xd4, 0xaa, 0x2b,
+0xc7, 0x63, 0x38, 0x9c,
+0xe2, 0xb9, 0x1d, 0x46,
+0xc7, 0x47, 0x38, 0xb8,
+0x1c, 0x9c, 0xe3, 0x63,
+0x47, 0x1c, 0xb8, 0xe3,
+0xd4, 0x8f, 0x2b, 0x70,
+0xe3, 0x2b, 0x1c, 0xd4,
+0x46, 0x0e, 0xb9, 0xf1,
+0xd4, 0xf1, 0x2b, 0x0e,
+0x2b, 0x2a, 0xd4, 0xd5,
+0x0e, 0x2a, 0xf1, 0xd5,
+0x8e, 0xf1, 0x71, 0x0e,
+0x9d, 0xf1, 0x62, 0x0e,
+0x39, 0x62, 0xc6, 0x9d,
+0x38, 0xe2, 0xc7, 0x1d,
+0x8f, 0x8f, 0x70, 0x70,
+0x8f, 0xab, 0x70, 0x54,
+0x71, 0x8e, 0x8e, 0x71,
+0xf1, 0xd5, 0x0e, 0x2a,
+0x39, 0xc6, 0xc6, 0x39,
+0x9d, 0xf1, 0x62, 0x0e,
+0x0f, 0x70, 0xf0, 0x8f,
+0x38, 0xaa, 0xc7, 0x55,
+0x55, 0x8e, 0xaa, 0x71,
+0x8f, 0x55, 0x70, 0xaa,
+0x2a, 0x8e, 0xd5, 0x71,
+0xb9, 0x55, 0x46, 0xaa,
+0x0e, 0xc6, 0xf1, 0x39,
+0xab, 0xd5, 0x54, 0x2a,
+0x1d, 0x38, 0xe2, 0xc7,
+0xaa, 0x71, 0x55, 0x8e,
+0x54, 0x70, 0xab, 0x8f,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x62, 0x46, 0x9d, 0xb9,
+0x0e, 0x62, 0xf1, 0x9d,
+0x38, 0xd4, 0xc7, 0x2b,
+0x9d, 0x8f, 0x62, 0x70,
+0xc7, 0x71, 0x38, 0x8e,
+0x70, 0x8e, 0x8f, 0x71,
+0x0f, 0x8e, 0xf0, 0x71,
+0x39, 0x8e, 0xc6, 0x71,
+0x1d, 0xc6, 0xe2, 0x39,
+0x0f, 0x46, 0xf0, 0xb9,
+0x1c, 0xb8, 0xe3, 0x47,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x54, 0x54, 0xab, 0xab,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xe2, 0x1d, 0x1d, 0xe2,
+0xc6, 0x71, 0x39, 0x8e,
+0x9c, 0xe3, 0x63, 0x1c,
+0x0f, 0x0e, 0xf0, 0xf1,
+0xf0, 0xab, 0x0f, 0x54,
+0x1d, 0xaa, 0xe2, 0x55,
+0xd5, 0x55, 0x2a, 0xaa,
+0x9c, 0x55, 0x63, 0xaa,
+0x8e, 0x1d, 0x71, 0xe2,
+0xb8, 0xd5, 0x47, 0x2a,
+0xb9, 0xab, 0x46, 0x54,
+0xab, 0xf1, 0x54, 0x0e,
+0xe3, 0x1d, 0x1c, 0xe2,
+0x2a, 0x2a, 0xd5, 0xd5,
+0x9c, 0x63, 0x63, 0x9c,
+0x8e, 0x39, 0x71, 0xc6,
+0xf0, 0xc7, 0x0f, 0x38,
+0x39, 0xb8, 0xc6, 0x47,
+0x55, 0xf0, 0xaa, 0x0f,
+0x47, 0x54, 0xb8, 0xab,
+0x62, 0xaa, 0x9d, 0x55,
+0xe3, 0x55, 0x1c, 0xaa,
+0xb8, 0x1d, 0x47, 0xe2,
+0x9c, 0x9d, 0x63, 0x62,
+0xab, 0x2b, 0x54, 0xd4,
+0xb8, 0x0f, 0x47, 0xf0,
+0xe2, 0xb9, 0x1d, 0x46,
+0x63, 0x62, 0x9c, 0x9d,
+0x1c, 0x1c, 0xe3, 0xe3,
+0xb8, 0x0f, 0x47, 0xf0,
+0xd4, 0xab, 0x2b, 0x54,
+0x63, 0x2a, 0x9c, 0xd5,
+0xc6, 0x1d, 0x39, 0xe2,
+0xb8, 0xf1, 0x47, 0x0e,
+0x8f, 0xab, 0x70, 0x54,
+0x2b, 0xaa, 0xd4, 0x55,
+0xf1, 0x1d, 0x0e, 0xe2,
+0x8e, 0xd5, 0x71, 0x2a,
+0x9d, 0xe3, 0x62, 0x1c,
+0xb9, 0x71, 0x46, 0x8e,
+0xf0, 0xe3, 0x0f, 0x1c,
+0x2b, 0x8e, 0xd4, 0x71,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x0e, 0x46, 0xf1, 0xb9,
+0xc6, 0xf1, 0x39, 0x0e,
+0x1d, 0xd4, 0xe2, 0x2b,
+0x0f, 0x62, 0xf0, 0x9d,
+0xd4, 0xb9, 0x2b, 0x46,
+0x9d, 0x0f, 0x62, 0xf0,
+0x0e, 0x54, 0xf1, 0xab,
+0x70, 0xe2, 0x8f, 0x1d,
+0xd5, 0x9d, 0x2a, 0x62,
+0xb9, 0x63, 0x46, 0x9c,
+0x8e, 0xc7, 0x71, 0x38,
+0xe3, 0xc7, 0x1c, 0x38,
+0x71, 0x38, 0x8e, 0xc7,
+0x54, 0xf0, 0xab, 0x0f,
+0x71, 0x38, 0x8e, 0xc7,
+0x62, 0xe2, 0x9d, 0x1d,
+0x71, 0x70, 0x8e, 0x8f,
+0xb8, 0xe3, 0x47, 0x1c,
+0x71, 0x8e, 0x8e, 0x71,
+0xe3, 0xe3, 0x1c, 0x1c,
+0x39, 0x0e, 0xc6, 0xf1,
+0xd4, 0xe3, 0x2b, 0x1c,
+0x0f, 0x2a, 0xf0, 0xd5,
+0xc6, 0xab, 0x39, 0x54,
+0x9d, 0xf1, 0x62, 0x0e,
+0xc7, 0x55, 0x38, 0xaa,
+0x38, 0xaa, 0xc7, 0x55,
+0x8f, 0x9d, 0x70, 0x62,
+0x8f, 0x9d, 0x70, 0x62,
+0xb9, 0x8f, 0x46, 0x70,
+0xb9, 0xc7, 0x46, 0x38,
+0x63, 0xc6, 0x9c, 0x39,
+0x63, 0x38, 0x9c, 0xc7,
+0x38, 0x38, 0xc7, 0xc7,
+0x70, 0xb8, 0x8f, 0x47,
+0x47, 0xb8, 0xb8, 0x47,
+0x71, 0x9c, 0x8e, 0x63,
+0x63, 0xd4, 0x9c, 0x2b,
+0xf1, 0x0f, 0x0e, 0xf0,
+0xf0, 0xf1, 0x0f, 0x0e,
+0x55, 0xaa, 0xaa, 0x55,
+0x1d, 0x62, 0xe2, 0x9d,
+0xaa, 0x55, 0x55, 0xaa,
+0x9c, 0x47, 0x63, 0xb8,
+0xaa, 0x1d, 0x55, 0xe2,
+0x70, 0x54, 0x8f, 0xab,
+0xaa, 0xab, 0x55, 0x54,
+0xf1, 0x55, 0x0e, 0xaa,
+0xe2, 0xd5, 0x1d, 0x2a,
+0x9d, 0x55, 0x62, 0xaa,
+0x9c, 0x71, 0x63, 0x8e,
+0xb8, 0x1d, 0x47, 0xe2,
+0x38, 0x8e, 0xc7, 0x71,
+0xab, 0xab, 0x54, 0x54,
+0x0f, 0x0e, 0xf0, 0xf1,
+0xe2, 0x9d, 0x1d, 0x62,
+0x1d, 0x62, 0xe2, 0x9d,
+0x9c, 0x47, 0x63, 0xb8,
+0x9c, 0x0f, 0x63, 0xf0,
+0x70, 0x1c, 0x8f, 0xe3,
+0x70, 0xaa, 0x8f, 0x55,
+0xf1, 0xab, 0x0e, 0x54,
+0xb9, 0xd5, 0x46, 0x2a,
+0xd5, 0xd5, 0x2a, 0x2a,
+0xab, 0x71, 0x54, 0x8e,
+0x8e, 0x39, 0x71, 0xc6,
+0x2a, 0xc6, 0xd5, 0x39,
+0x39, 0x70, 0xc6, 0x8f,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x47, 0xc6, 0xb8, 0x39,
+0x55, 0xaa, 0xaa, 0x55,
+0x2b, 0x70, 0xd4, 0x8f,
+0xaa, 0x1d, 0x55, 0xe2,
+0x46, 0x46, 0xb9, 0xb9,
+0xaa, 0xe3, 0x55, 0x1c,
+0x2b, 0x54, 0xd4, 0xab,
+0xe2, 0x2b, 0x1d, 0xd4,
+0xc6, 0x55, 0x39, 0xaa,
+0xd4, 0xf1, 0x2b, 0x0e,
+0x8f, 0x1d, 0x70, 0xe2,
+0x0e, 0xaa, 0xf1, 0x55,
+0xb9, 0xe3, 0x46, 0x1c,
+0x9d, 0xd5, 0x62, 0x2a,
+0xe3, 0x63, 0x1c, 0x9c,
+0xb8, 0x39, 0x47, 0xc6,
+0xd4, 0x8f, 0x2b, 0x70,
+0x2b, 0x38, 0xd4, 0xc7,
+0x46, 0x0e, 0xb9, 0xf1,
+0x46, 0xf0, 0xb9, 0x0f,
+0x2b, 0xe2, 0xd4, 0x1d,
+0x63, 0x2a, 0x9c, 0xd5,
+0x8e, 0x2b, 0x71, 0xd4,
+0xb8, 0xf1, 0x47, 0x0e,
+0xf1, 0xb9, 0x0e, 0x46,
+0x2b, 0xe2, 0xd4, 0x1d,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x8e, 0x63, 0x71, 0x9c,
+0xd4, 0xe3, 0x2b, 0x1c,
+0xf1, 0x0f, 0x0e, 0xf0,
+0xc6, 0xe3, 0x39, 0x1c,
+0x55, 0xe2, 0xaa, 0x1d,
+0xc7, 0x63, 0x38, 0x9c,
+0xaa, 0xab, 0x55, 0x54,
+0xc7, 0x47, 0x38, 0xb8,
+0xe2, 0x9d, 0x1d, 0x62,
+0x47, 0x54, 0xb8, 0xab,
+0x9c, 0x8f, 0x63, 0x70,
+0xe3, 0x1d, 0x1c, 0xe2,
+0x70, 0x0e, 0x8f, 0xf1,
+0x9c, 0xab, 0x63, 0x54,
+0x39, 0x2a, 0xc6, 0xd5,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x8f, 0xb9, 0x70, 0x46,
+0x9d, 0xb9, 0x62, 0x46,
+0x39, 0x54, 0xc6, 0xab,
+0x38, 0xd4, 0xc7, 0x2b,
+0xc7, 0x9d, 0x38, 0x62,
+0xc7, 0xb9, 0x38, 0x46,
+0x8f, 0x8f, 0x70, 0x70,
+0x0f, 0x9c, 0xf0, 0x63,
+0x71, 0x8e, 0x8e, 0x71,
+0xd5, 0xc7, 0x2a, 0x38,
+0x39, 0x46, 0xc6, 0xb9,
+0x46, 0xf0, 0xb9, 0x0f,
+0x0f, 0xd4, 0xf0, 0x2b,
+0x63, 0xaa, 0x9c, 0x55,
+0xd5, 0x39, 0x2a, 0xc6,
+0xb8, 0x55, 0x47, 0xaa,
+0x0e, 0xb8, 0xf1, 0x47,
+0xab, 0xd5, 0x54, 0x2a,
+0x55, 0x1c, 0xaa, 0xe3,
+0xaa, 0x71, 0x55, 0x8e,
+0xe2, 0x63, 0x1d, 0x9c,
+0x2a, 0x46, 0xd5, 0xb9,
+0xd4, 0x47, 0x2b, 0xb8,
+0x0e, 0x1c, 0xf1, 0xe3,
+0x46, 0xd4, 0xb9, 0x2b,
+0xd5, 0xe3, 0x2a, 0x1c,
+0xe3, 0x71, 0x1c, 0x8e,
+0xc6, 0x2b, 0x39, 0xd4,
+0x1c, 0xc6, 0xe3, 0x39,
+0xc7, 0x39, 0x38, 0xc6,
+0x1c, 0xb8, 0xe3, 0x47,
+0x0f, 0x38, 0xf0, 0xc7,
+0x54, 0x9c, 0xab, 0x63,
+0x55, 0x38, 0xaa, 0xc7,
+0xe2, 0x47, 0x1d, 0xb8,
+0x62, 0x70, 0x9d, 0x8f,
+0x54, 0x54, 0xab, 0xab,
+0x70, 0x0e, 0x8f, 0xf1,
+0xe2, 0x9d, 0x1d, 0x62,
+0x39, 0x62, 0xc6, 0x9d,
+0x9c, 0xc7, 0x63, 0x38,
+0x8f, 0x0f, 0x70, 0xf0,
+0x70, 0xb8, 0x8f, 0x47,
+0x71, 0xaa, 0x8e, 0x55,
+0x71, 0xd4, 0x8e, 0x2b,
+0xb9, 0xd5, 0x46, 0x2a,
+0xf1, 0xf1, 0x0e, 0x0e,
+0xab, 0xf1, 0x54, 0x0e,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x2a, 0x62, 0xd5, 0x9d,
+0x9c, 0x71, 0x63, 0x8e,
+0x8e, 0x0f, 0x71, 0xf0,
+0x38, 0xc6, 0xc7, 0x39,
+0x71, 0xaa, 0x8e, 0x55,
+0x0f, 0xf0, 0xf0, 0x0f,
+0xb9, 0x9d, 0x46, 0x62,
+0x55, 0xe2, 0xaa, 0x1d,
+0xab, 0x47, 0x54, 0xb8,
+0xaa, 0x2b, 0x55, 0xd4,
+0x62, 0x54, 0x9d, 0xab,
+0xe2, 0x71, 0x1d, 0x8e,
+0xf0, 0x55, 0x0f, 0xaa,
+0x1c, 0x8e, 0xe3, 0x71,
+0x9d, 0x1d, 0x62, 0xe2,
+0x1c, 0x46, 0xe3, 0xb9,
+0xb8, 0x2b, 0x47, 0xd4,
+0x1c, 0x9c, 0xe3, 0x63,
+0xe3, 0x39, 0x1c, 0xc6,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x1c, 0x38, 0xe3, 0xc7,
+0x46, 0x2a, 0xb9, 0xd5,
+0x54, 0xf0, 0xab, 0x0f,
+0xab, 0x39, 0x54, 0xc6,
+0x62, 0x2a, 0x9d, 0xd5,
+0x2a, 0x70, 0xd5, 0x8f,
+0xb8, 0x71, 0x47, 0x8e,
+0x46, 0x8e, 0xb9, 0x71,
+0x2b, 0xc6, 0xd4, 0x39,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x0e, 0x38, 0xf1, 0xc7,
+0x0e, 0xe2, 0xf1, 0x1d,
+0x55, 0xf0, 0xaa, 0x0f,
+0x9d, 0x63, 0x62, 0x9c,
+0x62, 0x62, 0x9d, 0x9d,
+0xf0, 0x47, 0x0f, 0xb8,
+0xb8, 0x8f, 0x47, 0x70,
+0x55, 0x9c, 0xaa, 0x63,
+0x63, 0x46, 0x9c, 0xb9,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x38, 0x54, 0xc7, 0xab,
+0x54, 0xaa, 0xab, 0x55,
+0xc7, 0x1d, 0x38, 0xe2,
+0xaa, 0x9d, 0x55, 0x62,
+0x8f, 0x63, 0x70, 0x9c,
+0xaa, 0x8f, 0x55, 0x70,
+0xf1, 0x47, 0x0e, 0xb8,
+0x62, 0xc6, 0x9d, 0x39,
+0x55, 0x54, 0xaa, 0xab,
+0x38, 0x70, 0xc7, 0x8f,
+0xe2, 0x9d, 0x1d, 0x62,
+0x47, 0x46, 0xb8, 0xb9,
+0x9c, 0x8f, 0x63, 0x70,
+0x2b, 0x1c, 0xd4, 0xe3,
+0x70, 0x0e, 0x8f, 0xf1,
+0xc6, 0xab, 0x39, 0x54,
+0x39, 0xe2, 0xc6, 0x1d,
+0xc7, 0xd5, 0x38, 0x2a,
+0x8f, 0xab, 0x70, 0x54,
+0x8f, 0xb9, 0x70, 0x46,
+0xf1, 0x9d, 0x0e, 0x62,
+0x39, 0xd4, 0xc6, 0x2b,
+0x9d, 0xc7, 0x62, 0x38,
+0xc7, 0x71, 0x38, 0x8e,
+0x70, 0xb8, 0x8f, 0x47,
+0x0f, 0x8e, 0xf0, 0x71,
+0x71, 0x9c, 0x8e, 0x63,
+0x1d, 0xc6, 0xe2, 0x39,
+0xf1, 0x47, 0x0e, 0xb8,
+0x1c, 0xf0, 0xe3, 0x0f,
+0x55, 0x1c, 0xaa, 0xe3,
+0x54, 0x62, 0xab, 0x9d,
+0xe2, 0x2b, 0x1d, 0xd4,
+0xaa, 0x47, 0x55, 0xb8,
+0xd4, 0x71, 0x2b, 0x8e,
+0x62, 0x1c, 0x9d, 0xe3,
+0x0e, 0x46, 0xf1, 0xb9,
+0xf0, 0xe3, 0x0f, 0x1c,
+0x1d, 0x9c, 0xe2, 0x63,
+0xd5, 0x63, 0x2a, 0x9c,
+0xd4, 0x47, 0x2b, 0xb8,
+0xc6, 0x0f, 0x39, 0xf0,
+0x46, 0xd4, 0xb9, 0x2b,
+0x47, 0xe2, 0xb8, 0x1d,
+0xe3, 0xb9, 0x1c, 0x46,
+0xab, 0x2b, 0x54, 0xd4,
+0x1c, 0x1c, 0xe3, 0xe3,
+0xe2, 0x39, 0x1d, 0xc6,
+0xd4, 0x63, 0x2b, 0x9c,
+0x1c, 0x38, 0xe3, 0xc7,
+0xc6, 0x0f, 0x39, 0xf0,
+0x54, 0xf0, 0xab, 0x0f,
+0x47, 0x2a, 0xb8, 0xd5,
+0x62, 0xaa, 0x9d, 0x55,
+0xab, 0x71, 0x54, 0x8e,
+0xb8, 0x1d, 0x47, 0xe2,
+0x2a, 0x8e, 0xd5, 0x71,
+0xab, 0x63, 0x54, 0x9c,
+0x0e, 0x0e, 0xf1, 0xf1,
+0xe2, 0xc7, 0x1d, 0x38,
+0x1d, 0x62, 0xe2, 0x9d,
+0x54, 0x70, 0xab, 0x8f,
+0x9c, 0x0f, 0x63, 0xf0,
+0x62, 0x0e, 0x9d, 0xf1,
+0x70, 0x62, 0x8f, 0x9d,
+0x38, 0xaa, 0xc7, 0x55,
+0xb9, 0x8f, 0x46, 0x70,
+0x8f, 0xd5, 0x70, 0x2a,
+0x63, 0x8e, 0x9c, 0x71,
+0xb9, 0x39, 0x46, 0xc6,
+0x38, 0xc6, 0xc7, 0x39,
+0x2b, 0xb8, 0xd4, 0x47,
+0x0f, 0x38, 0xf0, 0xc7,
+0x46, 0x9c, 0xb9, 0x63,
+0x55, 0xf0, 0xaa, 0x0f,
+0xe3, 0x47, 0x1c, 0xb8,
+0x62, 0x2a, 0x9d, 0xd5,
+0x54, 0x54, 0xab, 0xab,
+0xb8, 0x39, 0x47, 0xc6,
+0xe2, 0x9d, 0x1d, 0x62,
+0x2b, 0x70, 0xd4, 0x8f,
+0x9c, 0x0f, 0x63, 0xf0,
+0x46, 0x0e, 0xb9, 0xf1,
+0x70, 0xe2, 0x8f, 0x1d,
+0x2b, 0xaa, 0xd4, 0x55,
+0xb9, 0x2b, 0x46, 0xd4,
+0x8e, 0xd5, 0x71, 0x2a,
+0xe3, 0xf1, 0x1c, 0x0e,
+0xb9, 0x39, 0x46, 0xc6,
+0x1c, 0xe2, 0xe3, 0x1d,
+0x2b, 0x38, 0xd4, 0xc7,
+0x9c, 0x2b, 0x63, 0xd4,
+0x46, 0x38, 0xb9, 0xc7,
+0xf0, 0xf1, 0x0f, 0x0e,
+0x63, 0xb8, 0x9c, 0x47,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x70, 0x54, 0x8f, 0xab,
+0x9c, 0xb9, 0x63, 0x46,
+0xf1, 0x1d, 0x0e, 0xe2,
+0x38, 0xd4, 0xc7, 0x2b,
+0x9d, 0xab, 0x62, 0x54,
+0xc7, 0x71, 0x38, 0x8e,
+0xf0, 0x9d, 0x0f, 0x62,
+0x0f, 0x8e, 0xf0, 0x71,
+0x9d, 0x8f, 0x62, 0x70,
+0x1d, 0x46, 0xe2, 0xb9,
+0x70, 0x46, 0x8f, 0xb9,
+0x1c, 0x9c, 0xe3, 0x63,
+0x39, 0x1c, 0xc6, 0xe3,
+0xd4, 0xc7, 0x2b, 0x38,
+0xc7, 0x2b, 0x38, 0xd4,
+0x46, 0xb8, 0xb9, 0x47,
+0xc7, 0xf1, 0x38, 0x0e,
+0x63, 0x9c, 0x9c, 0x63,
+0x0f, 0x2a, 0xf0, 0xd5,
+0xf0, 0x8f, 0x0f, 0x70,
+0x9d, 0xb9, 0x62, 0x46,
+0x55, 0x46, 0xaa, 0xb9,
+0x38, 0x54, 0xc7, 0xab,
+0x2a, 0x9c, 0xd5, 0x63,
+0xc7, 0x55, 0x38, 0xaa,
+0xc6, 0x8f, 0x39, 0x70,
+0x8f, 0xd5, 0x70, 0x2a,
+0x47, 0x8e, 0xb8, 0x71,
+0xb9, 0xb9, 0x46, 0x46,
+0x2b, 0xc6, 0xd4, 0x39,
+0x2b, 0x1c, 0xd4, 0xe3,
+0x0e, 0x38, 0xf1, 0xc7,
+0xc6, 0xe3, 0x39, 0x1c,
+0x55, 0xf0, 0xaa, 0x0f,
+0xc7, 0x63, 0x38, 0x9c,
+0x62, 0xaa, 0x9d, 0x55,
+0xc7, 0x47, 0x38, 0xb8,
+0xb8, 0x9d, 0x47, 0x62,
+0x47, 0x9c, 0xb8, 0x63,
+0xab, 0x8f, 0x54, 0x70,
+0xe3, 0x0f, 0x1c, 0xf0,
+0x62, 0x0e, 0x9d, 0xf1,
+0x54, 0x62, 0xab, 0x9d,
+0x38, 0x2a, 0xc7, 0xd5,
+0xaa, 0x8f, 0x55, 0x70,
+0x8f, 0x71, 0x70, 0x8e,
+0x62, 0x8e, 0x9d, 0x71,
+0x39, 0x46, 0xc6, 0xb9,
+0x38, 0xc6, 0xc7, 0x39,
+0x0f, 0x9c, 0xf0, 0x63,
+0x0f, 0xb8, 0xf0, 0x47,
+0xd5, 0x8f, 0x2a, 0x70,
+0x55, 0x54, 0xaa, 0xab,
+0x46, 0x46, 0xb9, 0xb9,
+0xe2, 0xd5, 0x1d, 0x2a,
+0x2b, 0x54, 0xd4, 0xab,
+0x9c, 0x39, 0x63, 0xc6,
+0xc6, 0x1d, 0x39, 0xe2,
+0x38, 0xf0, 0xc7, 0x0f,
+0x8f, 0xab, 0x70, 0x54,
+0x47, 0xaa, 0xb8, 0x55,
+0xf1, 0x9d, 0x0e, 0x62,
+0xab, 0xd5, 0x54, 0x2a,
+0x9d, 0x0f, 0x62, 0xf0,
+0xaa, 0x71, 0x55, 0x8e,
+0x70, 0x62, 0x8f, 0x9d,
+0x2a, 0x8e, 0xd5, 0x71,
+0xb9, 0x47, 0x46, 0xb8,
+0x0e, 0xc6, 0xf1, 0x39,
+0x63, 0xd4, 0x9c, 0x2b,
+0x1d, 0x38, 0xe2, 0xc7,
+0xf0, 0x71, 0x0f, 0x8e,
+0x54, 0xb8, 0xab, 0x47,
+0x1d, 0x0e, 0xe2, 0xf1,
+0x62, 0x54, 0x9d, 0xab,
+0x1c, 0x62, 0xe3, 0x9d,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x9c, 0x8f, 0x63, 0x70,
+0x9d, 0x2b, 0x62, 0xd4,
+0x70, 0x46, 0x8f, 0xb9,
+0xf0, 0xb9, 0x0f, 0x46,
+0x39, 0x9c, 0xc6, 0x63,
+0x1d, 0xd4, 0xe2, 0x2b,
+0xc7, 0x47, 0x38, 0xb8,
+0xd4, 0xb9, 0x2b, 0x46,
+0x47, 0x1c, 0xb8, 0xe3,
+0x0e, 0x9c, 0xf1, 0x63,
+0xe3, 0xe3, 0x1c, 0x1c,
+0xd5, 0x0f, 0x2a, 0xf0,
+0xd4, 0x63, 0x2b, 0x9c,
+0x46, 0x2a, 0xb9, 0xd5,
+0xc6, 0xc7, 0x39, 0x38,
+0xab, 0xf1, 0x54, 0x0e,
+0x47, 0x38, 0xb8, 0xc7,
+0x2a, 0xaa, 0xd5, 0x55,
+0x63, 0x70, 0x9c, 0x8f,
+0x8e, 0x1d, 0x71, 0xe2,
+0x70, 0xc6, 0x8f, 0x39,
+0xb9, 0xab, 0x46, 0x54,
+0x39, 0xf0, 0xc6, 0x0f,
+0xe3, 0xd5, 0x1c, 0x2a,
+0x47, 0x2a, 0xb8, 0xd5,
+0x9c, 0xb9, 0x63, 0x46,
+0xab, 0x39, 0x54, 0xc6,
+0x38, 0x1c, 0xc7, 0xe3,
+0x2a, 0xb8, 0xd5, 0x47,
+0xc7, 0x63, 0x38, 0x9c,
+0x46, 0x9c, 0xb9, 0x63,
+0xc7, 0xc7, 0x38, 0x38,
+0xe3, 0x8f, 0x1c, 0x70,
+0x47, 0x38, 0xb8, 0xc7,
+0x54, 0x8e, 0xab, 0x71,
+0x63, 0x38, 0x9c, 0xc7,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x70, 0x70, 0x8f, 0x8f,
+0x0e, 0xaa, 0xf1, 0x55,
+0x71, 0xc6, 0x8e, 0x39,
+0x9d, 0xd5, 0x62, 0x2a,
+0x39, 0x70, 0xc6, 0x8f,
+0xb8, 0xf1, 0x47, 0x0e,
+0x47, 0x8e, 0xb8, 0x71,
+0x2b, 0xaa, 0xd4, 0x55,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x8e, 0x1d, 0x71, 0xe2,
+0x0e, 0xe2, 0xf1, 0x1d,
+0xb9, 0xe3, 0x46, 0x1c,
+0x9d, 0xe3, 0x62, 0x1c,
+0xe3, 0x63, 0x1c, 0x9c,
+0xf0, 0x2b, 0x0f, 0xd4,
+0xd4, 0x8f, 0x2b, 0x70,
+0xd5, 0x39, 0x2a, 0xc6,
+0x46, 0x46, 0xb9, 0xb9,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x55, 0x2a, 0xaa, 0xd5,
+0xc6, 0x71, 0x39, 0x8e,
+0xaa, 0xf1, 0x55, 0x0e,
+0x0f, 0x46, 0xf0, 0xb9,
+0x2a, 0xaa, 0xd5, 0x55,
+0x1d, 0x54, 0xe2, 0xab,
+0x8e, 0x55, 0x71, 0xaa,
+0xd4, 0xd5, 0x2b, 0x2a,
+0xb9, 0x1d, 0x46, 0xe2,
+0x8e, 0xf1, 0x71, 0x0e,
+0xab, 0xe3, 0x54, 0x1c,
+0x39, 0x2a, 0xc6, 0xd5,
+0xe2, 0xe3, 0x1d, 0x1c,
+0x8f, 0x71, 0x70, 0x8e,
+0xd4, 0xab, 0x2b, 0x54,
+0x39, 0x0e, 0xc6, 0xf1,
+0xc6, 0xd5, 0x39, 0x2a,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x8f, 0xb9, 0x70, 0x46,
+0x9d, 0xab, 0x62, 0x54,
+0x39, 0x54, 0xc6, 0xab,
+0xf0, 0xd5, 0x0f, 0x2a,
+0xc7, 0x9d, 0x38, 0x62,
+0x9d, 0xb9, 0x62, 0x46,
+0x8f, 0x47, 0x70, 0xb8,
+0x38, 0x9c, 0xc7, 0x63,
+0x71, 0x9c, 0x8e, 0x63,
+0xc7, 0xc7, 0x38, 0x38,
+0xf1, 0x8f, 0x0e, 0x70,
+0x47, 0xf0, 0xb8, 0x0f,
+0x55, 0x8e, 0xaa, 0x71,
+0x63, 0x62, 0x9c, 0x9d,
+0x2a, 0x0e, 0xd5, 0xf1,
+0xb8, 0x47, 0x47, 0xb8,
+0x0e, 0xaa, 0xf1, 0x55,
+0x63, 0xd4, 0x9c, 0x2b,
+0x9d, 0x1d, 0x62, 0xe2,
+0xf0, 0x71, 0x0f, 0x8e,
+0xb8, 0xab, 0x47, 0x54,
+0x1d, 0x8e, 0xe2, 0x71,
+0xe3, 0x55, 0x1c, 0xaa,
+0x1c, 0x0e, 0xe3, 0xf1,
+0x9c, 0x1d, 0x63, 0xe2,
+0x1c, 0x2a, 0xe3, 0xd5,
+0xb8, 0x2b, 0x47, 0xd4,
+0x9c, 0xb9, 0x63, 0x46,
+0xe3, 0x39, 0x1c, 0xc6,
+0x38, 0x1c, 0xc7, 0xe3,
+0x1c, 0xb8, 0xe3, 0x47,
+0xc7, 0x2b, 0x38, 0xd4,
+0x54, 0x9c, 0xab, 0x63,
+0xc7, 0x39, 0x38, 0xc6,
+0xe2, 0x8f, 0x1d, 0x70,
+0x0f, 0x70, 0xf0, 0x8f,
+0x54, 0x8e, 0xab, 0x71,
+0x55, 0x0e, 0xaa, 0xf1,
+0x2a, 0x46, 0xd5, 0xb9,
+0x2a, 0x62, 0xd5, 0x9d,
+0x0e, 0x54, 0xf1, 0xab,
+0x8e, 0xc7, 0x71, 0x38,
+0xd5, 0xd5, 0x2a, 0x2a,
+0x71, 0x70, 0x8e, 0x8f,
+0x8e, 0xf1, 0x71, 0x0e,
+0x71, 0xc6, 0x8e, 0x39,
+0x39, 0xe2, 0xc6, 0x1d,
+0x39, 0xf0, 0xc6, 0x0f,
+0x8f, 0xe3, 0x70, 0x1c,
+0x47, 0xaa, 0xb8, 0x55,
+0xf1, 0xab, 0x0e, 0x54,
+0xab, 0xd5, 0x54, 0x2a,
+0xd5, 0x1d, 0x2a, 0xe2,
+0xaa, 0x71, 0x55, 0x8e,
+0x8e, 0x63, 0x71, 0x9c,
+0x2a, 0xc6, 0xd5, 0x39,
+0xf1, 0x47, 0x0e, 0xb8,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x55, 0xd4, 0xaa, 0x2b,
+0x55, 0x62, 0xaa, 0x9d,
+0xe2, 0x71, 0x1d, 0x8e,
+0xaa, 0x47, 0x55, 0xb8,
+0x1c, 0x46, 0xe3, 0xb9,
+0x62, 0x1c, 0x9d, 0xe3,
+0x1c, 0x54, 0xe3, 0xab,
+0xf0, 0x2b, 0x0f, 0xd4,
+0xd4, 0x9d, 0x2b, 0x62,
+0xd5, 0x39, 0x2a, 0xc6,
+0x8e, 0x47, 0x71, 0xb8,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x71, 0xd4, 0x8e, 0x2b,
+0x55, 0xe2, 0xaa, 0x1d,
+0xf1, 0x71, 0x0e, 0x8e,
+0xaa, 0xe3, 0x55, 0x1c,
+0x1d, 0x46, 0xe2, 0xb9,
+0xe2, 0x63, 0x1d, 0x9c,
+0x1c, 0x54, 0xe3, 0xab,
+0xd4, 0x0f, 0x2b, 0xf0,
+0xd4, 0x1d, 0x2b, 0xe2,
+0x46, 0x2a, 0xb9, 0xd5,
+0x8e, 0xe3, 0x71, 0x1c,
+0xab, 0xf1, 0x54, 0x0e,
+0xf1, 0x2b, 0x0e, 0xd4,
+0x2a, 0xe2, 0xd5, 0x1d,
+0xd5, 0x71, 0x2a, 0x8e,
+0x8e, 0x63, 0x71, 0x9c,
+0x0e, 0xc6, 0xf1, 0x39,
+0xf1, 0xc7, 0x0e, 0x38,
+0x1d, 0xf0, 0xe2, 0x0f,
+0x55, 0x70, 0xaa, 0x8f,
+0x54, 0x62, 0xab, 0x9d,
+0x62, 0x0e, 0x9d, 0xf1,
+0xaa, 0x47, 0x55, 0xb8,
+0x38, 0x62, 0xc7, 0x9d,
+0x62, 0x9c, 0x9d, 0x63,
+0x8f, 0x47, 0x70, 0xb8,
+0xf0, 0x8f, 0x0f, 0x70,
+0x71, 0x9c, 0x8e, 0x63,
+0x55, 0xc6, 0xaa, 0x39,
+0xf1, 0x47, 0x0e, 0xb8,
+0x2a, 0xf0, 0xd5, 0x0f,
+0x55, 0x54, 0xaa, 0xab,
+0x46, 0x62, 0xb9, 0x9d,
+0xe2, 0xd5, 0x1d, 0x2a,
+0xab, 0x47, 0x54, 0xb8,
+0x9c, 0x39, 0x63, 0xc6,
+0x62, 0x1c, 0x9d, 0xe3,
+0x38, 0x70, 0xc7, 0x8f,
+0xf0, 0xab, 0x0f, 0x54,
+0x47, 0x8e, 0xb8, 0x71,
+0xd5, 0x9d, 0x2a, 0x62,
+0x2b, 0x46, 0xd4, 0xb9,
+0x8e, 0x0f, 0x71, 0xf0,
+0x0e, 0xd4, 0xf1, 0x2b,
+0x71, 0xe2, 0x8e, 0x1d,
+0xd5, 0xf1, 0x2a, 0x0e,
+0xb9, 0x63, 0x46, 0x9c,
+0x0e, 0xe2, 0xf1, 0x1d,
+0xe3, 0xc7, 0x1c, 0x38,
+0x9d, 0x2b, 0x62, 0xd4,
+0x54, 0x70, 0xab, 0x8f,
+0xf0, 0x39, 0x0f, 0xc6,
+0x62, 0x8e, 0x9d, 0x71,
+0x1d, 0x70, 0xe2, 0x8f,
+0x38, 0x46, 0xc7, 0xb9,
+0x54, 0x8e, 0xab, 0x71,
+0x0f, 0x1c, 0xf0, 0xe3,
+0x2a, 0x8e, 0xd5, 0x71,
+0xd5, 0x63, 0x2a, 0x9c,
+0x0e, 0x46, 0xf1, 0xb9,
+0xc6, 0xc7, 0x39, 0x38,
+0x1d, 0xd4, 0xe2, 0x2b,
+0x47, 0x70, 0xb8, 0x8f,
+0xd4, 0xb9, 0x2b, 0x46,
+0x63, 0x0e, 0x9c, 0xf1,
+0x0e, 0x1c, 0xf1, 0xe3,
+0x38, 0xe2, 0xc7, 0x1d,
+0xd5, 0xab, 0x2a, 0x54,
+0x8f, 0x63, 0x70, 0x9c,
+0xc6, 0x9d, 0x39, 0x62,
+0xf1, 0xc7, 0x0e, 0x38,
+0x8f, 0xc7, 0x70, 0x38,
+0x55, 0xb8, 0xaa, 0x47,
+0x71, 0x70, 0x8e, 0x8f,
+0x62, 0xd4, 0x9d, 0x2b,
+0x71, 0x46, 0x8e, 0xb9,
+0xf0, 0xf1, 0x0f, 0x0e,
+0x39, 0x9c, 0xc6, 0x63,
+0x1d, 0xe2, 0xe2, 0x1d,
+0xc7, 0x47, 0x38, 0xb8,
+0x9c, 0xab, 0x63, 0x54,
+0x47, 0x1c, 0xb8, 0xe3,
+0xf0, 0x9d, 0x0f, 0x62,
+0xe3, 0xab, 0x1c, 0x54,
+0x9d, 0x0f, 0x62, 0xf0,
+0xd4, 0x55, 0x2b, 0xaa,
+0x70, 0x2a, 0x8f, 0xd5,
+0x8e, 0x9d, 0x71, 0x62,
+0xb9, 0xf1, 0x46, 0x0e,
+0xb9, 0xc7, 0x46, 0x38,
+0x2b, 0xe2, 0xd4, 0x1d,
+0x63, 0x38, 0x9c, 0xc7,
+0x8e, 0x2b, 0x71, 0xd4,
+0x70, 0xf0, 0x8f, 0x0f,
+0xf1, 0xb9, 0x0e, 0x46,
+0x71, 0xe2, 0x8e, 0x1d,
+0x1d, 0xd4, 0xe2, 0x2b,
+0xb9, 0x63, 0x46, 0x9c,
+0xd4, 0xf1, 0x2b, 0x0e,
+0xe3, 0x0f, 0x1c, 0xf0,
+0x0e, 0x2a, 0xf1, 0xd5,
+0x54, 0xe2, 0xab, 0x1d,
+0x9d, 0x39, 0x62, 0xc6,
+0xaa, 0x63, 0x55, 0x9c,
+0x38, 0x70, 0xc7, 0x8f,
+0xe2, 0x8f, 0x1d, 0x70,
+0x47, 0x46, 0xb8, 0xb9,
+0x54, 0x8e, 0xab, 0x71,
+0x2b, 0x1c, 0xd4, 0xe3,
+0x2a, 0x0e, 0xd5, 0xf1,
+0xc6, 0x63, 0x39, 0x9c,
+0x0e, 0xe2, 0xf1, 0x1d,
+0xc7, 0xc7, 0x38, 0x38,
+0x9d, 0xab, 0x62, 0x54,
+0x47, 0x70, 0xb8, 0x8f,
+0xf0, 0x9d, 0x0f, 0x62,
+0x63, 0x8e, 0x9c, 0x71,
+0x9d, 0x0f, 0x62, 0xf0,
+0x38, 0x46, 0xc7, 0xb9,
+0x70, 0xaa, 0x8f, 0x55,
+0x0f, 0x9c, 0xf0, 0x63,
+0xb9, 0x9d, 0x46, 0x62,
+0xd5, 0xc7, 0x2a, 0x38,
+0xab, 0x47, 0x54, 0xb8,
+0x46, 0x38, 0xb9, 0xc7,
+0x62, 0xd4, 0x9d, 0x2b,
+0x63, 0x70, 0x9c, 0x8f,
+0xf0, 0x39, 0x0f, 0xc6,
+0x70, 0x8e, 0x8f, 0x71,
+0x1d, 0xb8, 0xe2, 0x47,
+0x39, 0x46, 0xc6, 0xb9,
+0x54, 0xd4, 0xab, 0x2b,
+0x0f, 0x1c, 0xf0, 0xe3,
+0xe2, 0xb9, 0x1d, 0x46,
+0xd5, 0x63, 0x2a, 0x9c,
+0x1c, 0x54, 0xe3, 0xab,
+0xc6, 0x0f, 0x39, 0xf0,
+0xd4, 0xd5, 0x2b, 0x2a,
+0x47, 0x2a, 0xb8, 0xd5,
+0x8e, 0xb9, 0x71, 0x46,
+0xab, 0xf1, 0x54, 0x0e,
+0x39, 0x1c, 0xc6, 0xe3,
+0x2a, 0xe2, 0xd5, 0x1d,
+0xc7, 0x63, 0x38, 0x9c,
+0x8e, 0xab, 0x71, 0x54,
+0xc7, 0xc7, 0x38, 0x38,
+0xf1, 0x9d, 0x0e, 0x62,
+0x47, 0xf0, 0xb8, 0x0f,
+0x9d, 0x8f, 0x62, 0x70,
+0x63, 0x62, 0x9c, 0x9d,
+0x70, 0x0e, 0x8f, 0xf1,
+0xb8, 0x8f, 0x47, 0x70,
+0x39, 0xaa, 0xc6, 0x55,
+0x63, 0xc6, 0x9c, 0x39,
+0x8f, 0x1d, 0x70, 0xe2,
+0x38, 0xb8, 0xc7, 0x47,
+0xb9, 0xab, 0x46, 0x54,
+0x47, 0xd4, 0xb8, 0x2b,
+0xe3, 0x9d, 0x1c, 0x62,
+0xe3, 0x39, 0x1c, 0xc6,
+0x9c, 0x0f, 0x63, 0xf0,
+0x1c, 0x38, 0xe3, 0xc7,
+0x70, 0x2a, 0x8f, 0xd5,
+0x54, 0xb8, 0xab, 0x47,
+0xb9, 0x39, 0x46, 0xc6,
+0x62, 0xd4, 0x9d, 0x2b,
+0x2b, 0x70, 0xd4, 0x8f,
+0xf0, 0x39, 0x0f, 0xc6,
+0x46, 0x8e, 0xb9, 0x71,
+0x1d, 0xf0, 0xe2, 0x0f,
+0x2b, 0x46, 0xd4, 0xb9,
+0x54, 0x2a, 0xab, 0xd5,
+0x0e, 0x1c, 0xf1, 0xe3,
+0xaa, 0xf1, 0x55, 0x0e,
+0xd5, 0x63, 0x2a, 0x9c,
+0x2a, 0x62, 0xd5, 0x9d,
+0xc6, 0x47, 0x39, 0xb8,
+0x8e, 0xc7, 0x71, 0x38,
+0x47, 0xd4, 0xb8, 0x2b,
+0x71, 0xb8, 0x8e, 0x47,
+0xe3, 0xf1, 0x1c, 0x0e,
+0x71, 0x1c, 0x8e, 0xe3,
+0x1c, 0xe2, 0xe3, 0x1d,
+0xf1, 0x2b, 0x0e, 0xd4,
+0x9c, 0xe3, 0x63, 0x1c,
+0xd5, 0x39, 0x2a, 0xc6,
+0xf0, 0x63, 0x0f, 0x9c,
+0x0e, 0xb8, 0xf1, 0x47,
+0xd5, 0xc7, 0x2a, 0x38,
+0x55, 0x54, 0xaa, 0xab,
+0x46, 0x70, 0xb9, 0x8f,
+0xe2, 0xd5, 0x1d, 0x2a,
+0x63, 0x46, 0x9c, 0xb9,
+0x9c, 0x39, 0x63, 0xc6,
+0x38, 0x1c, 0xc7, 0xe3,
+0x38, 0xb8, 0xc7, 0x47,
+0xc7, 0xab, 0x38, 0x54,
+0x47, 0x9c, 0xb8, 0x63,
+0xc7, 0x9d, 0x38, 0x62,
+0xe3, 0x8f, 0x1c, 0x70,
+0x8f, 0x0f, 0x70, 0xf0,
+0x54, 0x8e, 0xab, 0x71,
+0x71, 0x2a, 0x8e, 0xd5,
+0x2a, 0xc6, 0xd5, 0x39,
+0xb9, 0x71, 0x46, 0x8e,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x2b, 0xc6, 0xd4, 0x39,
+0x55, 0x2a, 0xaa, 0xd5,
+0x0e, 0x70, 0xf1, 0x8f,
+0xaa, 0xf1, 0x55, 0x0e,
+0x55, 0x46, 0xaa, 0xb9,
+0x2a, 0x62, 0xd5, 0x9d,
+0x2a, 0x54, 0xd5, 0xab,
+0x8e, 0x47, 0x71, 0xb8,
+0xc6, 0xd5, 0x39, 0x2a,
+0x71, 0xd4, 0x8e, 0x2b,
+0x8f, 0xf1, 0x70, 0x0e,
+0xf1, 0xb9, 0x0e, 0x46,
+0x39, 0xe2, 0xc6, 0x1d,
+0x1d, 0xd4, 0xe2, 0x2b,
+0x8f, 0x63, 0x70, 0x9c,
+0xd4, 0xb9, 0x2b, 0x46,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x0e, 0xd4, 0xf1, 0x2b,
+0x55, 0xe2, 0xaa, 0x1d,
+0xd5, 0x71, 0x2a, 0x8e,
+0xaa, 0x63, 0x55, 0x9c,
+0x0e, 0x46, 0xf1, 0xb9,
+0xe2, 0xc7, 0x1d, 0x38,
+0x1d, 0x54, 0xe2, 0xab,
+0x54, 0x70, 0xab, 0x8f,
+0xd4, 0x1d, 0x2b, 0xe2,
+0x62, 0x0e, 0x9d, 0xf1,
+0x8e, 0x63, 0x71, 0x9c,
+0x38, 0xe2, 0xc7, 0x1d,
+0xf1, 0x8f, 0x0e, 0x70,
+0x8f, 0xe3, 0x70, 0x1c,
+0x55, 0x8e, 0xaa, 0x71,
+0xf1, 0x63, 0x0e, 0x9c,
+0x2a, 0xc6, 0xd5, 0x39,
+0xd5, 0x47, 0x2a, 0xb8,
+0x0e, 0x70, 0xf1, 0x8f,
+0x46, 0xd4, 0xb9, 0x2b,
+0x55, 0xc6, 0xaa, 0x39,
+0xe3, 0x71, 0x1c, 0x8e,
+0x2a, 0x38, 0xd5, 0xc7,
+0x1c, 0x46, 0xe3, 0xb9,
+0x46, 0x38, 0xb9, 0xc7,
+0x1c, 0xd4, 0xe3, 0x2b,
+0x63, 0x38, 0x9c, 0xc7,
+0xd4, 0x39, 0x2b, 0xc6,
+0x70, 0x38, 0x8f, 0xc7,
+0x0e, 0xb8, 0xf1, 0x47,
+0x71, 0xf0, 0x8e, 0x0f,
+0x55, 0xd4, 0xaa, 0x2b,
+0x71, 0x62, 0x8e, 0x9d,
+0xe2, 0xf1, 0x1d, 0x0e,
+0xb9, 0x47, 0x46, 0xb8,
+0x1c, 0xe2, 0xe3, 0x1d,
+0x63, 0x1c, 0x9c, 0xe3,
+0x9c, 0x2b, 0x63, 0xd4,
+0xf0, 0x2b, 0x0f, 0xd4,
+0xf0, 0xb9, 0x0f, 0x46,
+0xd5, 0xb9, 0x2a, 0x46,
+0x1d, 0x54, 0xe2, 0xab,
+0x0e, 0x54, 0xf1, 0xab,
+0xd4, 0xd5, 0x2b, 0x2a,
+0xd5, 0x1d, 0x2a, 0xe2,
+0x8e, 0x71, 0x71, 0x8e,
+0x8e, 0xe3, 0x71, 0x1c,
+0x39, 0xc6, 0xc6, 0x39,
+0xf1, 0xe3, 0x0e, 0x1c,
+0x0f, 0xf0, 0xf0, 0x0f,
+0xd5, 0xab, 0x2a, 0x54,
+0x55, 0x62, 0xaa, 0x9d,
+0xc6, 0x55, 0x39, 0xaa,
+0xaa, 0xc7, 0x55, 0x38,
+0x8f, 0x55, 0x70, 0xaa,
+0x62, 0xb8, 0x9d, 0x47,
+0xb9, 0x55, 0x46, 0xaa,
+0x70, 0xd4, 0x8f, 0x2b,
+0xab, 0x9d, 0x54, 0x62,
+0xf1, 0x39, 0x0e, 0xc6,
+0xaa, 0xc7, 0x55, 0x38,
+0x1d, 0x70, 0xe2, 0x8f,
+0x62, 0x70, 0x9d, 0x8f,
+0x54, 0x46, 0xab, 0xb9,
+0x70, 0x0e, 0x8f, 0xf1,
+0x2a, 0x9c, 0xd5, 0x63,
+0x39, 0x62, 0xc6, 0x9d,
+0xc6, 0xc7, 0x39, 0x38,
+0x8f, 0xc7, 0x70, 0x38,
+0x47, 0xb8, 0xb8, 0x47,
+0x71, 0xb8, 0x8e, 0x47,
+0x63, 0xd4, 0x9c, 0x2b,
+0x71, 0x1c, 0x8e, 0xe3,
+0xf0, 0xf1, 0x0f, 0x0e,
+0xf1, 0xab, 0x0e, 0x54,
+0x1d, 0xe2, 0xe2, 0x1d,
+0xd5, 0x55, 0x2a, 0xaa,
+0x9c, 0x63, 0x63, 0x9c,
+0x8e, 0x1d, 0x71, 0xe2,
+0xf0, 0xc7, 0x0f, 0x38,
+0xb9, 0xab, 0x46, 0x54,
+0x55, 0xf0, 0xaa, 0x0f,
+0xe3, 0x55, 0x1c, 0xaa,
+0x62, 0x2a, 0x9d, 0xd5,
+0x9c, 0x55, 0x63, 0xaa,
+0xb8, 0x39, 0x47, 0xc6,
+0xb8, 0x9d, 0x47, 0x62,
+0x2b, 0xb8, 0xd4, 0x47,
+0xab, 0x0f, 0x54, 0xf0,
+0x46, 0x1c, 0xb9, 0xe3,
+0x62, 0xe2, 0x9d, 0x1d,
+0xe3, 0x63, 0x1c, 0x9c,
+0xb8, 0x2b, 0x47, 0xd4,
+0xd4, 0x8f, 0x2b, 0x70,
+0xe3, 0x39, 0x1c, 0xc6,
+0x46, 0x0e, 0xb9, 0xf1,
+0x1c, 0xf0, 0xe3, 0x0f,
+0x2b, 0x2a, 0xd4, 0xd5,
+0x54, 0x2a, 0xab, 0xd5,
+0x8e, 0x39, 0x71, 0xc6,
+0xaa, 0xf1, 0x55, 0x0e,
+0x39, 0x70, 0xc6, 0x8f,
+0x2a, 0xe2, 0xd5, 0x1d,
+0x47, 0x46, 0xb8, 0xb9,
+0x8e, 0xab, 0x71, 0x54,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xf1, 0x1d, 0x0e, 0xe2,
+0xc6, 0xf1, 0x39, 0x0e,
+0x9d, 0xe3, 0x62, 0x1c,
+0x0f, 0x62, 0xf0, 0x9d,
+0xf0, 0xab, 0x0f, 0x54,
+0x9d, 0x8f, 0x62, 0x70,
+0xd5, 0x55, 0x2a, 0xaa,
+0x70, 0x46, 0x8f, 0xb9,
+0x8e, 0x9d, 0x71, 0x62,
+0x39, 0xd4, 0xc6, 0x2b,
+0xb9, 0xc7, 0x46, 0x38,
+0xc7, 0xf1, 0x38, 0x0e,
+0x63, 0xb8, 0x9c, 0x47,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x70, 0x9c, 0x8f, 0x63,
+0x9d, 0xb9, 0x62, 0x46,
+0xf1, 0x47, 0x0e, 0xb8,
+0x38, 0xd4, 0xc7, 0x2b,
+0x55, 0x9c, 0xaa, 0x63,
+0xc7, 0x71, 0x38, 0x8e,
+0xe2, 0x8f, 0x1d, 0x70,
+0x0f, 0x46, 0xf0, 0xb9,
+0x54, 0x8e, 0xab, 0x71,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x2a, 0x46, 0xd5, 0xb9,
+0xd4, 0x63, 0x2b, 0x9c,
+0x0e, 0x1c, 0xf1, 0xe3,
+0xc6, 0xc7, 0x39, 0x38,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x47, 0x70, 0xb8, 0x8f,
+0xc6, 0xab, 0x39, 0x54,
+0x63, 0xc6, 0x9c, 0x39,
+0xc7, 0x1d, 0x38, 0xe2,
+0x38, 0xb8, 0xc7, 0x47,
+0x8f, 0xab, 0x70, 0x54,
+0x47, 0x9c, 0xb8, 0x63,
+0xf1, 0x9d, 0x0e, 0x62,
+0xe3, 0xc7, 0x1c, 0x38,
+0x9d, 0x0f, 0x62, 0xf0,
+0x54, 0x70, 0xab, 0x8f,
+0x70, 0x2a, 0x8f, 0xd5,
+0x62, 0x8e, 0x9d, 0x71,
+0xb9, 0x71, 0x46, 0x8e,
+0x38, 0xc6, 0xc7, 0x39,
+0x2b, 0x8e, 0xd4, 0x71,
+0x0f, 0x38, 0xf0, 0xc7,
+0x0e, 0x8e, 0xf1, 0x71,
+0x55, 0xf0, 0xaa, 0x0f,
+0x1d, 0x46, 0xe2, 0xb9,
+0x62, 0x62, 0x9d, 0x9d,
+0x1c, 0x54, 0xe3, 0xab,
+0xb8, 0x0f, 0x47, 0xf0,
+0xd4, 0x9d, 0x2b, 0x62,
+0x63, 0x2a, 0x9c, 0xd5,
+0x8e, 0x0f, 0x71, 0xf0,
+0xb8, 0xf1, 0x47, 0x0e,
+0x71, 0xaa, 0x8e, 0x55,
+0x2b, 0xe2, 0xd4, 0x1d,
+0xb9, 0x1d, 0x46, 0xe2,
+0x8e, 0xe3, 0x71, 0x1c,
+0xab, 0xe3, 0x54, 0x1c,
+0xf1, 0x2b, 0x0e, 0xd4,
+0xe2, 0xe3, 0x1d, 0x1c,
+0xd5, 0x71, 0x2a, 0x8e,
+0xd4, 0x63, 0x2b, 0x9c,
+0x0e, 0x0e, 0xf1, 0xf1,
+0xc6, 0xc7, 0x39, 0x38,
+0x1d, 0xe2, 0xe2, 0x1d,
+0x47, 0x70, 0xb8, 0x8f,
+0x9c, 0xab, 0x63, 0x54,
+0x63, 0x0e, 0x9c, 0xf1,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x38, 0xaa, 0xc7, 0x55,
+0x9d, 0xab, 0x62, 0x54,
+0x8f, 0x55, 0x70, 0xaa,
+0xf0, 0x9d, 0x0f, 0x62,
+0xb9, 0x9d, 0x46, 0x62,
+0x9d, 0xc7, 0x62, 0x38,
+0xab, 0x47, 0x54, 0xb8,
+0x70, 0x38, 0x8f, 0xc7,
+0x62, 0x9c, 0x9d, 0x63,
+0x71, 0x70, 0x8e, 0x8f,
+0xf0, 0xc7, 0x0f, 0x38,
+0x71, 0x8e, 0x8e, 0x71,
+0x55, 0xf0, 0xaa, 0x0f,
+0x39, 0x46, 0xc6, 0xb9,
+0x62, 0xe2, 0x9d, 0x1d,
+0x0f, 0x54, 0xf0, 0xab,
+0xb8, 0xab, 0x47, 0x54,
+0xd5, 0x9d, 0x2a, 0x62,
+0xe3, 0x55, 0x1c, 0xaa,
+0x8e, 0x0f, 0x71, 0xf0,
+0x9c, 0xd5, 0x63, 0x2a,
+0x71, 0x2a, 0x8e, 0xd5,
+0xb8, 0xf1, 0x47, 0x0e,
+0xb9, 0xb9, 0x46, 0x46,
+0x2b, 0xe2, 0xd4, 0x1d,
+0x2b, 0x1c, 0xd4, 0xe3,
+0x8e, 0x2b, 0x71, 0xd4,
+0xc6, 0xe3, 0x39, 0x1c,
+0xf1, 0xf1, 0x0e, 0x0e,
+0xc7, 0xe3, 0x38, 0x1c,
+0x1d, 0xaa, 0xe2, 0x55,
+0xc7, 0x63, 0x38, 0x9c,
+0x9c, 0x9d, 0x63, 0x62,
+0xc7, 0x0f, 0x38, 0xf0,
+0xb8, 0x8f, 0x47, 0x70,
+0x47, 0xaa, 0xb8, 0x55,
+0x63, 0x8e, 0x9c, 0x71,
+0xab, 0x1d, 0x54, 0xe2,
+0x38, 0x0e, 0xc7, 0xf1,
+0xaa, 0xab, 0x55, 0x54,
+0x0f, 0x62, 0xf0, 0x9d,
+0xe2, 0x9d, 0x1d, 0x62,
+0x9d, 0x47, 0x62, 0xb8,
+0x9c, 0x47, 0x63, 0xb8,
+0x70, 0x1c, 0x8f, 0xe3,
+0x70, 0x9c, 0x8f, 0x63,
+0xf1, 0xab, 0x0e, 0x54,
+0xf1, 0xc7, 0x0e, 0x38,
+0xd5, 0xd5, 0x2a, 0x2a,
+0x55, 0x70, 0xaa, 0x8f,
+0x8e, 0x71, 0x71, 0x8e,
+0x62, 0xc6, 0x9d, 0x39,
+0x39, 0x46, 0xc6, 0xb9,
+0x38, 0xf0, 0xc7, 0x0f,
+0x0f, 0x9c, 0xf0, 0x63,
+0x47, 0xaa, 0xb8, 0x55,
+0xd5, 0x8f, 0x2a, 0x70,
+0xab, 0x55, 0x54, 0xaa,
+0x46, 0x0e, 0xb9, 0xf1,
+0xaa, 0xd5, 0x55, 0x2a,
+0x2b, 0x62, 0xd4, 0x9d,
+0xaa, 0x39, 0x55, 0xc6,
+0x8e, 0x47, 0x71, 0xb8,
+0x2a, 0xf0, 0xd5, 0x0f,
+0x71, 0x54, 0x8e, 0xab,
+0x46, 0xe2, 0xb9, 0x1d,
+0xf1, 0xd5, 0x0e, 0x2a,
+0xab, 0xe3, 0x54, 0x1c,
+0x9d, 0x39, 0x62, 0xc6,
+0xe2, 0x63, 0x1d, 0x9c,
+0x38, 0x70, 0xc7, 0x8f,
+0xd4, 0x8f, 0x2b, 0x70,
+0x47, 0x0e, 0xb8, 0xf1,
+0x46, 0x8e, 0xb9, 0x71,
+0x2b, 0xe2, 0xd4, 0x1d,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x8e, 0x2b, 0x71, 0xd4,
+0x0e, 0xe2, 0xf1, 0x1d,
+0xf1, 0xf1, 0x0e, 0x0e,
+0x9d, 0xe3, 0x62, 0x1c,
+0x1d, 0x62, 0xe2, 0x9d,
+0xf0, 0x63, 0x0f, 0x9c,
+0x9c, 0x8f, 0x63, 0x70,
+0xd5, 0x0f, 0x2a, 0xf0,
+0x70, 0x46, 0x8f, 0xb9,
+0x46, 0xaa, 0xb9, 0x55,
+0x39, 0xd4, 0xc6, 0x2b,
+0xab, 0xd5, 0x54, 0x2a,
+0xc7, 0x39, 0x38, 0xc6,
+0xaa, 0xb9, 0x55, 0x46,
+0x0f, 0x70, 0xf0, 0x8f,
+0x2a, 0x9c, 0xd5, 0x63,
+0x55, 0x46, 0xaa, 0xb9,
+0xc6, 0x47, 0x39, 0xb8,
+0x2a, 0xd4, 0xd5, 0x2b,
+0x47, 0x54, 0xb8, 0xab,
+0xc6, 0xb9, 0x39, 0x46,
+0xe3, 0xd5, 0x1c, 0x2a,
+0x0f, 0x1c, 0xf0, 0xe3,
+0x9c, 0xb9, 0x63, 0x46,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x38, 0x54, 0xc7, 0xab,
+0xc6, 0xb9, 0x39, 0x46,
+0xc7, 0xd5, 0x38, 0x2a,
+0x0f, 0x9c, 0xf0, 0x63,
+0x8f, 0xb9, 0x70, 0x46,
+0xd5, 0x8f, 0x2a, 0x70,
+0x39, 0x54, 0xc6, 0xab,
+0x46, 0xc6, 0xb9, 0x39,
+0xc7, 0xd5, 0x38, 0x2a,
+0x2b, 0xb8, 0xd4, 0x47,
+0x8f, 0x39, 0x70, 0xc6,
+0x46, 0x9c, 0xb9, 0x63,
+0x39, 0xf0, 0xc6, 0x0f,
+0xe3, 0xc7, 0x1c, 0x38,
+0x47, 0x2a, 0xb8, 0xd5,
+0x54, 0xb8, 0xab, 0x47,
+0xab, 0x39, 0x54, 0xc6,
+0x62, 0x1c, 0x9d, 0xe3,
+0x2a, 0x70, 0xd5, 0x8f,
+0xf0, 0x63, 0x0f, 0x9c,
+0x46, 0x8e, 0xb9, 0x71,
+0xd5, 0xc7, 0x2a, 0x38,
+0x2b, 0x46, 0xd4, 0xb9,
+0x46, 0x38, 0xb9, 0xc7,
+0x0e, 0xd4, 0xf1, 0x2b,
+0x63, 0xf0, 0x9c, 0x0f,
+0xd5, 0x39, 0x2a, 0xc6,
+0x70, 0x62, 0x8f, 0x9d,
+0x0e, 0xb8, 0xf1, 0x47,
+0xb9, 0xc7, 0x46, 0x38,
+0x55, 0xd4, 0xaa, 0x2b,
+0x63, 0x70, 0x9c, 0x8f,
+0xe2, 0x39, 0x1d, 0xc6,
+0x70, 0x46, 0x8f, 0xb9,
+0x1c, 0xb8, 0xe3, 0x47,
+0x39, 0x1c, 0xc6, 0xe3,
+0x54, 0xd4, 0xab, 0x2b,
+0xc7, 0x2b, 0x38, 0xd4,
+0xe2, 0xb9, 0x1d, 0x46,
+0xc7, 0x71, 0x38, 0x8e,
+0x1c, 0x9c, 0xe3, 0x63,
+0x0f, 0x0e, 0xf0, 0xf1,
+0xd4, 0x8f, 0x2b, 0x70,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x46, 0x46, 0xb9, 0xb9,
+0x9c, 0xf1, 0x63, 0x0e,
+0x2b, 0x1c, 0xd4, 0xe3,
+0x38, 0x2a, 0xc7, 0xd5,
+0xc6, 0xab, 0x39, 0x54,
+0x8f, 0xf1, 0x70, 0x0e,
+0xc7, 0x9d, 0x38, 0x62,
+0x39, 0xaa, 0xc6, 0x55,
+0x8f, 0xc7, 0x70, 0x38,
+0x8f, 0x9d, 0x70, 0x62,
+0x71, 0xb8, 0x8e, 0x47,
+0xb9, 0xc7, 0x46, 0x38,
+0x71, 0xd4, 0x8e, 0x2b,
+0x63, 0xf0, 0x9c, 0x0f,
+0xf1, 0x39, 0x0e, 0xc6,
+0x70, 0xe2, 0x8f, 0x1d,
+0x1d, 0xb8, 0xe2, 0x47,
+0xb9, 0x63, 0x46, 0x9c,
+0x54, 0xd4, 0xab, 0x2b,
+0xe3, 0x0f, 0x1c, 0xf0,
+0xe2, 0x39, 0x1d, 0xc6,
+0x54, 0x62, 0xab, 0x9d,
+0x1c, 0x38, 0xe3, 0xc7,
+0xaa, 0x0f, 0x55, 0xf0,
+0x54, 0x70, 0xab, 0x8f,
+0x62, 0x2a, 0x9d, 0xd5,
+0x62, 0x46, 0x9d, 0xb9,
+0xb8, 0x71, 0x47, 0x8e,
+0x38, 0x9c, 0xc7, 0x63,
+0x2b, 0x8e, 0xd4, 0x71,
+0xc7, 0x0f, 0x38, 0xf0,
+0x0e, 0x8e, 0xf1, 0x71,
+0x47, 0xe2, 0xb8, 0x1d,
+0x1d, 0x8e, 0xe2, 0x71,
+0xab, 0x63, 0x54, 0x9c,
+0x1c, 0x0e, 0xe3, 0xf1,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x1c, 0x62, 0xe3, 0x9d,
+0x54, 0x2a, 0xab, 0xd5,
+0x9c, 0x0f, 0x63, 0xf0,
+0xaa, 0x39, 0x55, 0xc6,
+0x70, 0x62, 0x8f, 0x9d,
+0x2a, 0xb8, 0xd5, 0x47,
+0xb9, 0x47, 0x46, 0xb8,
+0x46, 0xd4, 0xb9, 0x2b,
+0x63, 0xd4, 0x9c, 0x2b,
+0xe3, 0x39, 0x1c, 0xc6,
+0xf0, 0x39, 0x0f, 0xc6,
+0x1c, 0xb8, 0xe3, 0x47,
+0x1d, 0x38, 0xe2, 0xc7,
+0x54, 0x54, 0xab, 0xab,
+0x54, 0x38, 0xab, 0xc7,
+0xe2, 0x1d, 0x1d, 0xe2,
+0x62, 0x70, 0x9d, 0x8f,
+0x9c, 0x63, 0x63, 0x9c,
+0x70, 0x0e, 0x8f, 0xf1,
+0xf0, 0x8f, 0x0f, 0x70,
+0x39, 0xaa, 0xc6, 0x55,
+0x55, 0xc6, 0xaa, 0x39,
+0x8f, 0x55, 0x70, 0xaa,
+0x2a, 0xb8, 0xd5, 0x47,
+0xb9, 0x55, 0x46, 0xaa,
+0x46, 0xd4, 0xb9, 0x2b,
+0xab, 0xd5, 0x54, 0x2a,
+0xe3, 0x39, 0x1c, 0xc6,
+0xaa, 0x39, 0x55, 0xc6,
+0x1c, 0x70, 0xe3, 0x8f,
+0x2a, 0x38, 0xd5, 0xc7,
+0x54, 0x46, 0xab, 0xb9,
+0x46, 0x38, 0xb9, 0xc7,
+0x2a, 0xd4, 0xd5, 0x2b,
+0x63, 0x70, 0x9c, 0x8f,
+0xc6, 0x39, 0x39, 0xc6,
+0x70, 0xc6, 0x8f, 0x39,
+0x0f, 0xb8, 0xf0, 0x47,
+0x39, 0xb8, 0xc6, 0x47,
+0x55, 0xd4, 0xaa, 0x2b,
+0x47, 0x54, 0xb8, 0xab,
+0xe2, 0xb9, 0x1d, 0x46,
+0xe3, 0x55, 0x1c, 0xaa,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x9c, 0x1d, 0x63, 0xe2,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xb8, 0x2b, 0x47, 0xd4,
+0xc6, 0xb9, 0x39, 0x46,
+0xe3, 0xf1, 0x1c, 0x0e,
+0x0f, 0x1c, 0xf0, 0xe3,
+0x1c, 0xaa, 0xe3, 0x55,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x9c, 0x55, 0x63, 0xaa,
+0xc6, 0x39, 0x39, 0xc6,
+0xb8, 0xd5, 0x47, 0x2a,
+0x0f, 0xb8, 0xf0, 0x47,
+0xab, 0xb9, 0x54, 0x46,
+0x55, 0x1c, 0xaa, 0xe3,
+0x2a, 0x54, 0xd5, 0xab,
+0xe2, 0x63, 0x1d, 0x9c,
+0xc6, 0x55, 0x39, 0xaa,
+0xd4, 0xc7, 0x2b, 0x38,
+0x8f, 0x1d, 0x70, 0xe2,
+0x46, 0xb8, 0xb9, 0x47,
+0xb9, 0xe3, 0x46, 0x1c,
+0x63, 0xd4, 0x9c, 0x2b,
+0xe3, 0x2b, 0x1c, 0xd4,
+0xf0, 0x39, 0x0f, 0xc6,
+0xd4, 0xb9, 0x2b, 0x46,
+0x1d, 0x38, 0xe2, 0xc7,
+0x0e, 0x54, 0xf1, 0xab,
+0x54, 0xf0, 0xab, 0x0f,
+0xd5, 0x1d, 0x2a, 0xe2,
+0x62, 0x62, 0x9d, 0x9d,
+0x8e, 0x63, 0x71, 0x9c,
+0xb8, 0xc7, 0x47, 0x38,
+0xf1, 0x8f, 0x0e, 0x70,
+0x63, 0xf0, 0x9c, 0x0f,
+0x55, 0x0e, 0xaa, 0xf1,
+0x70, 0x62, 0x8f, 0x9d,
+0x2a, 0xaa, 0xd5, 0x55,
+0xb9, 0x47, 0x46, 0xb8,
+0x8e, 0xd5, 0x71, 0x2a,
+0x63, 0xd4, 0x9c, 0x2b,
+0xb9, 0x39, 0x46, 0xc6,
+0xf0, 0xf1, 0x0f, 0x0e,
+0x2b, 0xb8, 0xd4, 0x47,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x46, 0x54, 0xb9, 0xab,
+0x9c, 0xf1, 0x63, 0x0e,
+0xe3, 0x1d, 0x1c, 0xe2,
+0x38, 0x2a, 0xc7, 0xd5,
+0x9c, 0xab, 0x63, 0x54,
+0x8f, 0x39, 0x70, 0xc6,
+0xf0, 0x9d, 0x0f, 0x62,
+0x39, 0xb8, 0xc6, 0x47,
+0x9d, 0xc7, 0x62, 0x38,
+0x47, 0x54, 0xb8, 0xab,
+0x70, 0xb8, 0x8f, 0x47,
+0xe3, 0x9d, 0x1c, 0x62,
+0x71, 0x1c, 0x8e, 0xe3,
+0x9c, 0xc7, 0x63, 0x38,
+0xf1, 0x2b, 0x0e, 0xd4,
+0x70, 0xf0, 0x8f, 0x0f,
+0xd5, 0xb9, 0x2a, 0x46,
+0x71, 0x62, 0x8e, 0x9d,
+0x0e, 0xd4, 0xf1, 0x2b,
+0xb9, 0xc7, 0x46, 0x38,
+0xd5, 0xf1, 0x2a, 0x0e,
+0x63, 0x70, 0x9c, 0x8f,
+0x0e, 0x2a, 0xf1, 0xd5,
+0x70, 0xc6, 0x8f, 0x39,
+0x9d, 0xb9, 0x62, 0x46,
+0x39, 0x70, 0xc6, 0x8f,
+0x38, 0xd4, 0xc7, 0x2b,
+0x47, 0x8e, 0xb8, 0x71,
+0xc7, 0xb9, 0x38, 0x46,
+0x2b, 0x8e, 0xd4, 0x71,
+0x0f, 0x1c, 0xf0, 0xe3,
+0x0e, 0x8e, 0xf1, 0x71,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x1d, 0x46, 0xe2, 0xb9,
+0xc6, 0x63, 0x39, 0x9c,
+0x1c, 0xd4, 0xe3, 0x2b,
+0xc7, 0x0f, 0x38, 0xf0,
+0xd4, 0xb9, 0x2b, 0x46,
+0x47, 0x2a, 0xb8, 0xd5,
+0x0e, 0x9c, 0xf1, 0x63,
+0xab, 0xf1, 0x54, 0x0e,
+0xd5, 0x0f, 0x2a, 0xf0,
+0x2a, 0x62, 0xd5, 0x9d,
+0x46, 0x62, 0xb9, 0x9d,
+0x8e, 0xc7, 0x71, 0x38,
+0xab, 0xc7, 0x54, 0x38,
+0x71, 0x38, 0x8e, 0xc7,
+0x62, 0xf0, 0x9d, 0x0f,
+0x71, 0x70, 0x8e, 0x8f,
+0x70, 0xe2, 0x8f, 0x1d,
+0x71, 0x8e, 0x8e, 0x71,
+0xb9, 0xe3, 0x46, 0x1c,
+0x39, 0xc6, 0xc6, 0x39,
+0xe3, 0xe3, 0x1c, 0x1c,
+0x0f, 0x38, 0xf0, 0xc7,
+0xd4, 0xab, 0x2b, 0x54,
+0x55, 0x38, 0xaa, 0xc7,
+0xc6, 0x55, 0x39, 0xaa,
+0x62, 0xf0, 0x9d, 0x0f,
+0x8f, 0x55, 0x70, 0xaa,
+0x70, 0xaa, 0x8f, 0x55,
+0xb9, 0x9d, 0x46, 0x62,
+0xb9, 0xd5, 0x46, 0x2a,
+0xab, 0xc7, 0x54, 0x38,
+0xab, 0x39, 0x54, 0xc6,
+0x62, 0x38, 0x9d, 0xc7,
+0x2a, 0x70, 0xd5, 0x8f,
+0x70, 0x70, 0x8f, 0x8f,
+0x46, 0x8e, 0xb9, 0x71,
+0x71, 0xc6, 0x8e, 0x39,
+0x2b, 0xc6, 0xd4, 0x39,
+0x39, 0x38, 0xc6, 0xc7,
+0x0e, 0xf0, 0xf1, 0x0f,
+0x47, 0xf0, 0xb8, 0x0f,
+0x55, 0xaa, 0xaa, 0x55,
+0x63, 0x62, 0x9c, 0x9d,
+0xaa, 0x1d, 0x55, 0xe2,
+0xb8, 0x47, 0x47, 0xb8,
+0xaa, 0xab, 0x55, 0x54,
+0x63, 0x54, 0x9c, 0xab,
+0xe2, 0x1d, 0x1d, 0xe2,
+0xf0, 0x55, 0x0f, 0xaa,
+0x9c, 0xab, 0x63, 0x54,
+0x9d, 0x1d, 0x62, 0xe2,
+0xf0, 0x55, 0x0f, 0xaa,
+0xb8, 0xab, 0x47, 0x54,
+0x9d, 0x9d, 0x62, 0x62,
+0xe3, 0x55, 0x1c, 0xaa,
+0xb8, 0x0f, 0x47, 0xf0,
+0x9c, 0x9d, 0x63, 0x62,
+0x63, 0x2a, 0x9c, 0xd5,
+0xb8, 0x0f, 0x47, 0xf0,
+0xb8, 0xb9, 0x47, 0x46,
+0x63, 0xaa, 0x9c, 0x55,
+0x2b, 0x1c, 0xd4, 0xe3,
+0xb8, 0x1d, 0x47, 0xe2,
+0xc6, 0xab, 0x39, 0x54,
+0xab, 0xe3, 0x54, 0x1c,
+0xc7, 0x1d, 0x38, 0xe2,
+0xe2, 0xab, 0x1d, 0x54,
+0x8f, 0x63, 0x70, 0x9c,
+0xd4, 0x9d, 0x2b, 0x62,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x8e, 0xc7, 0x71, 0x38,
+0x55, 0xe2, 0xaa, 0x1d,
+0x71, 0x70, 0x8e, 0x8f,
+0xaa, 0xe3, 0x55, 0x1c,
+0x71, 0x46, 0x8e, 0xb9,
+0xe2, 0xe3, 0x1d, 0x1c,
+0x39, 0x54, 0xc6, 0xab,
+0xd4, 0xe3, 0x2b, 0x1c,
+0xc7, 0x1d, 0x38, 0xe2,
+0xc6, 0xab, 0x39, 0x54,
+0x8f, 0xe3, 0x70, 0x1c,
+0xc7, 0x9d, 0x38, 0x62,
+0xf1, 0xab, 0x0e, 0x54,
+0x8f, 0xc7, 0x70, 0x38,
+0xd5, 0x9d, 0x2a, 0x62,
+0x71, 0x70, 0x8e, 0x8f,
+0x8e, 0xc7, 0x71, 0x38,
+0x71, 0xc6, 0x8e, 0x39,
+0x71, 0xf0, 0x8e, 0x0f,
+0x39, 0xf0, 0xc6, 0x0f,
+0x71, 0xe2, 0x8e, 0x1d,
+0x47, 0xe2, 0xb8, 0x1d,
+0xb9, 0xab, 0x46, 0x54,
+0xab, 0xe3, 0x54, 0x1c,
+0xe3, 0x1d, 0x1c, 0xe2,
+0xe2, 0x2b, 0x1d, 0xd4,
+0x9c, 0x63, 0x63, 0x9c,
+0xd4, 0x39, 0x2b, 0xc6,
+0xf0, 0x0f, 0x0f, 0xf0,
+0x0e, 0xb8, 0xf1, 0x47,
+0x55, 0xe2, 0xaa, 0x1d,
+0x55, 0x54, 0xaa, 0xab,
+0xaa, 0x63, 0x55, 0x9c,
+0xe2, 0x55, 0x1d, 0xaa,
+0xe2, 0x47, 0x1d, 0xb8,
+0x9c, 0x55, 0x63, 0xaa,
+0x54, 0x1c, 0xab, 0xe3,
+0xb8, 0x1d, 0x47, 0xe2,
+0xe2, 0xab, 0x1d, 0x54,
+0xab, 0x63, 0x54, 0x9c,
+0xd4, 0x1d, 0x2b, 0xe2,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x8e, 0x63, 0x71, 0x9c,
+0x54, 0xe2, 0xab, 0x1d,
+0xf1, 0x0f, 0x0e, 0xf0,
+0xaa, 0xe3, 0x55, 0x1c,
+0x55, 0x62, 0xaa, 0x9d,
+0xe2, 0x63, 0x1d, 0x9c,
+0xaa, 0x47, 0x55, 0xb8,
+0xd4, 0x47, 0x2b, 0xb8,
+0x62, 0x1c, 0x9d, 0xe3,
+0x46, 0x54, 0xb9, 0xab,
+0xf0, 0xe3, 0x0f, 0x1c,
+0xe3, 0x9d, 0x1c, 0x62,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x9c, 0x47, 0x63, 0xb8,
+0xc6, 0x39, 0x39, 0xc6,
+0x70, 0xd4, 0x8f, 0x2b,
+0x0f, 0xb8, 0xf0, 0x47,
+0xf1, 0xb9, 0x0e, 0x46,
+0x55, 0xd4, 0xaa, 0x2b,
+0x1d, 0x54, 0xe2, 0xab,
+0xe2, 0x71, 0x1d, 0x8e,
+0xd4, 0x55, 0x2b, 0xaa,
+0x1c, 0x0e, 0xe3, 0xf1,
+0x8e, 0x1d, 0x71, 0xe2,
+0x1c, 0xe2, 0xe3, 0x1d,
+0xb9, 0x2b, 0x46, 0xd4,
+0x9c, 0xe3, 0x63, 0x1c,
+0xe3, 0x39, 0x1c, 0xc6,
+0xf0, 0x2b, 0x0f, 0xd4,
+0x1c, 0xb8, 0xe3, 0x47,
+0xd5, 0x39, 0x2a, 0xc6,
+0x54, 0x54, 0xab, 0xab,
+0x0e, 0x38, 0xf1, 0xc7,
+0xe2, 0xd5, 0x1d, 0x2a,
+0x55, 0x70, 0xaa, 0x8f,
+0x9c, 0x71, 0x63, 0x8e,
+0x62, 0x0e, 0x9d, 0xf1,
+0x38, 0x46, 0xc7, 0xb9,
+0x38, 0xaa, 0xc7, 0x55,
+0x0f, 0x9c, 0xf0, 0x63,
+0x8f, 0x9d, 0x70, 0x62,
+0xd5, 0x8f, 0x2a, 0x70,
+0xb9, 0x47, 0x46, 0xb8,
+0x46, 0xc6, 0xb9, 0x39,
+0x63, 0xd4, 0x9c, 0x2b,
+0x2b, 0x38, 0xd4, 0xc7,
+0xf0, 0x39, 0x0f, 0xc6,
+0x46, 0xb8, 0xb9, 0x47,
+0x1d, 0xf0, 0xe2, 0x0f,
+0x63, 0x54, 0x9c, 0xab,
+0x54, 0x2a, 0xab, 0xd5,
+0xf0, 0x1d, 0x0f, 0xe2,
+0xaa, 0xb9, 0x55, 0x46,
+0x9d, 0x63, 0x62, 0x9c,
+0x2a, 0x54, 0xd5, 0xab,
+0xf0, 0x47, 0x0f, 0xb8,
+0xc6, 0x9d, 0x39, 0x62,
+0x55, 0xd4, 0xaa, 0x2b,
+0x8f, 0x47, 0x70, 0xb8,
+0xe2, 0xb9, 0x1d, 0x46,
+0x71, 0x54, 0x8e, 0xab,
+0x1c, 0xd4, 0xe3, 0x2b,
+0xf1, 0x1d, 0x0e, 0xe2,
+0xd4, 0xf1, 0x2b, 0x0e,
+0x9d, 0x2b, 0x62, 0xd4,
+0x0e, 0x62, 0xf1, 0x9d,
+0xf0, 0xf1, 0x0f, 0x0e,
+0x9d, 0x8f, 0x62, 0x70,
+0x1d, 0x62, 0xe2, 0x9d,
+0x70, 0x46, 0x8f, 0xb9,
+0x9c, 0x8f, 0x63, 0x70,
+0x39, 0x1c, 0xc6, 0xe3,
+0x70, 0xc6, 0x8f, 0x39,
+0xc7, 0xab, 0x38, 0x54,
+0x39, 0xb8, 0xc6, 0x47,
+0xc7, 0xd5, 0x38, 0x2a,
+0x47, 0x9c, 0xb8, 0x63,
+0x8f, 0xb9, 0x70, 0x46,
+0xe3, 0x8f, 0x1c, 0x70,
+0x39, 0x1c, 0xc6, 0xe3,
+0x54, 0xc6, 0xab, 0x39,
+0xc7, 0x2b, 0x38, 0xd4,
+0x2a, 0xb8, 0xd5, 0x47,
+0xc7, 0x71, 0x38, 0x8e,
+0x46, 0x9c, 0xb9, 0x63,
+0x0f, 0xc6, 0xf0, 0x39,
+0xe3, 0x8f, 0x1c, 0x70,
+0x1d, 0x38, 0xe2, 0xc7,
+0x54, 0x46, 0xab, 0xb9,
+0x54, 0x38, 0xab, 0xc7,
+0x2a, 0x1c, 0xd5, 0xe3,
+0x62, 0x70, 0x9d, 0x8f,
+0xc6, 0x63, 0x39, 0x9c,
+0x70, 0xc6, 0x8f, 0x39,
+0xc7, 0x8f, 0x38, 0x70,
+0x39, 0xb8, 0xc6, 0x47,
+0x47, 0xc6, 0xb8, 0x39,
+0x47, 0x9c, 0xb8, 0x63,
+0x2b, 0xb8, 0xd4, 0x47,
+0xe3, 0x0f, 0x1c, 0xf0,
+0x46, 0x1c, 0xb9, 0xe3,
+0x54, 0xe2, 0xab, 0x1d,
+0xe3, 0x2b, 0x1c, 0xd4,
+0xaa, 0x2b, 0x55, 0xd4,
+0xd4, 0x71, 0x2b, 0x8e,
+0xe2, 0x39, 0x1d, 0xc6,
+0x0e, 0x46, 0xf1, 0xb9,
+0x1c, 0xf0, 0xe3, 0x0f,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x54, 0x62, 0xab, 0x9d,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xaa, 0x0f, 0x55, 0xf0,
+0xc6, 0x71, 0x39, 0x8e,
+0x62, 0xe2, 0x9d, 0x1d,
+0x0f, 0x46, 0xf0, 0xb9,
+0xb8, 0xab, 0x47, 0x54,
+0x1d, 0x9c, 0xe2, 0x63,
+0xe3, 0x55, 0x1c, 0xaa,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x9c, 0x1d, 0x63, 0xe2,
+0x46, 0x2a, 0xb9, 0xd5,
+0xb8, 0xe3, 0x47, 0x1c,
+0xab, 0xb9, 0x54, 0x46,
+0xe3, 0x2b, 0x1c, 0xd4,
+0x2a, 0x1c, 0xd5, 0xe3,
+0xd4, 0x71, 0x2b, 0x8e,
+0xc6, 0x2b, 0x39, 0xd4,
+0x0e, 0xc6, 0xf1, 0x39,
+0xc7, 0xf1, 0x38, 0x0e,
+0x1d, 0xb8, 0xe2, 0x47,
+0x0f, 0x62, 0xf0, 0x9d,
+0x54, 0x9c, 0xab, 0x63,
+0x9d, 0x0f, 0x62, 0xf0,
+0xe2, 0x47, 0x1d, 0xb8,
+0x70, 0x62, 0x8f, 0x9d,
+0x54, 0x9c, 0xab, 0x63,
+0xb9, 0x0f, 0x46, 0xf0,
+0xe2, 0xc7, 0x1d, 0x38,
+0x63, 0x62, 0x9c, 0x9d,
+0x54, 0x38, 0xab, 0xc7,
+0xb8, 0x0f, 0x47, 0xf0,
+0x62, 0xb8, 0x9d, 0x47,
+0x63, 0x62, 0x9c, 0x9d,
+0x70, 0x1c, 0x8f, 0xe3,
+0xb8, 0x8f, 0x47, 0x70,
+0xf1, 0xab, 0x0e, 0x54,
+0x63, 0xc6, 0x9c, 0x39,
+0xd5, 0x1d, 0x2a, 0xe2,
+0x38, 0x70, 0xc7, 0x8f,
+0x8e, 0xab, 0x71, 0x54,
+0x47, 0xc6, 0xb8, 0x39,
+0xf1, 0x9d, 0x0e, 0x62,
+0x2b, 0xf0, 0xd4, 0x0f,
+0x9d, 0x0f, 0x62, 0xf0,
+0x46, 0x62, 0xb9, 0x9d,
+0x70, 0xe2, 0x8f, 0x1d,
+0xab, 0x8f, 0x54, 0x70,
+0xb9, 0x2b, 0x46, 0xd4,
+0x62, 0xc6, 0x9d, 0x39,
+0xe3, 0x71, 0x1c, 0x8e,
+0x38, 0x38, 0xc7, 0xc7,
+0x1c, 0x8e, 0xe3, 0x71,
+0x47, 0x38, 0xb8, 0xc7,
+0x1c, 0x8e, 0xe3, 0x71,
+0x63, 0x38, 0x9c, 0xc7,
+0x1c, 0x0e, 0xe3, 0xf1,
+0x70, 0x38, 0x8f, 0xc7,
+0x1c, 0xaa, 0xe3, 0x55,
+0x71, 0x38, 0x8e, 0xc7,
+0x9c, 0xd5, 0x63, 0x2a,
+0x71, 0x38, 0x8e, 0xc7,
+0xb8, 0xf1, 0x47, 0x0e,
+0x71, 0xb8, 0x8e, 0x47,
+0x2b, 0xe2, 0xd4, 0x1d,
+0x71, 0x1c, 0x8e, 0xe3,
+0x8e, 0xe3, 0x71, 0x1c,
+0xf1, 0xe3, 0x0e, 0x1c,
+0xf1, 0xe3, 0x0e, 0x1c,
+0xd5, 0xe3, 0x2a, 0x1c,
+0xd5, 0x63, 0x2a, 0x9c,
+0xc6, 0x63, 0x39, 0x9c,
+0xc6, 0xc7, 0x39, 0x38,
+0xc7, 0xc7, 0x38, 0x38,
+0x47, 0xb8, 0xb8, 0x47,
+0x47, 0xb8, 0xb8, 0x47,
+0x63, 0x9c, 0x9c, 0x63,
+0x63, 0x1c, 0x9c, 0xe3,
+0xf0, 0x0f, 0x0f, 0xf0,
+0xf0, 0xab, 0x0f, 0x54,
+0x55, 0xaa, 0xaa, 0x55,
+0xd5, 0x55, 0x2a, 0xaa,
+0xaa, 0x55, 0x55, 0xaa,
+0x8e, 0x55, 0x71, 0xaa,
+0xaa, 0xd5, 0x55, 0x2a,
+0xb9, 0x55, 0x46, 0xaa,
+0xaa, 0xf1, 0x55, 0x0e,
+0xab, 0x55, 0x54, 0xaa,
+0x2a, 0x2a, 0xd5, 0xd5,
+0xaa, 0x55, 0x55, 0xaa,
+0x8e, 0x71, 0x71, 0x8e,
+0xaa, 0xd5, 0x55, 0x2a,
+0x39, 0x46, 0xc6, 0xb9,
+0xaa, 0xf1, 0x55, 0x0e,
+0x0f, 0x54, 0xf0, 0xab,
+0x2a, 0xaa, 0xd5, 0x55,
+0xd5, 0x55, 0x2a, 0xaa,
+0x8e, 0x55, 0x71, 0xaa,
+0x8e, 0xd5, 0x71, 0x2a,
+0xb9, 0xd5, 0x46, 0x2a,
+0xb9, 0xf1, 0x46, 0x0e,
+0xab, 0xf1, 0x54, 0x0e,
+0x2b, 0x2a, 0xd4, 0xd5,
+0x2a, 0x2a, 0xd5, 0xd5,
+0x8e, 0x71, 0x71, 0x8e,
+0x8e, 0xf1, 0x71, 0x0e,
+0x39, 0xc6, 0xc6, 0x39,
+0x39, 0xe2, 0xc6, 0x1d,
+0x0f, 0xf0, 0xf0, 0x0f,
+0x8f, 0xab, 0x70, 0x54,
+0x55, 0xaa, 0xaa, 0x55,
+0xf1, 0x55, 0x0e, 0xaa,
+0xaa, 0xd5, 0x55, 0x2a,
+0x9d, 0x55, 0x62, 0xaa,
+0xaa, 0x71, 0x55, 0x8e,
+0xb8, 0x55, 0x47, 0xaa,
+0x2a, 0x8e, 0xd5, 0x71,
+0xab, 0x55, 0x54, 0xaa,
+0x0e, 0x0e, 0xf1, 0xf1,
+0xaa, 0xd5, 0x55, 0x2a,
+0x1d, 0x62, 0xe2, 0x9d,
+0xaa, 0x71, 0x55, 0x8e,
+0x9c, 0x47, 0x63, 0xb8,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x70, 0x54, 0x8f, 0xab,
+0x0e, 0xaa, 0xf1, 0x55,
+0xf1, 0xd5, 0x0e, 0x2a,
+0x9d, 0xd5, 0x62, 0x2a,
+0x9d, 0x71, 0x62, 0x8e,
+0xb8, 0x71, 0x47, 0x8e,
+0x38, 0x8e, 0xc7, 0x71,
+0x2b, 0x8e, 0xd4, 0x71,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x0e, 0x8e, 0xf1, 0x71,
+0x1d, 0xe2, 0xe2, 0x1d,
+0x1d, 0x46, 0xe2, 0xb9,
+0x9c, 0x63, 0x63, 0x9c,
+0x1c, 0x1c, 0xe3, 0xe3,
+0xf0, 0x0f, 0x0f, 0xf0,
+0xd4, 0xab, 0x2b, 0x54,
+0x55, 0x2a, 0xaa, 0xd5,
+0xc6, 0x55, 0x39, 0xaa,
+0xaa, 0xf1, 0x55, 0x0e,
+0x8f, 0x55, 0x70, 0xaa,
+0x2a, 0xaa, 0xd5, 0x55,
+0xb9, 0x55, 0x46, 0xaa,
+0x8e, 0xd5, 0x71, 0x2a,
+0xab, 0xd5, 0x54, 0x2a,
+0xb9, 0x39, 0x46, 0xc6,
+0xaa, 0xf1, 0x55, 0x0e,
+0x2b, 0x70, 0xd4, 0x8f,
+0x2a, 0x2a, 0xd5, 0xd5,
+0x46, 0x46, 0xb9, 0xb9,
+0x8e, 0xf1, 0x71, 0x0e,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x39, 0x2a, 0xc6, 0xd5,
+0xc6, 0xf1, 0x39, 0x0e,
+0x8f, 0xf1, 0x70, 0x0e,
+0x0f, 0xaa, 0xf0, 0x55,
+0x39, 0xaa, 0xc6, 0x55,
+0x9d, 0xd5, 0x62, 0x2a,
+0x8f, 0x55, 0x70, 0xaa,
+0xb8, 0xb9, 0x47, 0x46,
+0xb9, 0x9d, 0x46, 0x62,
+0x2b, 0xd4, 0xd4, 0x2b,
+0xab, 0x0f, 0x54, 0xf0,
+0xc6, 0x39, 0x39, 0xc6,
+0x62, 0xe2, 0x9d, 0x1d,
+0x0f, 0x70, 0xf0, 0x8f,
+0xb8, 0xab, 0x47, 0x54,
+0x55, 0x8e, 0xaa, 0x71,
+0xe3, 0x55, 0x1c, 0xaa,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x9c, 0x55, 0x63, 0xaa,
+0x0e, 0x2a, 0xf1, 0xd5,
+0xb8, 0xd5, 0x47, 0x2a,
+0x9d, 0xb9, 0x62, 0x46,
+0xab, 0x71, 0x54, 0x8e,
+0x38, 0x1c, 0xc7, 0xe3,
+0x2a, 0x8e, 0xd5, 0x71,
+0xc7, 0x63, 0x38, 0x9c,
+0x0e, 0x8e, 0xf1, 0x71,
+0xc7, 0xc7, 0x38, 0x38,
+0x1d, 0x8e, 0xe2, 0x71,
+0x47, 0x70, 0xb8, 0x8f,
+0x1c, 0x8e, 0xe3, 0x71,
+0x63, 0x0e, 0x9c, 0xf1,
+0x1c, 0x0e, 0xe3, 0xf1,
+0x38, 0x2a, 0xc7, 0xd5,
+0x1c, 0xaa, 0xe3, 0x55,
+0x8f, 0x39, 0x70, 0xc6,
+0x9c, 0x9d, 0x63, 0x62,
+0x39, 0x38, 0xc6, 0xc7,
+0xb8, 0xc7, 0x47, 0x38,
+0x47, 0xb8, 0xb8, 0x47,
+0x63, 0xb8, 0x9c, 0x47,
+0x63, 0x1c, 0x9c, 0xe3,
+0x70, 0x1c, 0x8f, 0xe3,
+0xf0, 0xab, 0x0f, 0x54,
+0xf1, 0xab, 0x0e, 0x54,
+0xd5, 0xd5, 0x2a, 0x2a,
+0xd5, 0x55, 0x2a, 0xaa,
+0x8e, 0x71, 0x71, 0x8e,
+0x8e, 0xd5, 0x71, 0x2a,
+0x39, 0xc6, 0xc6, 0x39,
+0xb9, 0xf1, 0x46, 0x0e,
+0x0f, 0xf0, 0xf0, 0x0f,
+0x2b, 0xaa, 0xd4, 0x55,
+0x55, 0x2a, 0xaa, 0xd5,
+0x8e, 0x55, 0x71, 0xaa,
+0xaa, 0xf1, 0x55, 0x0e,
+0xb9, 0x55, 0x46, 0xaa,
+0x2a, 0xe2, 0xd5, 0x1d,
+0xab, 0x55, 0x54, 0xaa,
+0x8e, 0x2b, 0x71, 0xd4,
+0xaa, 0xd5, 0x55, 0x2a,
+0xf1, 0x71, 0x0e, 0x8e,
+0xaa, 0xf1, 0x55, 0x0e,
+0x1d, 0x46, 0xe2, 0xb9,
+0x2a, 0x62, 0xd5, 0x9d,
+0x1c, 0x54, 0xe3, 0xab,
+0x8e, 0x0f, 0x71, 0xf0,
+0xd4, 0xd5, 0x2b, 0x2a,
+0x71, 0x2a, 0x8e, 0xd5,
+0x8e, 0xf1, 0x71, 0x0e,
+0xb9, 0xf1, 0x46, 0x0e,
+0x39, 0xe2, 0xc6, 0x1d,
+0x2b, 0xe2, 0xd4, 0x1d,
+0x8f, 0x2b, 0x70, 0xd4,
+0x8e, 0xab, 0x71, 0x54,
+0xf1, 0xf1, 0x0e, 0x0e,
+0xf1, 0xd5, 0x0e, 0x2a,
+0x1d, 0xe2, 0xe2, 0x1d,
+0x9d, 0x71, 0x62, 0x8e,
+0x9c, 0x63, 0x63, 0x9c,
+0x38, 0x0e, 0xc7, 0xf1,
+0xf0, 0x8f, 0x0f, 0x70,
+0x0f, 0xaa, 0xf0, 0x55,
+0x55, 0x8e, 0xaa, 0x71,
+0x9d, 0x55, 0x62, 0xaa,
+0x2a, 0x46, 0xd5, 0xb9,
+0xb8, 0x55, 0x47, 0xaa,
+0x0e, 0x9c, 0xf1, 0x63,
+0xab, 0xd5, 0x54, 0x2a,
+0xd5, 0x0f, 0x2a, 0xf0,
+0xaa, 0x71, 0x55, 0x8e,
+0x46, 0x62, 0xb9, 0x9d,
+0x2a, 0xc6, 0xd5, 0x39,
+0xab, 0x47, 0x54, 0xb8,
+0x0e, 0x38, 0xf1, 0xc7,
+0x62, 0xd4, 0x9d, 0x2b,
+0x55, 0x70, 0xaa, 0x8f,
+0xf0, 0x71, 0x0f, 0x8e,
+0x62, 0x8e, 0x9d, 0x71,
+0x1d, 0x46, 0xe2, 0xb9,
+0x38, 0x46, 0xc7, 0xb9,
+0x1c, 0x9c, 0xe3, 0x63,
+0x0f, 0x1c, 0xf0, 0xe3,
+0xd4, 0x8f, 0x2b, 0x70,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x46, 0x46, 0xb9, 0xb9,
+0xc6, 0xf1, 0x39, 0x0e,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x0f, 0x2a, 0xf0, 0xd5,
+0xc6, 0xb9, 0x39, 0x46,
+0x9d, 0xf1, 0x62, 0x0e,
+0x0f, 0x54, 0xf0, 0xab,
+0x38, 0xaa, 0xc7, 0x55,
+0xd5, 0x9d, 0x2a, 0x62,
+0x8f, 0x55, 0x70, 0xaa,
+0x8e, 0x8f, 0x71, 0x70,
+0xb9, 0xd5, 0x46, 0x2a,
+0x71, 0xc6, 0x8e, 0x39,
+0xab, 0xf1, 0x54, 0x0e,
+0x39, 0x38, 0xc6, 0xc7,
+0x2a, 0xe2, 0xd5, 0x1d,
+0x47, 0x70, 0xb8, 0x8f,
+0x8e, 0xab, 0x71, 0x54,
+0x63, 0xc6, 0x9c, 0x39,
+0xf1, 0x1d, 0x0e, 0xe2,
+0x38, 0xf0, 0xc7, 0x0f,
+0x9d, 0xab, 0x62, 0x54,
+0x47, 0x62, 0xb8, 0x9d,
+0xf0, 0x9d, 0x0f, 0x62,
+0xab, 0x8f, 0x54, 0x70,
+0x9d, 0x0f, 0x62, 0xf0,
+0x62, 0x46, 0x9d, 0xb9,
+0x70, 0x62, 0x8f, 0x9d,
+0x38, 0x9c, 0xc7, 0x63,
+0xb9, 0x8f, 0x46, 0x70,
+0xc7, 0xc7, 0x38, 0x38,
+0x63, 0x8e, 0x9c, 0x71,
+0x47, 0x38, 0xb8, 0xc7,
+0x38, 0x8e, 0xc7, 0x71,
+0x63, 0xb8, 0x9c, 0x47,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x70, 0x9c, 0x8f, 0x63,
+0x1d, 0xaa, 0xe2, 0x55,
+0xf1, 0x47, 0x0e, 0xb8,
+0x9c, 0xd5, 0x63, 0x2a,
+0x55, 0x1c, 0xaa, 0xe3,
+0xb8, 0x71, 0x47, 0x8e,
+0xe2, 0xab, 0x1d, 0x54,
+0x2b, 0x46, 0xd4, 0xb9,
+0xd4, 0x1d, 0x2b, 0xe2,
+0x0e, 0x1c, 0xf1, 0xe3,
+0x8e, 0xe3, 0x71, 0x1c,
+0xd5, 0xe3, 0x2a, 0x1c,
+0xf1, 0x63, 0x0e, 0x9c,
+0xc6, 0xe3, 0x39, 0x1c,
+0xd5, 0xc7, 0x2a, 0x38,
+0xc7, 0x63, 0x38, 0x9c,
+0x46, 0xb8, 0xb9, 0x47,
+0xc7, 0xc7, 0x38, 0x38,
+0x63, 0x9c, 0x9c, 0x63,
+0x47, 0x38, 0xb8, 0xc7,
+0xf0, 0x8f, 0x0f, 0x70,
+0x63, 0xb8, 0x9c, 0x47,
+0x55, 0x0e, 0xaa, 0xf1,
+0x70, 0x54, 0x8f, 0xab,
+0x2a, 0xaa, 0xd5, 0x55,
+0xf1, 0x55, 0x0e, 0xaa,
+0x8e, 0xd5, 0x71, 0x2a,
+0x9d, 0xd5, 0x62, 0x2a,
+0xb9, 0x71, 0x46, 0x8e,
+0xb8, 0xf1, 0x47, 0x0e,
+0x2b, 0x8e, 0xd4, 0x71,
+0x2b, 0x2a, 0xd4, 0xd5,
+0x0e, 0x0e, 0xf1, 0xf1,
+0x8e, 0xf1, 0x71, 0x0e,
+0x1d, 0xe2, 0xe2, 0x1d,
+0x39, 0x62, 0xc6, 0x9d,
+0x9c, 0xe3, 0x63, 0x1c,
+0x8f, 0x0f, 0x70, 0xf0,
+0xf0, 0xab, 0x0f, 0x54,
+0x71, 0xaa, 0x8e, 0x55,
+0xd5, 0xd5, 0x2a, 0x2a,
+0xb9, 0x55, 0x46, 0xaa,
+0x8e, 0xf1, 0x71, 0x0e,
+0xab, 0xd5, 0x54, 0x2a,
+0x39, 0x2a, 0xc6, 0xd5,
+0xaa, 0xf1, 0x55, 0x0e,
+0x8f, 0x71, 0x70, 0x8e,
+0x2a, 0xaa, 0xd5, 0x55,
+0x39, 0x46, 0xc6, 0xb9,
+0x8e, 0xd5, 0x71, 0x2a,
+0x0f, 0xd4, 0xf0, 0x2b,
+0xb9, 0xb9, 0x46, 0x46,
+0xd5, 0xf1, 0x2a, 0x0e,
+0x2b, 0x54, 0xd4, 0xab,
+0x0e, 0x2a, 0xf1, 0xd5,
+0xc6, 0xd5, 0x39, 0x2a,
+0x9d, 0xf1, 0x62, 0x0e,
+0x8f, 0x71, 0x70, 0x8e,
+0x38, 0xaa, 0xc7, 0x55,
+0x39, 0x8e, 0xc6, 0x71,
+0x8f, 0xd5, 0x70, 0x2a,
+0x0f, 0x8e, 0xf0, 0x71,
+0xb9, 0xb9, 0x46, 0x46,
+0x1d, 0xc6, 0xe2, 0x39,
+0x2b, 0x54, 0xd4, 0xab,
+0x1c, 0x38, 0xe3, 0xc7,
+0xc6, 0x1d, 0x39, 0xe2,
+0x54, 0xf0, 0xab, 0x0f,
+0x8f, 0x2b, 0x70, 0xd4,
+0x62, 0xaa, 0x9d, 0x55,
+0xf1, 0x71, 0x0e, 0x8e,
+0xb8, 0xd5, 0x47, 0x2a,
+0x1d, 0x8e, 0xe2, 0x71,
+0xab, 0x71, 0x54, 0x8e,
+0x1c, 0x0e, 0xe3, 0xf1,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x1c, 0x62, 0xe3, 0x9d,
+0x0e, 0x2a, 0xf1, 0xd5,
+0x9c, 0xc7, 0x63, 0x38,
+0x9d, 0x39, 0x62, 0xc6,
+0x70, 0x70, 0x8f, 0x8f,
+0x38, 0xb8, 0xc7, 0x47,
+0x71, 0x8e, 0x8e, 0x71,
+0x47, 0xd4, 0xb8, 0x2b,
+0x39, 0x8e, 0xc6, 0x71,
+0xe3, 0xf1, 0x1c, 0x0e,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x1c, 0xaa, 0xe3, 0x55,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x9c, 0x55, 0x63, 0xaa,
+0x9c, 0x39, 0x63, 0xc6,
+0xb8, 0x1d, 0x47, 0xe2,
+0x38, 0xb8, 0xc7, 0x47,
+0xab, 0xab, 0x54, 0x54,
+0x47, 0x1c, 0xb8, 0xe3,
+0xe2, 0x9d, 0x1d, 0x62,
+0xe3, 0x63, 0x1c, 0x9c,
+0x9c, 0x0f, 0x63, 0xf0,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x70, 0x2a, 0x8f, 0xd5,
+0x46, 0xaa, 0xb9, 0x55,
+0xb9, 0xf1, 0x46, 0x0e,
+0xab, 0xd5, 0x54, 0x2a,
+0x2b, 0x2a, 0xd4, 0xd5,
+0xaa, 0x39, 0x55, 0xc6,
+0x8e, 0x71, 0x71, 0x8e,
+0x2a, 0xf0, 0xd5, 0x0f,
+0x39, 0x46, 0xc6, 0xb9,
+0x46, 0xe2, 0xb9, 0x1d,
+0x0f, 0xd4, 0xf0, 0x2b,
+0xab, 0xab, 0x54, 0x54,
+0xd5, 0x39, 0x2a, 0xc6,
+0xe2, 0x55, 0x1d, 0xaa,
+0x0e, 0x70, 0xf1, 0x8f,
+0x9c, 0xd5, 0x63, 0x2a,
+0x55, 0x0e, 0xaa, 0xf1,
+0xb8, 0x71, 0x47, 0x8e,
+0x2a, 0xaa, 0xd5, 0x55,
+0x2b, 0x46, 0xd4, 0xb9,
+0x8e, 0x1d, 0x71, 0xe2,
+0x0e, 0xd4, 0xf1, 0x2b,
+0xb9, 0xe3, 0x46, 0x1c,
+0xd5, 0xf1, 0x2a, 0x0e,
+0xe3, 0x63, 0x1c, 0x9c,
+0x0e, 0x2a, 0xf1, 0xd5,
+0xd4, 0xc7, 0x2b, 0x38,
+0x9d, 0x39, 0x62, 0xc6,
+0x46, 0x70, 0xb9, 0x8f,
+0x38, 0xf0, 0xc7, 0x0f,
+0x63, 0x8e, 0x9c, 0x71,
+0x47, 0x2a, 0xb8, 0xd5,
+0x38, 0x8e, 0xc7, 0x71,
+0xab, 0xb9, 0x54, 0x46,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x2a, 0x9c, 0xd5, 0x63,
+0x1d, 0x62, 0xe2, 0x9d,
+0xc6, 0x47, 0x39, 0xb8,
+0x9c, 0xc7, 0x63, 0x38,
+0x47, 0x1c, 0xb8, 0xe3,
+0x70, 0xb8, 0x8f, 0x47,
+0xe3, 0xab, 0x1c, 0x54,
+0x71, 0x1c, 0x8e, 0xe3,
+0xd4, 0xd5, 0x2b, 0x2a,
+0xf1, 0x2b, 0x0e, 0xd4,
+0x8e, 0xf1, 0x71, 0x0e,
+0xd5, 0xf1, 0x2a, 0x0e,
+0x39, 0x62, 0xc6, 0x9d,
+0x0e, 0xe2, 0xf1, 0x1d,
+0x8f, 0xc7, 0x70, 0x38,
+0x9d, 0xab, 0x62, 0x54,
+0x71, 0x70, 0x8e, 0x8f,
+0xf0, 0xd5, 0x0f, 0x2a,
+0x71, 0x8e, 0x8e, 0x71,
+0x9d, 0xf1, 0x62, 0x0e,
+0x39, 0x46, 0xc6, 0xb9,
+0x38, 0xe2, 0xc7, 0x1d,
+0x0f, 0x9c, 0xf0, 0x63,
+0x8f, 0xab, 0x70, 0x54,
+0xd5, 0x8f, 0x2a, 0x70,
+0xf1, 0x55, 0x0e, 0xaa,
+0x46, 0xc6, 0xb9, 0x39,
+0x9d, 0xd5, 0x62, 0x2a,
+0x2b, 0x70, 0xd4, 0x8f,
+0xb8, 0x39, 0x47, 0xc6,
+0x46, 0x8e, 0xb9, 0x71,
+0x2b, 0xf0, 0xd4, 0x0f,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x46, 0x2a, 0xb9, 0xd5,
+0x0e, 0xe2, 0xf1, 0x1d,
+0xab, 0xf1, 0x54, 0x0e,
+0x9d, 0x2b, 0x62, 0xd4,
+0x2a, 0x62, 0xd5, 0x9d,
+0xf0, 0x71, 0x0f, 0x8e,
+0x8e, 0x8f, 0x71, 0x70,
+0x1d, 0xc6, 0xe2, 0x39,
+0x71, 0x46, 0x8e, 0xb9,
+0x1c, 0xf0, 0xe3, 0x0f,
+0x39, 0x1c, 0xc6, 0xe3,
+0x54, 0xe2, 0xab, 0x1d,
+0xc7, 0x2b, 0x38, 0xd4,
+0xaa, 0xab, 0x55, 0x54,
+0xc7, 0x71, 0x38, 0x8e,
+0xe2, 0x9d, 0x1d, 0x62,
+0x0f, 0x46, 0xf0, 0xb9,
+0x9c, 0x8f, 0x63, 0x70,
+0x1d, 0x1c, 0xe2, 0xe3,
+0x70, 0x46, 0x8f, 0xb9,
+0xd4, 0xab, 0x2b, 0x54,
+0x39, 0x1c, 0xc6, 0xe3,
+0xc6, 0xd5, 0x39, 0x2a,
+0xc7, 0xe3, 0x38, 0x1c,
+0x8f, 0xb9, 0x70, 0x46,
+0xc7, 0xab, 0x38, 0x54,
+0x39, 0x9c, 0xc6, 0x63,
+0xc7, 0xd5, 0x38, 0x2a,
+0xc7, 0x8f, 0x38, 0x70,
+0x8f, 0xb9, 0x70, 0x46,
+0x47, 0x8e, 0xb8, 0x71,
+0x39, 0x9c, 0xc6, 0x63,
+0x2b, 0xc6, 0xd4, 0x39,
+0xc7, 0x0f, 0x38, 0xf0,
+0x0e, 0xb8, 0xf1, 0x47,
+0x47, 0xe2, 0xb8, 0x1d,
+0x55, 0x9c, 0xaa, 0x63,
+0xab, 0x63, 0x54, 0x9c,
+0xe2, 0x0f, 0x1d, 0xf0,
+0xe2, 0x47, 0x1d, 0xb8,
+0x54, 0x62, 0xab, 0x9d,
+0x54, 0x1c, 0xab, 0xe3,
+0xaa, 0x0f, 0x55, 0xf0,
+0xe2, 0x63, 0x1d, 0x9c,
+0x62, 0x62, 0x9d, 0x9d,
+0xd4, 0x47, 0x2b, 0xb8,
+0xb8, 0x0f, 0x47, 0xf0,
+0x46, 0x9c, 0xb9, 0x63,
+0x63, 0xe2, 0x9c, 0x1d,
+0xe3, 0x0f, 0x1c, 0xf0,
+0xb8, 0x2b, 0x47, 0xd4,
+0x54, 0xaa, 0xab, 0x55,
+0xe3, 0x39, 0x1c, 0xc6,
+0xaa, 0x1d, 0x55, 0xe2,
+0x1c, 0x70, 0xe3, 0x8f,
+0xaa, 0x2b, 0x55, 0xd4,
+0x54, 0x46, 0xab, 0xb9,
+0xe2, 0x39, 0x1d, 0xc6,
+0x2a, 0x54, 0xd5, 0xab,
+0x1c, 0x70, 0xe3, 0x8f,
+0xc6, 0x1d, 0x39, 0xe2,
+0x54, 0xc6, 0xab, 0x39,
+0x8f, 0x2b, 0x70, 0xd4,
+0x2a, 0xb8, 0xd5, 0x47,
+0xf1, 0x71, 0x0e, 0x8e,
+0x46, 0xd4, 0xb9, 0x2b,
+0x1d, 0xc6, 0xe2, 0x39,
+0xe3, 0x71, 0x1c, 0x8e,
+0x1c, 0x38, 0xe3, 0xc7,
+0x1c, 0x0e, 0xe3, 0xf1,
+0x54, 0x38, 0xab, 0xc7,
+0x1c, 0x2a, 0xe3, 0xd5,
+0x62, 0x38, 0x9d, 0xc7,
+0x9c, 0x71, 0x63, 0x8e,
+0x70, 0x38, 0x8f, 0xc7,
+0x38, 0x8e, 0xc7, 0x71,
+0x71, 0xb8, 0x8e, 0x47,
+0x0f, 0xc6, 0xf0, 0x39,
+0x71, 0x9c, 0x8e, 0x63,
+0x1d, 0xf0, 0xe2, 0x0f,
+0xf1, 0x47, 0x0e, 0xb8,
+0x54, 0xe2, 0xab, 0x1d,
+0x55, 0x1c, 0xaa, 0xe3,
+0xaa, 0x63, 0x55, 0x9c,
+0xe2, 0x63, 0x1d, 0x9c,
+0xe2, 0x47, 0x1d, 0xb8,
+0xd4, 0x47, 0x2b, 0xb8,
+0x54, 0x1c, 0xab, 0xe3,
+0x46, 0x1c, 0xb9, 0xe3,
+0xe2, 0xe3, 0x1d, 0x1c,
+0xe3, 0x63, 0x1c, 0x9c,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xd4, 0x0f, 0x2b, 0xf0,
+0xc6, 0x39, 0x39, 0xc6,
+0x46, 0xe2, 0xb9, 0x1d,
+0x0f, 0xf0, 0xf0, 0x0f,
+0xab, 0xab, 0x54, 0x54,
+0x55, 0x2a, 0xaa, 0xd5,
+0xe2, 0x55, 0x1d, 0xaa,
+0xaa, 0x71, 0x55, 0x8e,
+0x9c, 0x55, 0x63, 0xaa,
+0x2a, 0x0e, 0xd5, 0xf1,
+0xb8, 0x55, 0x47, 0xaa,
+0x0e, 0xaa, 0xf1, 0x55,
+0xab, 0xd5, 0x54, 0x2a,
+0x9d, 0x1d, 0x62, 0xe2,
+0xaa, 0x71, 0x55, 0x8e,
+0xb8, 0x63, 0x47, 0x9c,
+0x2a, 0x8e, 0xd5, 0x71,
+0xe3, 0x47, 0x1c, 0xb8,
+0x0e, 0x0e, 0xf1, 0xf1,
+0x54, 0xd4, 0xab, 0x2b,
+0x1d, 0x2a, 0xe2, 0xd5,
+0xe2, 0x71, 0x1d, 0x8e,
+0x9c, 0x71, 0x63, 0x8e,
+0x1c, 0x0e, 0xe3, 0xf1,
+0x38, 0x0e, 0xc7, 0xf1,
+0x1c, 0xaa, 0xe3, 0x55,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x9c, 0x9d, 0x63, 0x62,
+0x9d, 0x39, 0x62, 0xc6,
+0xb8, 0x47, 0x47, 0xb8,
+0x38, 0xb8, 0xc7, 0x47,
+0x63, 0x9c, 0x9c, 0x63,
+0x47, 0x1c, 0xb8, 0xe3,
+0xf0, 0x8f, 0x0f, 0x70,
+0xe3, 0xab, 0x1c, 0x54,
+0x55, 0x0e, 0xaa, 0xf1,
+0xd4, 0x55, 0x2b, 0xaa,
+0x2a, 0x2a, 0xd5, 0xd5,
+0x8e, 0x55, 0x71, 0xaa,
+0x8e, 0xf1, 0x71, 0x0e,
+0xb9, 0xd5, 0x46, 0x2a,
+0x39, 0xe2, 0xc6, 0x1d,
+0xab, 0xf1, 0x54, 0x0e,
+0x8f, 0x2b, 0x70, 0xd4,
+0x2a, 0xaa, 0xd5, 0x55,
+0xf1, 0x71, 0x0e, 0x8e,
+0x8e, 0xd5, 0x71, 0x2a,
+0x1d, 0xc6, 0xe2, 0x39,
+0xb9, 0x71, 0x46, 0x8e,
+0x1c, 0xf0, 0xe3, 0x0f,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x54, 0x2a, 0xab, 0xd5,
+0x0e, 0x2a, 0xf1, 0xd5,
+0xaa, 0xf1, 0x55, 0x0e,
+0x9d, 0x71, 0x62, 0x8e,
+0x2a, 0x62, 0xd5, 0x9d,
+0x38, 0x46, 0xc7, 0xb9,
+0x8e, 0x8f, 0x71, 0x70,
+0x0f, 0xd4, 0xf0, 0x2b,
+0x71, 0x8e, 0x8e, 0x71,
+0xd5, 0xf1, 0x2a, 0x0e,
+0x39, 0x46, 0xc6, 0xb9,
+0x0e, 0xe2, 0xf1, 0x1d,
+0x0f, 0xd4, 0xf0, 0x2b,
+0x9d, 0xab, 0x62, 0x54,
+0xd5, 0x71, 0x2a, 0x8e,
+0xf0, 0x55, 0x0f, 0xaa,
+0x0e, 0x8e, 0xf1, 0x71,
+0x9d, 0xd5, 0x62, 0x2a,
+0x1d, 0x46, 0xe2, 0xb9,
+0xb8, 0x71, 0x47, 0x8e,
+0x1c, 0x9c, 0xe3, 0x63,
+0x2b, 0x0e, 0xd4, 0xf1,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x0e, 0x2a, 0xf1, 0xd5,
+0x46, 0xe2, 0xb9, 0x1d,
+0x9d, 0xf1, 0x62, 0x0e,
+0xab, 0x63, 0x54, 0x9c,
+0x38, 0x2a, 0xc7, 0xd5,
+0xe2, 0x8f, 0x1d, 0x70,
+0x8f, 0x71, 0x70, 0x8e,
+0x54, 0x8e, 0xab, 0x71,
+0x39, 0x0e, 0xc6, 0xf1,
+0x2a, 0xc6, 0xd5, 0x39,
+0x0f, 0x62, 0xf0, 0x9d,
+0x0e, 0xb8, 0xf1, 0x47,
+0x9d, 0xc7, 0x62, 0x38,
+0x55, 0x54, 0xaa, 0xab,
+0x70, 0x70, 0x8f, 0x8f,
+0xe2, 0x9d, 0x1d, 0x62,
+0x71, 0x46, 0x8e, 0xb9,
+0x9c, 0xc7, 0x63, 0x38,
+0x39, 0x1c, 0xc6, 0xe3,
+0x70, 0xf0, 0x8f, 0x0f,
+0xc7, 0xab, 0x38, 0x54,
+0x71, 0xaa, 0x8e, 0x55,
+0xc7, 0xd5, 0x38, 0x2a,
+0xb9, 0x9d, 0x46, 0x62,
+0x8f, 0xf1, 0x70, 0x0e,
+0xab, 0x8f, 0x54, 0x70,
+0x39, 0x2a, 0xc6, 0xd5,
+0x62, 0xc6, 0x9d, 0x39,
+0x8f, 0x71, 0x70, 0x8e,
+0x38, 0xb8, 0xc7, 0x47,
+0x39, 0x8e, 0xc6, 0x71,
+0x47, 0xd4, 0xb8, 0x2b,
+0x0f, 0x8e, 0xf0, 0x71,
+0xe3, 0xb9, 0x1c, 0x46,
+0x1d, 0x0e, 0xe2, 0xf1,
+0x1c, 0x54, 0xe3, 0xab,
+0x1c, 0x2a, 0xe3, 0xd5,
+0xd4, 0x1d, 0x2b, 0xe2,
+0x9c, 0x39, 0x63, 0xc6,
+0x8e, 0x2b, 0x71, 0xd4,
+0x38, 0xf0, 0xc7, 0x0f,
+0xf1, 0xb9, 0x0e, 0x46,
+0x47, 0xe2, 0xb8, 0x1d,
+0x1d, 0x9c, 0xe2, 0x63,
+0xab, 0x63, 0x54, 0x9c,
+0xd4, 0x0f, 0x2b, 0xf0,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x46, 0x62, 0xb9, 0x9d,
+0x54, 0xe2, 0xab, 0x1d,
+0xab, 0x0f, 0x54, 0xf0,
+0xaa, 0x2b, 0x55, 0xd4,
+0x62, 0x62, 0x9d, 0x9d,
+0xe2, 0x71, 0x1d, 0x8e,
+0xb8, 0x47, 0x47, 0xb8,
+0x1c, 0x8e, 0xe3, 0x71,
+0x63, 0x1c, 0x9c, 0xe3,
+0x1c, 0x0e, 0xe3, 0xf1,
+0xf0, 0x2b, 0x0f, 0xd4,
+0x1c, 0xaa, 0xe3, 0x55,
+0xd5, 0x39, 0x2a, 0xc6,
+0x9c, 0x55, 0x63, 0xaa,
+0x0e, 0x38, 0xf1, 0xc7,
+0xb8, 0xd5, 0x47, 0x2a,
+0x55, 0xb8, 0xaa, 0x47,
+0xab, 0x71, 0x54, 0x8e,
+0x62, 0x1c, 0x9d, 0xe3,
+0x2a, 0x46, 0xd5, 0xb9,
+0xf0, 0x63, 0x0f, 0x9c,
+0x0e, 0x9c, 0xf1, 0x63,
+0xd5, 0xc7, 0x2a, 0x38,
+0xd5, 0x47, 0x2a, 0xb8,
+0x46, 0x70, 0xb9, 0x8f,
+0x46, 0xd4, 0xb9, 0x2b,
+0x63, 0xc6, 0x9c, 0x39,
+0xe3, 0x39, 0x1c, 0xc6,
+0x38, 0x38, 0xc7, 0xc7,
+0x1c, 0xb8, 0xe3, 0x47,
+0x47, 0x38, 0xb8, 0xc7,
+0x54, 0x9c, 0xab, 0x63,
+0x63, 0x38, 0x9c, 0xc7,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x70, 0x70, 0x8f, 0x8f,
+0x54, 0xaa, 0xab, 0x55,
+0x71, 0x0e, 0x8e, 0xf1,
+0xaa, 0xd5, 0x55, 0x2a,
+0x39, 0x62, 0xc6, 0x9d,
+0xaa, 0xf1, 0x55, 0x0e,
+0x8f, 0x47, 0x70, 0xb8,
+0x2a, 0xaa, 0xd5, 0x55,
+0x71, 0x54, 0x8e, 0xab,
+0x8e, 0xd5, 0x71, 0x2a,
+0xf1, 0xd5, 0x0e, 0x2a,
+0xb9, 0xf1, 0x46, 0x0e,
+0x9d, 0xf1, 0x62, 0x0e,
+0x2b, 0x62, 0xd4, 0x9d,
+0x38, 0x2a, 0xc7, 0xd5,
+0x8e, 0x8f, 0x71, 0x70,
+0x8f, 0xf1, 0x70, 0x0e,
+0x71, 0x8e, 0x8e, 0x71,
+0x39, 0xe2, 0xc6, 0x1d,
+0x39, 0xc6, 0xc6, 0x39,
+0x8f, 0xe3, 0x70, 0x1c,
+0x0f, 0xb8, 0xf0, 0x47,
+0xf1, 0xab, 0x0e, 0x54,
+0x55, 0xd4, 0xaa, 0x2b,
+0xd5, 0x55, 0x2a, 0xaa,
+0xe2, 0x71, 0x1d, 0x8e,
+0x8e, 0x55, 0x71, 0xaa,
+0x1c, 0xc6, 0xe3, 0x39,
+0xb9, 0x1d, 0x46, 0xe2,
+0x1c, 0xf0, 0xe3, 0x0f,
+0xab, 0x2b, 0x54, 0xd4,
+0x54, 0x2a, 0xab, 0xd5,
+0xe2, 0x39, 0x1d, 0xc6,
+0xaa, 0x71, 0x55, 0x8e,
+0x1c, 0x70, 0xe3, 0x8f,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x54, 0x46, 0xab, 0xb9,
+0x0e, 0x2a, 0xf1, 0xd5,
+0x2a, 0xd4, 0xd5, 0x2b,
+0x9d, 0x71, 0x62, 0x8e,
+0xc6, 0x71, 0x39, 0x8e,
+0x38, 0xc6, 0xc7, 0x39,
+0x0f, 0x8e, 0xf0, 0x71,
+0x0f, 0xb8, 0xf0, 0x47,
+0x1d, 0x8e, 0xe2, 0x71,
+0x55, 0x54, 0xaa, 0xab,
+0x1c, 0x46, 0xe3, 0xb9,
+0xe2, 0x1d, 0x1d, 0xe2,
+0x1c, 0x54, 0xe3, 0xab,
+0x9c, 0x2b, 0x63, 0xd4,
+0xd4, 0x1d, 0x2b, 0xe2,
+0xf0, 0x39, 0x0f, 0xc6,
+0x8e, 0xab, 0x71, 0x54,
+0x1d, 0xf0, 0xe2, 0x0f,
+0xf1, 0x55, 0x0e, 0xaa,
+0x54, 0xe2, 0xab, 0x1d,
+0x9d, 0x1d, 0x62, 0xe2,
+0xaa, 0x63, 0x55, 0x9c,
+0xb8, 0x63, 0x47, 0x9c,
+0xe2, 0x8f, 0x1d, 0x70,
+0xe3, 0x47, 0x1c, 0xb8,
+0x54, 0x0e, 0xab, 0xf1,
+0x54, 0x1c, 0xab, 0xe3,
+0x2a, 0x2a, 0xd5, 0xd5,
+0xe2, 0x63, 0x1d, 0x9c,
+0x8e, 0x71, 0x71, 0x8e,
+0xd4, 0xc7, 0x2b, 0x38,
+0x39, 0x0e, 0xc6, 0xf1,
+0x46, 0xf0, 0xb9, 0x0f,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x63, 0xaa, 0x9c, 0x55,
+0x9d, 0x2b, 0x62, 0xd4,
+0xb8, 0x55, 0x47, 0xaa,
+0xf0, 0xb9, 0x0f, 0x46,
+0xab, 0x9d, 0x54, 0x62,
+0x1d, 0x1c, 0xe2, 0xe3,
+0xaa, 0x47, 0x55, 0xb8,
+0xd4, 0x63, 0x2b, 0x9c,
+0x62, 0x1c, 0x9d, 0xe3,
+0xc6, 0x47, 0x39, 0xb8,
+0xf0, 0xe3, 0x0f, 0x1c,
+0x47, 0x9c, 0xb8, 0x63,
+0xd5, 0xab, 0x2a, 0x54,
+0xe3, 0x47, 0x1c, 0xb8,
+0xc6, 0x1d, 0x39, 0xe2,
+0x54, 0xd4, 0xab, 0x2b,
+0x8f, 0x2b, 0x70, 0xd4,
+0xe2, 0xb9, 0x1d, 0x46,
+0xf1, 0x71, 0x0e, 0x8e,
+0x1c, 0xd4, 0xe3, 0x2b,
+0x1d, 0x0e, 0xe2, 0xf1,
+0xd4, 0x71, 0x2b, 0x8e,
+0x1c, 0x2a, 0xe3, 0xd5,
+0x0e, 0x0e, 0xf1, 0xf1,
+0x9c, 0xf1, 0x63, 0x0e,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x38, 0x62, 0xc7, 0x9d,
+0x9c, 0xb9, 0x63, 0x46,
+0x8f, 0x0f, 0x70, 0xf0,
+0x38, 0x9c, 0xc7, 0x63,
+0x71, 0xaa, 0x8e, 0x55,
+0xc7, 0xc7, 0x38, 0x38,
+0xb9, 0x9d, 0x46, 0x62,
+0x47, 0xf0, 0xb8, 0x0f,
+0xab, 0x8f, 0x54, 0x70,
+0x63, 0x2a, 0x9c, 0xd5,
+0x62, 0x0e, 0x9d, 0xf1,
+0xb8, 0x71, 0x47, 0x8e,
+0x38, 0xaa, 0xc7, 0x55,
+0x2b, 0x8e, 0xd4, 0x71,
+0x8f, 0x1d, 0x70, 0xe2,
+0x0e, 0x8e, 0xf1, 0x71,
+0xb9, 0xe3, 0x46, 0x1c,
+0x1d, 0xc6, 0xe2, 0x39,
+0xe3, 0x63, 0x1c, 0x9c,
+0x1c, 0x38, 0xe3, 0xc7,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x54, 0x38, 0xab, 0xc7,
+0x46, 0x2a, 0xb9, 0xd5,
+0x62, 0xf0, 0x9d, 0x0f,
+0xab, 0x71, 0x54, 0x8e,
+0x70, 0x2a, 0x8f, 0xd5,
+0x2a, 0x8e, 0xd5, 0x71,
+0xb9, 0x71, 0x46, 0x8e,
+0x0e, 0xc6, 0xf1, 0x39,
+0x2b, 0xc6, 0xd4, 0x39,
+0x1d, 0x38, 0xe2, 0xc7,
+0x0e, 0x70, 0xf1, 0x8f,
+0x54, 0xf0, 0xab, 0x0f,
+0x55, 0x0e, 0xaa, 0xf1,
+0x62, 0x62, 0x9d, 0x9d,
+0x2a, 0x62, 0xd5, 0x9d,
+0xb8, 0x47, 0x47, 0xb8,
+0x8e, 0x8f, 0x71, 0x70,
+0x63, 0xd4, 0x9c, 0x2b,
+0x71, 0x0e, 0x8e, 0xf1,
+0xf0, 0xf1, 0x0f, 0x0e,
+0x39, 0xaa, 0xc6, 0x55,
+0x1d, 0xe2, 0xe2, 0x1d,
+0x8f, 0x55, 0x70, 0xaa,
+0x9c, 0xab, 0x63, 0x54,
+0xb9, 0x1d, 0x46, 0xe2,
+0xf0, 0xd5, 0x0f, 0x2a,
+0xab, 0xab, 0x54, 0x54,
+0x9d, 0x39, 0x62, 0xc6,
+0xe2, 0x55, 0x1d, 0xaa,
+0x38, 0x70, 0xc7, 0x8f,
+0x9c, 0x9d, 0x63, 0x62,
+0x47, 0x0e, 0xb8, 0xf1,
+0xb8, 0x8f, 0x47, 0x70,
+0x2b, 0xaa, 0xd4, 0x55,
+0x63, 0x0e, 0x9c, 0xf1,
+0x8e, 0x1d, 0x71, 0xe2,
+0x38, 0xe2, 0xc7, 0x1d,
+0xb9, 0xab, 0x46, 0x54,
+0x8f, 0xe3, 0x70, 0x1c,
+0xe3, 0x9d, 0x1c, 0x62,
+0xf1, 0x2b, 0x0e, 0xd4,
+0x9c, 0xc7, 0x63, 0x38,
+0xd5, 0x39, 0x2a, 0xc6,
+0x70, 0x70, 0x8f, 0x8f,
+0x0e, 0xb8, 0xf1, 0x47,
+0x71, 0xc6, 0x8e, 0x39,
+0x55, 0xd4, 0xaa, 0x2b,
+0x39, 0x70, 0xc6, 0x8f,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x47, 0x46, 0xb8, 0xb9,
+0x1c, 0xaa, 0xe3, 0x55,
+0x2b, 0x1c, 0xd4, 0xe3,
+0x9c, 0x1d, 0x63, 0xe2,
+0xc6, 0x2b, 0x39, 0xd4,
+0xb8, 0xe3, 0x47, 0x1c,
+0xc7, 0xb9, 0x38, 0x46,
+0xe3, 0xab, 0x1c, 0x54,
+0x0f, 0x1c, 0xf0, 0xe3,
+0xd4, 0x9d, 0x2b, 0x62,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x8e, 0x47, 0x71, 0xb8,
+0xc6, 0xf1, 0x39, 0x0e,
+0x71, 0xd4, 0x8e, 0x2b,
+0x0f, 0xe2, 0xf0, 0x1d,
+0xf1, 0xb9, 0x0e, 0x46,
+0x9d, 0xe3, 0x62, 0x1c,
+0x1d, 0x54, 0xe2, 0xab,
+0xf0, 0x63, 0x0f, 0x9c,
+0xd4, 0x9d, 0x2b, 0x62,
+0xd5, 0x0f, 0x2a, 0xf0,
+0x8e, 0x47, 0x71, 0xb8,
+0x46, 0xe2, 0xb9, 0x1d,
+0x71, 0xd4, 0x8e, 0x2b,
+0xab, 0xe3, 0x54, 0x1c,
+0xf1, 0x39, 0x0e, 0xc6,
+0xe2, 0xe3, 0x1d, 0x1c,
+0x1d, 0x70, 0xe2, 0x8f,
+0xd4, 0x63, 0x2b, 0x9c,
+0x54, 0x0e, 0xab, 0xf1,
+0xc6, 0x0f, 0x39, 0xf0,
+0x2a, 0xe2, 0xd5, 0x1d,
+0x47, 0x62, 0xb8, 0x9d,
+0x8e, 0xab, 0x71, 0x54,
+0xab, 0xc7, 0x54, 0x38,
+0xf1, 0x1d, 0x0e, 0xe2,
+0x62, 0xf0, 0x9d, 0x0f,
+0x9d, 0x63, 0x62, 0x9c,
+0x70, 0x62, 0x8f, 0x9d,
+0xf0, 0x8f, 0x0f, 0x70,
+0xb9, 0x8f, 0x46, 0x70,
+0x55, 0xc6, 0xaa, 0x39,
+0x63, 0x46, 0x9c, 0xb9,
+0x2a, 0x38, 0xd5, 0xc7,
+0x38, 0x54, 0xc7, 0xab,
+0x46, 0xb8, 0xb9, 0x47,
+0xc7, 0xd5, 0x38, 0x2a,
+0x63, 0x9c, 0x9c, 0x63,
+0x8f, 0x39, 0x70, 0xc6,
+0xf0, 0x8f, 0x0f, 0x70,
+0x39, 0xb8, 0xc6, 0x47,
+0x55, 0xc6, 0xaa, 0x39,
+0x47, 0x54, 0xb8, 0xab,
+0x2a, 0xb8, 0xd5, 0x47,
+0xe3, 0x55, 0x1c, 0xaa,
+0x46, 0x1c, 0xb9, 0xe3,
+0x9c, 0xd5, 0x63, 0x2a,
+0xe3, 0x2b, 0x1c, 0xd4,
+0xb8, 0x39, 0x47, 0xc6,
+0xd4, 0xb9, 0x2b, 0x46,
+0x2b, 0x38, 0xd4, 0xc7,
+0x0e, 0x1c, 0xf1, 0xe3,
+0x46, 0xf0, 0xb9, 0x0f,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x63, 0x62, 0x9c, 0x9d,
+0xc6, 0x2b, 0x39, 0xd4,
+0xb8, 0xc7, 0x47, 0x38,
+0xc7, 0xb9, 0x38, 0x46,
+0x63, 0xb8, 0x9c, 0x47,
+0x0f, 0x1c, 0xf0, 0xe3,
+0x70, 0x9c, 0x8f, 0x63,
+0xd5, 0xab, 0x2a, 0x54,
+0xf1, 0x47, 0x0e, 0xb8,
+0xc6, 0xd5, 0x39, 0x2a,
+0x55, 0xd4, 0xaa, 0x2b,
+0x8f, 0x71, 0x70, 0x8e,
+0xe2, 0xb9, 0x1d, 0x46,
+0x39, 0x46, 0xc6, 0xb9,
+0x1c, 0xd4, 0xe3, 0x2b,
+0x0f, 0x1c, 0xf0, 0xe3,
+0xd4, 0xb9, 0x2b, 0x46,
+0xd5, 0x2b, 0x2a, 0xd4,
+0x0e, 0x54, 0xf1, 0xab,
+0xc6, 0xf1, 0x39, 0x0e,
+0xd5, 0xd5, 0x2a, 0x2a,
+0x0f, 0x62, 0xf0, 0x9d,
+0x8e, 0xb9, 0x71, 0x46,
+0x9d, 0xc7, 0x62, 0x38,
+0x39, 0x54, 0xc6, 0xab,
+0x70, 0xf0, 0x8f, 0x0f,
+0xc7, 0x9d, 0x38, 0x62,
+0x71, 0xaa, 0x8e, 0x55,
+0x8f, 0xc7, 0x70, 0x38,
+0xb9, 0x9d, 0x46, 0x62,
+0x71, 0xf0, 0x8e, 0x0f,
+0xab, 0xc7, 0x54, 0x38,
+0x71, 0x2a, 0x8e, 0xd5,
+0x62, 0xf0, 0x9d, 0x0f,
+0xb9, 0x71, 0x46, 0x8e,
+0x70, 0xe2, 0x8f, 0x1d,
+0x2b, 0x8e, 0xd4, 0x71,
+0xb9, 0x2b, 0x46, 0xd4,
+0x0e, 0xc6, 0xf1, 0x39,
+0xe3, 0xf1, 0x1c, 0x0e,
+0x1d, 0x38, 0xe2, 0xc7,
+0x1c, 0x62, 0xe3, 0x9d,
+0x54, 0x38, 0xab, 0xc7,
+0x9c, 0x0f, 0x63, 0xf0,
+0x62, 0x38, 0x9d, 0xc7,
+0x70, 0x62, 0x8f, 0x9d,
+0x70, 0xb8, 0x8f, 0x47,
+0xb9, 0x8f, 0x46, 0x70,
+0x71, 0xd4, 0x8e, 0x2b,
+0x63, 0xc6, 0x9c, 0x39,
+0xf1, 0x39, 0x0e, 0xc6,
+0x38, 0xf0, 0xc7, 0x0f,
+0x1d, 0xb8, 0xe2, 0x47,
+0x47, 0x62, 0xb8, 0x9d,
+0x54, 0x9c, 0xab, 0x63,
+0xab, 0x0f, 0x54, 0xf0,
+0xe2, 0x0f, 0x1d, 0xf0,
+0x62, 0x62, 0x9d, 0x9d,
+0x54, 0x62, 0xab, 0x9d,
+0xb8, 0x0f, 0x47, 0xf0,
+0xaa, 0x8f, 0x55, 0x70,
+0x63, 0x62, 0x9c, 0x9d,
+0x62, 0x0e, 0x9d, 0xf1,
+0xb8, 0x47, 0x47, 0xb8,
+0x38, 0xaa, 0xc7, 0x55,
+0x63, 0x9c, 0x9c, 0x63,
+0x8f, 0x1d, 0x70, 0xe2,
+0xf0, 0x8f, 0x0f, 0x70,
+0xb9, 0xab, 0x46, 0x54,
+0x55, 0xc6, 0xaa, 0x39,
+0xe3, 0x55, 0x1c, 0xaa,
+0x2a, 0x38, 0xd5, 0xc7,
+0x9c, 0x55, 0x63, 0xaa,
+0x46, 0x38, 0xb9, 0xc7,
+0xb8, 0xd5, 0x47, 0x2a,
+0x63, 0xb8, 0x9c, 0x47,
+0xab, 0x39, 0x54, 0xc6,
+0x70, 0x1c, 0x8f, 0xe3,
+0x2a, 0xb8, 0xd5, 0x47,
+0xf1, 0x63, 0x0e, 0x9c,
+0x46, 0xd4, 0xb9, 0x2b,
+0xd5, 0xc7, 0x2a, 0x38,
+0xe3, 0x71, 0x1c, 0x8e,
+0x46, 0x38, 0xb9, 0xc7,
+0x1c, 0xc6, 0xe3, 0x39,
+0x63, 0x38, 0x9c, 0xc7,
+0x1c, 0x38, 0xe3, 0xc7,
+0x70, 0x38, 0x8f, 0xc7,
+0x54, 0xb8, 0xab, 0x47,
+0x71, 0x38, 0x8e, 0xc7,
+0x62, 0xd4, 0x9d, 0x2b,
+0x71, 0x70, 0x8e, 0x8f,
+0xf0, 0xf1, 0x0f, 0x0e,
+0x71, 0x8e, 0x8e, 0x71,
+0x1d, 0xe2, 0xe2, 0x1d,
+0x39, 0x46, 0xc6, 0xb9,
+0x9c, 0xe3, 0x63, 0x1c,
+0x0f, 0x1c, 0xf0, 0xe3,
+0xf0, 0xab, 0x0f, 0x54,
+0xd5, 0xab, 0x2a, 0x54,
+0xd5, 0x55, 0x2a, 0xaa,
+0xc6, 0x55, 0x39, 0xaa,
+0x8e, 0xd5, 0x71, 0x2a,
+0x8f, 0xd5, 0x70, 0x2a,
+0xb9, 0xb9, 0x46, 0x46,
+0xb9, 0xf1, 0x46, 0x0e,
+0x2b, 0xd4, 0xd4, 0x2b,
+0x2b, 0x2a, 0xd4, 0xd5,
+0xc6, 0x39, 0x39, 0xc6,
+0x8e, 0xf1, 0x71, 0x0e,
+0x0f, 0xf0, 0xf0, 0x0f,
+0x39, 0xaa, 0xc6, 0x55,
+0x55, 0xe2, 0xaa, 0x1d,
+0x8f, 0x55, 0x70, 0xaa,
+0xaa, 0xab, 0x55, 0x54,
+0xb9, 0x55, 0x46, 0xaa,
+0xe2, 0xd5, 0x1d, 0x2a,
+0xab, 0x55, 0x54, 0xaa,
+0x9c, 0x39, 0x63, 0xc6,
+0xaa, 0x1d, 0x55, 0xe2,
+0x38, 0x70, 0xc7, 0x8f,
+0xaa, 0xab, 0x55, 0x54,
+0x47, 0x46, 0xb8, 0xb9,
+0xe2, 0x9d, 0x1d, 0x62,
+0x2b, 0x54, 0xd4, 0xab,
+0x9c, 0x0f, 0x63, 0xf0,
+0xc6, 0x1d, 0x39, 0xe2,
+0x70, 0xe2, 0x8f, 0x1d,
+0x8f, 0xab, 0x70, 0x54,
+0xb9, 0xab, 0x46, 0x54,
+0xf1, 0xd5, 0x0e, 0x2a,
+0xe3, 0xd5, 0x1c, 0x2a,
+0x9d, 0x39, 0x62, 0xc6,
+0x9c, 0x71, 0x63, 0x8e,
+0x38, 0x38, 0xc7, 0xc7,
+0x38, 0x8e, 0xc7, 0x71,
+0x47, 0xb8, 0xb8, 0x47,
+0x0f, 0x8e, 0xf0, 0x71,
+0x63, 0x9c, 0x9c, 0x63,
+0x1d, 0x0e, 0xe2, 0xf1,
+0xf0, 0x47, 0x0f, 0xb8,
+0x1c, 0xaa, 0xe3, 0x55,
+0x55, 0x1c, 0xaa, 0xe3,
+0x9c, 0x55, 0x63, 0xaa,
+0xe2, 0x2b, 0x1d, 0xd4,
+0xb8, 0x55, 0x47, 0xaa,
+0xd4, 0xb9, 0x2b, 0x46,
+0xab, 0x1d, 0x54, 0xe2,
+0x0e, 0x1c, 0xf1, 0xe3,
+0xaa, 0xe3, 0x55, 0x1c,
+0xd5, 0x63, 0x2a, 0x9c,
+0xe2, 0x63, 0x1d, 0x9c,
+0xc6, 0x47, 0x39, 0xb8,
+0xd4, 0xc7, 0x2b, 0x38,
+0x47, 0x1c, 0xb8, 0xe3,
+0x46, 0xb8, 0xb9, 0x47,
+0xe3, 0xe3, 0x1c, 0x1c,
+0x63, 0x1c, 0x9c, 0xe3,
+0xd4, 0x2b, 0x2b, 0xd4,
+0xf0, 0x2b, 0x0f, 0xd4,
+0xc6, 0xb9, 0x39, 0x46,
+0xd5, 0xf1, 0x2a, 0x0e,
+0x0f, 0x54, 0xf0, 0xab,
+0x0e, 0xaa, 0xf1, 0x55,
+0xd5, 0xd5, 0x2a, 0x2a,
+0x9d, 0x55, 0x62, 0xaa,
+0x8e, 0x71, 0x71, 0x8e,
+0xb8, 0xd5, 0x47, 0x2a,
+0x39, 0x8e, 0xc6, 0x71,
+0xab, 0xf1, 0x54, 0x0e,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x2a, 0xaa, 0xd5, 0x55,
+0x1d, 0x62, 0xe2, 0x9d,
+0x8e, 0x55, 0x71, 0xaa,
+0x9c, 0xc7, 0x63, 0x38,
+0xb9, 0x1d, 0x46, 0xe2,
+0x70, 0xf0, 0x8f, 0x0f,
+0xab, 0xab, 0x54, 0x54,
+0x71, 0x2a, 0x8e, 0xd5,
+0xe2, 0xd5, 0x1d, 0x2a,
+0xb9, 0x71, 0x46, 0x8e,
+0x9c, 0xf1, 0x63, 0x0e,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x38, 0x2a, 0xc7, 0xd5,
+0x0e, 0xaa, 0xf1, 0x55,
+0x8f, 0xf1, 0x70, 0x0e,
+0x9d, 0x9d, 0x62, 0x62,
+0x39, 0x62, 0xc6, 0x9d,
+0xb8, 0xc7, 0x47, 0x38,
+0x8f, 0x8f, 0x70, 0x70,
+0x63, 0xb8, 0x9c, 0x47,
+0x71, 0x0e, 0x8e, 0xf1,
+0x70, 0xd4, 0x8f, 0x2b,
+0x39, 0xaa, 0xc6, 0x55,
+0xf1, 0xf1, 0x0e, 0x0e,
+0x8f, 0xd5, 0x70, 0x2a,
+0x1d, 0xaa, 0xe2, 0x55,
+0xb9, 0x71, 0x46, 0x8e,
+0x9c, 0xd5, 0x63, 0x2a,
+0x2b, 0x0e, 0xd4, 0xf1,
+0xb8, 0x39, 0x47, 0xc6,
+0x0e, 0xaa, 0xf1, 0x55,
+0x2b, 0xf0, 0xd4, 0x0f,
+0x9d, 0x1d, 0x62, 0xe2,
+0x46, 0x62, 0xb9, 0x9d,
+0xb8, 0xe3, 0x47, 0x1c,
+0xab, 0x8f, 0x54, 0x70,
+0xe3, 0x2b, 0x1c, 0xd4,
+0x62, 0x0e, 0x9d, 0xf1,
+0xd4, 0x71, 0x2b, 0x8e,
+0x38, 0x2a, 0xc7, 0xd5,
+0x0e, 0x8e, 0xf1, 0x71,
+0x8f, 0xf1, 0x70, 0x0e,
+0x1d, 0x8e, 0xe2, 0x71,
+0x39, 0x62, 0xc6, 0x9d,
+0x1c, 0xc6, 0xe3, 0x39,
+0x8f, 0x0f, 0x70, 0xf0,
+0x1c, 0xb8, 0xe3, 0x47,
+0x71, 0x2a, 0x8e, 0xd5,
+0x54, 0xd4, 0xab, 0x2b,
+0xb9, 0x39, 0x46, 0xc6,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x2b, 0x70, 0xd4, 0x8f,
+0x1c, 0x2a, 0xe3, 0xd5,
+0x46, 0x0e, 0xb9, 0xf1,
+0x9c, 0xf1, 0x63, 0x0e,
+0x2b, 0x2a, 0xd4, 0xd5,
+0x38, 0x2a, 0xc7, 0xd5,
+0x8e, 0xb9, 0x71, 0x46,
+0x8f, 0xf1, 0x70, 0x0e,
+0x39, 0x9c, 0xc6, 0x63,
+0x39, 0xe2, 0xc6, 0x1d,
+0xc7, 0xc7, 0x38, 0x38,
+0x8f, 0xab, 0x70, 0x54,
+0x47, 0xb8, 0xb8, 0x47,
+0xf1, 0x9d, 0x0e, 0x62,
+0x63, 0xd4, 0x9c, 0x2b,
+0x9d, 0x0f, 0x62, 0xf0,
+0xf0, 0x71, 0x0f, 0x8e,
+0x70, 0xaa, 0x8f, 0x55,
+0x1d, 0x8e, 0xe2, 0x71,
+0xb9, 0x55, 0x46, 0xaa,
+0x1c, 0xc6, 0xe3, 0x39,
+0xab, 0x1d, 0x54, 0xe2,
+0x1c, 0x38, 0xe3, 0xc7,
+0xaa, 0x2b, 0x55, 0xd4,
+0x54, 0x70, 0xab, 0x8f,
+0xe2, 0x39, 0x1d, 0xc6,
+0x62, 0x46, 0x9d, 0xb9,
+0x1c, 0x70, 0xe3, 0x8f,
+0x38, 0x1c, 0xc7, 0xe3,
+0x54, 0x8e, 0xab, 0x71,
+0xc7, 0x2b, 0x38, 0xd4,
+0x2a, 0x8e, 0xd5, 0x71,
+0xc7, 0x71, 0x38, 0x8e,
+0x0e, 0x8e, 0xf1, 0x71,
+0x0f, 0xc6, 0xf0, 0x39,
+0x1d, 0x8e, 0xe2, 0x71,
+0x1d, 0x70, 0xe2, 0x8f,
+0x1c, 0x46, 0xe3, 0xb9,
+0x54, 0x0e, 0xab, 0xf1,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x2a, 0x2a, 0xd5, 0xd5,
+0xd4, 0x63, 0x2b, 0x9c,
+0x8e, 0x39, 0x71, 0xc6,
+0xc6, 0xc7, 0x39, 0x38,
+0x39, 0xf0, 0xc6, 0x0f,
+0x47, 0xf0, 0xb8, 0x0f,
+0x47, 0xaa, 0xb8, 0x55,
+0x63, 0xaa, 0x9c, 0x55,
+0xab, 0x1d, 0x54, 0xe2,
+0xb8, 0x1d, 0x47, 0xe2,
+0xaa, 0xab, 0x55, 0x54,
+0xab, 0x63, 0x54, 0x9c,
+0xe2, 0x1d, 0x1d, 0xe2,
+0xe2, 0x47, 0x1d, 0xb8,
+0x9c, 0x63, 0x63, 0x9c,
+0x54, 0x1c, 0xab, 0xe3,
+0xf0, 0x0f, 0x0f, 0xf0,
+0xe2, 0xab, 0x1d, 0x54,
+0x55, 0x62, 0xaa, 0x9d,
+0xd4, 0x55, 0x2b, 0xaa,
+0xaa, 0x0f, 0x55, 0xf0,
+0x8e, 0x55, 0x71, 0xaa,
+0x62, 0xe2, 0x9d, 0x1d,
+0xb9, 0x55, 0x46, 0xaa,
+0xb8, 0xe3, 0x47, 0x1c,
+0xab, 0x9d, 0x54, 0x62,
+0xe3, 0x2b, 0x1c, 0xd4,
+0xaa, 0x0f, 0x55, 0xf0,
+0xd4, 0x71, 0x2b, 0x8e,
+0x62, 0x2a, 0x9d, 0xd5,
+0x0e, 0x46, 0xf1, 0xb9,
+0xb8, 0xf1, 0x47, 0x0e,
+0x1d, 0x9c, 0xe2, 0x63,
+0x2b, 0x62, 0xd4, 0x9d,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x8e, 0x0f, 0x71, 0xf0,
+0x46, 0xe2, 0xb9, 0x1d,
+0x71, 0xe2, 0x8e, 0x1d,
+0xab, 0xe3, 0x54, 0x1c,
+0xb9, 0x2b, 0x46, 0xd4,
+0xe2, 0xe3, 0x1d, 0x1c,
+0xe3, 0x71, 0x1c, 0x8e,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x1c, 0x0e, 0xe3, 0xf1,
+0xc6, 0x39, 0x39, 0xc6,
+0x1c, 0xe2, 0xe3, 0x1d,
+0x0f, 0x38, 0xf0, 0xc7,
+0x9c, 0xab, 0x63, 0x54,
+0x55, 0x38, 0xaa, 0xc7,
+0xf0, 0x55, 0x0f, 0xaa,
+0x62, 0xb8, 0x9d, 0x47,
+0x9d, 0x55, 0x62, 0xaa,
+0x70, 0x54, 0x8f, 0xab,
+0xb8, 0x9d, 0x47, 0x62,
+0xf1, 0x9d, 0x0e, 0x62,
+0xab, 0xc7, 0x54, 0x38,
+0x9d, 0x0f, 0x62, 0xf0,
+0x62, 0x70, 0x9d, 0x8f,
+0x70, 0x62, 0x8f, 0x9d,
+0x70, 0x8e, 0x8f, 0x71,
+0xb9, 0x8f, 0x46, 0x70,
+0x39, 0xc6, 0xc6, 0x39,
+0x63, 0xc6, 0x9c, 0x39,
+0x0f, 0x38, 0xf0, 0xc7,
+0x38, 0xb8, 0xc7, 0x47,
+0x55, 0xb8, 0xaa, 0x47,
+0x47, 0x54, 0xb8, 0xab,
+0x62, 0x9c, 0x9d, 0x63,
+0xe3, 0x55, 0x1c, 0xaa,
+0xf0, 0x0f, 0x0f, 0xf0,
+0x9c, 0x9d, 0x63, 0x62,
+0x55, 0x2a, 0xaa, 0xd5,
+0xb8, 0x47, 0x47, 0xb8,
+0xaa, 0xb9, 0x55, 0x46,
+0x63, 0x54, 0x9c, 0xab,
+0x2a, 0x1c, 0xd5, 0xe3,
+0xf0, 0x55, 0x0f, 0xaa,
+0xc6, 0xab, 0x39, 0x54,
+0x9d, 0xd5, 0x62, 0x2a,
+0xc7, 0x55, 0x38, 0xaa,
+0xb8, 0xb9, 0x47, 0x46,
+0x8f, 0x9d, 0x70, 0x62,
+0x2b, 0x9c, 0xd4, 0x63,
+0xb9, 0x0f, 0x46, 0xf0,
+0xc6, 0xc7, 0x39, 0x38,
+0x63, 0xe2, 0x9c, 0x1d,
+0x47, 0x38, 0xb8, 0xc7,
+0xb8, 0xab, 0x47, 0x54,
+0x63, 0xb8, 0x9c, 0x47,
+0xe3, 0x1d, 0x1c, 0xe2,
+0x70, 0x1c, 0x8f, 0xe3,
+0x9c, 0xab, 0x63, 0x54,
+0xf1, 0x2b, 0x0e, 0xd4,
+0xf0, 0xd5, 0x0f, 0x2a,
+0xd5, 0xb9, 0x2a, 0x46,
+0x9d, 0x71, 0x62, 0x8e,
+0x0e, 0x54, 0xf1, 0xab,
+0x38, 0xc6, 0xc7, 0x39,
+0xd5, 0x9d, 0x2a, 0x62,
+0x0f, 0x70, 0xf0, 0x8f,
+0x8e, 0x8f, 0x71, 0x70,
+0x55, 0xc6, 0xaa, 0x39,
+0x71, 0x46, 0x8e, 0xb9,
+0x2a, 0xf0, 0xd5, 0x0f,
+0x39, 0x54, 0xc6, 0xab,
+0x46, 0xe2, 0xb9, 0x1d,
+0xc7, 0xd5, 0x38, 0x2a,
+0xab, 0xab, 0x54, 0x54,
+0x8f, 0x39, 0x70, 0xc6,
+0xe2, 0x9d, 0x1d, 0x62,
+0x39, 0x70, 0xc6, 0x8f,
+0x9c, 0xc7, 0x63, 0x38,
+0x47, 0x0e, 0xb8, 0xf1,
+0x70, 0xb8, 0x8f, 0x47,
+0x2b, 0xaa, 0xd4, 0x55,
+0x71, 0x1c, 0x8e, 0xe3,
+0x8e, 0xd5, 0x71, 0x2a,
+0xf1, 0xe3, 0x0e, 0x1c,
+0xb9, 0xf1, 0x46, 0x0e,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x2b, 0x62, 0xd4, 0x9d,
+0xc6, 0x2b, 0x39, 0xd4,
+0x8e, 0xc7, 0x71, 0x38,
+0xc7, 0xf1, 0x38, 0x0e,
+0x71, 0xb8, 0x8e, 0x47,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x71, 0x9c, 0x8e, 0x63,
+0x9d, 0xe3, 0x62, 0x1c,
+0xf1, 0x47, 0x0e, 0xb8,
+0xf0, 0xe3, 0x0f, 0x1c,
+0x55, 0x9c, 0xaa, 0x63,
+0xd5, 0x63, 0x2a, 0x9c,
+0xe2, 0x47, 0x1d, 0xb8,
+0xc6, 0x47, 0x39, 0xb8,
+0x54, 0xd4, 0xab, 0x2b,
+0x47, 0x1c, 0xb8, 0xe3,
+0xe2, 0xb9, 0x1d, 0x46,
+0xe3, 0x63, 0x1c, 0x9c,
+0x1c, 0x1c, 0xe3, 0xe3,
+0xd4, 0x0f, 0x2b, 0xf0,
+0xd4, 0x2b, 0x2b, 0xd4,
+0x46, 0x2a, 0xb9, 0xd5,
+0xc6, 0xf1, 0x39, 0x0e,
+0xab, 0xf1, 0x54, 0x0e,
+0x0f, 0x2a, 0xf0, 0xd5,
+0x2a, 0xaa, 0xd5, 0x55,
+0x9d, 0x71, 0x62, 0x8e,
+0x8e, 0x55, 0x71, 0xaa,
+0x38, 0xc6, 0xc7, 0x39,
+0xb9, 0x9d, 0x46, 0x62,
+0x0f, 0xf0, 0xf0, 0x0f,
+0xab, 0x8f, 0x54, 0x70,
+0x55, 0x2a, 0xaa, 0xd5,
+0x62, 0x46, 0x9d, 0xb9,
+0xaa, 0x71, 0x55, 0x8e,
+0x38, 0x54, 0xc7, 0xab,
+0x2a, 0x8e, 0xd5, 0x71,
+0xc7, 0x55, 0x38, 0xaa,
+0x0e, 0x8e, 0xf1, 0x71,
+0x8f, 0xd5, 0x70, 0x2a,
+0x1d, 0x8e, 0xe2, 0x71,
+0xb9, 0x71, 0x46, 0x8e,
+0x1c, 0xc6, 0xe3, 0x39,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x1c, 0x38, 0xe3, 0xc7,
+0x0e, 0x2a, 0xf1, 0xd5,
+0x54, 0xf0, 0xab, 0x0f,
+0x9d, 0x39, 0x62, 0xc6,
+0x62, 0x62, 0x9d, 0x9d,
+0x38, 0x70, 0xc7, 0x8f,
+0xb8, 0x8f, 0x47, 0x70,
+0x47, 0x8e, 0xb8, 0x71,
+0x63, 0x8e, 0x9c, 0x71,
+0x2b, 0x0e, 0xd4, 0xf1,
+0x38, 0x0e, 0xc7, 0xf1,
+0x0e, 0xaa, 0xf1, 0x55,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x9d, 0x9d, 0x62, 0x62,
+0x9d, 0x63, 0x62, 0x9c,
+0xb8, 0x47, 0x47, 0xb8,
+0xf0, 0x8f, 0x0f, 0x70,
+0x63, 0x9c, 0x9c, 0x63,
+0x55, 0x0e, 0xaa, 0xf1,
+0xf0, 0x47, 0x0f, 0xb8,
+0x2a, 0xaa, 0xd5, 0x55,
+0x55, 0x54, 0xaa, 0xab,
+0x8e, 0x55, 0x71, 0xaa,
+0xe2, 0xd5, 0x1d, 0x2a,
+0xb9, 0x55, 0x46, 0xaa,
+0x9c, 0xf1, 0x63, 0x0e,
+0xab, 0x1d, 0x54, 0xe2,
+0x38, 0x2a, 0xc7, 0xd5,
+0xaa, 0xab, 0x55, 0x54,
+0x8f, 0x71, 0x70, 0x8e,
+0xe2, 0x9d, 0x1d, 0x62,
+0x39, 0x46, 0xc6, 0xb9,
+0x9c, 0xc7, 0x63, 0x38,
+0x0f, 0x1c, 0xf0, 0xe3,
+0x70, 0xb8, 0x8f, 0x47,
+0xd5, 0xab, 0x2a, 0x54,
+0x71, 0x54, 0x8e, 0xab,
+0xc6, 0xd5, 0x39, 0x2a,
+0xf1, 0xd5, 0x0e, 0x2a,
+0x8f, 0xf1, 0x70, 0x0e,
+0x9d, 0xb9, 0x62, 0x46,
+0x39, 0x62, 0xc6, 0x9d,
+0x38, 0xd4, 0xc7, 0x2b,
+0x8f, 0x8f, 0x70, 0x70,
+0xc7, 0xb9, 0x38, 0x46,
+0x71, 0x8e, 0x8e, 0x71,
+0x0f, 0xd4, 0xf0, 0x2b,
+0x39, 0x8e, 0xc6, 0x71,
+0xd5, 0xf1, 0x2a, 0x0e,
+0x0f, 0x46, 0xf0, 0xb9,
+0x0e, 0xaa, 0xf1, 0x55,
+0x1d, 0xd4, 0xe2, 0x2b,
+0x9d, 0x55, 0x62, 0xaa,
+0xd4, 0x71, 0x2b, 0x8e,
+0xb8, 0x1d, 0x47, 0xe2,
+0x0e, 0x8e, 0xf1, 0x71,
+0xab, 0xe3, 0x54, 0x1c,
+0x1d, 0x0e, 0xe2, 0xf1,
+0xe2, 0x63, 0x1d, 0x9c,
+0x1c, 0x62, 0xe3, 0x9d,
+0xd4, 0x0f, 0x2b, 0xf0,
+0x9c, 0x0f, 0x63, 0xf0,
+0x46, 0x2a, 0xb9, 0xd5,
+0x70, 0xe2, 0x8f, 0x1d,
+0xab, 0xb9, 0x54, 0x46,
+0xb9, 0x2b, 0x46, 0xd4,
+0x2a, 0xd4, 0xd5, 0x2b,
+0xe3, 0x71, 0x1c, 0x8e,
+0xc6, 0x39, 0x39, 0xc6,
+0x1c, 0xc6, 0xe3, 0x39,
+0x0f, 0x38, 0xf0, 0xc7,
+0x1c, 0xb8, 0xe3, 0x47,
+0x55, 0x38, 0xaa, 0xc7,
+0x54, 0x54, 0xab, 0xab,
+0x62, 0x38, 0x9d, 0xc7,
+0xe2, 0x55, 0x1d, 0xaa,
+0x70, 0x70, 0x8f, 0x8f,
+0x9c, 0x9d, 0x63, 0x62,
+0x71, 0x0e, 0x8e, 0xf1,
+0xb8, 0xc7, 0x47, 0x38,
+0x39, 0xaa, 0xc6, 0x55,
+0x63, 0xf0, 0x9c, 0x0f,
+0x8f, 0x1d, 0x70, 0xe2,
+0x70, 0xaa, 0x8f, 0x55,
+0xb9, 0xab, 0x46, 0x54,
+0xb9, 0xd5, 0x46, 0x2a,
+0xe3, 0xd5, 0x1c, 0x2a,
+0xab, 0x39, 0x54, 0xc6,
+0x9c, 0x39, 0x63, 0xc6,
+0x2a, 0x38, 0xd5, 0xc7,
+0x38, 0x70, 0xc7, 0x8f,
+0x46, 0xb8, 0xb9, 0x47,
+0x47, 0xc6, 0xb8, 0x39,
+0x63, 0x9c, 0x9c, 0x63,
+0x2b, 0x38, 0xd4, 0xc7,
+0xf0, 0x0f, 0x0f, 0xf0,
+0x46, 0xb8, 0xb9, 0x47,
+0x55, 0xe2, 0xaa, 0x1d,
+0x63, 0x54, 0x9c, 0xab,
+0xaa, 0x2b, 0x55, 0xd4,
+0xf0, 0x55, 0x0f, 0xaa,
+0xe2, 0xb9, 0x1d, 0x46,
+0x9d, 0x55, 0x62, 0xaa,
+0x1c, 0x54, 0xe3, 0xab,
+0xb8, 0x1d, 0x47, 0xe2,
+0xd4, 0x9d, 0x2b, 0x62,
+0xab, 0x2b, 0x54, 0xd4,
+0x8e, 0x0f, 0x71, 0xf0,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x71, 0x62, 0x8e, 0x9d,
+0x1c, 0xe2, 0xe3, 0x1d,
+0xb9, 0x0f, 0x46, 0xf0,
+0x9c, 0xe3, 0x63, 0x1c,
+0x63, 0x2a, 0x9c, 0xd5,
+0xf0, 0x2b, 0x0f, 0xd4,
+0xb8, 0xb9, 0x47, 0x46,
+0xd5, 0xb9, 0x2a, 0x46,
+0x2b, 0x54, 0xd4, 0xab,
+0x0e, 0x1c, 0xf1, 0xe3,
+0xc6, 0xd5, 0x39, 0x2a,
+0xd5, 0xe3, 0x2a, 0x1c,
+0x8f, 0x71, 0x70, 0x8e,
+0xc6, 0xab, 0x39, 0x54,
+0x39, 0xc6, 0xc6, 0x39,
+0xc7, 0xd5, 0x38, 0x2a,
+0x0f, 0xb8, 0xf0, 0x47,
+0x8f, 0xb9, 0x70, 0x46,
+0x55, 0x9c, 0xaa, 0x63,
+0x39, 0x54, 0xc6, 0xab,
+0xe2, 0xc7, 0x1d, 0x38,
+0xc7, 0x55, 0x38, 0xaa,
+0x54, 0xb8, 0xab, 0x47,
+0x8f, 0x1d, 0x70, 0xe2,
+0x62, 0x9c, 0x9d, 0x63,
+0xb9, 0x63, 0x46, 0x9c,
+0xf0, 0xc7, 0x0f, 0x38,
+0xe3, 0x8f, 0x1c, 0x70,
+0x55, 0x38, 0xaa, 0xc7,
+0x54, 0x46, 0xab, 0xb9,
+0x62, 0x38, 0x9d, 0xc7,
+0x2a, 0x54, 0xd5, 0xab,
+0x70, 0x70, 0x8f, 0x8f,
+0xc6, 0x9d, 0x39, 0x62,
+0x71, 0xc6, 0x8e, 0x39,
+0x8f, 0xc7, 0x70, 0x38,
+0x39, 0xb8, 0xc6, 0x47,
+0x71, 0xf0, 0x8e, 0x0f,
+0x47, 0xd4, 0xb8, 0x2b,
+0x71, 0xaa, 0x8e, 0x55,
+0xe3, 0xf1, 0x1c, 0x0e,
+0xb9, 0x1d, 0x46, 0xe2,
+0x1c, 0xe2, 0xe3, 0x1d,
+0xab, 0x2b, 0x54, 0xd4,
+0x9c, 0x2b, 0x63, 0xd4,
+0xe2, 0x39, 0x1d, 0xc6,
+0xf0, 0x71, 0x0f, 0x8e,
+0x1c, 0xb8, 0xe3, 0x47,
+0x1d, 0x0e, 0xe2, 0xf1,
+0x54, 0x54, 0xab, 0xab,
+0x1c, 0x2a, 0xe3, 0xd5,
+0xe2, 0x1d, 0x1d, 0xe2,
+0x9c, 0x71, 0x63, 0x8e,
+0x9c, 0x2b, 0x63, 0xd4,
+0x38, 0x0e, 0xc7, 0xf1,
+0xf0, 0xb9, 0x0f, 0x46,
+0x0f, 0xaa, 0xf0, 0x55,
+0x1d, 0x9c, 0xe2, 0x63,
+0x9d, 0x55, 0x62, 0xaa,
+0xd4, 0x47, 0x2b, 0xb8,
+0xb8, 0x1d, 0x47, 0xe2,
+0x46, 0x9c, 0xb9, 0x63,
+0xab, 0xe3, 0x54, 0x1c,
+0xe3, 0x0f, 0x1c, 0xf0,
+0xe2, 0x2b, 0x1d, 0xd4,
+0x54, 0x62, 0xab, 0x9d,
+0xd4, 0x39, 0x2b, 0xc6,
+0xaa, 0x0f, 0x55, 0xf0,
+0x0e, 0x70, 0xf1, 0x8f,
+0x62, 0xe2, 0x9d, 0x1d,
+0x55, 0x46, 0xaa, 0xb9,
+0xb8, 0x63, 0x47, 0x9c,
+0x2a, 0x9c, 0xd5, 0x63,
+0xe3, 0x47, 0x1c, 0xb8,
+0xc6, 0x0f, 0x39, 0xf0,
+0x54, 0xd4, 0xab, 0x2b,
+0x47, 0x2a, 0xb8, 0xd5,
+0xe2, 0xb9, 0x1d, 0x46,
+0xab, 0x71, 0x54, 0x8e,
+0x1c, 0x1c, 0xe3, 0xe3,
+0x2a, 0x0e, 0xd5, 0xf1,
+0xd4, 0x63, 0x2b, 0x9c,
+0x0e, 0x2a, 0xf1, 0xd5,
+0xc6, 0xc7, 0x39, 0x38,
+0x9d, 0xf1, 0x62, 0x0e,
+0x47, 0x70, 0xb8, 0x8f,
+0x38, 0xaa, 0xc7, 0x55,
+0x63, 0x8e, 0x9c, 0x71,
+0x8f, 0x1d, 0x70, 0xe2,
+0x38, 0x8e, 0xc7, 0x71,
+0xb9, 0xab, 0x46, 0x54,
+0x0f, 0xc6, 0xf0, 0x39,
+0xe3, 0x9d, 0x1c, 0x62,
+0x1d, 0x38, 0xe2, 0xc7,
+0x9c, 0x47, 0x63, 0xb8,
+0x54, 0x38, 0xab, 0xc7,
+0x70, 0x1c, 0x8f, 0xe3,
+0x62, 0xb8, 0x9d, 0x47,
+0xf1, 0x63, 0x0e, 0x9c,
+0x70, 0xd4, 0x8f, 0x2b,
+0xd5, 0x8f, 0x2a, 0x70,
+0xf1, 0x71, 0x0e, 0x8e,
+0x46, 0xc6, 0xb9, 0x39,
+0x1d, 0xc6, 0xe2, 0x39,
+0x2b, 0x70, 0xd4, 0x8f,
+0x1c, 0x38, 0xe3, 0xc7,
+0x46, 0x0e, 0xb9, 0xf1,
+0x54, 0xf0, 0xab, 0x0f,
+0x2b, 0x2a, 0xd4, 0xd5,
+0x62, 0x2a, 0x9d, 0xd5,
+0x8e, 0x71, 0x71, 0x8e,
+0xb8, 0xf1, 0x47, 0x0e,
+0x39, 0x8e, 0xc6, 0x71,
+0x2b, 0xe2, 0xd4, 0x1d,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x8e, 0xab, 0x71, 0x54,
+0x1d, 0xe2, 0xe2, 0x1d,
+0xf1, 0x55, 0x0e, 0xaa,
+0x9c, 0xe3, 0x63, 0x1c,
+0x9d, 0x1d, 0x62, 0xe2,
+0xf0, 0x63, 0x0f, 0x9c,
+0xb8, 0xab, 0x47, 0x54,
+0xd5, 0x8f, 0x2a, 0x70,
+0xe3, 0x55, 0x1c, 0xaa,
+0x46, 0x0e, 0xb9, 0xf1,
+0x9c, 0xd5, 0x63, 0x2a,
+0x2b, 0x2a, 0xd4, 0xd5,
+0xb8, 0x39, 0x47, 0xc6,
+0x8e, 0xb9, 0x71, 0x46,
+0x2b, 0xf0, 0xd4, 0x0f,
+0x39, 0x1c, 0xc6, 0xe3,
+0x46, 0xe2, 0xb9, 0x1d,
+0xc7, 0xe3, 0x38, 0x1c,
+0xab, 0xab, 0x54, 0x54,
+0xc7, 0x2b, 0x38, 0xd4,
+0xe2, 0x9d, 0x1d, 0x62,
+0xc7, 0x71, 0x38, 0x8e,
+0x9c, 0x8f, 0x63, 0x70,
+0x0f, 0x0e, 0xf0, 0xf1,
+0x70, 0x8e, 0x8f, 0x71,
+0x1d, 0xaa, 0xe2, 0x55,
+0x39, 0x46, 0xc6, 0xb9,
+0x9c, 0xd5, 0x63, 0x2a,
+0x0f, 0x1c, 0xf0, 0xe3,
+0xb8, 0xb9, 0x47, 0x46,
+0xd5, 0xab, 0x2a, 0x54,
+0x2b, 0x54, 0xd4, 0xab,
+0xc6, 0x1d, 0x39, 0xe2,
+0xc6, 0xd5, 0x39, 0x2a,
+0x8f, 0xe3, 0x70, 0x1c,
+0x8f, 0xb9, 0x70, 0x46,
+0xf1, 0xab, 0x0e, 0x54,
+0x39, 0xd4, 0xc6, 0x2b,
+0xd5, 0xd5, 0x2a, 0x2a,
+0xc7, 0x71, 0x38, 0x8e,
+0x8e, 0xb9, 0x71, 0x46,
+0x0f, 0xc6, 0xf0, 0x39,
+0x39, 0x9c, 0xc6, 0x63,
+0x1d, 0xf0, 0xe2, 0x0f,
+0xc7, 0x47, 0x38, 0xb8,
+0x54, 0xaa, 0xab, 0x55,
+0x47, 0x1c, 0xb8, 0xe3,
+0xaa, 0x9d, 0x55, 0x62,
+0xe3, 0x63, 0x1c, 0x9c,
+0xaa, 0x0f, 0x55, 0xf0,
+0xd4, 0x47, 0x2b, 0xb8,
+0x62, 0x2a, 0x9d, 0xd5,
+0x46, 0x54, 0xb9, 0xab,
+0xb8, 0xf1, 0x47, 0x0e,
+0xe3, 0x9d, 0x1c, 0x62,
+0x2b, 0x2a, 0xd4, 0xd5,
+0x9c, 0x0f, 0x63, 0xf0,
+0x8e, 0x39, 0x71, 0xc6,
+0x70, 0xe2, 0x8f, 0x1d,
+0x39, 0xb8, 0xc6, 0x47,
+0xb9, 0xe3, 0x46, 0x1c,
+0x47, 0xd4, 0xb8, 0x2b,
+0xe3, 0xab, 0x1c, 0x54,
+0xe3, 0x39, 0x1c, 0xc6,
+0xd4, 0x1d, 0x2b, 0xe2,
+0x1c, 0x38, 0xe3, 0xc7,
+0x8e, 0x2b, 0x71, 0xd4,
+0x54, 0xf0, 0xab, 0x0f,
+0xf1, 0x39, 0x0e, 0xc6,
+0x62, 0xe2, 0x9d, 0x1d,
+0x1d, 0x70, 0xe2, 0x8f,
+0xb8, 0x63, 0x47, 0x9c,
+0x54, 0x8e, 0xab, 0x71,
+0xe3, 0x0f, 0x1c, 0xf0,
+0x2a, 0x0e, 0xd5, 0xf1,
+0x54, 0x62, 0xab, 0x9d,
+0x0e, 0x2a, 0xf1, 0xd5,
+0xaa, 0xc7, 0x55, 0x38,
+0x9d, 0x71, 0x62, 0x8e,
+0x62, 0x70, 0x9d, 0x8f,
+0x38, 0x46, 0xc7, 0xb9,
+0x70, 0x8e, 0x8f, 0x71,
+0x0f, 0x9c, 0xf0, 0x63,
+0x39, 0x8e, 0xc6, 0x71,
+0xd5, 0xc7, 0x2a, 0x38,
+0x0f, 0x46, 0xf0, 0xb9,
+0x46, 0xb8, 0xb9, 0x47,
+0x1d, 0xd4, 0xe2, 0x2b,
+0x63, 0x54, 0x9c, 0xab,
+0xd4, 0x39, 0x2b, 0xc6,
+0xf0, 0x1d, 0x0f, 0xe2,
+0x0e, 0xb8, 0xf1, 0x47,
+0x9d, 0xe3, 0x62, 0x1c,
+0x55, 0x54, 0xaa, 0xab,
+0xf0, 0x63, 0x0f, 0x9c,
+0xe2, 0x9d, 0x1d, 0x62,
+0xd5, 0x47, 0x2a, 0xb8,
+0x9c, 0x47, 0x63, 0xb8,
+0x46, 0x1c, 0xb9, 0xe3,
+0x70, 0xd4, 0x8f, 0x2b,
+0xe3, 0xab, 0x1c, 0x54,
+0xf1, 0x39, 0x0e, 0xc6,
+0xd4, 0xd5, 0x2b, 0x2a,
+0x1d, 0x38, 0xe2, 0xc7,
+0x8e, 0x71, 0x71, 0x8e,
+0x54, 0xf0, 0xab, 0x0f,
+0x39, 0x0e, 0xc6, 0xf1,
+0x62, 0xe2, 0x9d, 0x1d,
+0x0f, 0x62, 0xf0, 0x9d,
+0xb8, 0xab, 0x47, 0x54,
+0x9d, 0x8f, 0x62, 0x70,
+0xe3, 0x55, 0x1c, 0xaa,
+0x70, 0x0e, 0x8f, 0xf1,
+0x9c, 0x9d, 0x63, 0x62,
+0x39, 0x2a, 0xc6, 0xd5,
+0xb8, 0xc7, 0x47, 0x38,
+0x8f, 0xb9, 0x70, 0x46,
+0x63, 0xb8, 0x9c, 0x47,
+0x39, 0x1c, 0xc6, 0xe3,
+0x70, 0xd4, 0x8f, 0x2b,
+0xc7, 0xab, 0x38, 0x54,
+0xf1, 0xb9, 0x0e, 0x46,
+0xc7, 0xd5, 0x38, 0x2a,
+0x1d, 0x9c, 0xe2, 0x63,
+0x8f, 0x71, 0x70, 0x8e,
+0xd4, 0x8f, 0x2b, 0x70,
+0x39, 0x0e, 0xc6, 0xf1,
+0x46, 0xc6, 0xb9, 0x39,
+0x0f, 0xe2, 0xf0, 0x1d,
+0x2b, 0xb8, 0xd4, 0x47,
+0x9d, 0x2b, 0x62, 0xd4,
+0x46, 0x54, 0xb9, 0xab,
+0xf0, 0xf1, 0x0f, 0x0e,
+0xe3, 0x9d, 0x1c, 0x62,
+0x1d, 0x2a, 0xe2, 0xd5,
+0x9c, 0x47, 0x63, 0xb8,
+0x9c, 0x39, 0x63, 0xc6,
+0x70, 0x1c, 0x8f, 0xe3,
+0x38, 0xb8, 0xc7, 0x47,
+0xf1, 0xab, 0x0e, 0x54,
+0x47, 0xd4, 0xb8, 0x2b,
+0xd5, 0x9d, 0x2a, 0x62,
+0xe3, 0x71, 0x1c, 0x8e,
+0x8e, 0x0f, 0x71, 0xf0,
+0x1c, 0xc6, 0xe3, 0x39,
+0x71, 0x2a, 0x8e, 0xd5,
+0x1c, 0xf0, 0xe3, 0x0f,
+0xb9, 0x39, 0x46, 0xc6,
+0x54, 0xe2, 0xab, 0x1d,
+0x2b, 0x38, 0xd4, 0xc7,
+0xaa, 0x2b, 0x55, 0xd4,
+0x46, 0x70, 0xb9, 0x8f,
+0xe2, 0xf1, 0x1d, 0x0e,
+0x63, 0x46, 0x9c, 0xb9,
+0x1c, 0x2a, 0xe3, 0xd5,
+0x38, 0x1c, 0xc7, 0xe3,
+0x9c, 0xb9, 0x63, 0x46,
+0xc7, 0x2b, 0x38, 0xd4,
+0x38, 0x9c, 0xc7, 0x63,
+0xc7, 0xb9, 0x38, 0x46,
+0xc7, 0x8f, 0x38, 0x70,
+0x0f, 0x9c, 0xf0, 0x63,
+0x47, 0x8e, 0xb8, 0x71,
+0xd5, 0x8f, 0x2a, 0x70,
+0x2b, 0x46, 0xd4, 0xb9,
+0x46, 0x0e, 0xb9, 0xf1,
+0x0e, 0xd4, 0xf1, 0x2b,
+0x2b, 0xe2, 0xd4, 0x1d,
+0xd5, 0x39, 0x2a, 0xc6,
+0x8e, 0x63, 0x71, 0x9c,
+0x0e, 0xf0, 0xf1, 0x0f,
+0xf1, 0xc7, 0x0e, 0x38,
+0x55, 0xe2, 0xaa, 0x1d,
+0x55, 0x70, 0xaa, 0x8f,
+0xaa, 0x63, 0x55, 0x9c,
+0x62, 0x46, 0x9d, 0xb9,
+0xe2, 0x47, 0x1d, 0xb8,
+0x38, 0x54, 0xc7, 0xab,
+0x54, 0x9c, 0xab, 0x63,
+0xc7, 0x1d, 0x38, 0xe2,
+0xe2, 0x8f, 0x1d, 0x70,
+0x8f, 0x63, 0x70, 0x9c,
+0x54, 0x8e, 0xab, 0x71,
+0xf1, 0x0f, 0x0e, 0xf0,
+0x2a, 0xc6, 0xd5, 0x39,
+0x55, 0x62, 0xaa, 0x9d,
+0x0e, 0x70, 0xf1, 0x8f,
+0xaa, 0xc7, 0x55, 0x38,
+0x55, 0x46, 0xaa, 0xb9,
+0x62, 0x70, 0x9d, 0x8f,
+0x2a, 0x54, 0xd5, 0xab,
+0x70, 0x46, 0x8f, 0xb9,
+0xc6, 0x9d, 0x39, 0x62,
+0x39, 0xd4, 0xc6, 0x2b,
+0x8f, 0xc7, 0x70, 0x38,
+0xc7, 0xb9, 0x38, 0x46,
+0x71, 0xb8, 0x8e, 0x47,
+0x0f, 0xd4, 0xf0, 0x2b,
+0x71, 0x9c, 0x8e, 0x63,
+};
+
+#endif	/*RAND_H_*/
diff --git a/include/sdp.h b/include/sdp.h
new file mode 100644
index 0000000..03c4a23
--- /dev/null
+++ b/include/sdp.h
@@ -0,0 +1,16 @@
+/*
+ * sdp.h - Serial Download Protocol
+ *
+ * Copyright (C) 2016 Toradex
+ * Author: Stefan Agner <stefan.agner@toradex.com>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef __SDP_H_
+#define __SDP_H_
+
+int sdp_init(void);
+int sdp_handle(void);
+
+#endif /* __SDP_H_ */
diff --git a/lib/bch.c b/lib/bch.c
index 147715a..bb4e15a 100644
--- a/lib/bch.c
+++ b/lib/bch.c
@@ -154,6 +154,40 @@ static void store_ecc8(struct bch_control *bch, uint8_t *dst,
 	memcpy(dst, pad, BCH_ECC_BYTES(bch)-4*nwords);
 }
 
+#ifdef CONFIG_TARGET_COLIBRI_IMX7
+/*
+ * reverse bit for byte
+ */
+static uint8_t reverse_bit(uint8_t in_byte)
+{
+	int i;
+	uint8_t out_byte = 0;
+
+	for (i = 0; i < 8; i++) {
+		if (in_byte & ((0x80) >> i)) {
+			out_byte |= 1 << i;
+		}
+	}
+
+	return out_byte;
+}
+
+ /*
+  * swap 32-bit data, including bit reverse and swap to big endian
+  */
+static uint32_t swap_data(uint32_t data)
+{
+	uint32_t r = 0;
+
+	r = reverse_bit(data & 0xFF) << 24;
+	r |= reverse_bit((data >> 8) & 0xFF) << 16;
+	r |= reverse_bit((data >> 16) & 0xFF) << 8;
+	r |= reverse_bit((data >> 24) & 0xFF);
+
+	return r;
+}
+#endif
+
 /**
  * encode_bch - calculate BCH ecc parity of data
  * @bch:   BCH control structure
@@ -217,7 +251,14 @@ void encode_bch(struct bch_control *bch, const uint8_t *data,
 	 */
 	while (mlen--) {
 		/* input data is read in big-endian format */
+#if CONFIG_TARGET_COLIBRI_IMX7
+		/*TODO: big little endian*/
+		/*w = r[0]^cpu_to_be32(*pdata++);*/
+		/*w = r[0]^(uint32_t)(*pdata++);*/
+		w = r[0]^swap_data(*pdata++);
+#else
 		w = r[0]^cpu_to_be32(*pdata++);
+#endif
 		p0 = tab0 + (l+1)*((w >>  0) & 0xff);
 		p1 = tab1 + (l+1)*((w >>  8) & 0xff);
 		p2 = tab2 + (l+1)*((w >> 16) & 0xff);
diff --git a/lib/libfdt/fdt_overlay.c b/lib/libfdt/fdt_overlay.c
index bb41404..4a9ba40 100644
--- a/lib/libfdt/fdt_overlay.c
+++ b/lib/libfdt/fdt_overlay.c
@@ -495,9 +495,9 @@ static int overlay_fixup_phandles(void *fdt, void *fdto)
 	if ((fixups_off < 0 && (fixups_off != -FDT_ERR_NOTFOUND)))
 		return fixups_off;
 
-	/* And base DTs without symbols */
+	/* But if we need to fixup phandles, symbols are required */
 	symbols_off = fdt_path_offset(fdt, "/__symbols__");
-	if ((symbols_off < 0 && (symbols_off != -FDT_ERR_NOTFOUND)))
+	if (symbols_off < 0)
 		return symbols_off;
 
 	fdt_for_each_property_offset(property, fdto, fixups_off) {
diff --git a/scripts/Makefile.spl b/scripts/Makefile.spl
index e0b0117..0ca8430 100644
--- a/scripts/Makefile.spl
+++ b/scripts/Makefile.spl
@@ -66,10 +66,7 @@ endif
 
 libs-$(CONFIG_SPL_LIBDISK_SUPPORT) += disk/
 libs-y += drivers/
-libs-$(CONFIG_SPL_DFU_SUPPORT) += drivers/dfu/
-libs-$(CONFIG_SPL_DFU_SUPPORT) += drivers/usb/gadget/
-libs-$(CONFIG_SPL_DFU_SUPPORT) += drivers/usb/gadget/udc/
-libs-$(CONFIG_SPL_DFU_SUPPORT) += drivers/usb/dwc3/
+libs-$(CONFIG_SPL_USB_GADGET_SUPPORT) += drivers/usb/dwc3/
 libs-y += dts/
 libs-y += fs/
 libs-$(CONFIG_SPL_POST_MEM_SUPPORT) += post/drivers/
diff --git a/scripts/config_whitelist.txt b/scripts/config_whitelist.txt
index d476367..482b075 100644
--- a/scripts/config_whitelist.txt
+++ b/scripts/config_whitelist.txt
@@ -649,6 +649,8 @@ CONFIG_CMD_UNIVERSE
 CONFIG_CMD_UNZIP
 CONFIG_CMD_USB_STORAGE
 CONFIG_CMD_UUID
+CONFIG_CMD_WRITEBCB
+CONFIG_CMD_WRITEBCB_MX7
 CONFIG_CMD_ZBOOT
 CONFIG_CMD_ZFS
 CONFIG_CM_INIT
@@ -1258,6 +1260,7 @@ CONFIG_FSL_CADMUS
 CONFIG_FSL_CORENET
 CONFIG_FSL_CPLD
 CONFIG_FSL_DCU_FB
+CONFIG_FSL_DCU_MAX_FB_SIZE
 CONFIG_FSL_DCU_SII9022A
 CONFIG_FSL_DDR_BIST
 CONFIG_FSL_DDR_FIRST_SLOT_QUAD_CAPABLE
@@ -3740,7 +3743,6 @@ CONFIG_PWM_IMX
 CONFIG_PXA_LCD
 CONFIG_PXA_MMC_GENERIC
 CONFIG_PXA_PWR_I2C
-CONFIG_PXA_SERIAL
 CONFIG_PXA_STD_I2C
 CONFIG_PXA_VGA
 CONFIG_PXA_VIDEO
@@ -7909,6 +7911,7 @@ CONFIG_TAM3517_SW3_SETTINGS
 CONFIG_TCA642X
 CONFIG_TEGRA_BOARD_STRING
 CONFIG_TEGRA_CLOCK_SCALING
+CONFIG_TEGRA_EARLY_TPS6586X
 CONFIG_TEGRA_ENABLE_UARTA
 CONFIG_TEGRA_ENABLE_UARTB
 CONFIG_TEGRA_ENABLE_UARTC
@@ -7917,7 +7920,6 @@ CONFIG_TEGRA_ENABLE_UARTE
 CONFIG_TEGRA_GPU
 CONFIG_TEGRA_KEYBOARD
 CONFIG_TEGRA_LP0
-CONFIG_TEGRA_MMC
 CONFIG_TEGRA_NAND
 CONFIG_TEGRA_PMU
 CONFIG_TEGRA_SLINK_CTRLS
@@ -7926,6 +7928,7 @@ CONFIG_TEGRA_UARTA_GPU
 CONFIG_TEGRA_UARTA_SDIO1
 CONFIG_TEGRA_UARTA_UAA_UAB
 CONFIG_TEGRA_VDD_CORE_TPS62361B_SET3
+CONFIG_TEGRA_VDD_CORE_TPS62362_SET_TPS65911_GPIO1
 CONFIG_TEGRA_VDD_CORE_TPS62366A_SET1
 CONFIG_TESTPIN_MASK
 CONFIG_TESTPIN_REG
@@ -7985,11 +7988,6 @@ CONFIG_TRACE_EARLY_ADDR
 CONFIG_TRACE_EARLY_SIZE
 CONFIG_TRAILBLAZER
 CONFIG_TRATS
-CONFIG_TRDX_PID_COLIBRI_VF50
-CONFIG_TRDX_PID_COLIBRI_VF50IT
-CONFIG_TRDX_PID_COLIBRI_VF61
-CONFIG_TRDX_PID_COLIBRI_VF61IT
-CONFIG_TRDX_VID
 CONFIG_TSEC
 CONFIG_TSEC1
 CONFIG_TSEC1_NAME
diff --git a/tools/env/fw_env.c b/tools/env/fw_env.c
index 3dc0d53..862a0b1 100644
--- a/tools/env/fw_env.c
+++ b/tools/env/fw_env.c
@@ -1291,18 +1291,6 @@ static int check_device_config(int dev)
 	struct stat st;
 	int fd, rc = 0;
 
-	if (DEVOFFSET(dev) % DEVESIZE(dev) != 0) {
-		fprintf(stderr, "Environment does not start on (erase) block boundary\n");
-		errno = EINVAL;
-		return -1;
-	}
-
-	if (ENVSIZE(dev) > ENVSECTORS(dev) * DEVESIZE(dev)) {
-		fprintf(stderr, "Environment does not fit into available sectors\n");
-		errno = EINVAL;
-		return -1;
-	}
-
 	fd = open(DEVNAME(dev), O_RDONLY);
 	if (fd < 0) {
 		fprintf(stderr,
@@ -1335,9 +1323,15 @@ static int check_device_config(int dev)
 			goto err;
 		}
 		DEVTYPE(dev) = mtdinfo.type;
+		if (DEVESIZE(dev) == 0)
+			/* Assume the erase size is the same as the env-size */
+			DEVESIZE(dev) = ENVSIZE(dev);
 	} else {
 		uint64_t size;
 		DEVTYPE(dev) = MTD_ABSENT;
+		if (DEVESIZE(dev) == 0)
+			/* Assume the erase size to be 512 bytes */
+			DEVESIZE(dev) = 0x200;
 
 		/*
 		 * Check for negative offsets, treat it as backwards offset
@@ -1359,6 +1353,22 @@ static int check_device_config(int dev)
 		}
 	}
 
+	if (ENVSECTORS(dev) == 0)
+		/* Assume enough sectors to cover the environment */
+		ENVSECTORS(dev) = DIV_ROUND_UP(ENVSIZE(dev), DEVESIZE(dev));
+
+	if (DEVOFFSET(dev) % DEVESIZE(dev) != 0) {
+		fprintf(stderr, "Environment does not start on (erase) block boundary\n");
+		errno = EINVAL;
+		return -1;
+	}
+
+	if (ENVSIZE(dev) > ENVSECTORS(dev) * DEVESIZE(dev)) {
+		fprintf(stderr, "Environment does not fit into available sectors\n");
+		errno = EINVAL;
+		return -1;
+	}
+
 err:
 	close(fd);
 	return rc;
@@ -1382,10 +1392,10 @@ static int parse_config(struct env_opts *opts)
 	DEVNAME (0) = DEVICE1_NAME;
 	DEVOFFSET (0) = DEVICE1_OFFSET;
 	ENVSIZE (0) = ENV1_SIZE;
-	/* Default values are: erase-size=env-size */
-	DEVESIZE (0) = ENVSIZE (0);
-	/* #sectors=env-size/erase-size (rounded up) */
-	ENVSECTORS (0) = (ENVSIZE(0) + DEVESIZE(0) - 1) / DEVESIZE(0);
+
+	/* Set defaults for DEVESIZE, ENVSECTORS later once we
+	 * know DEVTYPE
+	 */
 #ifdef DEVICE1_ESIZE
 	DEVESIZE (0) = DEVICE1_ESIZE;
 #endif
@@ -1397,10 +1407,10 @@ static int parse_config(struct env_opts *opts)
 	DEVNAME (1) = DEVICE2_NAME;
 	DEVOFFSET (1) = DEVICE2_OFFSET;
 	ENVSIZE (1) = ENV2_SIZE;
-	/* Default values are: erase-size=env-size */
-	DEVESIZE (1) = ENVSIZE (1);
-	/* #sectors=env-size/erase-size (rounded up) */
-	ENVSECTORS (1) = (ENVSIZE(1) + DEVESIZE(1) - 1) / DEVESIZE(1);
+
+	/* Set defaults for DEVESIZE, ENVSECTORS later once we
+	 * know DEVTYPE
+	 */
 #ifdef DEVICE2_ESIZE
 	DEVESIZE (1) = DEVICE2_ESIZE;
 #endif
@@ -1466,13 +1476,9 @@ static int get_config (char *fname)
 
 		DEVNAME(i) = devname;
 
-		if (rc < 4)
-			/* Assume the erase size is the same as the env-size */
-			DEVESIZE(i) = ENVSIZE(i);
-
-		if (rc < 5)
-			/* Assume enough env sectors to cover the environment */
-			ENVSECTORS (i) = (ENVSIZE(i) + DEVESIZE(i) - 1) / DEVESIZE(i);
+		/* Set defaults for DEVESIZE, ENVSECTORS later once we
+		 * know DEVTYPE
+		 */
 
 		i++;
 	}
diff --git a/tools/imximage.h b/tools/imximage.h
deleted file mode 100644
index db8b9a3..0000000
--- a/tools/imximage.h
+++ /dev/null
@@ -1,198 +0,0 @@
-/*
- * (C) Copyright 2009
- * Stefano Babic, DENX Software Engineering, sbabic@denx.de.
- *
- * SPDX-License-Identifier:	GPL-2.0+
- */
-
-#ifndef _IMXIMAGE_H_
-#define _IMXIMAGE_H_
-
-#define MAX_HW_CFG_SIZE_V2 220 /* Max number of registers imx can set for v2 */
-#define MAX_PLUGIN_CODE_SIZE (64 * 1024)
-#define MAX_HW_CFG_SIZE_V1 60  /* Max number of registers imx can set for v1 */
-#define APP_CODE_BARKER	0xB1
-#define DCD_BARKER	0xB17219E9
-
-/*
- * NOTE: This file must be kept in sync with arch/arm/include/asm/\
- *       imx-common/imximage.cfg because tools/imximage.c can not
- *       cross-include headers from arch/arm/ and vice-versa.
- */
-#define CMD_DATA_STR	"DATA"
-
-/* Initial Vector Table Offset */
-#define FLASH_OFFSET_UNDEFINED	0xFFFFFFFF
-#define FLASH_OFFSET_STANDARD	0x400
-#define FLASH_OFFSET_NAND	FLASH_OFFSET_STANDARD
-#define FLASH_OFFSET_SD		FLASH_OFFSET_STANDARD
-#define FLASH_OFFSET_SPI	FLASH_OFFSET_STANDARD
-#define FLASH_OFFSET_ONENAND	0x100
-#define FLASH_OFFSET_NOR	0x1000
-#define FLASH_OFFSET_SATA	FLASH_OFFSET_STANDARD
-#define FLASH_OFFSET_QSPI	0x1000
-
-/* Initial Load Region Size */
-#define FLASH_LOADSIZE_UNDEFINED	0xFFFFFFFF
-#define FLASH_LOADSIZE_STANDARD		0x1000
-#define FLASH_LOADSIZE_NAND		FLASH_LOADSIZE_STANDARD
-#define FLASH_LOADSIZE_SD		FLASH_LOADSIZE_STANDARD
-#define FLASH_LOADSIZE_SPI		FLASH_LOADSIZE_STANDARD
-#define FLASH_LOADSIZE_ONENAND		0x400
-#define FLASH_LOADSIZE_NOR		0x0 /* entire image */
-#define FLASH_LOADSIZE_SATA		FLASH_LOADSIZE_STANDARD
-#define FLASH_LOADSIZE_QSPI		0x0 /* entire image */
-
-/* Command tags and parameters */
-#define IVT_HEADER_TAG			0xD1
-#define IVT_VERSION			0x40
-#define DCD_HEADER_TAG			0xD2
-#define DCD_VERSION			0x40
-#define DCD_WRITE_DATA_COMMAND_TAG	0xCC
-#define DCD_WRITE_DATA_PARAM		0x4
-#define DCD_WRITE_CLR_BIT_PARAM	0xC
-#define DCD_CHECK_DATA_COMMAND_TAG	0xCF
-#define DCD_CHECK_BITS_SET_PARAM	0x14
-#define DCD_CHECK_BITS_CLR_PARAM	0x04
-
-enum imximage_cmd {
-	CMD_INVALID,
-	CMD_IMAGE_VERSION,
-	CMD_BOOT_FROM,
-	CMD_BOOT_OFFSET,
-	CMD_WRITE_DATA,
-	CMD_WRITE_CLR_BIT,
-	CMD_CHECK_BITS_SET,
-	CMD_CHECK_BITS_CLR,
-	CMD_CSF,
-	CMD_PLUGIN,
-};
-
-enum imximage_fld_types {
-	CFG_INVALID = -1,
-	CFG_COMMAND,
-	CFG_REG_SIZE,
-	CFG_REG_ADDRESS,
-	CFG_REG_VALUE
-};
-
-enum imximage_version {
-	IMXIMAGE_VER_INVALID = -1,
-	IMXIMAGE_V1 = 1,
-	IMXIMAGE_V2
-};
-
-typedef struct {
-	uint32_t type; /* Type of pointer (byte, halfword, word, wait/read) */
-	uint32_t addr; /* Address to write to */
-	uint32_t value; /* Data to write */
-} dcd_type_addr_data_t;
-
-typedef struct {
-	uint32_t barker; /* Barker for sanity check */
-	uint32_t length; /* Device configuration length (without preamble) */
-} dcd_preamble_t;
-
-typedef struct {
-	dcd_preamble_t preamble;
-	dcd_type_addr_data_t addr_data[MAX_HW_CFG_SIZE_V1];
-} dcd_v1_t;
-
-typedef struct {
-	uint32_t app_code_jump_vector;
-	uint32_t app_code_barker;
-	uint32_t app_code_csf;
-	uint32_t dcd_ptr_ptr;
-	uint32_t super_root_key;
-	uint32_t dcd_ptr;
-	uint32_t app_dest_ptr;
-} flash_header_v1_t;
-
-typedef struct {
-	uint32_t length; 	/* Length of data to be read from flash */
-} flash_cfg_parms_t;
-
-typedef struct {
-	flash_header_v1_t fhdr;
-	dcd_v1_t dcd_table;
-	flash_cfg_parms_t ext_header;
-} imx_header_v1_t;
-
-typedef struct {
-	uint32_t addr;
-	uint32_t value;
-} dcd_addr_data_t;
-
-typedef struct {
-	uint8_t tag;
-	uint16_t length;
-	uint8_t version;
-} __attribute__((packed)) ivt_header_t;
-
-typedef struct {
-	uint8_t tag;
-	uint16_t length;
-	uint8_t param;
-} __attribute__((packed)) write_dcd_command_t;
-
-struct dcd_v2_cmd {
-	write_dcd_command_t write_dcd_command;
-	dcd_addr_data_t addr_data[MAX_HW_CFG_SIZE_V2];
-};
-
-typedef struct {
-	ivt_header_t header;
-	struct dcd_v2_cmd dcd_cmd;
-	uint32_t padding[1]; /* end up on an 8-byte boundary */
-} dcd_v2_t;
-
-typedef struct {
-	uint32_t start;
-	uint32_t size;
-	uint32_t plugin;
-} boot_data_t;
-
-typedef struct {
-	ivt_header_t header;
-	uint32_t entry;
-	uint32_t reserved1;
-	uint32_t dcd_ptr;
-	uint32_t boot_data_ptr;
-	uint32_t self;
-	uint32_t csf;
-	uint32_t reserved2;
-} flash_header_v2_t;
-
-typedef struct {
-	flash_header_v2_t fhdr;
-	boot_data_t boot_data;
-	union {
-		dcd_v2_t dcd_table;
-		char plugin_code[MAX_PLUGIN_CODE_SIZE];
-	} data;
-} imx_header_v2_t;
-
-/* The header must be aligned to 4k on MX53 for NAND boot */
-struct imx_header {
-	union {
-		imx_header_v1_t hdr_v1;
-		imx_header_v2_t hdr_v2;
-	} header;
-};
-
-typedef void (*set_dcd_val_t)(struct imx_header *imxhdr,
-					char *name, int lineno,
-					int fld, uint32_t value,
-					uint32_t off);
-
-typedef void (*set_dcd_param_t)(struct imx_header *imxhdr, uint32_t dcd_len,
-					int32_t cmd);
-
-typedef void (*set_dcd_rst_t)(struct imx_header *imxhdr,
-					uint32_t dcd_len,
-					char *name, int lineno);
-
-typedef void (*set_imx_hdr_t)(struct imx_header *imxhdr, uint32_t dcd_len,
-		uint32_t entry_point, uint32_t flash_offset);
-
-#endif /* _IMXIMAGE_H_ */
